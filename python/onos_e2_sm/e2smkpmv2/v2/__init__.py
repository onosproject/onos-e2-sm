# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: e2sm_kpm_v2_go/v2/e2sm_kpm_v2_go.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List, Optional

import betterproto
from betterproto.grpc.grpclib_server import ServiceBase


class TestCondExpression(betterproto.Enum):
    """enumerated from e2sm_kpm_v2.0.3-radisys.asn:116"""

    TEST_COND_EXPRESSION_EQUAL = 0
    TEST_COND_EXPRESSION_GREATERTHAN = 1
    TEST_COND_EXPRESSION_LESSTHAN = 2
    TEST_COND_EXPRESSION_CONTAINS = 3
    TEST_COND_EXPRESSION_PRESENT = 4


class Gbr(betterproto.Enum):
    """enumerated from e2sm_kpm_v2.0.2-rm.asn1:106{-}"""

    GBR_TRUE = 0


class Ambr(betterproto.Enum):
    """enumerated from e2sm_kpm_v2.0.2-rm.asn1:107{-}"""

    AMBR_TRUE = 0


class Isstat(betterproto.Enum):
    """enumerated from e2sm_kpm_v2.0.2-rm.asn1:108{-}"""

    ISSTAT_TRUE = 0


class Iscatm(betterproto.Enum):
    """enumerated from e2sm_kpm_v2.0.2-rm.asn1:109{-}"""

    ISCATM_TRUE = 0


class Rsrp(betterproto.Enum):
    """enumerated from e2sm_kpm_v2.0.2-rm.asn1:110{-}"""

    RSRP_TRUE = 0


class Rsrq(betterproto.Enum):
    """enumerated from e2sm_kpm_v2.0.2-rm.asn1:111{-}"""

    RSRQ_TRUE = 0


class IncompleteFlag(betterproto.Enum):
    """enumerated from e2sm_kpm_v2.0.2-rm.asn1:272{-}"""

    INCOMPLETE_FLAG_TRUE = 0


class Sum(betterproto.Enum):
    """enumerated from e2sm_kpm_v2.0.2-rm.asn1:82{-}"""

    SUM_TRUE = 0


class PreLabelOverride(betterproto.Enum):
    """enumerated from e2sm_kpm_v2.0.2-rm.asn1:86{-}"""

    PRE_LABEL_OVERRIDE_TRUE = 0


class StartEndInd(betterproto.Enum):
    """enumerated from e2sm_kpm_v2.0.2-rm.asn1:87{-}"""

    START_END_IND_START = 0
    START_END_IND_END = 1


@dataclass(eq=False, repr=False)
class Eutracgi(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:24 {EUTRACGI}"""

    p_lmn_identity: "PlmnIdentity" = betterproto.message_field(1)
    e_utracell_identity: "EutracellIdentity" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class Nrcgi(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:30 {NRCGI}"""

    p_lmn_identity: "PlmnIdentity" = betterproto.message_field(1)
    n_rcell_identity: "NrcellIdentity" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class CellGlobalId(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:36 {CellGlobalID}"""

    # @inject_tag: aper:"choiceIdx:1,valueExt"
    nr_cgi: "Nrcgi" = betterproto.message_field(1, group="cell_global_id")
    # @inject_tag: aper:"choiceIdx:2,valueExt"
    e_utra_cgi: "Eutracgi" = betterproto.message_field(2, group="cell_global_id")


@dataclass(eq=False, repr=False)
class Snssai(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:42 {SNSSAI}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:1"
    s_st: bytes = betterproto.bytes_field(1)
    # @inject_tag: aper:"optional,sizeLB:3,sizeUB:3"
    s_d: Optional[bytes] = betterproto.bytes_field(2, optional=True, group="_s_d")


@dataclass(eq=False, repr=False)
class FiveQi(betterproto.Message):
    """range of Integer from e2sm_kpm_v2.0.3-radisys.asn:47 {FiveQI}"""

    # @inject_tag: aper:"valueExt,valueLB:0,valueUB:255"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class Qci(betterproto.Message):
    """range of Integer from e2sm_kpm_v2.0.3-radisys.asn:49 {QCI}"""

    # @inject_tag: aper:"valueExt,valueLB:0,valueUB:255"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class Qfi(betterproto.Message):
    """range of Integer from e2sm_kpm_v2.0.3-radisys.asn:51 {QFI}"""

    # @inject_tag: aper:"valueExt,valueLB:0,valueUB:63"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class Arp(betterproto.Message):
    """range of Integer from e2sm_kpm_v2.0.3-radisys.asn:53 {ARP}"""

    # @inject_tag: aper:"valueExt,valueLB:1,valueUB:15"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class GranularityPeriod(betterproto.Message):
    """
    range of Integer from e2sm_kpm_v2.0.3-radisys.asn:63 {GranularityPeriod}
    """

    # @inject_tag: aper:"valueLB:1,valueUB:4294967295"
    value: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class MeasurementType(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:66 {MeasurementType}"""

    # @inject_tag: aper:"choiceIdx:1"
    meas_name: "MeasurementTypeName" = betterproto.message_field(
        1, group="measurement_type"
    )
    # @inject_tag: aper:"choiceIdx:2"
    meas_id: "MeasurementTypeId" = betterproto.message_field(
        2, group="measurement_type"
    )


@dataclass(eq=False, repr=False)
class MeasurementTypeId(betterproto.Message):
    """
    range of Integer from e2sm_kpm_v2.0.3-radisys.asn:73 {MeasurementTypeID}
    """

    # @inject_tag: aper:"valueExt,valueLB:1,valueUB:65536"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MeasurementLabel(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:76 {MeasurementLabel}"""

    # @inject_tag: aper:"optional"
    plmn_id: Optional["PlmnIdentity"] = betterproto.message_field(
        1, optional=True, group="_plmn_id"
    )
    # @inject_tag: aper:"optional,valueExt"
    slice_id: Optional["Snssai"] = betterproto.message_field(
        2, optional=True, group="_slice_id"
    )
    # @inject_tag: aper:"optional"
    five_qi: Optional["FiveQi"] = betterproto.message_field(
        3, optional=True, group="_five_qi"
    )
    # @inject_tag: aper:"optional"
    q_fi: Optional["Qfi"] = betterproto.message_field(4, optional=True, group="_q_fi")
    # @inject_tag: aper:"optional"
    q_ci: Optional["Qci"] = betterproto.message_field(5, optional=True, group="_q_ci")
    # @inject_tag: aper:"optional"
    q_cimax: Optional["Qci"] = betterproto.message_field(
        6, optional=True, group="_q_cimax"
    )
    # @inject_tag: aper:"optional"
    q_cimin: Optional["Qci"] = betterproto.message_field(
        7, optional=True, group="_q_cimin"
    )
    # @inject_tag: aper:"optional"
    a_rpmax: Optional["Arp"] = betterproto.message_field(
        8, optional=True, group="_a_rpmax"
    )
    # @inject_tag: aper:"optional"
    a_rpmin: Optional["Arp"] = betterproto.message_field(
        9, optional=True, group="_a_rpmin"
    )
    # @inject_tag: aper:"optional,valueExt,valueLB:1,valueUB:65536"
    bitrate_range: Optional[int] = betterproto.int32_field(
        10, optional=True, group="_bitrate_range"
    )
    # @inject_tag: aper:"optional,valueExt,valueLB:1,valueUB:65536"
    layer_mu_mimo: Optional[int] = betterproto.int32_field(
        11, optional=True, group="_layer_mu_mimo"
    )
    # @inject_tag: aper:"optional,valueExt,valueLB:0,valueUB:0"
    s_um: Optional["Sum"] = betterproto.enum_field(12, optional=True, group="_s_um")
    # @inject_tag: aper:"optional,valueExt,valueLB:1,valueUB:65536"
    dist_bin_x: Optional[int] = betterproto.int32_field(
        13, optional=True, group="_dist_bin_x"
    )
    # @inject_tag: aper:"optional,valueExt,valueLB:1,valueUB:65536"
    dist_bin_y: Optional[int] = betterproto.int32_field(
        14, optional=True, group="_dist_bin_y"
    )
    # @inject_tag: aper:"optional,valueExt,valueLB:1,valueUB:65536"
    dist_bin_z: Optional[int] = betterproto.int32_field(
        15, optional=True, group="_dist_bin_z"
    )
    # @inject_tag: aper:"optional,valueExt,valueLB:0,valueUB:0"
    pre_label_override: Optional["PreLabelOverride"] = betterproto.enum_field(
        16, optional=True, group="_pre_label_override"
    )
    # @inject_tag: aper:"optional,valueExt,valueLB:0,valueUB:1"
    start_end_ind: Optional["StartEndInd"] = betterproto.enum_field(
        17, optional=True, group="_start_end_ind"
    )


@dataclass(eq=False, repr=False)
class SubscriptionId(betterproto.Message):
    """
    range of Integer from e2sm_kpm_v2.0.3-radisys.asn:96 {SubscriptionID}
    """

    # @inject_tag: aper:"valueLB:1,valueUB:4294967295"
    value: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class TestCondInfo(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:99 {TestCondInfo}"""

    # @inject_tag: aper:"choiceExt"
    test_type: "TestCondType" = betterproto.message_field(1)
    # @inject_tag: aper:"valueExt,valueLB:0,valueUB:4"
    test_expr: "TestCondExpression" = betterproto.enum_field(2)
    # @inject_tag: aper:"choiceExt"
    test_value: "TestCondValue" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TestCondType(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:106 {TestCond-Type}"""

    # @inject_tag: aper:"choiceIdx:1,valueExt,valueLB:0,valueUB:0"
    g_br: "Gbr" = betterproto.enum_field(1, group="test_cond_type")
    # @inject_tag: aper:"choiceIdx:2,valueExt,valueLB:0,valueUB:0"
    a_mbr: "Ambr" = betterproto.enum_field(2, group="test_cond_type")
    # @inject_tag: aper:"choiceIdx:3,valueExt,valueLB:0,valueUB:0"
    is_stat: "Isstat" = betterproto.enum_field(3, group="test_cond_type")
    # @inject_tag: aper:"choiceIdx:4,valueExt,valueLB:0,valueUB:0"
    is_cat_m: "Iscatm" = betterproto.enum_field(4, group="test_cond_type")
    # @inject_tag: aper:"choiceIdx:5,valueExt,valueLB:0,valueUB:0"
    r_srp: "Rsrp" = betterproto.enum_field(5, group="test_cond_type")
    # @inject_tag: aper:"choiceIdx:6,valueExt,valueLB:0,valueUB:0"
    r_srq: "Rsrq" = betterproto.enum_field(6, group="test_cond_type")


@dataclass(eq=False, repr=False)
class TestCondValue(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:125 {TestCond-Value}"""

    # @inject_tag: aper:"choiceIdx:1"
    value_int: int = betterproto.int64_field(1, group="test_cond_value")
    # @inject_tag: aper:"choiceIdx:2"
    value_enum: int = betterproto.int64_field(2, group="test_cond_value")
    # @inject_tag: aper:"choiceIdx:3"
    value_bool: bool = betterproto.bool_field(3, group="test_cond_value")
    # @inject_tag: aper:"choiceIdx:4"
    value_bit_s: "__asn1_v1__.BitString" = betterproto.message_field(
        4, group="test_cond_value"
    )
    # @inject_tag: aper:"choiceIdx:5"
    value_oct_s: bytes = betterproto.bytes_field(5, group="test_cond_value")
    # @inject_tag: aper:"choiceIdx:6"
    value_prt_s: str = betterproto.string_field(6, group="test_cond_value")


@dataclass(eq=False, repr=False)
class GlobalKpmnodeId(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:137 {GlobalKPMnode-ID}"""

    # @inject_tag: aper:"choiceIdx:1,valueExt"
    g_nb: "GlobalKpmnodeGnbId" = betterproto.message_field(1, group="global_kpmnode_id")
    # @inject_tag: aper:"choiceIdx:2,valueExt"
    en_g_nb: "GlobalKpmnodeEnGnbId" = betterproto.message_field(
        2, group="global_kpmnode_id"
    )
    # @inject_tag: aper:"choiceIdx:3,valueExt"
    ng_e_nb: "GlobalKpmnodeNgEnbId" = betterproto.message_field(
        3, group="global_kpmnode_id"
    )
    # @inject_tag: aper:"choiceIdx:4,valueExt"
    e_nb: "GlobalKpmnodeEnbId" = betterproto.message_field(4, group="global_kpmnode_id")


@dataclass(eq=False, repr=False)
class GlobalKpmnodeGnbId(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:145 {GlobalKPMnode-gNB-ID}"""

    # @inject_tag: aper:"valueExt"
    global_g_nb_id: "GlobalgNbId" = betterproto.message_field(1)
    # @inject_tag: aper:"optional"
    g_nb_cu_up_id: Optional["GnbCuUpId"] = betterproto.message_field(
        2, optional=True, group="_g_nb_cu_up_id"
    )
    # @inject_tag: aper:"optional"
    g_nb_du_id: Optional["GnbDuId"] = betterproto.message_field(
        3, optional=True, group="_g_nb_du_id"
    )


@dataclass(eq=False, repr=False)
class GlobalgNbId(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:152 {GlobalgNB-ID}"""

    plmn_id: "PlmnIdentity" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    gnb_id: "GnbIdChoice" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GnbCuUpId(betterproto.Message):
    """range of Integer from e2sm_kpm_v2.0.3-radisys.asn:157 {GNB-CU-UP-ID}"""

    # @inject_tag: aper:"valueLB:0,valueUB:68719476735"
    value: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class GnbDuId(betterproto.Message):
    """range of Integer from e2sm_kpm_v2.0.3-radisys.asn:159 {GNB-DU-ID}"""

    # @inject_tag: aper:"valueLB:0,valueUB:68719476735"
    value: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class GnbIdChoice(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:162 {GNB-ID-Choice}"""

    # @inject_tag: aper:"choiceIdx:1,sizeLB:22,sizeUB:32"
    gnb_id: "__asn1_v1__.BitString" = betterproto.message_field(
        1, group="gnb_id_choice"
    )


@dataclass(eq=False, repr=False)
class GlobalKpmnodeEnGnbId(betterproto.Message):
    """
    sequence from e2sm_kpm_v2.0.3-radisys.asn:167 {GlobalKPMnode-en-gNB-ID}
    """

    # @inject_tag: aper:"valueExt"
    global_g_nb_id: "GlobalenGnbId" = betterproto.message_field(1)
    # @inject_tag: aper:"optional"
    g_nb_cu_up_id: Optional["GnbCuUpId"] = betterproto.message_field(
        2, optional=True, group="_g_nb_cu_up_id"
    )
    # @inject_tag: aper:"optional"
    g_nb_du_id: Optional["GnbDuId"] = betterproto.message_field(
        3, optional=True, group="_g_nb_du_id"
    )


@dataclass(eq=False, repr=False)
class GlobalenGnbId(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:174 {GlobalenGNB-ID}"""

    p_lmn_identity: "PlmnIdentity" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    g_nb_id: "EngnbId" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class EngnbId(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:180 {ENGNB-ID}"""

    # @inject_tag: aper:"choiceIdx:1,sizeLB:22,sizeUB:32"
    g_nb_id: "__asn1_v1__.BitString" = betterproto.message_field(1, group="engnb_id")


@dataclass(eq=False, repr=False)
class GlobalKpmnodeNgEnbId(betterproto.Message):
    """
    sequence from e2sm_kpm_v2.0.3-radisys.asn:185 {GlobalKPMnode-ng-eNB-ID}
    """

    # @inject_tag: aper:"valueExt"
    global_ng_e_nb_id: "GlobalngeNbId" = betterproto.message_field(1)
    # @inject_tag: aper:"optional"
    g_nb_du_id: Optional["GnbDuId"] = betterproto.message_field(
        2, optional=True, group="_g_nb_du_id"
    )


@dataclass(eq=False, repr=False)
class GlobalngeNbId(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:191 {GlobalngeNB-ID}"""

    plmn_id: "PlmnIdentity" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    enb_id: "EnbIdChoice" = betterproto.message_field(2)
    # @inject_tag: aper:"sizeLB:18,sizeUB:18"
    short_macro_e_nb_id: "__asn1_v1__.BitString" = betterproto.message_field(3)
    # @inject_tag: aper:"sizeLB:21,sizeUB:21"
    long_macro_e_nb_id: "__asn1_v1__.BitString" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class EnbIdChoice(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:199 {ENB-ID-Choice}"""

    # @inject_tag: aper:"choiceIdx:1,sizeLB:20,sizeUB:20"
    enb_id_macro: "__asn1_v1__.BitString" = betterproto.message_field(
        1, group="enb_id_choice"
    )
    # @inject_tag: aper:"choiceIdx:2,sizeLB:18,sizeUB:18"
    enb_id_shortmacro: "__asn1_v1__.BitString" = betterproto.message_field(
        2, group="enb_id_choice"
    )
    # @inject_tag: aper:"choiceIdx:3,sizeLB:21,sizeUB:21"
    enb_id_longmacro: "__asn1_v1__.BitString" = betterproto.message_field(
        3, group="enb_id_choice"
    )


@dataclass(eq=False, repr=False)
class GlobalKpmnodeEnbId(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:206 {GlobalKPMnode-eNB-ID}"""

    # @inject_tag: aper:"valueExt"
    global_e_nb_id: "GlobalEnbId" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class GlobalEnbId(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:211 {GlobalENB-ID}"""

    p_lmn_identity: "PlmnIdentity" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    e_nb_id: "EnbId" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class EnbId(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:217 {ENB-ID}"""

    # @inject_tag: aper:"choiceIdx:1,sizeLB:20,sizeUB:20"
    macro_e_nb_id: "__asn1_v1__.BitString" = betterproto.message_field(
        1, group="enb_id"
    )
    # @inject_tag: aper:"choiceIdx:2,sizeExt,sizeLB:28,sizeUB:28"
    home_e_nb_id: "__asn1_v1__.BitString" = betterproto.message_field(2, group="enb_id")


@dataclass(eq=False, repr=False)
class RanfunctionName(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:225 {RANfunction-Name}"""

    # @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:150"
    ran_function_short_name: str = betterproto.string_field(1)
    # @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:1000"
    ran_function_e2_sm_oid: str = betterproto.string_field(2)
    # @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:150"
    ran_function_description: str = betterproto.string_field(3)
    # @inject_tag: aper:"optional,valueExt,valueLB:0,valueUB:255"
    ran_function_instance: Optional[int] = betterproto.int32_field(
        4, optional=True, group="_ran_function_instance"
    )


@dataclass(eq=False, repr=False)
class RicStyleType(betterproto.Message):
    """
    range of Integer from e2sm_kpm_v2.0.3-radisys.asn:232 {RIC-Style-Type}
    """

    # @inject_tag: aper:"valueExt,valueLB:0,valueUB:255"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class RicFormatType(betterproto.Message):
    """
    range of Integer from e2sm_kpm_v2.0.3-radisys.asn:236 {RIC-Format-Type}
    """

    # @inject_tag: aper:"valueExt,valueLB:0,valueUB:255"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofKpmnodes(betterproto.Message):
    """constant Integer from e2sm_kpm_v2.0.3-radisys.asn:242 {-}"""

    # @inject_tag: aper:"valueLB:1024,valueUB:1024"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofCells(betterproto.Message):
    """constant Integer from e2sm_kpm_v2.0.3-radisys.asn:243 {-}"""

    # @inject_tag: aper:"valueLB:16384,valueUB:16384"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofRicstyles(betterproto.Message):
    """constant Integer from e2sm_kpm_v2.0.3-radisys.asn:244 {-}"""

    # @inject_tag: aper:"valueLB:63,valueUB:63"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofMeasurementInfo(betterproto.Message):
    """constant Integer from e2sm_kpm_v2.0.3-radisys.asn:245 {-}"""

    # @inject_tag: aper:"valueLB:65535,valueUB:65535"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofLabelInfo(betterproto.Message):
    """constant Integer from e2sm_kpm_v2.0.3-radisys.asn:246 {-}"""

    # @inject_tag: aper:"valueLB:2147483647,valueUB:2147483647"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofMeasurementRecord(betterproto.Message):
    """constant Integer from e2sm_kpm_v2.0.3-radisys.asn:247 {-}"""

    # @inject_tag: aper:"valueLB:65535,valueUB:65535"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofMeasurementValue(betterproto.Message):
    """constant Integer from e2sm_kpm_v2.0.3-radisys.asn:248 {-}"""

    # @inject_tag: aper:"valueLB:2147483647,valueUB:2147483647"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofConditionInfo(betterproto.Message):
    """constant Integer from e2sm_kpm_v2.0.3-radisys.asn:249 {-}"""

    # @inject_tag: aper:"valueLB:32768,valueUB:32768"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofUeid(betterproto.Message):
    """constant Integer from e2sm_kpm_v2.0.3-radisys.asn:250 {-}"""

    # @inject_tag: aper:"valueLB:65535,valueUB:65535"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MeasurementInfoList(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:255 {MeasurementInfoList}"""

    # @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:65535"
    value: List["MeasurementInfoItem"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class MeasurementInfoItem(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:256 {MeasurementInfoItem}"""

    # @inject_tag: aper:"choiceExt"
    meas_type: "MeasurementType" = betterproto.message_field(1)
    # @inject_tag: aper:"optional"
    label_info_list: Optional["LabelInfoList"] = betterproto.message_field(
        2, optional=True, group="_label_info_list"
    )


@dataclass(eq=False, repr=False)
class LabelInfoList(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:263 {LabelInfoList}"""

    # @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:2147483647"
    value: List["LabelInfoItem"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class LabelInfoItem(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:264 {LabelInfoItem}"""

    # @inject_tag: aper:"valueExt"
    meas_label: "MeasurementLabel" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class MeasurementData(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:270 {MeasurementData}"""

    # @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:65535"
    value: List["MeasurementDataItem"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class MeasurementDataItem(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:271 {MeasurementDataItem}"""

    meas_record: "MeasurementRecord" = betterproto.message_field(1)
    # @inject_tag: aper:"optional,valueExt,valueLB:0,valueUB:0"
    incomplete_flag: Optional["IncompleteFlag"] = betterproto.enum_field(
        2, optional=True, group="_incomplete_flag"
    )


@dataclass(eq=False, repr=False)
class MeasurementRecord(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:278 {MeasurementRecord}"""

    # @inject_tag: aper:"choiceExt,sizeLB:1,sizeUB:2147483647"
    value: List["MeasurementRecordItem"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class MeasurementRecordItem(betterproto.Message):
    """
    sequence from e2sm_kpm_v2.0.3-radisys.asn:279 {MeasurementRecordItem}
    """

    # @inject_tag: aper:"choiceIdx:1,valueLB:0,valueUB:4294967295"
    integer: int = betterproto.int64_field(1, group="measurement_record_item")
    # @inject_tag: aper:"choiceIdx:2"
    real: float = betterproto.double_field(2, group="measurement_record_item")
    # @inject_tag: aper:"choiceIdx:3,valueLB:0,valueUB:0"
    no_value: int = betterproto.int32_field(3, group="measurement_record_item")


@dataclass(eq=False, repr=False)
class MeasurementInfoActionList(betterproto.Message):
    """
    sequence from e2sm_kpm_v2.0.3-radisys.asn:287 {MeasurementInfo-Action-List}
    """

    # @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:65535"
    value: List["MeasurementInfoActionItem"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class MeasurementInfoActionItem(betterproto.Message):
    """
    sequence from e2sm_kpm_v2.0.3-radisys.asn:288 {MeasurementInfo-Action-Item}
    """

    meas_name: "MeasurementTypeName" = betterproto.message_field(1)
    # @inject_tag: aper:"optional"
    meas_id: Optional["MeasurementTypeId"] = betterproto.message_field(
        2, optional=True, group="_meas_id"
    )


@dataclass(eq=False, repr=False)
class MeasurementCondList(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:295 {MeasurementCondList}"""

    # @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:65535"
    value: List["MeasurementCondItem"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class MeasurementCondItem(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:296 {MeasurementCondItem}"""

    # @inject_tag: aper:"choiceExt"
    meas_type: "MeasurementType" = betterproto.message_field(1)
    matching_cond: "MatchingCondList" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class MeasurementCondUeidList(betterproto.Message):
    """
    sequence from e2sm_kpm_v2.0.3-radisys.asn:303 {MeasurementCondUEidList}
    """

    # @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:65535"
    value: List["MeasurementCondUeidItem"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class MeasurementCondUeidItem(betterproto.Message):
    """
    sequence from e2sm_kpm_v2.0.3-radisys.asn:304 {MeasurementCondUEidItem}
    """

    # @inject_tag: aper:"choiceExt"
    meas_type: "MeasurementType" = betterproto.message_field(1)
    matching_cond: "MatchingCondList" = betterproto.message_field(2)
    # @inject_tag: aper:"optional"
    matching_ueid_list: Optional["MatchingUeidList"] = betterproto.message_field(
        3, optional=True, group="_matching_ueid_list"
    )


@dataclass(eq=False, repr=False)
class MatchingCondList(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:312 {MatchingCondList}"""

    # @inject_tag: aper:"choiceExt,sizeLB:1,sizeUB:32768"
    value: List["MatchingCondItem"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class MatchingCondItem(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:313 {MatchingCondItem}"""

    # @inject_tag: aper:"choiceIdx:1,valueExt"
    meas_label: "MeasurementLabel" = betterproto.message_field(
        1, group="matching_cond_item"
    )
    # @inject_tag: aper:"choiceIdx:2,valueExt"
    test_cond_info: "TestCondInfo" = betterproto.message_field(
        2, group="matching_cond_item"
    )


@dataclass(eq=False, repr=False)
class MatchingUeidList(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:320 {MatchingUEidList}"""

    # @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:65535"
    value: List["MatchingUeidItem"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class MatchingUeidItem(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:321 {MatchingUEidItem}"""

    ue_id: "UeIdentity" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class E2SmKpmEventTriggerDefinition(betterproto.Message):
    """
    sequence from e2sm_kpm_v2.0.3-radisys.asn:337 {E2SM-KPM-
    EventTriggerDefinition}
    """

    # choice from e2sm-kpm-ies_v2.asn1:337 @inject_tag: aper:"choiceExt"
    event_definition_formats: "EventTriggerDefinitionFormats" = (
        betterproto.message_field(1)
    )


@dataclass(eq=False, repr=False)
class EventTriggerDefinitionFormats(betterproto.Message):
    # @inject_tag: aper:"choiceIdx:1,valueExt"
    event_definition_format1: "E2SmKpmEventTriggerDefinitionFormat1" = (
        betterproto.message_field(1, group="e2_sm_kpm_event_trigger_definition")
    )


@dataclass(eq=False, repr=False)
class E2SmKpmEventTriggerDefinitionFormat1(betterproto.Message):
    """
    sequence from e2sm_kpm_v2.0.3-radisys.asn:342 {E2SM-KPM-
    EventTriggerDefinition-Format1}
    """

    # @inject_tag: aper:"valueLB:1,valueUB:4294967295"
    reporting_period: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class E2SmKpmActionDefinition(betterproto.Message):
    """
    sequence from e2sm_kpm_v2.0.3-radisys.asn:351 {E2SM-KPM-ActionDefinition}
    """

    ric_style_type: "RicStyleType" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    action_definition_formats: "ActionDefinitionFormats" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ActionDefinitionFormats(betterproto.Message):
    # @inject_tag: aper:"valueExt,choiceIdx:1"
    action_definition_format1: "E2SmKpmActionDefinitionFormat1" = (
        betterproto.message_field(2, group="e2_sm_kpm_action_definition")
    )
    # @inject_tag: aper:"valueExt,choiceIdx:2"
    action_definition_format2: "E2SmKpmActionDefinitionFormat2" = (
        betterproto.message_field(3, group="e2_sm_kpm_action_definition")
    )
    # @inject_tag: aper:"valueExt,choiceIdx:3"
    action_definition_format3: "E2SmKpmActionDefinitionFormat3" = (
        betterproto.message_field(4, group="e2_sm_kpm_action_definition")
    )


@dataclass(eq=False, repr=False)
class E2SmKpmActionDefinitionFormat1(betterproto.Message):
    """
    sequence from e2sm_kpm_v2.0.3-radisys.asn:362 {E2SM-KPM-ActionDefinition-
    Format1}
    """

    cell_obj_id: "CellObjectId" = betterproto.message_field(1)
    meas_info_list: "MeasurementInfoList" = betterproto.message_field(2)
    granul_period: "GranularityPeriod" = betterproto.message_field(3)
    subscript_id: "SubscriptionId" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class E2SmKpmActionDefinitionFormat2(betterproto.Message):
    """
    sequence from e2sm_kpm_v2.0.3-radisys.asn:370 {E2SM-KPM-ActionDefinition-
    Format2}
    """

    ue_id: "UeIdentity" = betterproto.message_field(1)
    subscript_info: "E2SmKpmActionDefinitionFormat1" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class E2SmKpmActionDefinitionFormat3(betterproto.Message):
    """
    sequence from e2sm_kpm_v2.0.3-radisys.asn:376 {E2SM-KPM-ActionDefinition-
    Format3}
    """

    cell_obj_id: "CellObjectId" = betterproto.message_field(1)
    meas_cond_list: "MeasurementCondList" = betterproto.message_field(2)
    granul_period: "GranularityPeriod" = betterproto.message_field(3)
    subscript_id: "SubscriptionId" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class E2SmKpmIndicationHeader(betterproto.Message):
    """
    sequence from e2sm_kpm_v2.0.3-radisys.asn:391 {E2SM-KPM-IndicationHeader}
    """

    # choice from e2sm-kpm-v01.00.asn1:391 @inject_tag: aper:"choiceExt"
    indication_header_formats: "IndicationHeaderFormats" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class IndicationHeaderFormats(betterproto.Message):
    # @inject_tag: aper:"valueExt,choiceIdx:1"
    indication_header_format1: "E2SmKpmIndicationHeaderFormat1" = (
        betterproto.message_field(1, group="e2_sm_kpm_indication_header")
    )


@dataclass(eq=False, repr=False)
class E2SmKpmIndicationHeaderFormat1(betterproto.Message):
    """
    sequence from e2sm_kpm_v2.0.3-radisys.asn:396 {E2SM-KPM-IndicationHeader-
    Format1}
    """

    collet_start_time: "TimeStamp" = betterproto.message_field(1)
    # @inject_tag: aper:"optional,sizeExt,sizeLB:0,sizeUB:15"
    file_formatversion: Optional[str] = betterproto.string_field(
        2, optional=True, group="_file_formatversion"
    )
    # @inject_tag: aper:"optional,sizeExt,sizeLB:0,sizeUB:400"
    sender_name: Optional[str] = betterproto.string_field(
        3, optional=True, group="_sender_name"
    )
    # @inject_tag: aper:"optional,sizeExt,sizeLB:0,sizeUB:8"
    sender_type: Optional[str] = betterproto.string_field(
        4, optional=True, group="_sender_type"
    )
    # @inject_tag: aper:"optional,sizeExt,sizeLB:0,sizeUB:32"
    vendor_name: Optional[str] = betterproto.string_field(
        5, optional=True, group="_vendor_name"
    )
    # @inject_tag: aper:"optional,choiceExt"
    kpm_node_id: Optional["GlobalKpmnodeId"] = betterproto.message_field(
        6, optional=True, group="_kpm_node_id"
    )


@dataclass(eq=False, repr=False)
class E2SmKpmIndicationMessage(betterproto.Message):
    """
    sequence from e2sm_kpm_v2.0.3-radisys.asn:414 {E2SM-KPM-IndicationMessage}
    """

    # choice from e2sm_kpm_ies_v2.asn:414 @inject_tag: aper:"choiceExt"
    indication_message_formats: "IndicationMessageFormats" = betterproto.message_field(
        1
    )


@dataclass(eq=False, repr=False)
class IndicationMessageFormats(betterproto.Message):
    # @inject_tag: aper:"valueExt,choiceIdx:1"
    indication_message_format1: "E2SmKpmIndicationMessageFormat1" = (
        betterproto.message_field(1, group="e2_sm_kpm_indication_message")
    )
    # @inject_tag: aper:"valueExt,choiceIdx:2"
    indication_message_format2: "E2SmKpmIndicationMessageFormat2" = (
        betterproto.message_field(2, group="e2_sm_kpm_indication_message")
    )


@dataclass(eq=False, repr=False)
class E2SmKpmIndicationMessageFormat1(betterproto.Message):
    """
    sequence from e2sm_kpm_v2.0.3-radisys.asn:419 {E2SM-KPM-IndicationMessage-
    Format1}
    """

    subscript_id: "SubscriptionId" = betterproto.message_field(1)
    # @inject_tag: aper:"optional"
    cell_obj_id: Optional["CellObjectId"] = betterproto.message_field(
        2, optional=True, group="_cell_obj_id"
    )
    # @inject_tag: aper:"optional"
    granul_period: Optional["GranularityPeriod"] = betterproto.message_field(
        3, optional=True, group="_granul_period"
    )
    # @inject_tag: aper:"optional"
    meas_info_list: Optional["MeasurementInfoList"] = betterproto.message_field(
        4, optional=True, group="_meas_info_list"
    )
    meas_data: "MeasurementData" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class E2SmKpmIndicationMessageFormat2(betterproto.Message):
    """
    sequence from e2sm_kpm_v2.0.3-radisys.asn:428 {E2SM-KPM-IndicationMessage-
    Format2}
    """

    subscript_id: "SubscriptionId" = betterproto.message_field(1)
    # @inject_tag: aper:"optional"
    cell_obj_id: Optional["CellObjectId"] = betterproto.message_field(
        2, optional=True, group="_cell_obj_id"
    )
    # @inject_tag: aper:"optional"
    granul_period: Optional["GranularityPeriod"] = betterproto.message_field(
        3, optional=True, group="_granul_period"
    )
    meas_cond_ueid_list: "MeasurementCondUeidList" = betterproto.message_field(4)
    meas_data: "MeasurementData" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class E2SmKpmRanfunctionDescription(betterproto.Message):
    """
    sequence from e2sm_kpm_v2.0.3-radisys.asn:441 {E2SM-KPM-RANfunction-
    Description}
    """

    # @inject_tag: aper:"valueExt"
    ran_function_name: "RanfunctionName" = betterproto.message_field(1)
    # @inject_tag: aper:"optional,valueExt,sizeLB:1,sizeUB:1024"
    ric_kpm_node_list: List["RicKpmnodeItem"] = betterproto.message_field(2)
    # @inject_tag: aper:"optional,valueExt,sizeLB:1,sizeUB:63"
    ric_event_trigger_style_list: List[
        "RicEventTriggerStyleItem"
    ] = betterproto.message_field(3)
    # @inject_tag: aper:"optional,valueExt,sizeLB:1,sizeUB:63"
    ric_report_style_list: List["RicReportStyleItem"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class RicKpmnodeItem(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:449 {RIC-KPMNode-Item}"""

    # @inject_tag: aper:"choiceExt"
    ric_kpmnode_type: "GlobalKpmnodeId" = betterproto.message_field(1)
    # @inject_tag: aper:"optional,valueExt,sizeLB:1,sizeUB:16384"
    cell_measurement_object_list: List[
        "CellMeasurementObjectItem"
    ] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class CellMeasurementObjectItem(betterproto.Message):
    """
    sequence from e2sm_kpm_v2.0.3-radisys.asn:455 {Cell-Measurement-Object-
    Item}
    """

    cell_object_id: "CellObjectId" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    cell_global_id: "CellGlobalId" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class RicEventTriggerStyleItem(betterproto.Message):
    """
    sequence from e2sm_kpm_v2.0.3-radisys.asn:461 {RIC-EventTriggerStyle-Item}
    """

    ric_event_trigger_style_type: "RicStyleType" = betterproto.message_field(1)
    ric_event_trigger_style_name: "RicStyleName" = betterproto.message_field(2)
    ric_event_trigger_format_type: "RicFormatType" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class RicReportStyleItem(betterproto.Message):
    """sequence from e2sm_kpm_v2.0.3-radisys.asn:468 {RIC-ReportStyle-Item}"""

    ric_report_style_type: "RicStyleType" = betterproto.message_field(1)
    ric_report_style_name: "RicStyleName" = betterproto.message_field(2)
    ric_action_format_type: "RicFormatType" = betterproto.message_field(3)
    meas_info_action_list: "MeasurementInfoActionList" = betterproto.message_field(4)
    ric_indication_header_format_type: "RicFormatType" = betterproto.message_field(5)
    ric_indication_message_format_type: "RicFormatType" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class RicStyleName(betterproto.Message):
    """{RIC-Style-Name}"""

    # @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:150"
    value: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class CellObjectId(betterproto.Message):
    """{CellObjectID}"""

    # @inject_tag: aper:"sizeExt,sizeLB:0,sizeUB:400"
    value: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class MeasurementTypeName(betterproto.Message):
    """{MeasurementTypeName}"""

    # @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:150"
    value: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class UeIdentity(betterproto.Message):
    """{UE-Identity}"""

    value: bytes = betterproto.bytes_field(1)


@dataclass(eq=False, repr=False)
class PlmnIdentity(betterproto.Message):
    """{PLMN-Identity}"""

    # @inject_tag: aper:"sizeLB:3,sizeUB:3"
    value: bytes = betterproto.bytes_field(1)


@dataclass(eq=False, repr=False)
class TimeStamp(betterproto.Message):
    """{TimeStamp}"""

    # @inject_tag: aper:"sizeLB:4,sizeUB:4"
    value: bytes = betterproto.bytes_field(1)


@dataclass(eq=False, repr=False)
class EutracellIdentity(betterproto.Message):
    """{EUTRACellIdentity}"""

    # @inject_tag: aper:"sizeLB:28,sizeUB:28"
    value: "__asn1_v1__.BitString" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class NrcellIdentity(betterproto.Message):
    """{NRCellIdentity}"""

    # @inject_tag: aper:"sizeLB:36,sizeUB:36"
    value: "__asn1_v1__.BitString" = betterproto.message_field(1)


from ...asn1 import v1 as __asn1_v1__
