# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: e2sm_rc/v1/e2sm_common_ies.proto, e2sm_rc/v1/e2sm_rc.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List, Optional

import betterproto
from betterproto.grpc.grpclib_server import ServiceBase


class InterfaceType(betterproto.Enum):
    """enumerated from e2sm_v2.asn1:109 @inject_tag: aper:"valueExt"""

    INTERFACE_TYPE_N_G = 0
    INTERFACE_TYPE_XN = 1
    INTERFACE_TYPE_F1 = 2
    INTERFACE_TYPE_E1 = 3
    INTERFACE_TYPE_S1 = 4
    INTERFACE_TYPE_X2 = 5
    INTERFACE_TYPE_W1 = 6


class RrcclassLte(betterproto.Enum):
    """enumerated from e2sm_v2.asn1:148"""

    RRCCLASS_LTE_B_CCH_BCH = 0
    RRCCLASS_LTE_B_CCH_BCH_MBMS = 1
    RRCCLASS_LTE_B_CCH_DL_SCH = 2
    RRCCLASS_LTE_B_CCH_DL_SCH_BR = 3
    RRCCLASS_LTE_B_CCH_DL_SCH_MBMS = 4
    RRCCLASS_LTE_M_CCH = 5
    RRCCLASS_LTE_P_CCH = 6
    RRCCLASS_LTE_DL_CCCH = 7
    RRCCLASS_LTE_DL_DCCH = 8
    RRCCLASS_LTE_UL_CCCH = 9
    RRCCLASS_LTE_UL_DCCH = 10
    RRCCLASS_LTE_S_C_MCCH = 11


class RrcclassNr(betterproto.Enum):
    """enumerated from e2sm_v2.asn1:150"""

    RRCCLASS_NR_B_CCH_BCH = 0
    RRCCLASS_NR_B_CCH_DL_SCH = 1
    RRCCLASS_NR_D_L_CCCH = 2
    RRCCLASS_NR_D_L_DCCH = 3
    RRCCLASS_NR_P_CCH = 4
    RRCCLASS_NR_U_L_CCCH = 5
    RRCCLASS_NR_U_L_CCCH1 = 6
    RRCCLASS_NR_U_L_DCCH = 7


class NrfrequencyShift7P5Khz(betterproto.Enum):
    """enumerated from e2sm_v2.asn1:556"""

    NRFREQUENCY_SHIFT7P5KHZ_FALSE = 0
    NRFREQUENCY_SHIFT7P5KHZ_TRUE = 1


class MessageType(betterproto.Enum):
    MESSAGE_TYPE_INITIATING_MESSAGE = 0
    MESSAGE_TYPE_SUCCESSFUL_OUTCOME = 1
    MESSAGE_TYPE_UNSUCCESSFUL_OUTCOME = 3


class LogicalOr(betterproto.Enum):
    """enumerated from e2sm_rc.asn1:76"""

    LOGICAL_OR_TRUE = 0
    LOGICAL_OR_FALSE = 1


class RrcState(betterproto.Enum):
    """enumerated from e2sm_rc.asn1:116"""

    RRC_STATE_RRC_CONNECTED = 0
    RRC_STATE_RRC_INACTIVE = 1
    RRC_STATE_RRC_IDLE = 2
    RRC_STATE_ANY = 3


class NrModeInfo(betterproto.Enum):
    NR_MODE_INFO_FDD = 0
    NR_MODE_INFO_TDD = 1


class X2XnEstablished(betterproto.Enum):
    X2XN_ESTABLISHED_TRUE = 0
    X2XN_ESTABLISHED_FALSE = 1


class HoValidated(betterproto.Enum):
    HO_VALIDATED_TRUE = 0
    HO_VALIDATED_FALSE = 1


class RanPChoiceComparison(betterproto.Enum):
    RAN_P_CHOICE_COMPARISON_EQUAL = 0
    RAN_P_CHOICE_COMPARISON_DIFFERENCE = 1
    RAN_P_CHOICE_COMPARISON_GREATERTHAN = 2
    RAN_P_CHOICE_COMPARISON_LESSTHAN = 3
    RAN_P_CHOICE_COMPARISON_CONTAINS = 4
    RAN_P_CHOICE_COMPARISON_STARTS_WITH = 5


class RanPChoicePresence(betterproto.Enum):
    RAN_P_CHOICE_PRESENCE_PRESENT = 0
    RAN_P_CHOICE_PRESENCE_CONFIGURED = 1
    RAN_P_CHOICE_PRESENCE_ROLLOVER = 2
    RAN_P_CHOICE_PRESENCE_NONZERO = 3


class RicPolicyDecision(betterproto.Enum):
    """enumerated from e2sm_rc.asn1:76"""

    RIC_POLICY_DECISION_ACCEPT = 0
    RIC_POLICY_DECISION_REJECT = 1


class MessageDirection(betterproto.Enum):
    MESSAGE_DIRECTION_INCOMING = 0
    MESSAGE_DIRECTION_OUTGOING = 1


class OnDemand(betterproto.Enum):
    ON_DEMAND_TRUE = 0


class RicControlDecision(betterproto.Enum):
    RIC_CONTROL_DECISION_ACCEPT = 0
    RIC_CONTROL_DECISION_REJECT = 1


@dataclass(eq=False, repr=False)
class MaxE1Apid(betterproto.Message):
    """constant Integer from e2sm_v2.asn1:21 {-}"""

    # @inject_tag: aper:"valueLB:65535,valueUB:65535"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxF1Apid(betterproto.Message):
    """constant Integer from e2sm_v2.asn1:22 {-}"""

    # @inject_tag: aper:"valueLB:4,valueUB:4"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxEarfcn(betterproto.Message):
    """constant Integer from e2sm_v2.asn1:25 {-}"""

    # @inject_tag: aper:"valueLB:65535,valueUB:65535"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxNrarfcn(betterproto.Message):
    """constant Integer from e2sm_v2.asn1:28 {-}"""

    # @inject_tag: aper:"valueLB:3279165,valueUB:3279165"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofNrCellBands(betterproto.Message):
    """constant Integer from e2sm_v2.asn1:29 {-}"""

    # @inject_tag: aper:"valueLB:32,valueUB:32"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class Cgi(betterproto.Message):
    """sequence from e2sm_v2.asn1:39 {CGI} aper:"choiceExt"""

    # @inject_tag: aper:"choiceIdx:1,valueExt"
    n_r_cgi: "NrCgi" = betterproto.message_field(1, group="cgi")
    # @inject_tag: aper:"choiceIdx:2,valueExt"
    e_utra_cgi: "EutraCgi" = betterproto.message_field(2, group="cgi")


@dataclass(eq=False, repr=False)
class CoreCpid(betterproto.Message):
    """sequence from e2sm_v2.asn1:45 {CoreCPID} aper:"choiceExt"""

    # @inject_tag: aper:"choiceIdx:1,valueExt"
    five_gc: "Guami" = betterproto.message_field(1, group="core_cpid")
    # @inject_tag: aper:"choiceIdx:2,valueExt"
    e_pc: "Gummei" = betterproto.message_field(2, group="core_cpid")


@dataclass(eq=False, repr=False)
class InterfaceIdentifier(betterproto.Message):
    """sequence from e2sm_v2.asn1:51 {InterfaceIdentifier} aper:"valueExt"""

    # @inject_tag: aper:"choiceIdx:1,valueExt"
    n_g: "InterfaceIdNg" = betterproto.message_field(1, group="interface_identifier")
    # @inject_tag: aper:"choiceIdx:2,valueExt"
    x_n: "InterfaceIdXn" = betterproto.message_field(2, group="interface_identifier")
    # @inject_tag: aper:"choiceIdx:3,valueExt"
    f1: "InterfaceIdF1" = betterproto.message_field(3, group="interface_identifier")
    # @inject_tag: aper:"choiceIdx:4,valueExt"
    e1: "InterfaceIdE1" = betterproto.message_field(4, group="interface_identifier")
    # @inject_tag: aper:"choiceIdx:5,valueExt"
    s1: "InterfaceIdS1" = betterproto.message_field(5, group="interface_identifier")
    # @inject_tag: aper:"choiceIdx:6,valueExt"
    x2: "InterfaceIdX2" = betterproto.message_field(6, group="interface_identifier")
    # @inject_tag: aper:"choiceIdx:7,valueExt"
    w1: "InterfaceIdW1" = betterproto.message_field(7, group="interface_identifier")


@dataclass(eq=False, repr=False)
class InterfaceIdNg(betterproto.Message):
    """sequence from e2sm_v2.asn1:62 {InterfaceID-NG}"""

    # @inject_tag: aper:"valueExt"
    guami: "Guami" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class InterfaceIdXn(betterproto.Message):
    """sequence from e2sm_v2.asn1:67 {InterfaceID-Xn}"""

    # @inject_tag: aper:"choiceExt"
    global_ng_ran_id: "GlobalNgrannodeId" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class InterfaceIdF1(betterproto.Message):
    """sequence from e2sm_v2.asn1:72 {InterfaceID-F1}"""

    # @inject_tag: aper:"valueExt"
    global_gnb_id: "GlobalGnbId" = betterproto.message_field(1)
    g_nb_du_id: "GnbDuId" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class InterfaceIdE1(betterproto.Message):
    """sequence from e2sm_v2.asn1:78 {InterfaceID-E1}"""

    # @inject_tag: aper:"valueExt"
    global_gnb_id: "GlobalGnbId" = betterproto.message_field(1)
    g_nb_cu_up_id: "GnbCuUpId" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class InterfaceIdS1(betterproto.Message):
    """sequence from e2sm_v2.asn1:84 {InterfaceID-S1}"""

    # @inject_tag: aper:"valueExt"
    g_ummei: "Gummei" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class InterfaceIdX2(betterproto.Message):
    """sequence from e2sm_v2.asn1:93 {InterfaceID-X2}"""

    # @inject_tag: aper:"choiceExt"
    node_type: "NodeType" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class NodeType(betterproto.Message):
    # @inject_tag: aper:"choiceIdx:1,valueExt"
    global_enb_id: "GlobalEnbId" = betterproto.message_field(1, group="node_type")
    # @inject_tag: aper:"choiceIdx:2,valueExt"
    global_en_gnb_id: "GlobalenGnbId" = betterproto.message_field(2, group="node_type")


@dataclass(eq=False, repr=False)
class InterfaceIdW1(betterproto.Message):
    """sequence from e2sm_v2.asn1:98 {InterfaceID-W1}"""

    # @inject_tag: aper:"valueExt"
    global_ng_e_nb_id: "GlobalNgEnbId" = betterproto.message_field(1)
    ng_e_nb_du_id: "NgenbDuId" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class InterfaceMessageId(betterproto.Message):
    """
    sequence from e2sm_v2.asn1:104 {Interface-MessageID} @inject_tag:
    aper:"valueExt"
    """

    interface_procedure_id: int = betterproto.int32_field(1)
    # @inject_tag: aper:"valueExt,valueLB:0,valueUB:2"
    message_type: "MessageType" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class GroupId(betterproto.Message):
    """
    sequence from e2sm_v2.asn1:112 {GroupID} @inject_tag: aper:"choiceExt"
    """

    # @inject_tag: aper:"choiceIdx:1"
    five_gc: "FiveQi" = betterproto.message_field(1, group="group_id")
    # @inject_tag: aper:"choiceIdx:2"
    e_pc: "Qci" = betterproto.message_field(2, group="group_id")


@dataclass(eq=False, repr=False)
class QoSid(betterproto.Message):
    """sequence from e2sm_v2.asn1:118 {QoSID} @inject_tag: aper:"choiceExt"""

    # @inject_tag: aper:"choiceIdx:1"
    five_gc: "FiveQi" = betterproto.message_field(1, group="qo_sid")
    # @inject_tag: aper:"choiceIdx:2"
    e_pc: "Qci" = betterproto.message_field(2, group="qo_sid")


@dataclass(eq=False, repr=False)
class RanfunctionName(betterproto.Message):
    """sequence from e2sm_v2.asn1:124 {RANfunction-Name}"""

    # @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:150"
    ran_function_short_name: str = betterproto.string_field(1)
    # @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:1000"
    ran_function_e2_sm_oid: str = betterproto.string_field(2)
    # @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:150"
    ran_function_description: str = betterproto.string_field(3)
    # @inject_tag: aper:"optional"
    ran_function_instance: Optional[int] = betterproto.int32_field(
        4, optional=True, group="_ran_function_instance"
    )


@dataclass(eq=False, repr=False)
class RicFormatType(betterproto.Message):
    """range of Integer from e2sm_v2.asn1:133 {RIC-Format-Type}"""

    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class RicStyleType(betterproto.Message):
    """range of Integer from e2sm_v2.asn1:135 {RIC-Style-Type}"""

    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class RicStyleName(betterproto.Message):
    """range of Integer from e2sm_v2.asn1:131 {RIC-Style-Name}"""

    # @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:150"
    value: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class RrcMessageId(betterproto.Message):
    """
    sequence from e2sm_v2.asn1:143 {RRC-MessageID} @inject_tag: aper:"valueExt"
    """

    # @inject_tag: aper:"choiceExt"
    rrc_type: "RrcType" = betterproto.message_field(1)
    message_id: int = betterproto.int64_field(2)


@dataclass(eq=False, repr=False)
class RrcType(betterproto.Message):
    # @inject_tag: aper:"choiceIdx:1,valueExt,valueLB:0,valueUB:11"
    lte: "RrcclassLte" = betterproto.enum_field(1, group="rrc_type")
    # @inject_tag: aper:"choiceIdx:2,valueExt,valueLB:0,valueUB:7"
    nr: "RrcclassNr" = betterproto.enum_field(2, group="rrc_type")


@dataclass(eq=False, repr=False)
class ServingCellArfcn(betterproto.Message):
    """
    sequence from e2sm_v2.asn1:153 {ServingCell-ARFCN} @inject_tag:
    aper:"choiceExt"
    """

    # @inject_tag: aper:"choiceIdx:1,valueExt"
    n_r: "NrArfcn" = betterproto.message_field(1, group="serving_cell_arfcn")
    # @inject_tag: aper:"choiceIdx:2"
    e_utra: "EUtraArfcn" = betterproto.message_field(2, group="serving_cell_arfcn")


@dataclass(eq=False, repr=False)
class ServingCellPci(betterproto.Message):
    """
    sequence from e2sm_v2.asn1:159 {ServingCell-PCI} @inject_tag:
    aper:"choiceExt"
    """

    # @inject_tag: aper:"choiceIdx:1"
    n_r: "NrPci" = betterproto.message_field(1, group="serving_cell_pci")
    # @inject_tag: aper:"choiceIdx:2"
    e_utra: "EUtraPci" = betterproto.message_field(2, group="serving_cell_pci")


@dataclass(eq=False, repr=False)
class Ueid(betterproto.Message):
    """sequence from e2sm_v2.asn1:166 {UEID} @inject_tag: aper:"choiceExt"""

    # @inject_tag: aper:"choiceIdx:1,valueExt"
    g_nb_ueid: "UeidGnb" = betterproto.message_field(1, group="ueid")
    # @inject_tag: aper:"choiceIdx:2,valueExt"
    g_nb_du_ueid: "UeidGnbDu" = betterproto.message_field(2, group="ueid")
    # @inject_tag: aper:"choiceIdx:3,valueExt"
    g_nb_cu_up_ueid: "UeidGnbCuUp" = betterproto.message_field(3, group="ueid")
    # @inject_tag: aper:"choiceIdx:4,valueExt"
    ng_e_nb_ueid: "UeidNgEnb" = betterproto.message_field(4, group="ueid")
    # @inject_tag: aper:"choiceIdx:5,valueExt"
    ng_e_nb_du_ueid: "UeidNgEnbDu" = betterproto.message_field(5, group="ueid")
    # @inject_tag: aper:"choiceIdx:6,valueExt"
    en_g_nb_ueid: "UeidEnGnb" = betterproto.message_field(6, group="ueid")
    # @inject_tag: aper:"choiceIdx:7,valueExt"
    e_nb_ueid: "UeidEnb" = betterproto.message_field(7, group="ueid")


@dataclass(eq=False, repr=False)
class UeidGnb(betterproto.Message):
    """sequence from e2sm_v2.asn1:177 {UEID-GNB}"""

    amf_ue_ngap_id: "AmfUeNgapId" = betterproto.message_field(1)
    # @inject_tag: aper:"valueExt"
    guami: "Guami" = betterproto.message_field(2)
    # @inject_tag: aper:"optional"
    g_nb_cu_ue_f1_ap_id_list: Optional[
        "UeidGnbCuF1ApIdList"
    ] = betterproto.message_field(3, optional=True, group="_g_nb_cu_ue_f1_ap_id_list")
    # @inject_tag: aper:"optional"
    g_nb_cu_cp_ue_e1_ap_id_list: Optional[
        "UeidGnbCuCpE1ApIdList"
    ] = betterproto.message_field(
        4, optional=True, group="_g_nb_cu_cp_ue_e1_ap_id_list"
    )
    # @inject_tag: aper:"optional"
    ran_ueid: Optional["Ranueid"] = betterproto.message_field(
        5, optional=True, group="_ran_ueid"
    )
    # @inject_tag: aper:"optional"
    m_ng_ran_ue_xn_ap_id: Optional["NgRannodeUexnApid"] = betterproto.message_field(
        6, optional=True, group="_m_ng_ran_ue_xn_ap_id"
    )
    # @inject_tag: aper:"optional,valueExt"
    global_gnb_id: Optional["GlobalGnbId"] = betterproto.message_field(
        7, optional=True, group="_global_gnb_id"
    )
    # @inject_tag: aper:"optional,choiceExt,fromValueExt"
    global_ng_rannode_id: Optional["GlobalNgrannodeId"] = betterproto.message_field(
        8, optional=True, group="_global_ng_rannode_id"
    )


@dataclass(eq=False, repr=False)
class UeidGnbCuCpE1ApIdList(betterproto.Message):
    """sequence from e2sm_v2.asn1:195 {UEID-GNB-CU-CP-E1AP-ID-List}"""

    # @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:65535"
    value: List["UeidGnbCuCpE1ApIdItem"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class UeidGnbCuCpE1ApIdItem(betterproto.Message):
    """sequence from e2sm_v2.asn1:196 {UEID-GNB-CU-CP-E1AP-ID-Item}"""

    g_nb_cu_cp_ue_e1_ap_id: "GnbCuCpUeE1ApId" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class UeidGnbCuF1ApIdList(betterproto.Message):
    """sequence from e2sm_v2.asn1:202 {UEID-GNB-CU-F1AP-ID-List}"""

    # @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:4"
    value: List["UeidGnbCuCpF1ApIdItem"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class UeidGnbCuCpF1ApIdItem(betterproto.Message):
    """sequence from e2sm_v2.asn1:203 {UEID-GNB-CU-CP-F1AP-ID-Item}"""

    g_nb_cu_ue_f1_ap_id: "GnbCuUeF1ApId" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class UeidGnbDu(betterproto.Message):
    """sequence from e2sm_v2.asn1:208 {UEID-GNB-DU}"""

    g_nb_cu_ue_f1_ap_id: "GnbCuUeF1ApId" = betterproto.message_field(1)
    # @inject_tag: aper:"optional"
    ran_ueid: Optional["Ranueid"] = betterproto.message_field(
        2, optional=True, group="_ran_ueid"
    )


@dataclass(eq=False, repr=False)
class UeidGnbCuUp(betterproto.Message):
    """sequence from e2sm_v2.asn1:214 {UEID-GNB-CU-UP}"""

    g_nb_cu_cp_ue_e1_ap_id: "GnbCuCpUeE1ApId" = betterproto.message_field(1)
    # @inject_tag: aper:"optional"
    ran_ueid: Optional["Ranueid"] = betterproto.message_field(
        2, optional=True, group="_ran_ueid"
    )


@dataclass(eq=False, repr=False)
class UeidNgEnb(betterproto.Message):
    """sequence from e2sm_v2.asn1:220 {UEID-NG-ENB}"""

    amf_ue_ngap_id: "AmfUeNgapId" = betterproto.message_field(1)
    # @inject_tag: aper:"valueExt"
    guami: "Guami" = betterproto.message_field(2)
    # @inject_tag: aper:"optional"
    ng_e_nb_cu_ue_w1_ap_id: Optional["NgenbCuUeW1ApId"] = betterproto.message_field(
        3, optional=True, group="_ng_e_nb_cu_ue_w1_ap_id"
    )
    # @inject_tag: aper:"optional"
    m_ng_ran_ue_xn_ap_id: Optional["NgRannodeUexnApid"] = betterproto.message_field(
        4, optional=True, group="_m_ng_ran_ue_xn_ap_id"
    )
    # @inject_tag: aper:"optional,valueExt"
    global_ng_enb_id: Optional["GlobalNgEnbId"] = betterproto.message_field(
        5, optional=True, group="_global_ng_enb_id"
    )
    # @inject_tag: aper:"optional,choiceExt,fromValueExt"
    global_ng_rannode_id: Optional["GlobalNgrannodeId"] = betterproto.message_field(
        6, optional=True, group="_global_ng_rannode_id"
    )


@dataclass(eq=False, repr=False)
class UeidNgEnbDu(betterproto.Message):
    """sequence from e2sm_v2.asn1:235 {UEID-NG-ENB-DU}"""

    ng_e_nb_cu_ue_w1_ap_id: "NgenbCuUeW1ApId" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class UeidEnGnb(betterproto.Message):
    """sequence from e2sm_v2.asn1:240 {UEID-EN-GNB}"""

    m_e_nb_ue_x2_ap_id: "EnbUeX2ApId" = betterproto.message_field(1)
    # @inject_tag: aper:"optional"
    m_e_nb_ue_x2_ap_id_extension: Optional[
        "EnbUeX2ApIdExtension"
    ] = betterproto.message_field(
        2, optional=True, group="_m_e_nb_ue_x2_ap_id_extension"
    )
    # @inject_tag: aper:"valueExt"
    global_enb_id: "GlobalEnbId" = betterproto.message_field(3)
    # @inject_tag: aper:"optional"
    g_nb_cu_ue_f1_ap_id: Optional["GnbCuUeF1ApId"] = betterproto.message_field(
        4, optional=True, group="_g_nb_cu_ue_f1_ap_id"
    )
    # @inject_tag: aper:"optional"
    g_nb_cu_cp_ue_e1_ap_id_list: Optional[
        "UeidGnbCuCpE1ApIdList"
    ] = betterproto.message_field(
        5, optional=True, group="_g_nb_cu_cp_ue_e1_ap_id_list"
    )
    # @inject_tag: aper:"optional"
    ran_ueid: Optional["Ranueid"] = betterproto.message_field(
        6, optional=True, group="_ran_ueid"
    )


@dataclass(eq=False, repr=False)
class UeidEnb(betterproto.Message):
    """sequence from e2sm_v2.asn1:252 {UEID-ENB}"""

    m_me_ue_s1_ap_id: "MmeUeS1ApId" = betterproto.message_field(1)
    # @inject_tag: aper:"valueExt"
    g_ummei: "Gummei" = betterproto.message_field(2)
    # @inject_tag: aper:"optional"
    m_e_nb_ue_x2_ap_id: Optional["EnbUeX2ApId"] = betterproto.message_field(
        3, optional=True, group="_m_e_nb_ue_x2_ap_id"
    )
    # @inject_tag: aper:"optional"
    m_e_nb_ue_x2_ap_id_extension: Optional[
        "EnbUeX2ApIdExtension"
    ] = betterproto.message_field(
        4, optional=True, group="_m_e_nb_ue_x2_ap_id_extension"
    )
    # @inject_tag: aper:"optional,valueExt"
    global_enb_id: Optional["GlobalEnbId"] = betterproto.message_field(
        5, optional=True, group="_global_enb_id"
    )


@dataclass(eq=False, repr=False)
class EnbId(betterproto.Message):
    """sequence from e2sm_v2.asn1:276 {ENB-ID}"""

    # @inject_tag: aper:"choiceIdx:1,sizeLB:20,sizeUB:20"
    macro_e_nb_id: "__asn1_v1__.BitString" = betterproto.message_field(
        1, group="enb_id"
    )
    # @inject_tag: aper:"choiceIdx:2,sizeLB:28,sizeUB:28"
    home_e_nb_id: "__asn1_v1__.BitString" = betterproto.message_field(2, group="enb_id")
    # @inject_tag: aper:"choiceIdx:3,sizeLB:18,sizeUB:18,fromChoiceExt"
    short_macro_e_nb_id: "__asn1_v1__.BitString" = betterproto.message_field(
        3, group="enb_id"
    )
    # @inject_tag: aper:"choiceIdx:4,sizeLB:21,sizeUB:21,fromChoiceExt"
    long_macro_e_nb_id: "__asn1_v1__.BitString" = betterproto.message_field(
        4, group="enb_id"
    )


@dataclass(eq=False, repr=False)
class GlobalEnbId(betterproto.Message):
    """sequence from e2sm_v2.asn1:285 {GlobalENB-ID}"""

    p_lmnidentity: "Plmnidentity" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    e_nb_id: "EnbId" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class Gummei(betterproto.Message):
    """sequence from e2sm_v2.asn1:293 {GUMMEI}"""

    p_lmn_identity: "Plmnidentity" = betterproto.message_field(1)
    m_me_group_id: "MmeGroupId" = betterproto.message_field(2)
    m_me_code: "MmeCode" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class MmeUeS1ApId(betterproto.Message):
    """range of Integer from e2sm_v2.asn1:306 {MME-UE-S1AP-ID}"""

    # @inject_tag: aper:"valueLB:0,valueUB:4294967295"
    value: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class Qci(betterproto.Message):
    """range of Integer from e2sm_v2.asn1:309 {QCI}"""

    # @inject_tag: aper:"valueLB:0,valueUB:255"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class SubscriberProfileIdforRfp(betterproto.Message):
    """range of Integer from e2sm_v2.asn1:312 {SubscriberProfileIDforRFP}"""

    # @inject_tag: aper:"valueLB:1,valueUB:256"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class EnGnbId(betterproto.Message):
    """sequence from e2sm_v2.asn1:330 {EN-GNB-ID}"""

    # @inject_tag: aper:"choiceIdx:1,sizeLB:22,sizeUB:32"
    en_g_nb_id: "__asn1_v1__.BitString" = betterproto.message_field(
        1, group="en_gnb_id"
    )


@dataclass(eq=False, repr=False)
class EnbUeX2ApId(betterproto.Message):
    """range of Integer from e2sm_v2.asn1:335 {ENB-UE-X2AP-ID}"""

    # @inject_tag: aper:"valueLB:0,valueUB:4095"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class EnbUeX2ApIdExtension(betterproto.Message):
    """range of Integer from e2sm_v2.asn1:338 {ENB-UE-X2AP-ID-Extension}"""

    # @inject_tag: aper:"valueExt,valueLB:0,valueUB:4095"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class EUtraArfcn(betterproto.Message):
    """range of Integer from e2sm_v2.asn1:341 {E-UTRA-ARFCN}"""

    # @inject_tag: aper:"valueLB:0,valueUB:65535"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class EUtraPci(betterproto.Message):
    """range of Integer from e2sm_v2.asn1:344 {E-UTRA-PCI}"""

    # @inject_tag: aper:"valueExt,valueLB:0,valueUB:503"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class EUtraTac(betterproto.Message):
    # @inject_tag: aper:"sizeLB:2,sizeUB:2"
    value: bytes = betterproto.bytes_field(1)


@dataclass(eq=False, repr=False)
class GlobalenGnbId(betterproto.Message):
    """sequence from e2sm_v2.asn1:351 {GlobalenGNB-ID}"""

    p_lmn_identity: "Plmnidentity" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    en_g_nb_id: "EnGnbId" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class NgenbCuUeW1ApId(betterproto.Message):
    """range of Integer from e2sm_v2.asn1:365 {NGENB-CU-UE-W1AP-ID}"""

    # @inject_tag: aper:"valueExt,valueLB:0,valueUB:4294967295"
    value: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class NgenbDuId(betterproto.Message):
    """range of Integer from e2sm_v2.asn1:368 {NGENB-DU-ID}"""

    # @inject_tag: aper:"valueExt,valueLB:0,valueUB:68719476735"
    value: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class Amfpointer(betterproto.Message):
    # @inject_tag: aper:"sizeLB:6,sizeUB:6"
    value: "__asn1_v1__.BitString" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AmfregionId(betterproto.Message):
    # @inject_tag: aper:"sizeLB:8,sizeUB:8"
    value: "__asn1_v1__.BitString" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AmfsetId(betterproto.Message):
    # @inject_tag: aper:"sizeLB:10,sizeUB:10"
    value: "__asn1_v1__.BitString" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AmfUeNgapId(betterproto.Message):
    """range of Integer from e2sm_v2.asn1:389 {AMF-UE-NGAP-ID}"""

    # @inject_tag: aper:"valueExt,valueLB:0,valueUB:1099511627775"
    value: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class EutracellIdentity(betterproto.Message):
    # @inject_tag: aper:"sizeLB:28,sizeUB:28"
    value: "__asn1_v1__.BitString" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class EutraCgi(betterproto.Message):
    """sequence from e2sm_v2.asn1:396 {EUTRA-CGI}"""

    p_lmnidentity: "Plmnidentity" = betterproto.message_field(1)
    e_utracell_identity: "EutracellIdentity" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class FiveQi(betterproto.Message):
    """range of Integer from e2sm_v2.asn1:402 {FiveQI}"""

    # @inject_tag: aper:"valueExt,valueLB:0,valueUB:255"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class GlobalGnbId(betterproto.Message):
    """sequence from e2sm_v2.asn1:406 {GlobalGNB-ID}"""

    p_lmnidentity: "Plmnidentity" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    g_nb_id: "GnbId" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GlobalNgEnbId(betterproto.Message):
    """sequence from e2sm_v2.asn1:413 {GlobalNgENB-ID}"""

    p_lmnidentity: "Plmnidentity" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    ng_enb_id: "NgEnbId" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GnbId(betterproto.Message):
    """sequence from e2sm_v2.asn1:421 {GNB-ID}"""

    # @inject_tag: aper:"choiceIdx:1,sizeLB:22,sizeUB:32"
    g_nb_id: "__asn1_v1__.BitString" = betterproto.message_field(1, group="gnb_id")


@dataclass(eq=False, repr=False)
class Guami(betterproto.Message):
    """sequence from e2sm_v2.asn1:427 {GUAMI}"""

    p_lmnidentity: "Plmnidentity" = betterproto.message_field(1)
    a_mfregion_id: "AmfregionId" = betterproto.message_field(2)
    a_mfset_id: "AmfsetId" = betterproto.message_field(3)
    a_mfpointer: "Amfpointer" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class IndexToRfsp(betterproto.Message):
    """range of Integer from e2sm_v2.asn1:435 {IndexToRFSP}"""

    # @inject_tag: aper:"valueLB:1,valueUB:256,valueExt"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class NgEnbId(betterproto.Message):
    """sequence from e2sm_v2.asn1:439 {NgENB-ID}"""

    # @inject_tag: aper:"choiceIdx:1,sizeLB:20,sizeUB:20"
    macro_ng_enb_id: "__asn1_v1__.BitString" = betterproto.message_field(
        1, group="ng_enb_id"
    )
    # @inject_tag: aper:"choiceIdx:2,sizeLB:18,sizeUB:18"
    short_macro_ng_enb_id: "__asn1_v1__.BitString" = betterproto.message_field(
        2, group="ng_enb_id"
    )
    # @inject_tag: aper:"choiceIdx:3,sizeLB:21,sizeUB:21"
    long_macro_ng_enb_id: "__asn1_v1__.BitString" = betterproto.message_field(
        3, group="ng_enb_id"
    )


@dataclass(eq=False, repr=False)
class NrcellIdentity(betterproto.Message):
    # @inject_tag: aper:"sizeLB:36,sizeUB:36"
    value: "__asn1_v1__.BitString" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class NrCgi(betterproto.Message):
    """sequence from e2sm_v2.asn1:450 {NR-CGI}"""

    p_lmnidentity: "Plmnidentity" = betterproto.message_field(1)
    n_rcell_identity: "NrcellIdentity" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class QosFlowIdentifier(betterproto.Message):
    """range of Integer from e2sm_v2.asn1:459 {QosFlowIdentifier}"""

    # @inject_tag: aper:"valueLB:0,valueUB:63,valueExt"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class Sd(betterproto.Message):
    # @inject_tag: aper:"sizeLB:3,sizeUB:3"
    value: bytes = betterproto.bytes_field(1)


@dataclass(eq=False, repr=False)
class SNssai(betterproto.Message):
    """
    sequence from e2sm_v2.asn1:466 {S-NSSAI} @inject_tag: aper:"valueExt"
    """

    s_st: "Sst" = betterproto.message_field(1)
    # @inject_tag: aper:"optional"
    s_d: Optional["Sd"] = betterproto.message_field(2, optional=True, group="_s_d")


@dataclass(eq=False, repr=False)
class Sst(betterproto.Message):
    # @inject_tag: aper:"sizeLB:1,sizeUB:1"
    value: bytes = betterproto.bytes_field(1)


@dataclass(eq=False, repr=False)
class NgRannodeUexnApid(betterproto.Message):
    """range of Integer from e2sm_v2.asn1:483 {NG-RANnodeUEXnAPID}"""

    # @inject_tag: aper:"valueLB:0,valueUB:4294967295"
    value: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class GlobalNgrannodeId(betterproto.Message):
    """sequence from e2sm_v2.asn1:486 {GlobalNGRANNodeID}"""

    # @inject_tag: aper:"choiceIdx:1,valueExt"
    g_nb: "GlobalGnbId" = betterproto.message_field(1, group="global_ngrannode_id")
    # @inject_tag: aper:"choiceIdx:2,valueExt"
    ng_e_nb: "GlobalNgEnbId" = betterproto.message_field(2, group="global_ngrannode_id")


@dataclass(eq=False, repr=False)
class GnbCuCpUeE1ApId(betterproto.Message):
    """range of Integer from e2sm_v2.asn1:499 {GNB-CU-CP-UE-E1AP-ID}"""

    # @inject_tag: aper:"valueLB:0,valueUB:4294967295"
    value: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class GnbCuUpId(betterproto.Message):
    """range of Integer from e2sm_v2.asn1:502 {GNB-CU-UP-ID}"""

    # @inject_tag: aper:"valueLB:0,valueUB:68719476735"
    value: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class FiveGsTac(betterproto.Message):
    # @inject_tag: aper:"sizeLB:3,sizeUB:3"
    value: bytes = betterproto.bytes_field(1)


@dataclass(eq=False, repr=False)
class FreqBandNrItem(betterproto.Message):
    """
    sequence from e2sm_v2.asn1:518 {FreqBandNrItem} @inject_tag:
    aper:"valueExt"
    """

    # @inject_tag: aper:"valueExt,valueLB:1,valueUB:1024"
    freq_band_indicator_nr: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class GnbCuUeF1ApId(betterproto.Message):
    """range of Integer from e2sm_v2.asn1:524 {GNB-CU-UE-F1AP-ID}"""

    # @inject_tag: aper:"valueExt,valueLB:0,valueUB:4294967295"
    value: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class GnbDuId(betterproto.Message):
    """range of Integer from e2sm_v2.asn1:527 {GNB-DU-ID}"""

    # @inject_tag: aper:"valueLB:0,valueUB:68719476735"
    value: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class NrPci(betterproto.Message):
    """range of Integer from e2sm_v2.asn1:530 {NR-PCI}"""

    # @inject_tag: aper:"valueLB:0,valueUB:1007"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class NrArfcn(betterproto.Message):
    """sequence from e2sm_v2.asn1:534 {NR-ARFCN}"""

    # @inject_tag: aper:"valueLB:0,valueUB:3279165"
    n_rarfcn: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class NrfrequencyBandList(betterproto.Message):
    """sequence from e2sm_v2.asn1:541 {NRFrequencyBand-List}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:32,valueExt"
    value: List["NrfrequencyBandItem"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class NrfrequencyBandItem(betterproto.Message):
    """sequence from e2sm_v2.asn1:542 {NRFrequencyBandItem}"""

    # @inject_tag: aper:"valueExt,valueLB:1,valueUB:1024"
    freq_band_indicator_nr: int = betterproto.int32_field(1)
    supported_sulband_list: "SupportedSulbandList" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class NrfrequencyInfo(betterproto.Message):
    """
    sequence from e2sm_v2.asn1:549 {NRFrequencyInfo} @inject_tag:
    aper:"valueExt"
    """

    # @inject_tag: aper:"valueExt"
    nr_arfcn: "NrArfcn" = betterproto.message_field(1)
    frequency_band_list: "NrfrequencyBandList" = betterproto.message_field(2)
    # @inject_tag: aper:"optional,valueLB:0,valueUB:1,valueExt"
    frequency_shift7_p5_khz: Optional[
        "NrfrequencyShift7P5Khz"
    ] = betterproto.enum_field(3, optional=True, group="_frequency_shift7p5khz")


@dataclass(eq=False, repr=False)
class SupportedSulbandList(betterproto.Message):
    """sequence from e2sm_v2.asn1:567 {SupportedSULBandList}"""

    # @inject_tag: aper:"sizeLB:0,sizeUB:32,valueExt"
    value: List["SupportedSulfreqBandItem"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SupportedSulfreqBandItem(betterproto.Message):
    """sequence from e2sm_v2.asn1:568 {SupportedSULFreqBandItem}"""

    # @inject_tag: aper:"valueExt,valueLB:1,valueUB:1024"
    freq_band_indicator_nr: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class Ranueid(betterproto.Message):
    # @inject_tag: aper:"sizeLB:8,sizeUB:8"
    value: bytes = betterproto.bytes_field(1)


@dataclass(eq=False, repr=False)
class Plmnidentity(betterproto.Message):
    # @inject_tag:aper:"sizeLB:3,sizeUB:3"
    value: bytes = betterproto.bytes_field(1)


@dataclass(eq=False, repr=False)
class MmeGroupId(betterproto.Message):
    # @inject_tag:aper:"sizeLB:2,sizeUB:2"
    value: bytes = betterproto.bytes_field(1)


@dataclass(eq=False, repr=False)
class MmeCode(betterproto.Message):
    # @inject_tag:aper:"sizeLB:1,sizeUB:1"
    value: bytes = betterproto.bytes_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofMessages(betterproto.Message):
    """constant Integer from e2sm_rc.asn1:47 {-}"""

    # @inject_tag: aper:"valueLB:65535,valueUB:65535,"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofE2InfoChanges(betterproto.Message):
    """constant Integer from e2sm_rc.asn1:48 {-}"""

    # @inject_tag: aper:"valueLB:65535,valueUB:65535,"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofUeinfoChanges(betterproto.Message):
    """constant Integer from e2sm_rc.asn1:49 {-}"""

    # @inject_tag: aper:"valueLB:65535,valueUB:65535,"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofRrcstate(betterproto.Message):
    """constant Integer from e2sm_rc.asn1:50 {-}"""

    # @inject_tag: aper:"valueLB:8,valueUB:8,"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofParametersToReport(betterproto.Message):
    """constant Integer from e2sm_rc.asn1:51 {-}"""

    # @inject_tag: aper:"valueLB:65535,valueUB:65535,"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofPolicyConditions(betterproto.Message):
    """constant Integer from e2sm_rc.asn1:52 {-}"""

    # @inject_tag: aper:"valueLB:65535,valueUB:65535,"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofAssociatedRanparameters(betterproto.Message):
    """constant Integer from e2sm_rc.asn1:53 {-}"""

    # @inject_tag: aper:"valueLB:65535,valueUB:65535,"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofUeid(betterproto.Message):
    """constant Integer from e2sm_rc.asn1:54 {-}"""

    # @inject_tag: aper:"valueLB:65535,valueUB:65535,"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofCellId(betterproto.Message):
    """constant Integer from e2sm_rc.asn1:55 {-}"""

    # @inject_tag: aper:"valueLB:65535,valueUB:65535,"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofRanoutcomeParameters(betterproto.Message):
    """constant Integer from e2sm_rc.asn1:56 {-}"""

    # @inject_tag: aper:"valueLB:255,valueUB:255,"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofParametersinStructure(betterproto.Message):
    """constant Integer from e2sm_rc.asn1:57 {-}"""

    # @inject_tag: aper:"valueLB:65535,valueUB:65535,"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofItemsinList(betterproto.Message):
    """constant Integer from e2sm_rc.asn1:58 {-}"""

    # @inject_tag: aper:"valueLB:65535,valueUB:65535,"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofUeinfo(betterproto.Message):
    """constant Integer from e2sm_rc.asn1:59 {-}"""

    # @inject_tag: aper:"valueLB:65535,valueUB:65535,"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofCellInfo(betterproto.Message):
    """constant Integer from e2sm_rc.asn1:60 {-}"""

    # @inject_tag: aper:"valueLB:65535,valueUB:65535,"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofUeeventInfo(betterproto.Message):
    """constant Integer from e2sm_rc.asn1:61 {-}"""

    # @inject_tag: aper:"valueLB:65535,valueUB:65535,"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofRanparamTest(betterproto.Message):
    """constant Integer from e2sm_rc.asn1:62 {-}"""

    # @inject_tag: aper:"valueLB:255,valueUB:255,"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofNeighbourCell(betterproto.Message):
    """constant Integer from e2sm_rc.asn1:63 {-}"""

    # @inject_tag: aper:"valueLB:65535,valueUB:65535,"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofRicstyles(betterproto.Message):
    """constant Integer from e2sm_rc.asn1:64 {-}"""

    # @inject_tag: aper:"valueLB:63,valueUB:63,"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofCallProcessTypes(betterproto.Message):
    """constant Integer from e2sm_rc.asn1:65 {-}"""

    # @inject_tag: aper:"valueLB:65535,valueUB:65535,"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofCallProcessBreakpoints(betterproto.Message):
    """constant Integer from e2sm_rc.asn1:66 {-}"""

    # @inject_tag: aper:"valueLB:65535,valueUB:65535,"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofInsertIndication(betterproto.Message):
    """constant Integer from e2sm_rc.asn1:67 {-}"""

    # @inject_tag: aper:"valueLB:65535,valueUB:65535,"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofControlAction(betterproto.Message):
    """constant Integer from e2sm_rc.asn1:68 {-}"""

    # @inject_tag: aper:"valueLB:65535,valueUB:65535,"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofPolicyAction(betterproto.Message):
    """constant Integer from e2sm_rc.asn1:69 {-}"""

    # @inject_tag: aper:"valueLB:65535,valueUB:65535,"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofInsertIndicationActions(betterproto.Message):
    """constant Integer from e2sm_rc.asn1:70 {-}"""

    # @inject_tag: aper:"valueLB:63,valueUB:63,"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofMulCtrlActions(betterproto.Message):
    """constant Integer from e2sm_rc.asn1:71 {-}"""

    # @inject_tag: aper:"valueLB:63,valueUB:63,"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class NeighborCellList(betterproto.Message):
    """sequence from e2sm_rc.asn1:80 {NeighborCell-List}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:65535,choiceExt"
    value: List["NeighborCellItem"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class NeighborCellItem(betterproto.Message):
    """sequence from e2sm_rc.asn1:81 {NeighborCell-Item}"""

    # @inject_tag: aper:"choiceIdx:1,valueExt"
    ran_type_choice_nr: "NeighborCellItemChoiceNr" = betterproto.message_field(
        1, group="neighbor_cell_item"
    )
    # @inject_tag: aper:"choiceIdx:2,valueExt"
    ran_type_choice_eutra: "NeighborCellItemChoiceEUtra" = betterproto.message_field(
        2, group="neighbor_cell_item"
    )


@dataclass(eq=False, repr=False)
class NeighborCellItemChoiceNr(betterproto.Message):
    """sequence from e2sm_rc.asn1:87 {NeighborCell-Item-Choice-NR}"""

    # @inject_tag: aper:"valueExt"
    n_r_cgi: "NrCgi" = betterproto.message_field(1)
    n_r_pci: "NrPci" = betterproto.message_field(2)
    five_gs_tac: "FiveGsTac" = betterproto.message_field(3)
    # @inject_tag: aper:"valueLB:0,valueUB:1,valueExt"
    n_r_mode_info: "NrModeInfo" = betterproto.enum_field(4)
    # @inject_tag: aper:"valueExt"
    n_r_freq_info: "NrfrequencyInfo" = betterproto.message_field(5)
    # @inject_tag: aper:"valueLB:0,valueUB:1,valueExt"
    x2_xn_established: "X2XnEstablished" = betterproto.enum_field(6)
    # @inject_tag: aper:"valueLB:0,valueUB:1,valueExt"
    h_o_validated: "HoValidated" = betterproto.enum_field(7)
    # @inject_tag: aper:"valueLB:1,valueUB:65535,valueExt"
    version: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class NeighborCellItemChoiceEUtra(betterproto.Message):
    """sequence from e2sm_rc.asn1:99 {NeighborCell-Item-Choice-E-UTRA}"""

    # @inject_tag: aper:"valueExt"
    e_utra_cgi: "EutraCgi" = betterproto.message_field(1)
    e_utra_pci: "EUtraPci" = betterproto.message_field(2)
    e_utra_arfcn: "EUtraArfcn" = betterproto.message_field(3)
    e_utra_tac: "EUtraTac" = betterproto.message_field(4)
    # @inject_tag: aper:"valueLB:0,valueUB:1,valueExt"
    x2_xn_established: "X2XnEstablished" = betterproto.enum_field(5)
    # @inject_tag: aper:"valueLB:0,valueUB:1,valueExt"
    h_o_validated: "HoValidated" = betterproto.enum_field(6)
    # @inject_tag: aper:"valueLB:1,valueUB:65535,valueExt"
    version: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class NeighborRelationInfo(betterproto.Message):
    """sequence from e2sm_rc.asn1:110 {NeighborRelation-Info}"""

    # @inject_tag: aper:"choiceExt"
    serving_cell_pci: "ServingCellPci" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    serving_cell_arfcn: "ServingCellArfcn" = betterproto.message_field(2)
    neighbor_cell_list: "NeighborCellList" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class EventTriggerCellInfo(betterproto.Message):
    """sequence from e2sm_rc.asn1:126 {EventTrigger-Cell-Info}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:65535,valueExt"
    cell_info_list: List["EventTriggerCellInfoItem"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class EventTriggerCellInfoItem(betterproto.Message):
    """sequence from e2sm_rc.asn1:131 {EventTrigger-Cell-Info-Item}"""

    event_trigger_cell_id: "RicEventTriggerCellId" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    cell_type: "CellType" = betterproto.message_field(2)
    # @inject_tag: aper:"optional,valueLB:0,valueUB:1,valueExt"
    logical_or: Optional["LogicalOr"] = betterproto.enum_field(
        3, optional=True, group="_logical_or"
    )


@dataclass(eq=False, repr=False)
class CellType(betterproto.Message):
    # @inject_tag: aper:"choiceIdx:1,valueExt"
    cell_type_choice_individual: "EventTriggerCellInfoItemChoiceIndividual" = (
        betterproto.message_field(1, group="cell_type")
    )
    # @inject_tag: aper:"choiceIdx:2,valueExt"
    cell_type_choice_group: "EventTriggerCellInfoItemChoiceGroup" = (
        betterproto.message_field(2, group="cell_type")
    )


@dataclass(eq=False, repr=False)
class EventTriggerCellInfoItemChoiceIndividual(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:142 {EventTrigger-Cell-Info-Item-Choice-
    Individual}
    """

    # @inject_tag: aper:"choiceExt"
    cell_global_id: "Cgi" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class EventTriggerCellInfoItemChoiceGroup(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:147 {EventTrigger-Cell-Info-Item-Choice-Group}
    """

    ran_parameter_testing: "RanparameterTesting" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class EventTriggerUeInfo(betterproto.Message):
    """sequence from e2sm_rc.asn1:154 {EventTrigger-UE-Info}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:65535,valueExt"
    ue_info_list: List["EventTriggerUeInfoItem"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class EventTriggerUeInfoItem(betterproto.Message):
    """sequence from e2sm_rc.asn1:159 {EventTrigger-UE-Info-Item}"""

    event_trigger_ueid: "RicEventTriggerUeId" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    ue_type: "UeType" = betterproto.message_field(2)
    # @inject_tag: aper:"optional,valueLB:0,valueUB:1,valueExt"
    logical_or: Optional["LogicalOr"] = betterproto.enum_field(
        3, optional=True, group="_logical_or"
    )


@dataclass(eq=False, repr=False)
class UeType(betterproto.Message):
    # @inject_tag: aper:"choiceIdx:1,valueExt"
    ue_type_choice_individual: "EventTriggerUeInfoItemChoiceIndividual" = (
        betterproto.message_field(1, group="ue_type")
    )
    # @inject_tag: aper:"choiceIdx:2,valueExt"
    ue_type_choice_group: "EventTriggerUeInfoItemChoiceGroup" = (
        betterproto.message_field(2, group="ue_type")
    )


@dataclass(eq=False, repr=False)
class EventTriggerUeInfoItemChoiceIndividual(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:170 {EventTrigger-UE-Info-Item-Choice-
    Individual}
    """

    # @inject_tag: aper:"choiceExt"
    ue_id: "Ueid" = betterproto.message_field(1)
    # @inject_tag: aper:"optional"
    ran_parameter_testing: Optional["RanparameterTesting"] = betterproto.message_field(
        2, optional=True, group="_ran_parameter_testing"
    )


@dataclass(eq=False, repr=False)
class EventTriggerUeInfoItemChoiceGroup(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:176 {EventTrigger-UE-Info-Item-Choice-Group}
    """

    ran_parameter_testing: "RanparameterTesting" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class EventTriggerUeeventInfo(betterproto.Message):
    """sequence from e2sm_rc.asn1:183 {EventTrigger-UEevent-Info}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:65535,valueExt"
    ue_event_list: List["EventTriggerUeeventInfoItem"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class EventTriggerUeeventInfoItem(betterproto.Message):
    """sequence from e2sm_rc.asn1:188 {EventTrigger-UEevent-Info-Item}"""

    ue_event_id: "RicEventTriggerUeeventId" = betterproto.message_field(1)
    # @inject_tag: aper:"optional,valueLB:0,valueUB:1,valueExt"
    logical_or: Optional["LogicalOr"] = betterproto.enum_field(
        2, optional=True, group="_logical_or"
    )


@dataclass(eq=False, repr=False)
class RanparameterId(betterproto.Message):
    """range of Integer from e2sm_rc.asn1:200 {RANParameter-ID}"""

    # @inject_tag: aper:"valueLB:1,valueUB:4294967296,valueExt"
    value: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class RanparameterName(betterproto.Message):
    # @inject_tag: aper:"sizeLB:1,sizeUB:150,sizeExt"
    value: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class RanparameterDefinition(betterproto.Message):
    """sequence from e2sm_rc.asn1:205 {RANParameter-Definition}"""

    # @inject_tag: aper:"choiceExt"
    ran_parameter_definition_choice: "RanparameterDefinitionChoice" = (
        betterproto.message_field(1)
    )


@dataclass(eq=False, repr=False)
class RanparameterDefinitionChoice(betterproto.Message):
    """sequence from e2sm_rc.asn1:210 {RANParameter-Definition-Choice}"""

    # @inject_tag: aper:"choiceIdx:1,valueExt"
    choice_list: "RanparameterDefinitionChoiceList" = betterproto.message_field(
        1, group="ranparameter_definition_choice"
    )
    # @inject_tag: aper:"choiceIdx:2,valueExt"
    choice_structure: "RanparameterDefinitionChoiceStructure" = (
        betterproto.message_field(2, group="ranparameter_definition_choice")
    )


@dataclass(eq=False, repr=False)
class RanparameterDefinitionChoiceList(betterproto.Message):
    """sequence from e2sm_rc.asn1:216 {RANParameter-Definition-Choice-LIST}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:65535,valueExt"
    ran_parameter_list: List[
        "RanparameterDefinitionChoiceListItem"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class RanparameterDefinitionChoiceListItem(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:221 {RANParameter-Definition-Choice-LIST-Item}
    """

    ran_parameter_id: "RanparameterId" = betterproto.message_field(1)
    ran_parameter_name: "RanparameterName" = betterproto.message_field(2)
    # @inject_tag: aper:"optional,valueExt"
    ran_parameter_definition: Optional[
        "RanparameterDefinition"
    ] = betterproto.message_field(3, optional=True, group="_ran_parameter_definition")


@dataclass(eq=False, repr=False)
class RanparameterDefinitionChoiceStructure(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:228 {RANParameter-Definition-Choice-STRUCTURE}
    """

    # @inject_tag: aper:"sizeLB:1,sizeUB:65535,valueExt"
    ran_parameter_structure: List[
        "RanparameterDefinitionChoiceStructureItem"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class RanparameterDefinitionChoiceStructureItem(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:233 {RANParameter-Definition-Choice-STRUCTURE-
    Item}
    """

    ran_parameter_id: "RanparameterId" = betterproto.message_field(1)
    ran_parameter_name: "RanparameterName" = betterproto.message_field(2)
    # @inject_tag: aper:"optional,valueExt"
    ran_parameter_definition: Optional[
        "RanparameterDefinition"
    ] = betterproto.message_field(3, optional=True, group="_ran_parameter_definition")


@dataclass(eq=False, repr=False)
class RanparameterValue(betterproto.Message):
    """sequence from e2sm_rc.asn1:240 {RANParameter-Value}"""

    # @inject_tag: aper:"choiceIdx:1"
    value_boolean: bool = betterproto.bool_field(1, group="ranparameter_value")
    # @inject_tag: aper:"choiceIdx:2"
    value_int: int = betterproto.int64_field(2, group="ranparameter_value")
    # @inject_tag: aper:"choiceIdx:3"
    value_real: float = betterproto.float_field(3, group="ranparameter_value")
    # @inject_tag: aper:"choiceIdx:4"
    value_bit_s: "__asn1_v1__.BitString" = betterproto.message_field(
        4, group="ranparameter_value"
    )
    # @inject_tag: aper:"choiceIdx:5"
    value_oct_s: bytes = betterproto.bytes_field(5, group="ranparameter_value")
    # @inject_tag: aper:"choiceIdx:6"
    value_printable_string: str = betterproto.string_field(
        6, group="ranparameter_value"
    )


@dataclass(eq=False, repr=False)
class RanparameterValueType(betterproto.Message):
    """sequence from e2sm_rc.asn1:250 {RANParameter-ValueType}"""

    # @inject_tag: aper:"choiceIdx:1,valueExt"
    ran_p_choice_element_true: "RanparameterValueTypeChoiceElementTrue" = (
        betterproto.message_field(1, group="ranparameter_value_type")
    )
    # @inject_tag: aper:"choiceIdx:2,valueExt"
    ran_p_choice_element_false: "RanparameterValueTypeChoiceElementFalse" = (
        betterproto.message_field(2, group="ranparameter_value_type")
    )
    # @inject_tag: aper:"choiceIdx:3,valueExt"
    ran_p_choice_structure: "RanparameterValueTypeChoiceStructure" = (
        betterproto.message_field(3, group="ranparameter_value_type")
    )
    # @inject_tag: aper:"choiceIdx:4,valueExt"
    ran_p_choice_list: "RanparameterValueTypeChoiceList" = betterproto.message_field(
        4, group="ranparameter_value_type"
    )


@dataclass(eq=False, repr=False)
class RanparameterValueTypeChoiceElementTrue(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:260 {RANParameter-ValueType-Choice-ElementTrue}
    """

    # @inject_tag: aper:"choiceExt"
    ran_parameter_value: "RanparameterValue" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class RanparameterValueTypeChoiceElementFalse(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:265 {RANParameter-ValueType-Choice-ElementFalse}
    """

    # @inject_tag: aper:"optional,choiceExt"
    ran_parameter_value: Optional["RanparameterValue"] = betterproto.message_field(
        1, optional=True, group="_ran_parameter_value"
    )


@dataclass(eq=False, repr=False)
class RanparameterValueTypeChoiceStructure(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:271 {RANParameter-ValueType-Choice-Structure}
    """

    # @inject_tag: aper:"valueExt"
    ran_parameter_structure: "RanparameterStructure" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class RanparameterValueTypeChoiceList(betterproto.Message):
    """sequence from e2sm_rc.asn1:276 {RANParameter-ValueType-Choice-List}"""

    # @inject_tag: aper:"valueExt"
    ran_parameter_list: "RanparameterList" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class RanparameterStructure(betterproto.Message):
    """sequence from e2sm_rc.asn1:282 {RANParameter-STRUCTURE}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:65535,valueExt"
    sequence_of_ran_parameters: List[
        "RanparameterStructureItem"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class RanparameterStructureItem(betterproto.Message):
    """sequence from e2sm_rc.asn1:287 {RANParameter-STRUCTURE-Item}"""

    ran_parameter_id: "RanparameterId" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    ran_parameter_value_type: "RanparameterValueType" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class RanparameterList(betterproto.Message):
    """sequence from e2sm_rc.asn1:293 {RANParameter-LIST}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:65535,valueExt"
    list_of_ran_parameter: List["RanparameterStructure"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class RanparameterTesting(betterproto.Message):
    """sequence from e2sm_rc.asn1:300 {RANParameter-Testing}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:255,valueExt"
    value: List["RanparameterTestingItem"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class RanparameterTestingCondition(betterproto.Message):
    """sequence from e2sm_rc.asn1:301 {RANParameter-TestingCondition}"""

    # @inject_tag: aper:"choiceIdx:1,valueExt,valueLB:0,valueUB:5"
    ran_p_choice_comparison: "RanPChoiceComparison" = betterproto.enum_field(
        1, group="ranparameter_testing_condition"
    )
    # @inject_tag: aper:"choiceIdx:2,valueExt,valueLB:0,valueUB:3"
    ran_p_choice_presence: "RanPChoicePresence" = betterproto.enum_field(
        2, group="ranparameter_testing_condition"
    )


@dataclass(eq=False, repr=False)
class RanparameterTestingItem(betterproto.Message):
    """sequence from e2sm_rc.asn1:307 {RANParameter-Testing-Item}"""

    ran_parameter_id: "RanparameterId" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    ran_parameter_type: "RanParameterType" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class RanParameterType(betterproto.Message):
    # @inject_tag: aper:"choiceIdx:1,valueExt"
    ran_p_choice_list: "RanparameterTestingItemChoiceList" = betterproto.message_field(
        1, group="ran_parameter_type"
    )
    # @inject_tag: aper:"choiceIdx:2,valueExt"
    ran_p_choice_structure: "RanparameterTestingItemChoiceStructure" = (
        betterproto.message_field(2, group="ran_parameter_type")
    )
    # @inject_tag: aper:"choiceIdx:3,valueExt"
    ran_p_choice_element_true: "RanparameterTestingItemChoiceElementTrue" = (
        betterproto.message_field(3, group="ran_parameter_type")
    )
    # @inject_tag: aper:"choiceIdx:4,valueExt"
    ran_p_choice_element_false: "RanparameterTestingItemChoiceElementFalse" = (
        betterproto.message_field(4, group="ran_parameter_type")
    )


@dataclass(eq=False, repr=False)
class RanparameterTestingItemChoiceList(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:319 {RANParameter-Testing-Item-Choice-List}
    """

    ran_parameter_list: "RanparameterTestingList" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class RanparameterTestingItemChoiceStructure(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:324 {RANParameter-Testing-Item-Choice-Structure}
    """

    ran_parameter_structure: "RanparameterTestingStructure" = betterproto.message_field(
        1
    )


@dataclass(eq=False, repr=False)
class RanparameterTestingItemChoiceElementTrue(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:329 {RANParameter-Testing-Item-Choice-
    ElementTrue}
    """

    # @inject_tag: aper:"choiceExt"
    ran_parameter_value: "RanparameterValue" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class RanparameterTestingItemChoiceElementFalse(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:334 {RANParameter-Testing-Item-Choice-
    ElementFalse}
    """

    # @inject_tag: aper:"choiceExt"
    ran_parameter_test_condition: "RanparameterTestingCondition" = (
        betterproto.message_field(1)
    )
    # @inject_tag: aper:"optional,choiceExt"
    ran_parameter_value: Optional["RanparameterValue"] = betterproto.message_field(
        2, optional=True, group="_ran_parameter_value"
    )
    # @inject_tag: aper:"optional,valueLB:0,valueUB:1,valueExt"
    logical_or: Optional["LogicalOr"] = betterproto.enum_field(
        3, optional=True, group="_logical_or"
    )


@dataclass(eq=False, repr=False)
class RanparameterTestingList(betterproto.Message):
    """sequence from e2sm_rc.asn1:342 {RANParameter-Testing-LIST}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:65535,valueExt"
    value: List["RanparameterTestingItem"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class RanparameterTestingStructure(betterproto.Message):
    """sequence from e2sm_rc.asn1:352 {RANParameter-Testing-STRUCTURE}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:65535,valueExt"
    value: List["RanparameterTestingItem"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class RanCallProcessId(betterproto.Message):
    """range of Integer from e2sm_rc.asn1:352 {RAN-CallProcess-ID}"""

    # @inject_tag: aper:"valueLB:1,valueUB:232,valueExt"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class RicCallProcessTypeId(betterproto.Message):
    """range of Integer from e2sm_rc.asn1:354 {RIC-CallProcessType-ID}"""

    # @inject_tag: aper:"valueLB:1,valueUB:65535,valueExt"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class RicCallProcessTypeName(betterproto.Message):
    # @inject_tag: aper:"sizeLB:1,sizeUB:150,sizeExt"
    value: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class RicCallProcessBreakpointId(betterproto.Message):
    """
    range of Integer from e2sm_rc.asn1:358 {RIC-CallProcessBreakpoint-ID}
    """

    # @inject_tag: aper:"valueLB:1,valueUB:65535,valueExt"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class RicCallProcessBreakpointName(betterproto.Message):
    # @inject_tag: aper:"sizeLB:1,sizeUB:150,sizeExt"
    value: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class RicControlActionId(betterproto.Message):
    """range of Integer from e2sm_rc.asn1:362 {RIC-ControlAction-ID}"""

    # @inject_tag: aper:"valueLB:1,valueUB:65535,valueExt"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class RicControlActionName(betterproto.Message):
    # @inject_tag: aper:"sizeLB:1,sizeUB:150,sizeExt"
    value: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class RicEventTriggerConditionId(betterproto.Message):
    """
    range of Integer from e2sm_rc.asn1:366 {RIC-EventTriggerCondition-ID}
    """

    # @inject_tag: aper:"valueLB:1,valueUB:65535,valueExt"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class RicEventTriggerUeId(betterproto.Message):
    """range of Integer from e2sm_rc.asn1:368 {RIC-EventTrigger-UE-ID}"""

    # @inject_tag: aper:"valueLB:1,valueUB:65535,valueExt"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class RicEventTriggerUeeventId(betterproto.Message):
    """range of Integer from e2sm_rc.asn1:370 {RIC-EventTrigger-UEevent-ID}"""

    # @inject_tag: aper:"valueLB:1,valueUB:65535,valueExt"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class RicEventTriggerCellId(betterproto.Message):
    """range of Integer from e2sm_rc.asn1:372 {RIC-EventTrigger-Cell-ID}"""

    # @inject_tag: aper:"valueLB:1,valueUB:65535,valueExt"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class RicInsertIndicationId(betterproto.Message):
    """range of Integer from e2sm_rc.asn1:374 {RIC-InsertIndication-ID}"""

    # @inject_tag: aper:"valueLB:1,valueUB:65535,valueExt"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class RicInsertIndicationName(betterproto.Message):
    # @inject_tag: aper:"sizeLB:1,sizeUB:150,sizeExt"
    value: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class RicPolicyAction(betterproto.Message):
    """sequence from e2sm_rc.asn1:379 {RIC-PolicyAction}"""

    ric_policy_action_id: "RicControlActionId" = betterproto.message_field(1)
    # @inject_tag: aper:"sizeLB:1,sizeUB:65535,valueExt"
    ran_parameters_list: List[
        "RicPolicyActionRanparameterItem"
    ] = betterproto.message_field(2)
    # @inject_tag: aper:"optional,fromValueExt,valueLB:0,valueUB:1,valueExt"
    ric_policy_decision: Optional["RicPolicyDecision"] = betterproto.enum_field(
        3, optional=True, group="_ric_policy_decision"
    )


@dataclass(eq=False, repr=False)
class RicPolicyActionRanparameterItem(betterproto.Message):
    """sequence from e2sm_rc.asn1:386 {RIC-PolicyAction-RANParameter-Item}"""

    ran_parameter_id: "RanparameterId" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    ran_parameter_value_type: "RanparameterValueType" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class E2SmRcEventTrigger(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:409 {E2SM-RC-EventTrigger} @inject_tag:
    aper:"valueExt"
    """

    # @inject_tag: aper:"choiceExt"
    ric_event_trigger_formats: "RicEventTriggerFormats" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class RicEventTriggerFormats(betterproto.Message):
    # @inject_tag: aper:"choiceIdx:1,valueExt"
    event_trigger_format1: "E2SmRcEventTriggerFormat1" = betterproto.message_field(
        1, group="ric_event_trigger_formats"
    )
    # @inject_tag: aper:"choiceIdx:2,valueExt"
    event_trigger_format2: "E2SmRcEventTriggerFormat2" = betterproto.message_field(
        2, group="ric_event_trigger_formats"
    )
    # @inject_tag: aper:"choiceIdx:3,valueExt"
    event_trigger_format3: "E2SmRcEventTriggerFormat3" = betterproto.message_field(
        3, group="ric_event_trigger_formats"
    )
    # @inject_tag: aper:"choiceIdx:4,valueExt"
    event_trigger_format4: "E2SmRcEventTriggerFormat4" = betterproto.message_field(
        4, group="ric_event_trigger_formats"
    )
    # @inject_tag: aper:"choiceIdx:5,valueExt"
    event_trigger_format5: "E2SmRcEventTriggerFormat5" = betterproto.message_field(
        5, group="ric_event_trigger_formats"
    )


@dataclass(eq=False, repr=False)
class E2SmRcEventTriggerFormat1(betterproto.Message):
    """sequence from e2sm_rc.asn1:414 {E2SM-RC-EventTrigger-Format1}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:65535,valueExt"
    message_list: List["E2SmRcEventTriggerFormat1Item"] = betterproto.message_field(1)
    # @inject_tag: aper:"optional,valueExt"
    global_associated_ueinfo: Optional[
        "EventTriggerUeInfo"
    ] = betterproto.message_field(2, optional=True, group="_global_associated_ueinfo")


@dataclass(eq=False, repr=False)
class E2SmRcEventTriggerFormat1Item(betterproto.Message):
    """sequence from e2sm_rc.asn1:420 {E2SM-RC-EventTrigger-Format1-Item}"""

    ric_event_trigger_condition_id: "RicEventTriggerConditionId" = (
        betterproto.message_field(1)
    )
    # @inject_tag: aper:"choiceExt"
    message_type: "MessageTypeChoice" = betterproto.message_field(2)
    # @inject_tag: aper:"optional,valueLB:0,valueUB:1,valueExt"
    message_direction: Optional["MessageDirection"] = betterproto.enum_field(
        3, optional=True, group="_message_direction"
    )
    # @inject_tag: aper:"optional,valueExt"
    associated_ueinfo: Optional["EventTriggerUeInfo"] = betterproto.message_field(
        4, optional=True, group="_associated_ueinfo"
    )
    # @inject_tag: aper:"optional,valueExt"
    associated_ueevent: Optional["EventTriggerUeeventInfo"] = betterproto.message_field(
        5, optional=True, group="_associated_ueevent"
    )
    # @inject_tag: aper:"optional,valueLB:0,valueUB:1,valueExt"
    logical_or: Optional["LogicalOr"] = betterproto.enum_field(
        6, optional=True, group="_logical_or"
    )


@dataclass(eq=False, repr=False)
class MessageTypeChoice(betterproto.Message):
    """sequence from e2sm_rc.asn1:431 {MessageType-Choice}"""

    # @inject_tag: aper:"choiceIdx:1,valueExt"
    message_type_choice_ni: "MessageTypeChoiceNi" = betterproto.message_field(
        1, group="message_type_choice"
    )
    # @inject_tag: aper:"choiceIdx:2,valueExt"
    message_type_choice_rrc: "MessageTypeChoiceRrc" = betterproto.message_field(
        2, group="message_type_choice"
    )


@dataclass(eq=False, repr=False)
class MessageTypeChoiceNi(betterproto.Message):
    """sequence from e2sm_rc.asn1:438 {MessageType-Choice-NI}"""

    # @inject_tag: aper:"valueLB:0,valueUB:6,valueExt"
    n_i_type: "InterfaceType" = betterproto.enum_field(1)
    # @inject_tag: aper:"optional,choiceExt"
    n_i_identifier: Optional["InterfaceIdentifier"] = betterproto.message_field(
        2, optional=True, group="_n_i_identifier"
    )
    # @inject_tag: aper:"optional,valueExt"
    n_i_message: Optional["InterfaceMessageId"] = betterproto.message_field(
        3, optional=True, group="_n_i_message"
    )


@dataclass(eq=False, repr=False)
class MessageTypeChoiceRrc(betterproto.Message):
    """sequence from e2sm_rc.asn1:445 {MessageType-Choice-RRC}"""

    # @inject_tag: aper:"valueExt"
    r_rc_message: "RrcMessageId" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class E2SmRcEventTriggerFormat2(betterproto.Message):
    """sequence from e2sm_rc.asn1:451 {E2SM-RC-EventTrigger-Format2}"""

    ric_call_process_type_id: "RicCallProcessTypeId" = betterproto.message_field(1)
    ric_call_process_breakpoint_id: "RicCallProcessBreakpointId" = (
        betterproto.message_field(2)
    )
    # @inject_tag: aper:"optional"
    associated_e2_node_info: Optional[
        "RanparameterTesting"
    ] = betterproto.message_field(3, optional=True, group="_associated_e2_node_info")
    # @inject_tag: aper:"optional,valueExt"
    associated_ueinfo: Optional["EventTriggerUeInfo"] = betterproto.message_field(
        4, optional=True, group="_associated_ueinfo"
    )


@dataclass(eq=False, repr=False)
class E2SmRcEventTriggerFormat3(betterproto.Message):
    """sequence from e2sm_rc.asn1:460 {E2SM-RC-EventTrigger-Format3}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:65535,valueExt"
    e2_node_info_change_list: List[
        "E2SmRcEventTriggerFormat3Item"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class E2SmRcEventTriggerFormat3Item(betterproto.Message):
    """sequence from e2sm_rc.asn1:465 {E2SM-RC-EventTrigger-Format3-Item}"""

    ric_event_trigger_condition_id: "RicEventTriggerConditionId" = (
        betterproto.message_field(1)
    )
    # @inject_tag: aper:"valueLB:1,valueUB:512,valueExt"
    e2_node_info_change_id: int = betterproto.int32_field(2)
    # @inject_tag: aper:"optional,valueExt"
    associated_cell_info: Optional["EventTriggerCellInfo"] = betterproto.message_field(
        3, optional=True, group="_associated_cell_info"
    )
    # @inject_tag: aper:"optional,valueLB:0,valueUB:1,valueExt"
    logical_or: Optional["LogicalOr"] = betterproto.enum_field(
        4, optional=True, group="_logical_or"
    )


@dataclass(eq=False, repr=False)
class E2SmRcEventTriggerFormat4(betterproto.Message):
    """sequence from e2sm_rc.asn1:474 {E2SM-RC-EventTrigger-Format4}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:65535,valueExt"
    u_einfo_change_list: List[
        "E2SmRcEventTriggerFormat4Item"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class E2SmRcEventTriggerFormat4Item(betterproto.Message):
    """sequence from e2sm_rc.asn1:479 {E2SM-RC-EventTrigger-Format4-Item}"""

    ric_event_trigger_condition_id: "RicEventTriggerConditionId" = (
        betterproto.message_field(1)
    )
    # @inject_tag: aper:"choiceExt"
    trigger_type: "TriggerTypeChoice" = betterproto.message_field(2)
    # @inject_tag: aper:"optional,valueExt"
    associated_ueinfo: Optional["EventTriggerUeInfo"] = betterproto.message_field(
        3, optional=True, group="_associated_ueinfo"
    )
    # @inject_tag: aper:"optional,valueLB:0,valueUB:1,valueExt"
    logical_or: Optional["LogicalOr"] = betterproto.enum_field(
        4, optional=True, group="_logical_or"
    )


@dataclass(eq=False, repr=False)
class TriggerTypeChoice(betterproto.Message):
    """sequence from e2sm_rc.asn1:488 {TriggerType-Choice}"""

    # @inject_tag: aper:"choiceIdx:1,valueExt"
    trigger_type_choice_rrcstate: "TriggerTypeChoiceRrcstate" = (
        betterproto.message_field(1, group="trigger_type_choice")
    )
    # @inject_tag: aper:"choiceIdx:2,valueExt"
    trigger_type_choice_ueid: "TriggerTypeChoiceUeid" = betterproto.message_field(
        2, group="trigger_type_choice"
    )
    # @inject_tag: aper:"choiceIdx:3,valueExt"
    trigger_type_choice_l2_state: "TriggerTypeChoiceL2State" = (
        betterproto.message_field(3, group="trigger_type_choice")
    )


@dataclass(eq=False, repr=False)
class TriggerTypeChoiceRrcstate(betterproto.Message):
    """sequence from e2sm_rc.asn1:495 {TriggerType-Choice-RRCstate}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:8,valueExt"
    rrc_state_list: List["TriggerTypeChoiceRrcstateItem"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class TriggerTypeChoiceRrcstateItem(betterproto.Message):
    """sequence from e2sm_rc.asn1:500 {TriggerType-Choice-RRCstate-Item}"""

    # @inject_tag: aper:"valueLB:0,valueUB:3,valueExt"
    state_changed_to: "RrcState" = betterproto.enum_field(1)
    # @inject_tag: aper:"optional,valueLB:0,valueUB:1,valueExt"
    logical_or: Optional["LogicalOr"] = betterproto.enum_field(
        2, optional=True, group="_logical_or"
    )


@dataclass(eq=False, repr=False)
class TriggerTypeChoiceUeid(betterproto.Message):
    """sequence from e2sm_rc.asn1:506 {TriggerType-Choice-UEID}"""

    # @inject_tag: aper:"valueLB:1,valueUB:512,valueExt"
    ue_idchange_id: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class TriggerTypeChoiceL2State(betterproto.Message):
    """sequence from e2sm_rc.asn1:511 {TriggerType-Choice-L2state}"""

    associated_l2_variables: "RanparameterTesting" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class E2SmRcEventTriggerFormat5(betterproto.Message):
    """sequence from e2sm_rc.asn1:517 {E2SM-RC-EventTrigger-Format5}"""

    # @inject_tag: aper:"valueLB:0,valueUB:0,valueExt"
    on_demand: "OnDemand" = betterproto.enum_field(1)
    # @inject_tag: aper:"optional,valueExt"
    associated_ueinfo: Optional["EventTriggerUeInfo"] = betterproto.message_field(
        2, optional=True, group="_associated_ueinfo"
    )
    # @inject_tag: aper:"optional,valueExt"
    associated_cell_info: Optional["EventTriggerCellInfo"] = betterproto.message_field(
        3, optional=True, group="_associated_cell_info"
    )


@dataclass(eq=False, repr=False)
class E2SmRcActionDefinition(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:530 {E2SM-RC-ActionDefinition} @inject_tag:
    aper:"valueExt"
    """

    ric_style_type: "RicStyleType" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    ric_action_definition_formats: "RicActionDefinitionFormats" = (
        betterproto.message_field(2)
    )


@dataclass(eq=False, repr=False)
class RicActionDefinitionFormats(betterproto.Message):
    # @inject_tag: aper:"choiceIdx:1,valueExt"
    action_definition_format1: "E2SmRcActionDefinitionFormat1" = (
        betterproto.message_field(1, group="ric_action_definition_formats")
    )
    # @inject_tag: aper:"choiceIdx:2,valueExt"
    action_definition_format2: "E2SmRcActionDefinitionFormat2" = (
        betterproto.message_field(2, group="ric_action_definition_formats")
    )
    # @inject_tag: aper:"choiceIdx:3,valueExt"
    action_definition_format3: "E2SmRcActionDefinitionFormat3" = (
        betterproto.message_field(3, group="ric_action_definition_formats")
    )
    # @inject_tag: aper:"choiceIdx:4,valueExt,fromChoiceExt"
    action_definition_format4: "E2SmRcActionDefinitionFormat4" = (
        betterproto.message_field(4, group="ric_action_definition_formats")
    )


@dataclass(eq=False, repr=False)
class E2SmRcActionDefinitionFormat1(betterproto.Message):
    """sequence from e2sm_rc.asn1:541 {E2SM-RC-ActionDefinition-Format1}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:65535,valueExt"
    ran_p_to_be_reported_list: List[
        "E2SmRcActionDefinitionFormat1Item"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class E2SmRcActionDefinitionFormat1Item(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:547 {E2SM-RC-ActionDefinition-Format1-Item}
    """

    ran_parameter_id: "RanparameterId" = betterproto.message_field(1)
    # @inject_tag: aper:"optional,fromValueExt,valueExt"
    ranparameter_definition: Optional[
        "RanparameterDefinition"
    ] = betterproto.message_field(2, optional=True, group="_ranparameter_definition")


@dataclass(eq=False, repr=False)
class E2SmRcActionDefinitionFormat2(betterproto.Message):
    """sequence from e2sm_rc.asn1:553 {E2SM-RC-ActionDefinition-Format2}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:65535,valueExt"
    ric_policy_conditions_list: List[
        "E2SmRcActionDefinitionFormat2Item"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class E2SmRcActionDefinitionFormat2Item(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:558 {E2SM-RC-ActionDefinition-Format2-Item}
    """

    # @inject_tag: aper:"valueExt"
    ric_policy_action: "RicPolicyAction" = betterproto.message_field(1)
    # @inject_tag: aper:"optional"
    ric_policy_condition_definition: Optional[
        "RanparameterTesting"
    ] = betterproto.message_field(
        2, optional=True, group="_ric_policy_condition_definition"
    )


@dataclass(eq=False, repr=False)
class E2SmRcActionDefinitionFormat3(betterproto.Message):
    """sequence from e2sm_rc.asn1:564 {E2SM-RC-ActionDefinition-Format3}"""

    ric_insert_indication_id: "RicInsertIndicationId" = betterproto.message_field(1)
    # @inject_tag: aper:"sizeLB:1,sizeUB:65535,valueExt"
    ran_p_insert_indication_list: List[
        "E2SmRcActionDefinitionFormat3Item"
    ] = betterproto.message_field(2)
    # @inject_tag: aper:"optional,choiceExt"
    ue_id: Optional["Ueid"] = betterproto.message_field(
        3, optional=True, group="_ue_id"
    )


@dataclass(eq=False, repr=False)
class E2SmRcActionDefinitionFormat3Item(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:572 {E2SM-RC-ActionDefinition-Format3-Item}
    """

    ran_parameter_id: "RanparameterId" = betterproto.message_field(1)
    # @inject_tag: aper:"optional,fromValueExt,valueExt"
    ranparameter_definition: Optional[
        "RanparameterDefinition"
    ] = betterproto.message_field(2, optional=True, group="_ranparameter_definition")


@dataclass(eq=False, repr=False)
class E2SmRcActionDefinitionFormat4(betterproto.Message):
    """sequence from e2sm_rc.asn1:576 {E2SM-RC-ActionDefinition-Format4}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:63,valueExt"
    ric_insert_style_list: List[
        "E2SmRcActionDefinitionFormat4StyleItem"
    ] = betterproto.message_field(1)
    # @inject_tag: aper:"optional,choiceExt"
    ue_id: Optional["Ueid"] = betterproto.message_field(
        3, optional=True, group="_ue_id"
    )


@dataclass(eq=False, repr=False)
class E2SmRcActionDefinitionFormat4StyleItem(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:582 {E2SM-RC-ActionDefinition-Format4-Style-
    Item}
    """

    requested_insert_style_type: "RicStyleType" = betterproto.message_field(1)
    # @inject_tag: aper:"sizeLB:1,sizeUB:63,valueExt"
    ric_insert_indication_list: List[
        "E2SmRcActionDefinitionFormat4IndicationItem"
    ] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class E2SmRcActionDefinitionFormat4IndicationItem(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:588 {E2SM-RC-ActionDefinition-
    Format4-Indication-Item}
    """

    ric_insert_indication_id: "RicInsertIndicationId" = betterproto.message_field(1)
    # @inject_tag: aper:"sizeLB:1,sizeUB:65535,valueExt"
    ran_p_insert_indication_list: List[
        "E2SmRcActionDefinitionFormat4RanpItem"
    ] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class E2SmRcActionDefinitionFormat4RanpItem(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:594 {E2SM-RC-ActionDefinition-Format4-RANP-Item}
    """

    ran_parameter_id: "RanparameterId" = betterproto.message_field(1)
    # @inject_tag: aper:"optional,fromValueExt,valueExt"
    ran_parameter_definition: Optional[
        "RanparameterDefinition"
    ] = betterproto.message_field(2, optional=True, group="_ran_parameter_definition")


@dataclass(eq=False, repr=False)
class E2SmRcIndicationHeader(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:586 {E2SM-RC-IndicationHeader} @inject_tag:
    aper:"valueExt"
    """

    # @inject_tag: aper:"choiceExt"
    ric_indication_header_formats: "RicIndicationHeaderFormats" = (
        betterproto.message_field(1)
    )


@dataclass(eq=False, repr=False)
class RicIndicationHeaderFormats(betterproto.Message):
    # @inject_tag: aper:"choiceIdx:1,valueExt"
    indication_header_format1: "E2SmRcIndicationHeaderFormat1" = (
        betterproto.message_field(1, group="ric_indication_header_formats")
    )
    # @inject_tag: aper:"choiceIdx:2,valueExt"
    indication_header_format2: "E2SmRcIndicationHeaderFormat2" = (
        betterproto.message_field(2, group="ric_indication_header_formats")
    )
    # @inject_tag: aper:"choiceIdx:3,valueExt,fromChoiceExt"
    indication_header_format3: "E2SmRcIndicationHeaderFormat3" = (
        betterproto.message_field(3, group="ric_indication_header_formats")
    )


@dataclass(eq=False, repr=False)
class E2SmRcIndicationHeaderFormat1(betterproto.Message):
    """sequence from e2sm_rc.asn1:591 {E2SM-RC-IndicationHeader-Format1}"""

    # @inject_tag: aper:"optional"
    ric_event_trigger_condition_id: Optional[
        "RicEventTriggerConditionId"
    ] = betterproto.message_field(
        1, optional=True, group="_ric_event_trigger_condition_id"
    )


@dataclass(eq=False, repr=False)
class E2SmRcIndicationHeaderFormat2(betterproto.Message):
    """sequence from e2sm_rc.asn1:596 {E2SM-RC-IndicationHeader-Format2}"""

    # @inject_tag: aper:"choiceExt"
    ue_id: "Ueid" = betterproto.message_field(1)
    ric_insert_style_type: "RicStyleType" = betterproto.message_field(2)
    ric_insert_indication_id: "RicInsertIndicationId" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class E2SmRcIndicationHeaderFormat3(betterproto.Message):
    """sequence from e2sm_rc.asn1:626 {E2SM-RC-IndicationHeader-Format3}"""

    # @inject_tag: aper:"optional"
    ric_event_trigger_condition_id: Optional[
        "RicEventTriggerConditionId"
    ] = betterproto.message_field(
        1, optional=True, group="_ric_event_trigger_condition_id"
    )
    # @inject_tag: aper:"optional,choiceExt"
    ue_id: Optional["Ueid"] = betterproto.message_field(
        2, optional=True, group="_ue_id"
    )


@dataclass(eq=False, repr=False)
class E2SmRcIndicationMessage(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:615 {E2SM-RC-IndicationMessage} @inject_tag:
    aper:"valueExt"
    """

    # @inject_tag: aper:"choiceExt"
    ric_indication_message_formats: "RicIndicationMessageFormats" = (
        betterproto.message_field(1)
    )


@dataclass(eq=False, repr=False)
class RicIndicationMessageFormats(betterproto.Message):
    # @inject_tag: aper:"choiceIdx:1,valueExt"
    indication_message_format1: "E2SmRcIndicationMessageFormat1" = (
        betterproto.message_field(1, group="ric_indication_message_formats")
    )
    # @inject_tag: aper:"choiceIdx:2,valueExt"
    indication_message_format2: "E2SmRcIndicationMessageFormat2" = (
        betterproto.message_field(2, group="ric_indication_message_formats")
    )
    # @inject_tag: aper:"choiceIdx:3,valueExt"
    indication_message_format3: "E2SmRcIndicationMessageFormat3" = (
        betterproto.message_field(3, group="ric_indication_message_formats")
    )
    # @inject_tag: aper:"choiceIdx:4,valueExt"
    indication_message_format4: "E2SmRcIndicationMessageFormat4" = (
        betterproto.message_field(4, group="ric_indication_message_formats")
    )
    # @inject_tag: aper:"choiceIdx:5,valueExt"
    indication_message_format5: "E2SmRcIndicationMessageFormat5" = (
        betterproto.message_field(5, group="ric_indication_message_formats")
    )
    # @inject_tag: aper:"choiceIdx:6,valueExt,fromChoiceExt"
    indication_message_format6: "E2SmRcIndicationMessageFormat6" = (
        betterproto.message_field(6, group="ric_indication_message_formats")
    )


@dataclass(eq=False, repr=False)
class E2SmRcIndicationMessageFormat1(betterproto.Message):
    """sequence from e2sm_rc.asn1:620 {E2SM-RC-IndicationMessage-Format1}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:65535,valueExt"
    ran_p_reported_list: List[
        "E2SmRcIndicationMessageFormat1Item"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class E2SmRcIndicationMessageFormat1Item(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:625 {E2SM-RC-IndicationMessage-Format1-Item}
    """

    ran_parameter_id: "RanparameterId" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    ran_parameter_value_type: "RanparameterValueType" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class E2SmRcIndicationMessageFormat2(betterproto.Message):
    """sequence from e2sm_rc.asn1:632 {E2SM-RC-IndicationMessage-Format2}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:65535,valueExt"
    ue_parameter_list: List[
        "E2SmRcIndicationMessageFormat2Item"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class E2SmRcIndicationMessageFormat2Item(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:637 {E2SM-RC-IndicationMessage-Format2-Item}
    """

    # @inject_tag: aper:"choiceExt"
    ue_id: "Ueid" = betterproto.message_field(1)
    # @inject_tag: aper:"sizeLB:1,sizeUB:65535,valueExt"
    ran_p_list: List[
        "E2SmRcIndicationMessageFormat2RanparameterItem"
    ] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class E2SmRcIndicationMessageFormat2RanparameterItem(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:644 {E2SM-RC-IndicationMessage-
    Format2-RANParameter-Item}
    """

    ran_parameter_id: "RanparameterId" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    ran_parameter_value_type: "RanparameterValueType" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class E2SmRcIndicationMessageFormat3(betterproto.Message):
    """sequence from e2sm_rc.asn1:651 {E2SM-RC-IndicationMessage-Format3}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:65535,valueExt"
    cell_info_list: List[
        "E2SmRcIndicationMessageFormat3Item"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class E2SmRcIndicationMessageFormat3Item(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:656 {E2SM-RC-IndicationMessage-Format3-Item}
    """

    # @inject_tag: aper:"choiceIdx:1,valueExt"
    cell_global_id: "Cgi" = betterproto.message_field(1)
    # @inject_tag: aper:"optional"
    cell_context_info: Optional[bytes] = betterproto.bytes_field(
        2, optional=True, group="_cell_context_info"
    )
    # @inject_tag: aper:"optional"
    cell_deleted: Optional[bool] = betterproto.bool_field(
        3, optional=True, group="_cell_deleted"
    )
    # @inject_tag: aper:"optional,valueExt"
    neighbor_relation_table: Optional[
        "NeighborRelationInfo"
    ] = betterproto.message_field(4, optional=True, group="_neighbor_relation_table")


@dataclass(eq=False, repr=False)
class E2SmRcIndicationMessageFormat4(betterproto.Message):
    """sequence from e2sm_rc.asn1:664 {E2SM-RC-IndicationMessage-Format4}"""

    # @inject_tag: aper:"sizeLB:0,sizeUB:65535,valueExt"
    ue_info_list: List[
        "E2SmRcIndicationMessageFormat4ItemUe"
    ] = betterproto.message_field(1)
    # @inject_tag: aper:"sizeLB:0,sizeUB:65535,valueExt"
    cell_info_list: List[
        "E2SmRcIndicationMessageFormat4ItemCell"
    ] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class E2SmRcIndicationMessageFormat4ItemUe(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:671 {E2SM-RC-IndicationMessage-Format4-ItemUE}
    """

    # @inject_tag: aper:"choiceExt"
    ue_id: "Ueid" = betterproto.message_field(1)
    # @inject_tag: aper:"optional"
    ue_context_info: Optional[bytes] = betterproto.bytes_field(
        2, optional=True, group="_ue_context_info"
    )
    # @inject_tag: aper:"choiceExt"
    cell_global_id: "Cgi" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class E2SmRcIndicationMessageFormat4ItemCell(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:679 {E2SM-RC-IndicationMessage-Format4-ItemCell}
    """

    # @inject_tag: aper:"choiceExt"
    cell_global_id: "Cgi" = betterproto.message_field(1)
    # @inject_tag: aper:"optional"
    cell_context_info: Optional[bytes] = betterproto.bytes_field(
        2, optional=True, group="_cell_context_info"
    )
    # @inject_tag: aper:"optional,valueExt"
    neighbor_relation_table: Optional[
        "NeighborRelationInfo"
    ] = betterproto.message_field(3, optional=True, group="_neighbor_relation_table")


@dataclass(eq=False, repr=False)
class E2SmRcIndicationMessageFormat5(betterproto.Message):
    """sequence from e2sm_rc.asn1:686 {E2SM-RC-IndicationMessage-Format5}"""

    # @inject_tag: aper:"sizeLB:0,sizeUB:65535,valueExt"
    ran_p_requested_list: List[
        "E2SmRcIndicationMessageFormat5Item"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class E2SmRcIndicationMessageFormat5Item(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:692 {E2SM-RC-IndicationMessage-Format5-Item}
    """

    ran_parameter_id: "RanparameterId" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    ran_parameter_value_type: "RanparameterValueType" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class E2SmRcIndicationMessageFormat6(betterproto.Message):
    """sequence from e2sm_rc.asn1:729 {E2SM-RC-IndicationMessage-Format6}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:63,valueExt"
    ric_insert_style_list: List[
        "E2SmRcIndicationMessageFormat6StyleItem"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class E2SmRcIndicationMessageFormat6StyleItem(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:735 {E2SM-RC-IndicationMessage-Format6-Style-
    Item}
    """

    indicated_insert_style_type: "RicStyleType" = betterproto.message_field(1)
    # @inject_tag: aper:"sizeLB:1,sizeUB:63,valueExt"
    ric_insert_indication_list: List[
        "E2SmRcIndicationMessageFormat6IndicationItem"
    ] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class E2SmRcIndicationMessageFormat6IndicationItem(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:741 {E2SM-RC-IndicationMessage-
    Format6-Indication-Item}
    """

    ric_insert_indication_id: "RicInsertIndicationId" = betterproto.message_field(1)
    # @inject_tag: aper:"sizeLB:0,sizeUB:65535,valueExt"
    ran_p_insert_indication_list: List[
        "E2SmRcIndicationMessageFormat6RanpItem"
    ] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class E2SmRcIndicationMessageFormat6RanpItem(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:741 {E2SM-RC-IndicationMessage-Format6-RANP-
    Item}
    """

    ran_parameter_id: "RanparameterId" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    ran_parameter_value_type: "RanparameterValueType" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class E2SmRcCallProcessId(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:706 {E2SM-RC-CallProcessID} @inject_tag:
    aper:"valueExt"
    """

    # @inject_tag: aper:"choiceExt"
    ric_call_process_id_formats: "RicCallProcessIdFormats" = betterproto.message_field(
        1
    )


@dataclass(eq=False, repr=False)
class RicCallProcessIdFormats(betterproto.Message):
    # @inject_tag: aper:"choiceIdx:1,valueExt"
    call_process_id_format1: "E2SmRcCallProcessIdFormat1" = betterproto.message_field(
        1, group="ric_call_process_id_formats"
    )


@dataclass(eq=False, repr=False)
class E2SmRcCallProcessIdFormat1(betterproto.Message):
    """sequence from e2sm_rc.asn1:711 {E2SM-RC-CallProcessID-Format1}"""

    ric_call_process_id: "RanCallProcessId" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class E2SmRcControlHeader(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:724 {E2SM-RC-ControlHeader} @inject_tag:
    aper:"valueExt"
    """

    # @inject_tag: aper:"choiceExt"
    ric_control_header_formats: "RicControlHeaderFormats" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class RicControlHeaderFormats(betterproto.Message):
    # @inject_tag: aper:"choiceIdx:1,valueExt"
    control_header_format1: "E2SmRcControlHeaderFormat1" = betterproto.message_field(
        1, group="ric_control_header_formats"
    )
    # @inject_tag: aper:"choiceIdx:2,valueExt,fromChoiceExt"
    control_header_format2: "E2SmRcControlHeaderFormat2" = betterproto.message_field(
        2, group="ric_control_header_formats"
    )


@dataclass(eq=False, repr=False)
class E2SmRcControlHeaderFormat1(betterproto.Message):
    """sequence from e2sm_rc.asn1:729 {E2SM-RC-ControlHeader-Format1}"""

    # @inject_tag: aper:"choiceExt"
    ue_id: "Ueid" = betterproto.message_field(1)
    ric_style_type: "RicStyleType" = betterproto.message_field(2)
    ric_control_action_id: "RicControlActionId" = betterproto.message_field(3)
    # @inject_tag: aper:"optional,valueLB:0,valueUB:1,valueExt"
    ric_control_decision: Optional["RicControlDecision"] = betterproto.enum_field(
        4, optional=True, group="_ric_control_decision"
    )


@dataclass(eq=False, repr=False)
class E2SmRcControlHeaderFormat2(betterproto.Message):
    """sequence from e2sm_rc.asn1:793 {E2SM-RC-ControlHeader-Format2}"""

    # @inject_tag: aper:"optional,choiceExt"
    ue_id: Optional["Ueid"] = betterproto.message_field(
        1, optional=True, group="_ue_id"
    )
    # @inject_tag: aper:"optional,valueLB:0,valueUB:1,valueExt"
    ric_control_decision: Optional["RicControlDecision"] = betterproto.enum_field(
        4, optional=True, group="_ric_control_decision"
    )


@dataclass(eq=False, repr=False)
class E2SmRcControlMessage(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:745 {E2SM-RC-ControlMessage} @inject_tag:
    aper:"valueExt"
    """

    # @inject_tag: aper:"choiceExt"
    ric_control_message_formats: "RicControlMessageFormats" = betterproto.message_field(
        1
    )


@dataclass(eq=False, repr=False)
class RicControlMessageFormats(betterproto.Message):
    # @inject_tag: aper:"choiceIdx:1,valueExt"
    control_message_format1: "E2SmRcControlMessageFormat1" = betterproto.message_field(
        1, group="ric_control_message_formats"
    )
    # @inject_tag: aper:"choiceIdx:2,valueExt,fromChoiceExt"
    control_message_format2: "E2SmRcControlMessageFormat2" = betterproto.message_field(
        2, group="ric_control_message_formats"
    )


@dataclass(eq=False, repr=False)
class E2SmRcControlMessageFormat1(betterproto.Message):
    """sequence from e2sm_rc.asn1:750 {E2SM-RC-ControlMessage-Format1}"""

    # @inject_tag: aper:"sizeLB:0,sizeUB:65535,valueExt"
    ran_p_list: List["E2SmRcControlMessageFormat1Item"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class E2SmRcControlMessageFormat1Item(betterproto.Message):
    """sequence from e2sm_rc.asn1:756 {E2SM-RC-ControlMessage-Format1-Item}"""

    ran_parameter_id: "RanparameterId" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    ran_parameter_value_type: "RanparameterValueType" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class E2SmRcControlMessageFormat2(betterproto.Message):
    """sequence from e2sm_rc.asn1:825 {E2SM-RC-ControlMessage-Format2}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:63,valueExt"
    ric_control_style_list: List[
        "E2SmRcControlMessageFormat2StyleItem"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class E2SmRcControlMessageFormat2StyleItem(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:830 {E2SM-RC-ControlMessage-Format2-Style-Item}
    """

    indicated_control_style_type: "RicStyleType" = betterproto.message_field(1)
    # @inject_tag: aper:"sizeLB:1,sizeUB:63,valueExt"
    ric_control_action_list: List[
        "E2SmRcControlMessageFormat2ControlActionItem"
    ] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class E2SmRcControlMessageFormat2ControlActionItem(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:836 {E2SM-RC-ControlMessage-
    Format2-ControlAction-Item}
    """

    ric_control_action_id: "RicControlActionId" = betterproto.message_field(1)
    # @inject_tag: aper:"valueExt"
    ran_p_list: "E2SmRcControlMessageFormat1" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class E2SmRcControlOutcome(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:770 {E2SM-RC-ControlOutcome} @inject_tag:
    aper:"valueExt"
    """

    # @inject_tag: aper:"choiceExt"
    ric_control_outcome_formats: "RicControlOutcomeFormats" = betterproto.message_field(
        1
    )


@dataclass(eq=False, repr=False)
class RicControlOutcomeFormats(betterproto.Message):
    # @inject_tag: aper:"choiceIdx:1,valueExt"
    control_outcome_format1: "E2SmRcControlOutcomeFormat1" = betterproto.message_field(
        1, group="ric_control_outcome_formats"
    )
    # @inject_tag: aper:"choiceIdx:2,valueExt,fromChoiceExt"
    control_outcome_format2: "E2SmRcControlOutcomeFormat2" = betterproto.message_field(
        2, group="ric_control_outcome_formats"
    )
    # @inject_tag: aper:"choiceIdx:3,valueExt,fromChoiceExt"
    control_outcome_format3: "E2SmRcControlOutcomeFormat3" = betterproto.message_field(
        3, group="ric_control_outcome_formats"
    )


@dataclass(eq=False, repr=False)
class E2SmRcControlOutcomeFormat1(betterproto.Message):
    """sequence from e2sm_rc.asn1:775 {E2SM-RC-ControlOutcome-Format1}"""

    # @inject_tag: aper:"sizeLB:0,sizeUB:255,valueExt"
    ran_p_list: List["E2SmRcControlOutcomeFormat1Item"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class E2SmRcControlOutcomeFormat1Item(betterproto.Message):
    """sequence from e2sm_rc.asn1:781 {E2SM-RC-ControlOutcome-Format1-Item}"""

    ran_parameter_id: "RanparameterId" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    ran_parameter_value: "RanparameterValue" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class E2SmRcControlOutcomeFormat2(betterproto.Message):
    """sequence from e2sm_rc.asn1:867 {E2SM-RC-ControlOutcome-Format2}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:63,valueExt"
    ric_control_style_list: List[
        "E2SmRcControlOutcomeFormat2StyleItem"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class E2SmRcControlOutcomeFormat2StyleItem(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:872 {E2SM-RC-ControlOutcome-Format2-Style-Item}
    """

    indicated_control_style_type: "RicStyleType" = betterproto.message_field(1)
    # @inject_tag: aper:"sizeLB:1,sizeUB:63,valueExt"
    ric_control_outcome_list: List[
        "E2SmRcControlOutcomeFormat2ControlOutcomeItem"
    ] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class E2SmRcControlOutcomeFormat2ControlOutcomeItem(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:878 {E2SM-RC-ControlOutcome-
    Format2-ControlOutcome-Item}
    """

    ric_control_action_id: "RicControlActionId" = betterproto.message_field(1)
    # @inject_tag: aper:"sizeLB:1,sizeUB:65535,valueExt"
    ran_p_list: List["E2SmRcControlOutcomeFormat2RanpItem"] = betterproto.message_field(
        2
    )


@dataclass(eq=False, repr=False)
class E2SmRcControlOutcomeFormat2RanpItem(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:884 {E2SM-RC-ControlOutcome-Format2-RANP-Item}
    """

    ran_parameter_id: "RanparameterId" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    ran_parameter_value: "RanparameterValue" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class E2SmRcControlOutcomeFormat3(betterproto.Message):
    """sequence from e2sm_rc.asn1:890 {E2SM-RC-ControlOutcome-Format3}"""

    # @inject_tag: aper:"sizeLB:0,sizeUB:255,valueExt"
    ran_p_list: List["E2SmRcControlOutcomeFormat3Item"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class E2SmRcControlOutcomeFormat3Item(betterproto.Message):
    """sequence from e2sm_rc.asn1:872 {E2SM-RC-ControlOutcome-Format3-Item}"""

    ran_parameter_id: "RanparameterId" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    ran_parameter_value_type: "RanparameterValueType" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class E2SmRcRanfunctionDefinition(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:794 {E2SM-RC-RANFunctionDefinition} @inject_tag:
    aper:"valueExt"
    """

    # @inject_tag: aper:"valueExt"
    ran_function_name: "RanfunctionName" = betterproto.message_field(1)
    # @inject_tag: aper:"optional,valueExt"
    ran_function_definition_event_trigger: Optional[
        "RanfunctionDefinitionEventTrigger"
    ] = betterproto.message_field(
        2, optional=True, group="_ran_function_definition_event_trigger"
    )
    # @inject_tag: aper:"optional,valueExt"
    ran_function_definition_report: Optional[
        "RanfunctionDefinitionReport"
    ] = betterproto.message_field(
        3, optional=True, group="_ran_function_definition_report"
    )
    # @inject_tag: aper:"optional,valueExt"
    ran_function_definition_insert: Optional[
        "RanfunctionDefinitionInsert"
    ] = betterproto.message_field(
        4, optional=True, group="_ran_function_definition_insert"
    )
    # @inject_tag: aper:"optional,valueExt"
    ran_function_definition_control: Optional[
        "RanfunctionDefinitionControl"
    ] = betterproto.message_field(
        5, optional=True, group="_ran_function_definition_control"
    )
    # @inject_tag: aper:"optional,valueExt"
    ran_function_definition_policy: Optional[
        "RanfunctionDefinitionPolicy"
    ] = betterproto.message_field(
        6, optional=True, group="_ran_function_definition_policy"
    )


@dataclass(eq=False, repr=False)
class RanfunctionDefinitionEventTrigger(betterproto.Message):
    """sequence from e2sm_rc.asn1:809 {RANFunctionDefinition-EventTrigger}"""

    # @inject_tag: aper:"sizeB:1,sizeUB:63"
    ric_event_trigger_style_list: List[
        "RanfunctionDefinitionEventTriggerStyleItem"
    ] = betterproto.message_field(1)
    # @inject_tag: aper:"optional,sizeLB:1,sizeUB:65535,valueExt"
    ran_l2_parameters_list: List[
        "L2ParametersRanparameterItem"
    ] = betterproto.message_field(2)
    # @inject_tag: aper:"optional,sizeLB:1,sizeUB:65535,valueExt"
    ran_call_process_types_list: List[
        "RanfunctionDefinitionEventTriggerCallProcessItem"
    ] = betterproto.message_field(3)
    # @inject_tag: aper:"optional,sizeLB:1,sizeUB:65535,valueExt"
    ran_ueidentification_parameters_list: List[
        "UeidentificationRanparameterItem"
    ] = betterproto.message_field(4)
    # @inject_tag: aper:"optional,sizeLB:1,sizeUB:65535,valueExt"
    ran_cell_identification_parameters_list: List[
        "CellIdentificationRanparameterItem"
    ] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class RanfunctionDefinitionEventTriggerStyleItem(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:818 {RANFunctionDefinition-EventTrigger-Style-
    Item}
    """

    ric_event_trigger_style_type: "RicStyleType" = betterproto.message_field(1)
    ric_event_trigger_style_name: "RicStyleName" = betterproto.message_field(2)
    ric_event_trigger_format_type: "RicFormatType" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class L2ParametersRanparameterItem(betterproto.Message):
    """sequence from e2sm_rc.asn1:826 {L2Parameters-RANParameter-Item}"""

    ran_parameter_id: "RanparameterId" = betterproto.message_field(1)
    ran_parameter_name: "RanparameterName" = betterproto.message_field(2)
    # @inject_tag: aper:"optional,valueExt,fromValueExt"
    ran_parameter_definition: Optional[
        "RanparameterDefinition"
    ] = betterproto.message_field(3, optional=True, group="_ran_parameter_definition")


@dataclass(eq=False, repr=False)
class UeidentificationRanparameterItem(betterproto.Message):
    """sequence from e2sm_rc.asn1:834 {UEIdentification-RANParameter-Item}"""

    ran_parameter_id: "RanparameterId" = betterproto.message_field(1)
    ran_parameter_name: "RanparameterName" = betterproto.message_field(2)
    # @inject_tag: aper:"optional,valueExt,fromValueExt"
    ran_parameter_definition: Optional[
        "RanparameterDefinition"
    ] = betterproto.message_field(3, optional=True, group="_ran_parameter_definition")


@dataclass(eq=False, repr=False)
class CellIdentificationRanparameterItem(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:842 {CellIdentification-RANParameter-Item}
    """

    ran_parameter_id: "RanparameterId" = betterproto.message_field(1)
    ran_parameter_name: "RanparameterName" = betterproto.message_field(2)
    # @inject_tag: aper:"optional,valueExt,fromValueExt"
    ran_parameter_definition: Optional[
        "RanparameterDefinition"
    ] = betterproto.message_field(3, optional=True, group="_ran_parameter_definition")


@dataclass(eq=False, repr=False)
class RanfunctionDefinitionEventTriggerCallProcessItem(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:849 {RANFunctionDefinition-EventTrigger-
    CallProcess-Item}
    """

    call_process_type_id: "RicCallProcessTypeId" = betterproto.message_field(1)
    call_process_type_name: "RicCallProcessTypeName" = betterproto.message_field(2)
    # @inject_tag: aper:"sizeLB:1,sizeUB:65535,valueExt"
    call_process_breakpoints_list: List[
        "RanfunctionDefinitionEventTriggerBreakpointItem"
    ] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class RanfunctionDefinitionEventTriggerBreakpointItem(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:857 {RANFunctionDefinition-EventTrigger-
    Breakpoint-Item}
    """

    call_process_breakpoint_id: "RicCallProcessBreakpointId" = (
        betterproto.message_field(1)
    )
    call_process_breakpoint_name: "RicCallProcessBreakpointName" = (
        betterproto.message_field(2)
    )
    # @inject_tag: aper:"optional,sizeLB:1,sizeUB:65535,valueExt"
    ran_call_process_breakpoint_parameters_list: List[
        "CallProcessBreakpointRanparameterItem"
    ] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class CallProcessBreakpointRanparameterItem(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:865 {CallProcessBreakpoint-RANParameter-Item}
    """

    ran_parameter_id: "RanparameterId" = betterproto.message_field(1)
    ran_parameter_name: "RanparameterName" = betterproto.message_field(2)
    # @inject_tag: aper:"optional,valueExt,fromValueExt"
    ran_parameter_definition: Optional[
        "RanparameterDefinition"
    ] = betterproto.message_field(3, optional=True, group="_ran_parameter_definition")


@dataclass(eq=False, repr=False)
class RanfunctionDefinitionReport(betterproto.Message):
    """sequence from e2sm_rc.asn1:878 {RANFunctionDefinition-Report}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:63,valueExt"
    ric_report_style_list: List[
        "RanfunctionDefinitionReportItem"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class RanfunctionDefinitionReportItem(betterproto.Message):
    """sequence from e2sm_rc.asn1:884 {RANFunctionDefinition-Report-Item}"""

    ric_report_style_type: "RicStyleType" = betterproto.message_field(1)
    ric_report_style_name: "RicStyleName" = betterproto.message_field(2)
    ric_supported_event_trigger_style_type: "RicStyleType" = betterproto.message_field(
        3
    )
    ric_report_action_format_type: "RicFormatType" = betterproto.message_field(4)
    ric_indication_header_format_type: "RicFormatType" = betterproto.message_field(5)
    ric_indication_message_format_type: "RicFormatType" = betterproto.message_field(6)
    # @inject_tag: aper:"optional,sizeLB:1,sizeUB:65535,valueExt"
    ran_report_parameters_list: List[
        "ReportRanparameterItem"
    ] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class ReportRanparameterItem(betterproto.Message):
    """sequence from e2sm_rc.asn1:896 {Report-RANParameter-Item}"""

    ran_parameter_id: "RanparameterId" = betterproto.message_field(1)
    ran_parameter_name: "RanparameterName" = betterproto.message_field(2)
    # @inject_tag: aper:"optional,valueExt,fromValueExt"
    ran_parameter_definition: Optional[
        "RanparameterDefinition"
    ] = betterproto.message_field(3, optional=True, group="_ran_parameter_definition")


@dataclass(eq=False, repr=False)
class RanfunctionDefinitionInsert(betterproto.Message):
    """sequence from e2sm_rc.asn1:909 {RANFunctionDefinition-Insert}"""

    # @inject_tag: aper:"sizeLB:,sizeUB:63,valueExt"
    ric_insert_style_list: List[
        "RanfunctionDefinitionInsertItem"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class RanfunctionDefinitionInsertItem(betterproto.Message):
    """sequence from e2sm_rc.asn1:914 {RANFunctionDefinition-Insert-Item}"""

    ric_insert_style_type: "RicStyleType" = betterproto.message_field(1)
    ric_insert_style_name: "RicStyleName" = betterproto.message_field(2)
    ric_supported_event_trigger_style_type: "RicStyleType" = betterproto.message_field(
        3
    )
    ric_action_definition_format_type: "RicFormatType" = betterproto.message_field(4)
    # @inject_tag: aper:"optional,sizeLB:1,sizeUB:65535,valueExt"
    ric_insert_indication_list: List[
        "RanfunctionDefinitionInsertIndicationItem"
    ] = betterproto.message_field(5)
    ric_indication_header_format_type: "RicFormatType" = betterproto.message_field(6)
    ric_indication_message_format_type: "RicFormatType" = betterproto.message_field(7)
    ric_call_process_idformat_type: "RicFormatType" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class RanfunctionDefinitionInsertIndicationItem(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:927 {RANFunctionDefinition-Insert-Indication-
    Item}
    """

    ric_insert_indication_id: "RicInsertIndicationId" = betterproto.message_field(1)
    ric_insert_indication_name: "RicInsertIndicationName" = betterproto.message_field(2)
    # @inject_tag: aper:"optional,sizeLB:1,sizeUB:65535,valueExt"
    ran_insert_indication_parameters_list: List[
        "InsertIndicationRanparameterItem"
    ] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class InsertIndicationRanparameterItem(betterproto.Message):
    """sequence from e2sm_rc.asn1:935 {InsertIndication-RANParameter-Item}"""

    ran_parameter_id: "RanparameterId" = betterproto.message_field(1)
    ran_parameter_name: "RanparameterName" = betterproto.message_field(2)
    # @inject_tag: aper:"optional,valueExt,fromValueExt"
    ran_parameter_definition: Optional[
        "RanparameterDefinition"
    ] = betterproto.message_field(3, optional=True, group="_ran_parameter_definition")


@dataclass(eq=False, repr=False)
class RanfunctionDefinitionControl(betterproto.Message):
    """sequence from e2sm_rc.asn1:947 {RANFunctionDefinition-Control}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:63,valueExt"
    ric_control_style_list: List[
        "RanfunctionDefinitionControlItem"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class RanfunctionDefinitionControlItem(betterproto.Message):
    """sequence from e2sm_rc.asn1:953 {RANFunctionDefinition-Control-Item}"""

    ric_control_style_type: "RicStyleType" = betterproto.message_field(1)
    ric_control_style_name: "RicStyleName" = betterproto.message_field(2)
    # @inject_tag: aper:"optional,sizeLB:1,sizeUB:65535,valueExt"
    ric_control_action_list: List[
        "RanfunctionDefinitionControlActionItem"
    ] = betterproto.message_field(3)
    ric_control_header_format_type: "RicFormatType" = betterproto.message_field(4)
    ric_control_message_format_type: "RicFormatType" = betterproto.message_field(5)
    # @inject_tag: aper:"optional"
    ric_call_process_idformat_type: Optional[
        "RicFormatType"
    ] = betterproto.message_field(
        6, optional=True, group="_ric_call_process_idformat_type"
    )
    ric_control_outcome_format_type: "RicFormatType" = betterproto.message_field(7)
    # @inject_tag: aper:"optional,sizeLB:1,sizeUB:255,valueExt"
    ran_control_outcome_parameters_list: List[
        "ControlOutcomeRanparameterItem"
    ] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class ControlOutcomeRanparameterItem(betterproto.Message):
    """sequence from e2sm_rc.asn1:965 {ControlOutcome-RANParameter-Item}"""

    ran_parameter_id: "RanparameterId" = betterproto.message_field(1)
    ran_parameter_name: "RanparameterName" = betterproto.message_field(2)
    # @inject_tag: aper:"optional,valueExt,fromValueExt"
    ran_parameter_definition: Optional[
        "RanparameterDefinition"
    ] = betterproto.message_field(3, optional=True, group="_ran_parameter_definition")


@dataclass(eq=False, repr=False)
class RanfunctionDefinitionControlActionItem(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:973 {RANFunctionDefinition-Control-Action-Item}
    """

    ric_control_action_id: "RicControlActionId" = betterproto.message_field(1)
    ric_control_action_name: "RicControlActionName" = betterproto.message_field(2)
    # @inject_tag: aper:"optional,sizeLB:1,sizeUB:65535,valueExt"
    ran_control_action_parameters_list: List[
        "ControlActionRanparameterItem"
    ] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ControlActionRanparameterItem(betterproto.Message):
    """sequence from e2sm_rc.asn1:980 {ControlAction-RANParameter-Item}"""

    ran_parameter_id: "RanparameterId" = betterproto.message_field(1)
    ran_parameter_name: "RanparameterName" = betterproto.message_field(2)
    # @inject_tag: aper:"optional,valueExt,fromValueExt"
    ran_parameter_definition: Optional[
        "RanparameterDefinition"
    ] = betterproto.message_field(3, optional=True, group="_ran_parameter_definition")


@dataclass(eq=False, repr=False)
class RanfunctionDefinitionPolicy(betterproto.Message):
    """sequence from e2sm_rc.asn1:993 {RANFunctionDefinition-Policy}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:63,valueExt"
    ric_policy_style_list: List[
        "RanfunctionDefinitionPolicyItem"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class RanfunctionDefinitionPolicyItem(betterproto.Message):
    """sequence from e2sm_rc.asn1:998 {RANFunctionDefinition-Policy-Item}"""

    ric_policy_style_type: "RicStyleType" = betterproto.message_field(1)
    ric_policy_style_name: "RicStyleName" = betterproto.message_field(2)
    ric_supported_event_trigger_style_type: "RicStyleType" = betterproto.message_field(
        3
    )
    # @inject_tag: aper:"optional,sizeLB:1,sizeUB:65535,valueExt"
    ric_policy_action_list: List[
        "RanfunctionDefinitionPolicyActionItem"
    ] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class RanfunctionDefinitionPolicyActionItem(betterproto.Message):
    """
    sequence from e2sm_rc.asn1:1007 {RANFunctionDefinition-Policy-Action-Item}
    """

    ric_policy_action_id: "RicControlActionId" = betterproto.message_field(1)
    ric_policy_action_name: "RicControlActionName" = betterproto.message_field(2)
    ric_action_definition_format_type: "RicFormatType" = betterproto.message_field(3)
    # @inject_tag: aper:"optional,sizeLB:1,sizeUB:65535,valueExt"
    ran_policy_action_parameters_list: List[
        "PolicyActionRanparameterItem"
    ] = betterproto.message_field(4)
    # @inject_tag: aper:"optional,sizeLB:1,sizeUB:65535,valueExt"
    ran_policy_condition_parameters_list: List[
        "PolicyConditionRanparameterItem"
    ] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class PolicyActionRanparameterItem(betterproto.Message):
    """sequence from e2sm_rc.asn1:1017 {PolicyAction-RANParameter-Item}"""

    ran_parameter_id: "RanparameterId" = betterproto.message_field(1)
    ran_parameter_name: "RanparameterName" = betterproto.message_field(2)
    # @inject_tag: aper:"optional,valueExt,fromValueExt"
    ran_parameter_definition: Optional[
        "RanparameterDefinition"
    ] = betterproto.message_field(3, optional=True, group="_ran_parameter_definition")


@dataclass(eq=False, repr=False)
class PolicyConditionRanparameterItem(betterproto.Message):
    """sequence from e2sm_rc.asn1:1025 {PolicyCondition-RANParameter-Item}"""

    ran_parameter_id: "RanparameterId" = betterproto.message_field(1)
    ran_parameter_name: "RanparameterName" = betterproto.message_field(2)
    # @inject_tag: aper:"optional,valueExt,fromValueExt"
    ran_parameter_definition: Optional[
        "RanparameterDefinition"
    ] = betterproto.message_field(3, optional=True, group="_ran_parameter_definition")


from ...asn1 import v1 as __asn1_v1__
