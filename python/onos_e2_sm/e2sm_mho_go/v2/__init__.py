# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: e2sm_mho_go/v2/e2sm_mho_go.proto, e2sm_mho_go/v2/e2sm_v2.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List, Optional

import betterproto
from betterproto.grpc.grpclib_server import ServiceBase


class InterfaceType(betterproto.Enum):
    """enumerated from ORAN-WG3.E2SM-v02.00.asn:105"""

    INTERFACE_TYPE_N_G = 0
    INTERFACE_TYPE_XN = 1
    INTERFACE_TYPE_F1 = 2
    INTERFACE_TYPE_E1 = 3
    INTERFACE_TYPE_S1 = 4
    INTERFACE_TYPE_X2 = 5
    INTERFACE_TYPE_W1 = 6


class MessageType(betterproto.Enum):
    """enumerated from ORAN-WG3.E2SM-v02.00.asn:101"""

    MESSAGE_TYPE_INITIATING_MESSAGE = 0
    MESSAGE_TYPE_SUCCESSFUL_OUTCOME = 1
    MESSAGE_TYPE_UNSUCCESSFUL_OUTCOME = 2


class RrcclassLte(betterproto.Enum):
    """enumerated from ORAN-WG3.E2SM-v02.00.asn:144"""

    RRCCLASS_LTE_B_CCH_BCH = 0
    RRCCLASS_LTE_B_CCH_BCH_MBMS = 1
    RRCCLASS_LTE_B_CCH_DL_SCH = 2
    RRCCLASS_LTE_B_CCH_DL_SCH_BR = 3
    RRCCLASS_LTE_B_CCH_DL_SCH_MBMS = 4
    RRCCLASS_LTE_M_CCH = 5
    RRCCLASS_LTE_P_CCH = 6
    RRCCLASS_LTE_DL_CCCH = 7
    RRCCLASS_LTE_DL_DCCH = 8
    RRCCLASS_LTE_UL_CCCH = 9
    RRCCLASS_LTE_UL_DCCH = 10
    RRCCLASS_LTE_S_C_MCCH = 11


class RrcclassNr(betterproto.Enum):
    """enumerated from ORAN-WG3.E2SM-v02.00.asn:146"""

    RRCCLASS_NR_B_CCH_BCH = 0
    RRCCLASS_NR_B_CCH_DL_SCH = 1
    RRCCLASS_NR_DL_CCCH = 2
    RRCCLASS_NR_DL_DCCH = 3
    RRCCLASS_NR_P_CCH = 4
    RRCCLASS_NR_UL_CCCH = 5
    RRCCLASS_NR_UL_CCCH1 = 6
    RRCCLASS_NR_UL_DCCH = 7


class MhoTriggerType(betterproto.Enum):
    """enumerated from e2sm-mho.asn1:64{MHO-Trigger-Type}"""

    MHO_TRIGGER_TYPE_PERIODIC = 0
    MHO_TRIGGER_TYPE_UPON_RCV_MEAS_REPORT = 1
    MHO_TRIGGER_TYPE_UPON_CHANGE_RRC_STATUS = 2


class Rrcstatus(betterproto.Enum):
    """enumerated from e2sm-mho.asn1:134{RRCStatus}"""

    RRCSTATUS_CONNECTED = 0
    RRCSTATUS_INACTIVE = 1
    RRCSTATUS_IDLE = 2


class MhoCommand(betterproto.Enum):
    """enumerated from e2sm-mho.asn1:154{MHO-Command}"""

    MHO_COMMAND_INITIATE_HANDOVER = 0


@dataclass(eq=False, repr=False)
class MaxE1Apid(betterproto.Message):
    """constant Integer from ORAN-WG3.E2SM-v02.00.asn:19 {-}"""

    # @inject_tag: aper:"valueLB:65535,valueUB:65535"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxF1Apid(betterproto.Message):
    """constant Integer from ORAN-WG3.E2SM-v02.00.asn:20 {-}"""

    # @inject_tag: aper:"valueLB:4,valueUB:4"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxEarfcn(betterproto.Message):
    """constant Integer from ORAN-WG3.E2SM-v02.00.asn:23 {-}"""

    # @inject_tag: aper:"valueLB:65535,valueUB:65535"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxNrarfcn(betterproto.Message):
    """constant Integer from ORAN-WG3.E2SM-v02.00.asn:26 {-}"""

    # @inject_tag: aper:"valueLB:3279165,valueUB:3279165"
    value: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class MaxnoofNrCellBands(betterproto.Message):
    """constant Integer from ORAN-WG3.E2SM-v02.00.asn:27 {-}"""

    # @inject_tag: aper:"valueLB:32,valueUB:32"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class Cgi(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:35 {CGI} aper:"choiceExt"""

    # @inject_tag: aper:"choiceIdx:1,valueExt"
    n_r_cgi: "NrCgi" = betterproto.message_field(1, group="cgi")
    # @inject_tag: aper:"choiceIdx:2,valueExt"
    e_utra_cgi: "EutraCgi" = betterproto.message_field(2, group="cgi")


@dataclass(eq=False, repr=False)
class CoreCpid(betterproto.Message):
    """
    sequence from ORAN-WG3.E2SM-v02.00.asn:41 {CoreCPID} aper:"choiceExt"
    """

    # @inject_tag: aper:"choiceIdx:1,valueExt"
    five_gc: "Guami" = betterproto.message_field(1, group="core_cpid")
    # @inject_tag: aper:"choiceIdx:2,valueExt"
    e_pc: "Gummei" = betterproto.message_field(2, group="core_cpid")


@dataclass(eq=False, repr=False)
class InterfaceIdentifier(betterproto.Message):
    """
    sequence from ORAN-WG3.E2SM-v02.00.asn:47 {InterfaceIdentifier}
    aper:"choiceExt"
    """

    # @inject_tag: aper:"choiceIdx:1,valueExt"
    n_g: "InterfaceIdNg" = betterproto.message_field(1, group="interface_identifier")
    # @inject_tag: aper:"choiceIdx:2,valueExt"
    x_n: "InterfaceIdXn" = betterproto.message_field(2, group="interface_identifier")
    # @inject_tag: aper:"choiceIdx:3,valueExt"
    f1: "InterfaceIdF1" = betterproto.message_field(3, group="interface_identifier")
    # @inject_tag: aper:"choiceIdx:4,valueExt"
    e1: "InterfaceIdE1" = betterproto.message_field(4, group="interface_identifier")
    # @inject_tag: aper:"choiceIdx:5,valueExt"
    s1: "InterfaceIdS1" = betterproto.message_field(5, group="interface_identifier")
    # @inject_tag: aper:"choiceIdx:6,valueExt"
    x2: "InterfaceIdX2" = betterproto.message_field(6, group="interface_identifier")
    # @inject_tag: aper:"choiceIdx:7,valueExt"
    w1: "InterfaceIdW1" = betterproto.message_field(7, group="interface_identifier")


@dataclass(eq=False, repr=False)
class InterfaceIdNg(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:58 {InterfaceID-NG}"""

    # @inject_tag: aper:"valueExt"
    guami: "Guami" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class InterfaceIdXn(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:63 {InterfaceID-Xn}"""

    # @inject_tag: aper:"choiceExt"
    global_ng_ran_id: "GlobalRannodeId" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class InterfaceIdF1(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:68 {InterfaceID-F1}"""

    # @inject_tag: aper:"choiceExt"
    global_ng_ran_id: "GlobalRannodeId" = betterproto.message_field(1)
    g_nb_du_id: "GnbDuId" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class InterfaceIdE1(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:74 {InterfaceID-E1}"""

    # @inject_tag: aper:"choiceExt"
    global_ng_ran_id: "GlobalRannodeId" = betterproto.message_field(1)
    g_nb_cu_up_id: "GnbCuUpId" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class InterfaceIdS1(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:80 {InterfaceID-S1}"""

    # @inject_tag: aper:"valueExt"
    g_ummei: "Gummei" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class InterfaceIdX2(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:89 {InterfaceID-X2}"""

    # @inject_tag: aper:"choiceExt"
    node_type: "NodeType" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class NodeType(betterproto.Message):
    """choice from ORAN-WG3.E2SM-v02.00.asn:85 {InterfaceID-X2}"""

    # @inject_tag: aper:"choiceIdx:1,valueExt"
    global_enb_id: "GlobalEnbId" = betterproto.message_field(1, group="node_type")
    # @inject_tag: aper:"choiceIdx:2,valueExt"
    global_en_gnb_id: "GlobalenGnbId" = betterproto.message_field(2, group="node_type")


@dataclass(eq=False, repr=False)
class InterfaceIdW1(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:94 {InterfaceID-W1}"""

    # @inject_tag: aper:"valueExt"
    global_ng_e_nb_id: "GlobalNgEnbId" = betterproto.message_field(1)
    ng_e_nb_du_id: "NgenbDuId" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class InterfaceMessageId(betterproto.Message):
    """
    sequence from ORAN-WG3.E2SM-v02.00.asn:100 {Interface-MessageID}
    aper:"valueExt"
    """

    interface_procedure_id: int = betterproto.int32_field(1)
    # @inject_tag: aper:"valueExt,valueLB:0,valueUB:2"
    message_type: "MessageType" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class GroupId(betterproto.Message):
    """
    sequence from ORAN-WG3.E2SM-v02.00.asn:108 {GroupID} aper:"choiceExt"
    """

    # @inject_tag: aper:"choiceIdx:1"
    five_gc: "FiveQi" = betterproto.message_field(1, group="group_id")
    # @inject_tag: aper:"choiceIdx:2"
    e_pc: "Qci" = betterproto.message_field(2, group="group_id")


@dataclass(eq=False, repr=False)
class QoSid(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:114 {QoSID} aper:"choiceExt"""

    # @inject_tag: aper:"choiceIdx:1"
    five_gc: "FiveQi" = betterproto.message_field(1, group="qo_sid")
    # @inject_tag: aper:"choiceIdx:2"
    e_pc: "Qci" = betterproto.message_field(2, group="qo_sid")


@dataclass(eq=False, repr=False)
class RanfunctionName(betterproto.Message):
    """
    sequence from ORAN-WG3.E2SM-v02.00.asn:120 {RANfunction-Name}
    aper:"valueExt"
    """

    # @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:150"
    ran_function_short_name: str = betterproto.string_field(1)
    # @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:1000"
    ran_function_e2_sm_oid: str = betterproto.string_field(2)
    # @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:150"
    ran_function_description: str = betterproto.string_field(3)
    # @inject_tag: aper:"optional"
    ran_function_instance: Optional[int] = betterproto.int32_field(
        4, optional=True, group="_ran_function_instance"
    )


@dataclass(eq=False, repr=False)
class RicFormatType(betterproto.Message):
    """range of Integer from ORAN-WG3.E2SM-v02.00.asn:129 {RIC-Format-Type}"""

    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class RicStyleType(betterproto.Message):
    """range of Integer from ORAN-WG3.E2SM-v02.00.asn:131 {RIC-Style-Type}"""

    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class RrcMessageId(betterproto.Message):
    """
    sequence from ORAN-WG3.E2SM-v02.00.asn:139 {RRC-MessageID} aper:"valueExt"
    """

    # @inject_tag: aper:"choiceExt"
    rrc_type: "RrcType" = betterproto.message_field(1)
    message_id: int = betterproto.int64_field(2)


@dataclass(eq=False, repr=False)
class RrcType(betterproto.Message):
    """choice from ORAN-WG3.E2SM-v02.00.asn:135"""

    # @inject_tag: aper:"choiceIdx:1,valueExt,valueLB:0,valueUB:11"
    lte: "RrcclassLte" = betterproto.enum_field(1, group="rrc_type")
    # @inject_tag: aper:"choiceIdx:2,valueExt,valueLB:0,valueUB:7"
    nr: "RrcclassNr" = betterproto.enum_field(2, group="rrc_type")


@dataclass(eq=False, repr=False)
class ServingCellArfcn(betterproto.Message):
    """
    sequence from ORAN-WG3.E2SM-v02.00.asn:149 {ServingCell-ARFCN}
    aper:"choiceExt"
    """

    # @inject_tag: aper:"choiceIdx:1,valueExt"
    n_r: "NrArfcn" = betterproto.message_field(1, group="serving_cell_arfcn")
    # @inject_tag: aper:"choiceIdx:2"
    e_utra: "EUtraArfcn" = betterproto.message_field(2, group="serving_cell_arfcn")


@dataclass(eq=False, repr=False)
class ServingCellPci(betterproto.Message):
    """
    sequence from ORAN-WG3.E2SM-v02.00.asn:155 {ServingCell-PCI}
    aper:"choiceExt"
    """

    # @inject_tag: aper:"choiceIdx:1"
    n_r: "NrPci" = betterproto.message_field(1, group="serving_cell_pci")
    # @inject_tag: aper:"choiceIdx:2"
    e_utra: "EUtraPci" = betterproto.message_field(2, group="serving_cell_pci")


@dataclass(eq=False, repr=False)
class Ueid(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:162 {UEID} aper:"choiceExt"""

    # @inject_tag: aper:"choiceIdx:1,valueExt"
    g_nb_ueid: "UeidGnb" = betterproto.message_field(1, group="ueid")
    # @inject_tag: aper:"choiceIdx:2,valueExt"
    g_nb_du_ueid: "UeidGnbDu" = betterproto.message_field(2, group="ueid")
    # @inject_tag: aper:"choiceIdx:3,valueExt"
    g_nb_cu_up_ueid: "UeidGnbCuUp" = betterproto.message_field(3, group="ueid")
    # @inject_tag: aper:"choiceIdx:4,valueExt"
    ng_e_nb_ueid: "UeidNgEnb" = betterproto.message_field(4, group="ueid")
    # @inject_tag: aper:"choiceIdx:5,valueExt"
    ng_e_nb_du_ueid: "UeidNgEnbDu" = betterproto.message_field(5, group="ueid")
    # @inject_tag: aper:"choiceIdx:6,valueExt"
    en_g_nb_ueid: "UeidEnGnb" = betterproto.message_field(6, group="ueid")
    # @inject_tag: aper:"choiceIdx:7,valueExt"
    e_nb_ueid: "UeidEnb" = betterproto.message_field(7, group="ueid")


@dataclass(eq=False, repr=False)
class UeidGnb(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:173 {UEID-GNB}"""

    amf_ue_ngap_id: "AmfUeNgapId" = betterproto.message_field(1)
    # @inject_tag: aper:"valueExt"
    guami: "Guami" = betterproto.message_field(2)
    # @inject_tag: aper:"optional"
    g_nb_cu_ue_f1_ap_id_list: Optional[
        "UeidGnbCuF1ApIdList"
    ] = betterproto.message_field(3, optional=True, group="_g_nb_cu_ue_f1_ap_id_list")
    # @inject_tag: aper:"optional"
    g_nb_cu_cp_ue_e1_ap_id_list: Optional[
        "UeidGnbCuCpE1ApIdList"
    ] = betterproto.message_field(
        4, optional=True, group="_g_nb_cu_cp_ue_e1_ap_id_list"
    )
    # @inject_tag: aper:"optional"
    ran_ueid: Optional["Ranueid"] = betterproto.message_field(
        5, optional=True, group="_ran_ueid"
    )
    # @inject_tag: aper:"optional"
    m_ng_ran_ue_xn_ap_id: Optional["NgRannodeUexnApid"] = betterproto.message_field(
        6, optional=True, group="_m_ng_ran_ue_xn_ap_id"
    )
    # @inject_tag: aper:"optional,valueExt"
    global_gnb_id: Optional["GlobalGnbId"] = betterproto.message_field(
        7, optional=True, group="_global_gnb_id"
    )


@dataclass(eq=False, repr=False)
class UeidGnbCuCpE1ApIdList(betterproto.Message):
    """
    sequence from ORAN-WG3.E2SM-v02.00.asn:189 {UEID-GNB-CU-CP-E1AP-ID-List}
    """

    # @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:65535"
    value: List["UeidGnbCuCpE1ApIdItem"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class UeidGnbCuCpE1ApIdItem(betterproto.Message):
    """
    sequence from ORAN-WG3.E2SM-v02.00.asn:190 {UEID-GNB-CU-CP-E1AP-ID-Item}
    """

    g_nb_cu_cp_ue_e1_ap_id: "GnbCuCpUeE1ApId" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class UeidGnbCuF1ApIdList(betterproto.Message):
    """
    sequence from ORAN-WG3.E2SM-v02.00.asn:196 {UEID-GNB-CU-F1AP-ID-List}
    """

    # @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:4"
    value: List["UeidGnbCuCpF1ApIdItem"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class UeidGnbCuCpF1ApIdItem(betterproto.Message):
    """
    sequence from ORAN-WG3.E2SM-v02.00.asn:197 {UEID-GNB-CU-CP-F1AP-ID-Item}
    """

    g_nb_cu_ue_f1_ap_id: "GnbCuUeF1ApId" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class UeidGnbDu(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:202 {UEID-GNB-DU}"""

    g_nb_cu_ue_f1_ap_id: "GnbCuUeF1ApId" = betterproto.message_field(1)
    # @inject_tag: aper:"optional"
    ran_ueid: Optional["Ranueid"] = betterproto.message_field(
        2, optional=True, group="_ran_ueid"
    )


@dataclass(eq=False, repr=False)
class UeidGnbCuUp(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:208 {UEID-GNB-CU-UP}"""

    g_nb_cu_cp_ue_e1_ap_id: "GnbCuCpUeE1ApId" = betterproto.message_field(1)
    # @inject_tag: aper:"optional"
    ran_ueid: Optional["Ranueid"] = betterproto.message_field(
        2, optional=True, group="_ran_ueid"
    )


@dataclass(eq=False, repr=False)
class UeidNgEnb(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:214 {UEID-NG-ENB}"""

    amf_ue_ngap_id: "AmfUeNgapId" = betterproto.message_field(1)
    # @inject_tag: aper:"valueExt"
    guami: "Guami" = betterproto.message_field(2)
    # @inject_tag: aper:"optional"
    ng_e_nb_cu_ue_w1_ap_id: Optional["NgenbCuUeW1ApId"] = betterproto.message_field(
        3, optional=True, group="_ng_e_nb_cu_ue_w1_ap_id"
    )
    # @inject_tag: aper:"optional"
    m_ng_ran_ue_xn_ap_id: Optional["NgRannodeUexnApid"] = betterproto.message_field(
        4, optional=True, group="_m_ng_ran_ue_xn_ap_id"
    )
    # @inject_tag: aper:"optional,valueExt"
    global_ng_enb_id: Optional["GlobalNgEnbId"] = betterproto.message_field(
        5, optional=True, group="_global_ng_enb_id"
    )


@dataclass(eq=False, repr=False)
class UeidNgEnbDu(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:227 {UEID-NG-ENB-DU}"""

    ng_e_nb_cu_ue_w1_ap_id: "NgenbCuUeW1ApId" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class UeidEnGnb(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:232 {UEID-EN-GNB}"""

    m_e_nb_ue_x2_ap_id: "EnbUeX2ApId" = betterproto.message_field(1)
    # @inject_tag: aper:"optional"
    m_e_nb_ue_x2_ap_id_extension: Optional[
        "EnbUeX2ApIdExtension"
    ] = betterproto.message_field(
        2, optional=True, group="_m_e_nb_ue_x2_ap_id_extension"
    )
    # @inject_tag: aper:"valueExt"
    global_enb_id: "GlobalEnbId" = betterproto.message_field(3)
    # @inject_tag: aper:"optional"
    g_nb_cu_ue_f1_ap_id: Optional["GnbCuUeF1ApId"] = betterproto.message_field(
        4, optional=True, group="_g_nb_cu_ue_f1_ap_id"
    )
    # @inject_tag: aper:"optional"
    g_nb_cu_cp_ue_e1_ap_id_list: Optional[
        "UeidGnbCuCpE1ApIdList"
    ] = betterproto.message_field(
        5, optional=True, group="_g_nb_cu_cp_ue_e1_ap_id_list"
    )
    # @inject_tag: aper:"optional"
    ran_ueid: Optional["Ranueid"] = betterproto.message_field(
        6, optional=True, group="_ran_ueid"
    )


@dataclass(eq=False, repr=False)
class UeidEnb(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:244 {UEID-ENB}"""

    m_me_ue_s1_ap_id: "MmeUeS1ApId" = betterproto.message_field(1)
    # @inject_tag: aper:"valueExt"
    g_ummei: "Gummei" = betterproto.message_field(2)
    # @inject_tag: aper:"optional"
    m_e_nb_ue_x2_ap_id: Optional["EnbUeX2ApId"] = betterproto.message_field(
        3, optional=True, group="_m_e_nb_ue_x2_ap_id"
    )
    # @inject_tag: aper:"optional"
    m_e_nb_ue_x2_ap_id_extension: Optional[
        "EnbUeX2ApIdExtension"
    ] = betterproto.message_field(
        4, optional=True, group="_m_e_nb_ue_x2_ap_id_extension"
    )
    # @inject_tag: aper:"optional,valueExt"
    global_enb_id: Optional["GlobalEnbId"] = betterproto.message_field(
        5, optional=True, group="_global_enb_id"
    )


@dataclass(eq=False, repr=False)
class EnbId(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:268 {ENB-ID}"""

    # @inject_tag: aper:"choiceIdx:1,sizeLB:20,sizeUB:20"
    macro_e_nb_id: "__asn1_v1__.BitString" = betterproto.message_field(
        1, group="enb_id"
    )
    # @inject_tag: aper:"choiceIdx:2,sizeLB:28,sizeUB:28"
    home_e_nb_id: "__asn1_v1__.BitString" = betterproto.message_field(2, group="enb_id")
    # @inject_tag: aper:"choiceIdx:3,sizeLB:18,sizeUB:18,fromChoiceExt"
    short_macro_e_nb_id: "__asn1_v1__.BitString" = betterproto.message_field(
        3, group="enb_id"
    )
    # @inject_tag: aper:"choiceIdx:4,sizeLB:21,sizeUB:21,fromChoiceExt"
    long_macro_e_nb_id: "__asn1_v1__.BitString" = betterproto.message_field(
        4, group="enb_id"
    )


@dataclass(eq=False, repr=False)
class GlobalEnbId(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:277 {GlobalENB-ID}"""

    p_lmnidentity: "PlmnIdentity" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    e_nb_id: "EnbId" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class Gummei(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:285 {GUMMEI}"""

    p_lmn_identity: "PlmnIdentity" = betterproto.message_field(1)
    m_me_group_id: "MmeGroupId" = betterproto.message_field(2)
    m_me_code: "MmeCode" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class MmeUeS1ApId(betterproto.Message):
    """range of Integer from ORAN-WG3.E2SM-v02.00.asn:298 {MME-UE-S1AP-ID}"""

    # @inject_tag: aper:"valueLB:0,valueUB:4294967295"
    value: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class Qci(betterproto.Message):
    """range of Integer from ORAN-WG3.E2SM-v02.00.asn:301 {QCI}"""

    # @inject_tag: aper:"valueLB:0,valueUB:255"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class SubscriberProfileIdforRfp(betterproto.Message):
    """
    range of Integer from ORAN-WG3.E2SM-v02.00.asn:304
    {SubscriberProfileIDforRFP}
    """

    # @inject_tag: aper:"valueLB:1,valueUB:256"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class EnGnbId(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:322 {EN-GNB-ID}"""

    # @inject_tag: aper:"choiceIdx:1,sizeLB:22,sizeUB:32"
    en_g_nb_id: "__asn1_v1__.BitString" = betterproto.message_field(
        1, group="en_gnb_id"
    )


@dataclass(eq=False, repr=False)
class EnbUeX2ApId(betterproto.Message):
    """range of Integer from ORAN-WG3.E2SM-v02.00.asn:327 {ENB-UE-X2AP-ID}"""

    # @inject_tag: aper:"valueLB:0,valueUB:4095"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class EnbUeX2ApIdExtension(betterproto.Message):
    """
    range of Integer from ORAN-WG3.E2SM-v02.00.asn:330 {ENB-UE-X2AP-ID-
    Extension}
    """

    # @inject_tag: aper:"valueExt,valueLB:0,valueUB:4095"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class EUtraArfcn(betterproto.Message):
    """range of Integer from ORAN-WG3.E2SM-v02.00.asn:333 {E-UTRA-ARFCN}"""

    # @inject_tag: aper:"valueLB:0,valueUB:65535"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class EUtraPci(betterproto.Message):
    """range of Integer from ORAN-WG3.E2SM-v02.00.asn:336 {E-UTRA-PCI}"""

    # @inject_tag: aper:"valueExt,valueLB:0,valueUB:503"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class EUtraTac(betterproto.Message):
    """range of Integer from ORAN-WG3.E2SM-v02.00.asn:339 {E-UTRA-TAC}"""

    # @inject_tag: aper:"sizeLB:2,sizeUB:2"
    value: bytes = betterproto.bytes_field(1)


@dataclass(eq=False, repr=False)
class GlobalenGnbId(betterproto.Message):
    """
    sequence from ORAN-WG3.E2SM-v02.00.asn:343 {GlobalenGNB-ID} aper:"valueExt"
    """

    p_lmn_identity: "PlmnIdentity" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    en_g_nb_id: "EnGnbId" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class NgenbCuUeW1ApId(betterproto.Message):
    """
    range of Integer from ORAN-WG3.E2SM-v02.00.asn:357 {NGENB-CU-UE-W1AP-ID}
    """

    # @inject_tag: aper:"valueExt,valueLB:0,valueUB:4294967295"
    value: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class NgenbDuId(betterproto.Message):
    """range of Integer from ORAN-WG3.E2SM-v02.00.asn:360 {NGENB-DU-ID}"""

    # @inject_tag: aper:"valueExt,valueLB:0,valueUB:68719476735"
    value: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class AmfUeNgapId(betterproto.Message):
    """range of Integer from ORAN-WG3.E2SM-v02.00.asn:381 {AMF-UE-NGAP-ID}"""

    # @inject_tag: aper:"valueExt,valueLB:0,valueUB:1099511627775"
    value: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class EutraCgi(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:388 {EUTRA-CGI}"""

    p_lmnidentity: "PlmnIdentity" = betterproto.message_field(1)
    e_utracell_identity: "EutracellIdentity" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class FiveQi(betterproto.Message):
    """range of Integer from ORAN-WG3.E2SM-v02.00.asn:394 {FiveQI}"""

    # @inject_tag: aper:"valueExt,valueLB:0,valueUB:255"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class GlobalGnbId(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:398 {GlobalGNB-ID}"""

    p_lmnidentity: "PlmnIdentity" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    g_nb_id: "GnbId" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GlobalNgEnbId(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:405 {GlobalNgENB-ID}"""

    p_lmnidentity: "PlmnIdentity" = betterproto.message_field(1)
    # @inject_tag: aper:"choiceExt"
    ng_enb_id: "NgEnbId" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GlobalRannodeId(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:412 {GlobalRANNodeID}"""

    # @inject_tag: aper:"choiceIdx:1,valueExt"
    global_gnb_id: "GlobalGnbId" = betterproto.message_field(
        1, group="global_rannode_id"
    )
    # @inject_tag: aper:"choiceIdx:2,valueExt"
    global_ng_enb_id: "GlobalNgEnbId" = betterproto.message_field(
        2, group="global_rannode_id"
    )


@dataclass(eq=False, repr=False)
class GnbId(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:419 {GNB-ID}"""

    # @inject_tag: aper:"choiceIdx:1,sizeLB:22,sizeUB:32"
    g_nb_id: "__asn1_v1__.BitString" = betterproto.message_field(1, group="gnb_id")


@dataclass(eq=False, repr=False)
class Guami(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:425 {GUAMI}"""

    p_lmnidentity: "PlmnIdentity" = betterproto.message_field(1)
    a_mfregion_id: "AmfregionId" = betterproto.message_field(2)
    a_mfset_id: "AmfsetId" = betterproto.message_field(3)
    a_mfpointer: "Amfpointer" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class IndexToRfsp(betterproto.Message):
    """range of Integer from ORAN-WG3.E2SM-v02.00.asn:433 {IndexToRFSP}"""

    # @inject_tag: aper:"valueLB:1,valueUB:256,valueExt"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class NgEnbId(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:437 {NgENB-ID}"""

    # @inject_tag: aper:"choiceIdx:1,sizeLB:20,sizeUB:20"
    macro_ng_enb_id: "__asn1_v1__.BitString" = betterproto.message_field(
        1, group="ng_enb_id"
    )
    # @inject_tag: aper:"choiceIdx:2,sizeLB:18,sizeUB:18"
    short_macro_ng_enb_id: "__asn1_v1__.BitString" = betterproto.message_field(
        2, group="ng_enb_id"
    )
    # @inject_tag: aper:"choiceIdx:3,sizeLB:21,sizeUB:21"
    long_macro_ng_enb_id: "__asn1_v1__.BitString" = betterproto.message_field(
        3, group="ng_enb_id"
    )


@dataclass(eq=False, repr=False)
class NrCgi(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:448 {NR-CGI}"""

    p_lmnidentity: "PlmnIdentity" = betterproto.message_field(1)
    n_rcell_identity: "NrcellIdentity" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class QosFlowIdentifier(betterproto.Message):
    """
    range of Integer from ORAN-WG3.E2SM-v02.00.asn:457 {QosFlowIdentifier}
    """

    # @inject_tag: aper:"valueLB:0,valueUB:63,valueExt"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class SNssai(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:464 {S-NSSAI} aper:"valueExt"""

    s_st: "Sst" = betterproto.message_field(1)
    # @inject_tag: aper:"optional"
    s_d: Optional["Sd"] = betterproto.message_field(2, optional=True, group="_s_d")


@dataclass(eq=False, repr=False)
class NgRannodeUexnApid(betterproto.Message):
    """
    range of Integer from ORAN-WG3.E2SM-v02.00.asn:481 {NG-RANnodeUEXnAPID}
    """

    # @inject_tag: aper:"valueLB:0,valueUB:4294967295"
    value: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class GnbCuCpUeE1ApId(betterproto.Message):
    """
    range of Integer from ORAN-WG3.E2SM-v02.00.asn:492 {GNB-CU-CP-UE-E1AP-ID}
    """

    # @inject_tag: aper:"valueLB:0,valueUB:4294967295"
    value: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class GnbCuUpId(betterproto.Message):
    """range of Integer from ORAN-WG3.E2SM-v02.00.asn:495 {GNB-CU-UP-ID}"""

    # @inject_tag: aper:"valueLB:0,valueUB:68719476735"
    value: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class FiveGsTac(betterproto.Message):
    """range of Integer from ORAN-WG3.E2SM-v02.00.asn:507 {FiveGS-TAC}"""

    # @inject_tag: aper:"sizeLB:3,sizeUB:3"
    value: bytes = betterproto.bytes_field(1)


@dataclass(eq=False, repr=False)
class GnbCuUeF1ApId(betterproto.Message):
    """
    range of Integer from ORAN-WG3.E2SM-v02.00.asn:510 {GNB-CU-UE-F1AP-ID}
    """

    # @inject_tag: aper:"valueExt,valueLB:0,valueUB:4294967295"
    value: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class GnbDuId(betterproto.Message):
    """range of Integer from ORAN-WG3.E2SM-v02.00.asn:513 {GNB-DU-ID}"""

    # @inject_tag: aper:"valueLB:0,valueUB:68719476735"
    value: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class NrPci(betterproto.Message):
    """range of Integer from ORAN-WG3.E2SM-v02.00.asn:516 {NR-PCI}"""

    # @inject_tag: aper:"valueLB:0,valueUB:1007"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class NrArfcn(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:520 {NR-ARFCN}"""

    # @inject_tag: aper:"valueExt,valueLB:0,valueUB:3279165"
    n_rarfcn: int = betterproto.int32_field(1)
    # @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:32"
    freq_band_list_nr: List["FreqBandNrItem"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class FreqBandNrItem(betterproto.Message):
    """sequence from ORAN-WG3.E2SM-v02.00.asn:527 {FreqBandNrItem}"""

    # @inject_tag: aper:"valueExt,valueLB:0,valueUB:1024"
    freq_band_indicator_nr: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class RicStyleName(betterproto.Message):
    """{RIC-Style-Name}"""

    # @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:150"
    value: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class PlmnIdentity(betterproto.Message):
    """{PLMN-Identity}"""

    # @inject_tag: aper:"sizeLB:3,sizeUB:3"
    value: bytes = betterproto.bytes_field(1)


@dataclass(eq=False, repr=False)
class EutracellIdentity(betterproto.Message):
    """{EUTRACellIdentity}"""

    # @inject_tag: aper:"sizeLB:28,sizeUB:28"
    value: "__asn1_v1__.BitString" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class NrcellIdentity(betterproto.Message):
    """{NRCellIdentity}"""

    # @inject_tag: aper:"sizeLB:36,sizeUB:36"
    value: "__asn1_v1__.BitString" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Ranueid(betterproto.Message):
    """{RAN-UE-ID}"""

    # @inject_tag: aper:"sizeLB:8,sizeUB:8"
    value: bytes = betterproto.bytes_field(1)


@dataclass(eq=False, repr=False)
class MmeGroupId(betterproto.Message):
    """{MME-Group-ID}"""

    # @inject_tag: aper:"sizeLB:2,sizeUB:2"
    value: bytes = betterproto.bytes_field(1)


@dataclass(eq=False, repr=False)
class MmeCode(betterproto.Message):
    """{MME-Code}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:1"
    value: bytes = betterproto.bytes_field(1)


@dataclass(eq=False, repr=False)
class AmfregionId(betterproto.Message):
    """{AMFRegionID}"""

    # @inject_tag: aper:"sizeLB:8,sizeUB:8"
    value: "__asn1_v1__.BitString" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AmfsetId(betterproto.Message):
    """{AMFSetID}"""

    # @inject_tag: aper:"sizeLB:10,sizeUB:10"
    value: "__asn1_v1__.BitString" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Amfpointer(betterproto.Message):
    """{AMFPointer}"""

    # @inject_tag: aper:"sizeLB:6,sizeUB:6"
    value: "__asn1_v1__.BitString" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Sd(betterproto.Message):
    """{-}"""

    # @inject_tag: aper:"sizeLB:3,sizeUB:3"
    value: bytes = betterproto.bytes_field(1)


@dataclass(eq=False, repr=False)
class Sst(betterproto.Message):
    """{-}"""

    # @inject_tag: aper:"sizeLB:1,sizeUB:1"
    value: bytes = betterproto.bytes_field(1)


@dataclass(eq=False, repr=False)
class Rsrp(betterproto.Message):
    """range of Integer from e2sm-mho.asn1:40 {RSRP}"""

    # @inject_tag: aper:"valueLB:-65536,valueUB:65536,valueExt"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxofMessageProtocolTests(betterproto.Message):
    """constant Integer from e2sm-mho.asn1:48{-}"""

    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxofRicstyles(betterproto.Message):
    """constant Integer from e2sm-mho.asn1:49{-}"""

    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxPlmn(betterproto.Message):
    """constant Integer from e2sm-mho.asn1:50{-}"""

    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MaxNr(betterproto.Message):
    """constant Integer from e2sm-mho.asn1:51{-}"""

    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class RicControlMessagePriority(betterproto.Message):
    """
    range of Integer from e2sm-mho.asn1:63 {RIC-Control-Message-Priority}
    """

    # @inject_tag: aper:"valueLB:0,valueUB:255,valueExt"
    value: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class E2SmMhoEventTriggerDefinition(betterproto.Message):
    """sequence from e2sm-mho.asn1:79 {E2SM-MHO-EventTriggerDefinition}"""

    # @inject_tag: aper:"choiceExt"
    event_definition_formats: "MhoEventTriggerDefinitionFormats" = (
        betterproto.message_field(1)
    )


@dataclass(eq=False, repr=False)
class MhoEventTriggerDefinitionFormats(betterproto.Message):
    # @inject_tag: aper:"choiceIdx:1,valueExt"
    event_definition_format1: "E2SmMhoEventTriggerDefinitionFormat1" = (
        betterproto.message_field(1, group="e2_sm_mho_event_trigger_definition")
    )


@dataclass(eq=False, repr=False)
class E2SmMhoEventTriggerDefinitionFormat1(betterproto.Message):
    """
    sequence from e2sm-mho.asn1:84 {E2SM-MHO-EventTriggerDefinition-Format1}
    """

    # @inject_tag: aper:"valueLB:0,valueUB:2,valueExt"
    trigger_type: "MhoTriggerType" = betterproto.enum_field(1)
    # @inject_tag: aper:"optional"
    reporting_period_ms: Optional[int] = betterproto.int32_field(
        2, optional=True, group="_reporting_period_ms"
    )


@dataclass(eq=False, repr=False)
class E2SmMhoIndicationHeader(betterproto.Message):
    """sequence from e2sm-mho.asn1:95 {E2SM-MHO-IndicationHeader}"""

    # @inject_tag: aper:"choiceIdx:1,valueExt"
    indication_header_format1: "E2SmMhoIndicationHeaderFormat1" = (
        betterproto.message_field(1, group="e2_sm_mho_indication_header")
    )


@dataclass(eq=False, repr=False)
class E2SmMhoIndicationHeaderFormat1(betterproto.Message):
    """sequence from e2sm-mho.asn1:101 {E2SM-MHO-IndicationHeader-Format1}"""

    # @inject_tag: aper:"choiceExt"
    cgi: "Cgi" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class E2SmMhoIndicationMessage(betterproto.Message):
    """sequence from e2sm-mho.asn1:111 {E2SM-MHO-IndicationMessage}"""

    # @inject_tag: aper:"choiceIdx:1,valueExt"
    indication_message_format1: "E2SmMhoIndicationMessageFormat1" = (
        betterproto.message_field(1, group="e2_sm_mho_indication_message")
    )
    # @inject_tag: aper:"choiceIdx:2,valueExt"
    indication_message_format2: "E2SmMhoIndicationMessageFormat2" = (
        betterproto.message_field(2, group="e2_sm_mho_indication_message")
    )


@dataclass(eq=False, repr=False)
class E2SmMhoIndicationMessageFormat1(betterproto.Message):
    """sequence from e2sm-mho.asn1:121 {E2SM-MHO-IndicationMessage-Format1}"""

    ue_id: "Ueid" = betterproto.message_field(1)
    # @inject_tag: aper:"sizeLB:1,sizeUB:100,valueExt"
    meas_report: List["E2SmMhoMeasurementReportItem"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class E2SmMhoMeasurementReportItem(betterproto.Message):
    """sequence from e2sm-mho.asn1:128 {E2SM-MHO-MeasurementReportItem}"""

    # @inject_tag: aper:"choiceExt"
    cgi: "Cgi" = betterproto.message_field(1)
    rsrp: "Rsrp" = betterproto.message_field(2)
    # @inject_tag: aper:"optional"
    five_qi: Optional["FiveQi"] = betterproto.message_field(
        3, optional=True, group="_five_qi"
    )


@dataclass(eq=False, repr=False)
class E2SmMhoIndicationMessageFormat2(betterproto.Message):
    """sequence from e2sm-mho.asn1:129 {E2SM-MHO-IndicationMessage-Format2}"""

    ue_id: "Ueid" = betterproto.message_field(1)
    # @inject_tag: aper:"valueLB:0,valueUB:2,valueExt"
    rrc_status: "Rrcstatus" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class E2SmMhoControlHeader(betterproto.Message):
    """sequence from e2sm-mho.asn1:143 {E2SM-MHO-ControlHeader}"""

    # @inject_tag: aper:"choiceIdx:1,valueExt"
    control_header_format1: "E2SmMhoControlHeaderFormat1" = betterproto.message_field(
        1, group="e2_sm_mho_control_header"
    )


@dataclass(eq=False, repr=False)
class E2SmMhoControlHeaderFormat1(betterproto.Message):
    """sequence from e2sm-mho.asn1:149 {E2SM-MHO-ControlHeader-Format1}"""

    # @inject_tag: aper:"valueLB:0,valueUB:0,valueExt"
    rc_command: "MhoCommand" = betterproto.enum_field(1)
    # @inject_tag: aper:"optional"
    ric_control_message_priority: Optional[
        "RicControlMessagePriority"
    ] = betterproto.message_field(
        2, optional=True, group="_ric_control_message_priority"
    )


@dataclass(eq=False, repr=False)
class E2SmMhoControlMessage(betterproto.Message):
    """sequence from e2sm-mho.asn1:163 {E2SM-MHO-ControlMessage}"""

    # @inject_tag: aper:"choiceIdx:1,valueExt"
    control_message_format1: "E2SmMhoControlMessageFormat1" = betterproto.message_field(
        1, group="e2_sm_mho_control_message"
    )


@dataclass(eq=False, repr=False)
class E2SmMhoControlMessageFormat1(betterproto.Message):
    """sequence from e2sm-mho.asn1:169 {E2SM-MHO-ControlMessage-Format1}"""

    # @inject_tag: aper:"choiceExt"
    serving_cgi: "Cgi" = betterproto.message_field(1)
    ued_id: "Ueid" = betterproto.message_field(2)
    # @inject_tag: aper:"choiceExt"
    target_cgi: "Cgi" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class E2SmMhoRanfunctionDescription(betterproto.Message):
    """sequence from e2sm-mho.asn1:181 {E2SM-MHO-RANfunction-Description}"""

    # @inject_tag: aper:"valueExt"
    ran_function_name: "RanfunctionName" = betterproto.message_field(1)
    # @inject_tag: aper:"valueExt"
    e2_sm_mho_ranfunction_item: "E2SmMhoRanfunctionDescriptionE2SmMhoRanfunctionItem001" = betterproto.message_field(
        2
    )


@dataclass(eq=False, repr=False)
class E2SmMhoRanfunctionDescriptionE2SmMhoRanfunctionItem001(betterproto.Message):
    """{E2SM-MHO-RANfunction-Item001}"""

    # @inject_tag: aper:"optional,valueExt,sizeLB:1,sizeUB:63"
    ric_event_trigger_style_list: List[
        "RicEventTriggerStyleList"
    ] = betterproto.message_field(2)
    # @inject_tag: aper:"optional,valueExt,sizeLB:1,sizeUB:63"
    ric_report_style_list: List["RicReportStyleList"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class RicEventTriggerStyleList(betterproto.Message):
    """sequence from e2sm-mho.asn1:199 {RIC-EventTriggerStyle-List}"""

    ric_event_trigger_style_type: "RicStyleType" = betterproto.message_field(1)
    ric_event_trigger_style_name: "RicStyleName" = betterproto.message_field(2)
    ric_event_trigger_format_type: "RicFormatType" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class RicReportStyleList(betterproto.Message):
    """sequence from e2sm-mho.asn1:206 {RIC-ReportStyle-List}"""

    ric_report_style_type: "RicStyleType" = betterproto.message_field(1)
    ric_report_style_name: "RicStyleName" = betterproto.message_field(2)
    ric_indication_header_format_type: "RicFormatType" = betterproto.message_field(3)
    ric_indication_message_format_type: "RicFormatType" = betterproto.message_field(4)


from ...asn1 import v1 as __asn1_v1__
