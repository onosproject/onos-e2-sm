# SPDX-License-Identifier: Apache-2.0
# Copyright 2023 Intel Corporation
name: Test integration
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: make build
  
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: golangci/golangci-lint-action@v3
        with:
          version: v1.54
      - name: Unit tests
        run: make test


  sm-linters:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: golangci/golangci-lint-action@v3
        with:
          version: v1.54
      - name: sm-linters
        run: |
          make sm-linters
        
  buflint:
   runs-on: ubuntu-latest
   steps:
     - uses: actions/checkout@v2
     - name: buflint 
       env:
        BUF_VERSION: 1.0.0   
       run: |
         sudo mkdir -p /go/src/github.com/onosproject
         cd /go/src/github.com/onosproject
         sudo git clone https://github.com/onosproject/onos-e2-sm.git
         sudo git clone https://github.com/onosproject/onos-lib-go.git
         cd /go/src/github.com/onosproject/onos-e2-sm
         docker run \
                   -v `pwd`:/go/src/github.com/onosproject/onos-e2-sm \
                   -v `pwd`/../onos-lib-go/api/asn1:/go/src/github.com/onosproject/onos-e2-sm/servicemodels/asn1 \
                   -w /go/src/github.com/onosproject/onos-e2-sm/servicemodels \
                    bufbuild/buf:${BUF_VERSION} lint

  protos:
   runs-on: ubuntu-latest
   steps:
     - uses: actions/checkout@v4
     - name: protos
       env:
        ONOS_PROTOC_VERSION: v1.0.2  
       run: |
         sudo mkdir -p /go/src/github.com/onosproject
         cd /go/src/github.com/onosproject
         sudo git clone https://github.com/onosproject/onos-e2-sm.git
         sudo git clone https://github.com/onosproject/onos-lib-go.git
         cd /go/src/github.com/onosproject/onos-e2-sm
         docker run \
                   -v `pwd`:/go/src/github.com/onosproject/onos-e2-sm \
                   -v `pwd`/../onos-lib-go:/go/src/github.com/onosproject/onos-lib-go \
                   -w /go/src/github.com/onosproject/onos-e2-sm \
                   --entrypoint /go/src/github.com/onosproject/onos-e2-sm/build/bin/compile-protos.sh \
                   onosproject/protoc-go:${ONOS_PROTOC_VERSION}

  protos-py:
   runs-on: ubuntu-latest
   steps:
     - uses: actions/checkout@v4
     - name: protos-py
       env:
        ONOS_PROTOC_VERSION: v1.0.2
       run: |
         sudo mkdir -p /go/src/github.com/onosproject
         cd /go/src/github.com/onosproject
         sudo git clone https://github.com/onosproject/onos-e2-sm.git
         sudo git clone https://github.com/onosproject/onos-lib-go.git
         cd /go/src/github.com/onosproject/onos-e2-sm
         docker run \
                   -v `pwd`:/go/src/github.com/onosproject/onos-e2-sm \
                   -v `pwd`/../onos-lib-go:/go/src/github.com/onosproject/onos-lib-go \
                   -w /go/src/github.com/onosproject/onos-e2-sm \
                   --entrypoint /go/src/github.com/onosproject/onos-e2-sm/build/bin/compile-protos-py.sh \
                   onosproject/protoc-go:${ONOS_PROTOC_VERSION}        
        
  docker:
   runs-on: ubuntu-latest
   steps:
     - uses: actions/checkout@v4
     - name: docker-build
       run: make images
  clean:
   runs-on: ubuntu-latest
   steps:
     - uses: actions/checkout@v4
     - name: Cleanup Docker images
       run: |
        docker image prune -af
