# SPDX-License-Identifier: Apache-2.0
# Copyright 2023 Intel Corporation
name: Test integration
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: make build
  
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: golangci/golangci-lint-action@v3
        with:
          version: v1.54
      - name: Unit tests
        run: make test

  Jenkins-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: golangci/golangci-lint-action@v3
        with:
          version: v1.54
      - name: Jenkins tests
        run: |
          export GOPATH="$HOME/go/"
          export PATH=$PATH:$GOPATH/bin
          go install github.com/golang/mock/mockgen@v1.6.0
          go install github.com/jstemmer/go-junit-report@latest
          go install github.com/boumenot/gocover-cobertura@latest
          make jenkins-test

  sm-linters:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: golangci/golangci-lint-action@v3
        with:
          version: v1.54
      - name: sm-linters
        run: |
          # sudo mkdir -p /go/src/github.com/onosproject
          # cd /go/src/github.com/onosproject
          # sudo git clone https://github.com/onosproject/onos-e2-sm.git
          # cd /go/src/github.com/onosproject/onos-e2-sm
          # cd build && git clone https://github.com/onosproject/build-tools.git
          # golangci-lint --version | grep 1.52.2 || curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b `go env GOPATH`/bin v1.52.2
          # cd servicemodels/e2sm_kpm && golangci-lint run --timeout 5m && cd ..
          # cd servicemodels/e2sm_rc && golangci-lint run --timeout 5m && cd ..
          # cd servicemodels/e2sm_kpm_v2 && golangci-lint run --timeout 5m && cd ..
          # cd servicemodels/e2sm_kpm_v2_go && golangci-lint run --timeout 5m && cd ..
          # cd servicemodels/e2sm_ni && golangci-lint run --timeout 5m && cd ..
          # cd servicemodels/e2sm_rc_pre && golangci-lint run --timeout 5m && cd ..
          # cd servicemodels/e2sm_rc_pre_go && golangci-lint run --timeout 5m && cd ..
          # cd servicemodels/e2sm_mho && golangci-lint run --timeout 5m && cd ..
          # cd servicemodels/e2sm_rsm && golangci-lint run --timeout 5m && cd ..
          # cd servicemodels/test_sm_aper_go_lib && golangci-lint run --timeout 5m && cd ..
          # cd protoc-gen-cgo/ && golangci-lint run --timeout 5m && cd ..
          # cd protoc-gen-choice/ && golangci-lint run --timeout 5m && cd ..
          # cd protoc-gen-builder/ && golangci-lint run --timeout 5m && cd ..
          make sm-linters
        
  buflint:
   runs-on: ubuntu-latest
   steps:
     - uses: actions/checkout@v2
     - name: buflint 
       env:
        BUF_VERSION: 1.0.0   
       run: |
         sudo mkdir -p /go/src/github.com/onosproject
         cd /go/src/github.com/onosproject
         sudo git clone https://github.com/onosproject/onos-e2-sm.git
         sudo git clone https://github.com/onosproject/onos-lib-go.git
         cd /go/src/github.com/onosproject/onos-e2-sm
         docker run \
                   -v `pwd`:/go/src/github.com/onosproject/onos-e2-sm \
                   -v `pwd`/../onos-lib-go/api/asn1:/go/src/github.com/onosproject/onos-e2-sm/servicemodels/asn1 \
                   -w /go/src/github.com/onosproject/onos-e2-sm/servicemodels \
                    bufbuild/buf:${BUF_VERSION} lint

  protos:
   runs-on: ubuntu-latest
   steps:
     - uses: actions/checkout@v4
     - name: protos
       env:
        ONOS_PROTOC_VERSION: v1.0.2  
       run: |
         sudo mkdir -p /go/src/github.com/onosproject
         cd /go/src/github.com/onosproject
         sudo git clone https://github.com/onosproject/onos-e2-sm.git
         sudo git clone https://github.com/onosproject/onos-lib-go.git
         cd /go/src/github.com/onosproject/onos-e2-sm
         docker run \
                   -v `pwd`:/go/src/github.com/onosproject/onos-e2-sm \
                   -v `pwd`/../onos-lib-go:/go/src/github.com/onosproject/onos-lib-go \
                   -w /go/src/github.com/onosproject/onos-e2-sm \
                   --entrypoint /go/src/github.com/onosproject/onos-e2-sm/build/bin/compile-protos.sh \
                   onosproject/protoc-go:${ONOS_PROTOC_VERSION}

  protos-py:
   runs-on: ubuntu-latest
   steps:
     - uses: actions/checkout@v4
     - name: protos-py
       env:
        ONOS_PROTOC_VERSION: v1.0.2
       run: |
         sudo mkdir -p /go/src/github.com/onosproject
         cd /go/src/github.com/onosproject
         sudo git clone https://github.com/onosproject/onos-e2-sm.git
         sudo git clone https://github.com/onosproject/onos-lib-go.git
         cd /go/src/github.com/onosproject/onos-e2-sm
         docker run \
                   -v `pwd`:/go/src/github.com/onosproject/onos-e2-sm \
                   -v `pwd`/../onos-lib-go:/go/src/github.com/onosproject/onos-lib-go \
                   -w /go/src/github.com/onosproject/onos-e2-sm \
                   --entrypoint /go/src/github.com/onosproject/onos-e2-sm/build/bin/compile-protos-py.sh \
                   onosproject/protoc-go:${ONOS_PROTOC_VERSION}        
        

  docker:
   runs-on: ubuntu-latest
   steps:
     - uses: actions/checkout@v4
     - name: docker-build
       run: make images





