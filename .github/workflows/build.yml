# SPDX-License-Identifier: Apache-2.0
# Copyright 2024 Intel Corporation
name: Build
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  e2sm_kpm:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./servicemodels/e2sm_kpm
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Build
        run: CGO_ENABLED=1 go build -o build/_output/e2sm_kpm.so.1.0.0 -buildmode=plugin .

  e2sm_kpm_v2:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./servicemodels/e2sm_kpm_v2
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Build
        run: CGO_ENABLED=1 go build -o build/_output/e2sm_kpm_v2.so.1.0.0 -buildmode=plugin .

  e2sm_kpm_v2_go:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./servicemodels/e2sm_kpm_v2_go
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Build
        run: go build -o build/_output/e2sm_kpm_v2_go.so.1.0.0 -buildmode=plugin .

  e2sm_rc:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./servicemodels/e2sm_rc
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Build
        run: CGO_ENABLED=1 go build -o build/_output/e2sm_rc.so.1.0.0 -buildmode=plugin .

  e2sm_rc_pre:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./servicemodels/e2sm_rc_pre
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Build
        run: CGO_ENABLED=1 go build -o build/_output/e2sm_rc_pre.so.1.0.0 -buildmode=plugin .

  e2sm_rc_pre_go:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./servicemodels/e2sm_rc_pre_go
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Build
        run: go build -o build/_output/e2sm_rc_pre_go.so.1.0.0 -buildmode=plugin .

  e2sm_mho:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./servicemodels/e2sm_mho
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Build
        run: CGO_ENABLED=1 go build -o build/_output/e2sm_mho.so.1.0.0 -buildmode=plugin .

  e2sm_mho_go:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./servicemodels/e2sm_mho_go
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Build
        run: go build -o build/_output/e2sm_mho_go.so.1.0.0 -buildmode=plugin .

  e2sm_ni:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./servicemodels/e2sm_ni
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Build
        run: CGO_ENABLED=1 go build -o build/_output/e2sm_ni.so.1.0.0 -buildmode=plugin .

  e2sm_rsm:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./servicemodels/e2sm_rsm
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Build
        run: go build -o build/_output/e2sm_rsm.so.1.0.0 -buildmode=plugin .

  protoc_gen_cgo:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./protoc-gen-cgo
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Build
        run: go build -v -o ./protoc-gen-cgo

  protoc_gen_choice:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./protoc-gen-choice
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Build
        run: go build -v -o ./protoc-gen-choice && go install

  protoc_gen_builder:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./protoc-gen-builder
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Build
        run: go build -v -o ./protoc-gen-builder && go install
