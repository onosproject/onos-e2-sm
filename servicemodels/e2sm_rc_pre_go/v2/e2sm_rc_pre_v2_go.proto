/*
SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>

SPDX-License-Identifier: Apache-2.0
*/

////////////////////// e2sm-rc-pre-ies.proto //////////////////////
// Protobuf generated from /e2sm_rc_pre_v2.asn by asn1c-0.9.29
// E2SM-RC-PRE-IEs { iso(1) identified-organization(3) dod(6) internet(1) private(4) enterprise(1) oran(53148) e2(1) version2(2) e2sm(2) e2sm-RC-PRE-IEs(100) }

syntax = "proto3";

package e2sm_rc_pre_go.v2;
option go_package = "github.com/onosproject/onos-e2-sm/servicemodels/e2sm_rc_pre_go/v2/e2sm-rc-pre-v2-go";

import "validate/v1/validate.proto";
import "asn1/v1/asn1.proto";

// enumerated from e2sm_rc_pre_v2.asn:50
//{Cell-Size}
enum CellSize {
    CELL_SIZE_FEMTO = 0;
    CELL_SIZE_ENTERPRISE = 1;
    CELL_SIZE_OUTDOOR_SMALL = 2;
    CELL_SIZE_MACRO = 3;
};

// enumerated from e2sm_rc_pre_v2.asn:106
//{RANparameter-Type}
enum RanparameterType {
    RANPARAMETER_TYPE_INTEGER = 0;
    RANPARAMETER_TYPE_ENUMERATED = 1;
    RANPARAMETER_TYPE_BOOLEAN = 2;
    RANPARAMETER_TYPE_BIT_STRING = 3;
    RANPARAMETER_TYPE_OCTET_STRING = 4;
    RANPARAMETER_TYPE_PRINTABLE_STRING = 5;
};

// enumerated from e2sm_rc_pre_v2.asn:116
//{RC-PRE-Trigger-Type}
enum RcPreTriggerType {
    RC_PRE_TRIGGER_TYPE_UPON_CHANGE = 0;
    RC_PRE_TRIGGER_TYPE_PERIODIC = 1;
};

// enumerated from e2sm_rc_pre_v2.asn:202
//{RC-PRE-Command}
enum RcPreCommand {
    RC_PRE_COMMAND_SET_PARAMETERS = 0;
};

// sequence from e2sm_rc_pre_v2.asn:22
//{EUTRACGI}
message Eutracgi {
    PlmnIdentity p_lmn_identity = 1 [json_name="pLMN_Identity"];
    EutracellIdentity e_utracell_identity = 2 [json_name="eUTRACellIdentity"];
};

// sequence from e2sm_rc_pre_v2.asn:28
//{NRCGI}
message Nrcgi {
    PlmnIdentity p_lmn_identity = 1  [json_name="pLMN_Identity"];
    NrcellIdentity n_rcell_identity = 2 [json_name="nRCellIdentity"];
};

// sequence from e2sm_rc_pre_v2.asn:34
//{CellGlobalID}
message CellGlobalId {
    // choice from e2sm_rc_pre_v2.asn:34
    oneof cell_global_id {
        //@inject_tag: aper:"choiceIdx:1,valueExt"
        Nrcgi nr_cgi = 1 [json_name="nr_CGI"];
        //@inject_tag: aper:"choiceIdx:2,valueExt"
        Eutracgi e_utra_cgi = 2 [json_name="eUTRA_CGI"];
    }
};

// range of Integer from e2sm_rc_pre_v2.asn:40
//{EARFCN}
message Earfcn {
    //@inject_tag: aper:"valueLB:0,valueUB:262143"
    int32 value = 1 [(validate.v1.rules).int32 = {gte: 0, lte: 262143}, json_name="value"];
};

// range of Integer from e2sm_rc_pre_v2.asn:41
//{NRARFCN}
message Nrarfcn {
    //@inject_tag: aper:"valueLB:0,valueUB:3279167"
    int32 value = 1 [(validate.v1.rules).int32 = {gte: 0, lte: 3279167}, json_name="value"];
};

// range of Integer from e2sm_rc_pre_v2.asn:42
//{PCI}
message Pci {
    //@inject_tag: aper:"valueLB:0,valueUB:1007"
    int32 value = 1 [(validate.v1.rules).int32 = {gte: 0, lte: 1007}, json_name="value"];
};

// sequence from e2sm_rc_pre_v2.asn:45
//{ARFCN}
message Arfcn {
    // choice from e2sm_rc_pre_v2.asn:45
    oneof arfcn {
        //@inject_tag: aper:"choiceIdx:1"
        Earfcn e_arfcn = 1 [json_name="eARFCN"];
        //@inject_tag: aper:"choiceIdx:2"
        Nrarfcn nr_arfcn = 2 [json_name="nrARFCN"];
    }
};

// constant Integer from e2sm_rc_pre_v2.asn:59
//{-}
message MaxofMessageProtocolTests {
    int32 value = 1 [(validate.v1.rules).int32.const = 15];
};

// constant Integer from e2sm_rc_pre_v2.asn:60
//{-}
message MaxofRicstyles {
    int32 value = 1 [(validate.v1.rules).int32.const = 63];
};

// constant Integer from e2sm_rc_pre_v2.asn:61
//{-}
message MaxPlmn {
    int32 value = 1 [(validate.v1.rules).int32.const = 12];
};

// constant Integer from e2sm_rc_pre_v2.asn:62
//{-}
message MaxNr {
    int32 value = 1 [(validate.v1.rules).int32.const = 4096];
};

// constant Integer from e2sm_rc_pre_v2.asn:63
//{-}
message MaxEarfcn {
    int32 value = 1 [(validate.v1.rules).int32.const = 262143];
};

// constant Integer from e2sm_rc_pre_v2.asn:64
//{-}
message MaxNrarfcn {
    int32 value = 1 [(validate.v1.rules).int32.const = 3279167];
};

// constant Integer from e2sm_rc_pre_v2.asn:65
//{-}
message MaxPci {
    int32 value = 1 [(validate.v1.rules).int32.const = 1007];
};

// constant Integer from e2sm_rc_pre_v2.asn:66
//{-}
message MaxPciRange {
    int32 value = 1 [(validate.v1.rules).int32.const = 100];
};

// constant Integer from e2sm_rc_pre_v2.asn:67
//{-}
message MaxofRanparameters {
    int32 value = 1 [(validate.v1.rules).int32.const = 65535];
};

// range of Integer from e2sm_rc_pre_v2.asn:70
//{RIC-Style-Type}
message RicStyleType {
    //@inject_tag: aper:"valueLB:0,valueUB:255,valueExt"
    int32 value = 1 [json_name="value"];
};

// range of Integer from e2sm_rc_pre_v2.asn:77
//{RIC-Format-Type}
message RicFormatType {
    //@inject_tag: aper:"valueLB:0,valueUB:255,valueExt"
    int32 value = 1 [json_name="value"];
};

// range of Integer from e2sm_rc_pre_v2.asn:79
//{RIC-Control-Message-Priority}
message RicControlMessagePriority {
    //@inject_tag: aper:"valueLB:0,valueUB:255,valueExt"
    int32 value = 1 [json_name="value"];
};

// sequence from e2sm_rc_pre_v2.asn:80
//{RANparameter-Item}
message RanparameterItem {
    RanparameterId ran_parameter_id = 1 [json_name="ranParameter_ID"];
};

// range of Integer from e2sm_rc_pre_v2.asn:84
//{RANparameter-ID}
message RanparameterId {
    //@inject_tag: aper:"valueLB:0,valueUB:65535"
    int32 value = 1 [(validate.v1.rules).int32 = {gte: 0, lte: 65535}, json_name="value"];
};

// sequence from e2sm_rc_pre_v2.asn:87
//{RANparameter-Value}
message RanparameterValue {
    // choice from e2sm_rc_pre_v2.asn:87
    oneof ranparameter_value {
        //@inject_tag: aper:"choiceIdx:1,valueLB:0,valueUB:4294967295"
        int64 value_int = 1 [json_name="valueInt"];
        //@inject_tag: aper:"choiceIdx:2"
        int32 value_enum = 2 [json_name="valueEnum"];
        //@inject_tag: aper:"choiceIdx:3"
        bool value_bool = 3 [json_name="valueBool"];
        //@inject_tag: aper:"choiceIdx:4"
        asn1.v1.BitString value_bit_s = 4 [json_name="valueBitS"];
        //@inject_tag: aper:"choiceIdx:5"
        string value_oct_s = 5 [json_name="valueOctS"];
        //@inject_tag: aper:"choiceIdx:6"
        string value_prt_s = 6 [json_name="valuePrtS"];
    }
};

// sequence from e2sm_rc_pre_v2.asn:97
//{RANparameterDef-Item}
message RanparameterDefItem {
    RanparameterId ran_parameter_id = 1 [json_name="ranParameter_ID"];
    RanparameterName ran_parameter_name = 2 [json_name="ranParameter_Name"];
    //@inject_tag: aper:"valueLB:0,valueUB:5,valueExt"
    RanparameterType ran_parameter_type = 3 [json_name="ranParameter_Type"];
};

// sequence from e2sm_rc_pre_v2.asn:130
//{E2SM-RC-PRE-EventTriggerDefinition}
message E2SmRcPreEventTriggerDefinition {
    // @inject_tag: aper:"choiceExt"
    EventTriggerDefinitionFormats event_definition_formats = 1 [json_name = "eventDefinition-formats"];
};

message EventTriggerDefinitionFormats {
    oneof e2sm_rc_pre_event_trigger_definition_event_definition_formats {
        // @inject_tag: aper:"choiceIdx:1,valueExt"
        E2SmRcPreEventTriggerDefinitionFormat1 event_definition_format1 = 1 [json_name="E2SM_RC_PRE_EventTriggerDefinition__eventDefinition_Format1"];
    }
}


// sequence from e2sm_rc_pre_v2.asn:135
//{E2SM-RC-PRE-EventTriggerDefinition-Format1}
message E2SmRcPreEventTriggerDefinitionFormat1 {
    //@inject_tag: aper:"valueLB:0,valueUB:1,valueExt"
    RcPreTriggerType trigger_type = 1 [json_name="triggerType"];
    //@inject_tag: aper:"optional,valueLB:1,valueUB:4294967295"
    optional int64 reporting_period_ms = 2 [json_name="reportingPeriod_ms:OPTIONAL"];
};

// sequence from e2sm_rc_pre_v2.asn:146
//{E2SM-RC-PRE-IndicationHeader}
message E2SmRcPreIndicationHeader {
    // choice from e2sm_rc_pre_v2.asn:146
    oneof e2_sm_rc_pre_indication_header {
        // @inject_tag: aper:"choiceIdx:1,valueExt"
        E2SmRcPreIndicationHeaderFormat1 indication_header_format1 = 1 [json_name="indicationHeader_Format1"];
    }
};

// sequence from e2sm_rc_pre_v2.asn:152
//{E2SM-RC-PRE-IndicationHeader-Format1} -- the only instance is OPTIONAL - any reason to treat it differently?
message E2SmRcPreIndicationHeaderFormat1 {
    //@inject_tag: aper:"optional,choiceExt"
   optional CellGlobalId cgi = 1 [json_name="cgi"];
};

// sequence from e2sm_rc_pre_v2.asn:162
//{E2SM-RC-PRE-IndicationMessage}
message E2SmRcPreIndicationMessage {
    // choice from e2sm_rc_pre_v2.asn:162
    oneof e2_sm_rc_pre_indication_message {
        // @inject_tag: aper:"choiceIdx:1"
        RicStyleType ric_style_type = 1 [json_name="ric_Style_Type"];
        // @inject_tag: aper:"choiceIdx:2,valueExt"
        E2SmRcPreIndicationMessageFormat1 indication_message_format1 = 2 [json_name="indicationMessage_Format1"];
    }
};

// sequence from e2sm_rc_pre_v2.asn:169
//{E2SM-RC-PRE-IndicationMessage-Format1}
message E2SmRcPreIndicationMessageFormat1 {
    Arfcn dl_arfcn = 1 [json_name="dl_ARFCN"];
    //@inject_tag: aper:"valueLB:0,valueUB:3,valueExt"
    CellSize cell_size = 2 [json_name="cell_Size"];
    Pci pci = 3 [json_name="pci"];
    // @inject_tag: aper:"sizeLB:0,sizeUB:4096,valueExt"
    repeated Nrt neighbors = 4 [(validate.v1.rules).repeated = {min_items: 0, max_items: 4096}, json_name="neighbors"];
};

// sequence from e2sm_rc_pre_v2.asn:177
//{NRT}
message Nrt {
    //@inject_tag: aper:"choiceExt"
    CellGlobalId cgi = 1 [json_name="cgi"];
    Arfcn dl_arfcn = 2 [json_name="dl_ARFCN"];
    //@inject_tag: aper:"valueLB:0,valueUB:3,valueExt"
    CellSize cell_size = 3 [json_name="cell_Size"];
    Pci pci = 4 [json_name="pci"];
};

// sequence from e2sm_rc_pre_v2.asn:190
//{E2SM-RC-PRE-ControlHeader}
message E2SmRcPreControlHeader {
    // choice from e2sm_rc_pre_v2.asn:190
    oneof e2_sm_rc_pre_control_header {
        // @inject_tag: aper:"choiceIdx:1,valueExt"
        E2SmRcPreControlHeaderFormat1 control_header_format1 = 1 [json_name="controlHeader_Format1"];
    }
};

// sequence from e2sm_rc_pre_v2.asn:196
//{E2SM-RC-PRE-ControlHeader-Format1}
message E2SmRcPreControlHeaderFormat1 {
    //@inject_tag: aper:"optional,choiceExt"
    optional CellGlobalId cgi = 1 [json_name="cgi:OPTIONAL"];
    // @inject_tag: aper:"valueLB:0,valueUB:0,valueExt"
    RcPreCommand rc_command = 2 [json_name="rc_command"];
    // @inject_tag: aper:"optional"
    optional RicControlMessagePriority ric_control_message_priority = 3 [json_name="ric_Control_Message_Priority:OPTIONAL"];
};

// sequence from e2sm_rc_pre_v2.asn:211
//{E2SM-RC-PRE-ControlMessage}
message E2SmRcPreControlMessage {
    // choice from e2sm_rc_pre_v2.asn:211
    oneof e2_sm_rc_pre_control_message {
        // @inject_tag: aper:"choiceIdx:1,valueExt"
        E2SmRcPreControlMessageFormat1 control_message = 1 [json_name="controlMessage"];
    }
};

// sequence from e2sm_rc_pre_v2.asn:217
//{E2SM-RC-PRE-ControlMessage-Format1}
message E2SmRcPreControlMessageFormat1 {
    //@inject_tag: aper:"valueExt"
    RanparameterDefItem parameter_type = 1 [json_name="parameterType"];
    //@inject_tag: aper:"choiceExt"
    RanparameterValue parameter_val = 2 [json_name="parameterVal"];
};

// sequence from e2sm_rc_pre_v2.asn:228
message E2SmRcPreControlOutcome {
    // choice from e2sm_rc_pre_v2.asn:228
    oneof e2_sm_rc_pre_control_outcome {
        // @inject_tag: aper:"choiceIdx:1,valueExt"
        E2SmRcPreControlOutcomeFormat1 control_outcome_format1 = 1 [json_name="controlOutcome_Format1"];
    }
};

// sequence from e2sm_rc_pre_v2.asn:234
//{E2SM-RC-PRE-ControlOutcome-Format1}
message E2SmRcPreControlOutcomeFormat1 {
    //@inject_tag: aper:"optional,valueExt,sizeLB:1,sizeUB:65535"
    repeated RanparameterItem outcome_element_list = 1 [(validate.v1.rules).repeated = {min_items: 1, max_items: 65535}, json_name="outcomeElement_List"];
};

// sequence from e2sm_rc_pre_v2.asn:244
//{E2SM-RC-PRE-RANfunction-Description}
message E2SmRcPreRanfunctionDescription {
    // @inject_tag: aper:"valueExt"
    RanfunctionName ran_function_name = 1 [json_name="ranFunction_Name"];
    // @inject_tag: aper:"valueExt"
    E2SmRcPreRanfunctionItem001 e2_sm_rc_pre_ranfunction_item = 2 [json_name="e2SM_RC_PRE_RANfunction_Item"];

    //{E2SM-RC-PRE-RANfunction-Item001}
    message E2SmRcPreRanfunctionItem001 {
        // @inject_tag: aper:"optional,valueExt,sizeLB:1,sizeUB:63"
        repeated RicEventTriggerStyleList ric_event_trigger_style_list = 1 [(validate.v1.rules).repeated = {min_items: 1, max_items: 63}, json_name="ric_EventTriggerStyle_List:OPTIONAL"];
        // @inject_tag: aper:"optional,valueExt,sizeLB:1,sizeUB:63"
        repeated RicReportStyleList ric_report_style_list = 2 [(validate.v1.rules).repeated = {min_items: 1, max_items: 63}, json_name="ric_ReportStyle_List:OPTIONAL"];
    }
};

// sequence from e2sm_rc_pre_v2.asn:254
//{RANfunction-Name}
message RanfunctionName {
    // @inject_tag: aper:"sizeLB:1,sizeUB:150,sizeExt"
    string ran_function_short_name = 1 [(validate.v1.rules).string = {min_len: 1, max_len: 150}, json_name="ranFunction_ShortName"];
    // @inject_tag: aper:"sizeLB:1,sizeUB:1000,sizeExt"
    string ran_function_e2_sm_oid = 2 [(validate.v1.rules).string = {min_len: 1, max_len: 1000}, json_name="ranFunction_E2SM_OID"];
    // @inject_tag: aper:"sizeLB:1,sizeUB:150,sizeExt"
    string ran_function_description = 3 [(validate.v1.rules).string = {min_len: 1, max_len: 150}, json_name="ranFunction_Description"];
    // @inject_tag: aper:"optional,valueLB:0,valueUB:255,valueExt"
    optional int32 ran_function_instance = 4 [json_name="ranFunction_Instance:OPTIONAL"];
};

// sequence from e2sm_rc_pre_v2.asn:262
//{RIC-EventTriggerStyle-List}
message RicEventTriggerStyleList {
    RicStyleType ric_event_trigger_style_type = 1 [json_name="ric_EventTriggerStyle_Type"];
    RicStyleName ric_event_trigger_style_name = 2 [json_name="ric_EventTriggerStyle_Name"];
    RicFormatType ric_event_trigger_format_type = 3 [json_name="ric_EventTriggerFormat_Type"];
};

// sequence from e2sm_rc_pre_v2.asn:269
//{RIC-ReportStyle-List}
message RicReportStyleList {
    RicStyleType ric_report_style_type = 1 [json_name="ric_ReportStyle_Type"];
    RicStyleName ric_report_style_name = 2 [json_name="ric_ReportStyle_Name"];
    RicFormatType ric_indication_header_format_type = 3 [json_name="ric_IndicationHeaderFormat_Type"];
    RicFormatType ric_indication_message_format_type = 4 [json_name="ric_IndicationMessageFormat_Type"];
};

//{RANparameter-Name}
message RanparameterName {
    //@inject_tag: aper:"sizeLB:1,sizeUB:150,sizeExt"
    string value = 1 [(validate.v1.rules).string = {min_len: 1, max_len: 150}, json_name="value"];
}

//{RIC-Style-Name}
message RicStyleName {
    //@inject_tag: aper:"sizeLB:1,sizeUB:150,sizeExt"
    string value = 1 [(validate.v1.rules).string = {min_len: 1, max_len: 150}, json_name="value"];
}

message PlmnIdentity {
    //@inject_tag: aper:"sizeLB:3,sizeUB:3"
    bytes value = 1 [(validate.v1.rules).bytes.len = 3, json_name="PLMN-Identity:value"];
}

message EutracellIdentity {
    //@inject_tag: aper:"sizeLB:28,sizeUB:28"
    asn1.v1.BitString value = 1 [json_name="EUTRACellIdentity:value"]; //28
}

message NrcellIdentity {
    //@inject_tag: aper:"sizeLB:36,sizeUB:36"
    asn1.v1.BitString value = 1 [json_name="NRCellIdentity:value"]; //36
}
