/*
SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>

SPDX-License-Identifier: LicenseRef-ONF-Member-1.0
*/

////////////////////// e2sm-kpm-ies.proto //////////////////////
// Protobuf generated from /e2sm_kpm_v2.0.2-rm.asn by asn1c-0.9.29
// E2SM-KPM-IEs { iso(1) identified-organization(3) dod(6) internet(1) private(4) enterprise(1) oran(53148) e2(1) version2(2) e2sm(2) e2sm-KPMMON-IEs(2) }

// It is KPM v2.0.3-rm
syntax = "proto3";

package e2sm_kpm_v2.v2;
option go_package = "github.com/onosproject/onos-e2-sm/servicemodels/e2sm_kpm_v2/v2/e2sm-kpm-v2;e2sm_kpm_v2";

import "validate/v1/validate.proto";

// enumerated from e2sm_kpm_v2.0.2-rm.asn:116
//{TestCond-Expression}
enum TestCondExpression {
    TEST_COND_EXPRESSION_EQUAL = 0;
    TEST_COND_EXPRESSION_GREATERTHAN = 1;
    TEST_COND_EXPRESSION_LESSTHAN = 2;
    TEST_COND_EXPRESSION_CONTAINS = 3;
    TEST_COND_EXPRESSION_PRESENT = 4;
};

// enumerated from e2sm_kpm_v2.0.2-rm.asn1:106
//{-}
enum GBR {
    GBR_TRUE = 0;
};

// enumerated from e2sm_kpm_v2.0.2-rm.asn1:107
//{-}
enum AMBR {
    AMBR_TRUE = 0;
};

// enumerated from e2sm_kpm_v2.0.2-rm.asn1:108
//{-}
enum ISSTAT {
    ISSTAT_TRUE = 0;
};

// enumerated from e2sm_kpm_v2.0.2-rm.asn1:109
//{-}
enum ISCATM {
    ISCATM_TRUE = 0;
};

// enumerated from e2sm_kpm_v2.0.2-rm.asn1:110
//{-}
enum RSRP {
    RSRP_TRUE = 0;
};

// enumerated from e2sm_kpm_v2.0.2-rm.asn1:111
//{-}
enum RSRQ {
    RSRQ_TRUE = 0;
};

// enumerated from e2sm_kpm_v2.0.2-rm.asn1:272
//{-}
enum IncompleteFlag {
    INCOMPLETE_FLAG_TRUE = 0;
};

// enumerated from e2sm_kpm_v2.0.2-rm.asn1:82
//{-}
enum SUM {
    SUM_TRUE = 0;
};

// enumerated from e2sm_kpm_v2.0.2-rm.asn1:86
//{-}
enum PreLabelOverride {
    PRE_LABEL_OVERRIDE_TRUE = 0;
};

// enumerated from e2sm_kpm_v2.0.2-rm.asn1:87
//{-}
enum StartEndInd {
    START_END_IND_START = 0;
    START_END_IND_END = 1;
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:24
//{EUTRACGI}
message Eutracgi {
    PlmnIdentity p_lmn_identity = 1 [json_name = "pLMN_Identity"];
    EutracellIdentity e_utracell_identity = 2 [json_name = "eUTRACellIdentity"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:30
//{NRCGI}
message Nrcgi {
    PlmnIdentity p_lmn_identity = 1 [json_name = "pLMN_Identity"];
    NrcellIdentity n_rcell_identity = 2 [json_name = "nRCellIdentity"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:36
//{CellGlobalID}
message CellGlobalId {
    // choice from e2sm_kpm_v2.0.2-rm.asn:36
    oneof cell_global_id {
        Nrcgi nr_cgi = 1 [json_name = "nr_CGI"];
        Eutracgi e_utra_cgi = 2 [json_name = "eUTRA_CGI"];
    }
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:42
//{SNSSAI}
message Snssai {
    bytes s_st = 1 [(validate.v1.rules).bytes.len = 1, json_name = "sST"];
    bytes s_d = 2 [(validate.v1.rules).bytes.len = 3, json_name = "sD:OPTIONAL"];
};

// range of Integer from e2sm_kpm_v2.0.2-rm.asn:47
//{FiveQI}
message FiveQi {
    int32 value = 1 [(validate.v1.rules).int32 = {gte: 0, lte: 255}, json_name = "value"];
};

// range of Integer from e2sm_kpm_v2.0.2-rm.asn:49
//{QCI}
message Qci {
    int32 value = 1 [(validate.v1.rules).int32 = {gte: 0, lte: 255}, json_name = "value"];
};

// range of Integer from e2sm_kpm_v2.0.2-rm.asn:51
//{QFI}
message Qfi {
    int32 value = 1 [(validate.v1.rules).int32 = {gte: 0, lte: 63}, json_name = "value"];
};

// range of Integer from e2sm_kpm_v2.0.2-rm.asn:53
//{ARP}
message Arp {
    int32 value = 1 [(validate.v1.rules).int32 = {gte: 1, lte: 15}, json_name = "value"];
};

// range of Integer from e2sm_kpm_v2.0.2-rm.asn:65
//{GranularityPeriod}
message GranularityPeriod {
    uint32 value = 1 [json_name = "value"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:66
//{MeasurementType}
message MeasurementType {
    // choice from e2sm_kpm_v2.0.2-rm.asn:66
    oneof measurement_type {
        MeasurementTypeName meas_name = 1 [json_name = "measName"];
        MeasurementTypeId meas_id = 2 [json_name = "measID"];
    }
};

// range of Integer from e2sm_kpm_v2.0.2-rm.asn:73
//{MeasurementTypeID}
message MeasurementTypeId {
    int32 value = 1 [(validate.v1.rules).int32 = {gte: 1, lte: 65536}, json_name = "value"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:76
//{MeasurementLabel}
message MeasurementLabel {
    PlmnIdentity plmn_id = 1 [json_name = "plmnID:OPTIONAL"];
    Snssai slice_id = 2 [json_name = "sliceID:OPTIONAL"];
    FiveQi five_qi = 3 [json_name = "fiveQI:OPTIONAL"];
    Qfi q_fi = 4 [json_name = "qFI:OPTIONAL"];
    Qci q_ci = 5 [json_name = "qCI:OPTIONAL"];
    Qci q_cimax = 6 [json_name = "qCImax:OPTIONAL"];
    Qci q_cimin = 7 [json_name = "qCImin:OPTIONAL"];
    Arp a_rpmax = 8 [json_name = "aRPmax:OPTIONAL"];
    Arp a_rpmin = 9 [json_name = "aRPmin:OPTIONAL"];
    int32 bitrate_range = 10  [(validate.v1.rules).int32 = {gte: 1, lte: 65536}, json_name = "bitrateRange:OPTIONAL"];
    int32 layer_mu_mimo = 11 [(validate.v1.rules).int32 = {gte: 1, lte: 65536}, json_name = "layerMU_MIMO:OPTIONAL"];
    SUM s_um = 12 [json_name = "sUM:OPTIONAL"];
    int32 dist_bin_x = 13 [(validate.v1.rules).int32 = {gte: 1, lte: 65536}, json_name = "distBinX:OPTIONAL"];
    int32 dist_bin_y = 14 [(validate.v1.rules).int32 = {gte: 1, lte: 65536}, json_name = "distBinY:OPTIONAL"];
    int32 dist_bin_z = 15 [(validate.v1.rules).int32 = {gte: 1, lte: 65536}, json_name = "distBinZ:OPTIONAL"];
    PreLabelOverride pre_label_override = 16 [json_name = "preLabelOverride:OPTIONAL"];
    StartEndInd start_end_ind = 17 [json_name = "startEndInd:OPTIONAL"];
};

// range of Integer from e2sm_kpm_v2.0.2-rm.asn:96
//{SubscriptionID}
message SubscriptionId {
    int64 value = 1 [(validate.v1.rules).int64 = {gte: 1, lte: 4294967296}, json_name = "value"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:99
//{TestCondInfo}
message TestCondInfo {
    TestCondType test_type = 1 [json_name = "testType"];
    TestCondExpression test_expr = 2 [json_name = "testExpr"];
    TestCondValue test_value = 3 [json_name = "testValue"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:106
//{TestCond-Type}
message TestCondType {
    // choice from e2sm_kpm_v2.0.2-rm.asn:106
    oneof test_cond_type {
        GBR g_br = 1 [json_name = "gBR"];
        AMBR a_mbr = 2 [json_name = "aMBR"];
        ISSTAT is_stat = 3 [json_name = "isStat"];
        ISCATM is_cat_m = 4 [json_name = "isCatM"];
        RSRP r_srp = 5 [json_name = "rSRP"];
        RSRQ r_srq = 6 [json_name = "rSRQ"];
    }
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:125
//{TestCond-Value}
message TestCondValue {
    // choice from e2sm_kpm_v2.0.2-rm.asn:125
    oneof test_cond_value {
        int64 value_int = 1 [json_name = "valueInt"];
        int64 value_enum = 2 [json_name = "valueEnum"];
        bool value_bool = 3 [json_name = "valueBool"];
        BitString value_bit_s = 4 [json_name = "valueBitS"];
        string value_oct_s = 5 [json_name = "valueOctS"];
        string value_prt_s = 6 [json_name = "valuePrtS"];
    }
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:137
//{GlobalKPMv2node-ID}
message GlobalKpmnodeId {
    // choice from e2sm_kpm_v2.0.2-rm.asn:137
    oneof global_kpmnode_id {
        GlobalKpmnodeGnbId g_nb = 1 [json_name = "gNB"];
        GlobalKpmnodeEnGnbId en_g_nb = 2 [json_name = "en_gNB"];
        GlobalKpmnodeNgEnbId ng_e_nb = 3 [json_name = "ng_eNB"];
        GlobalKpmnodeEnbId e_nb = 4 [json_name = "eNB"];
    }
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:145
//{GlobalKPMv2node-gNB-ID}
message GlobalKpmnodeGnbId {
    GlobalgNbId global_g_nb_id = 1 [json_name = "global_gNB_ID"];
    GnbCuUpId g_nb_cu_up_id = 2 [json_name = "gNB_CU_UP_ID:OPTIONAL"];
    GnbDuId g_nb_du_id = 3 [json_name = "gNB_DU_ID:OPTIONAL"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:152
//{GlobalgNB-ID}
message GlobalgNbId {
    PlmnIdentity plmn_id = 1 [json_name = "plmn_id"];
    GnbIdChoice gnb_id = 2 [json_name = "gnb_id"];
};

// range of Integer from e2sm_kpm_v2.0.2-rm.asn:157
//{GNB-CU-UP-ID}
message GnbCuUpId {
    int64 value = 1 [(validate.v1.rules).int64 = {gte: 0, lte: 68719476735}, json_name = "value"];
};

// range of Integer from e2sm_kpm_v2.0.2-rm.asn:159
//{GNB-DU-ID}
message GnbDuId {
    int64 value = 1 [(validate.v1.rules).int64 = {gte: 0, lte: 68719476735}, json_name = "value"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:162
//{GNB-ID-Choice}
message GnbIdChoice {
    // choice from e2sm_kpm_v2.0.2-rm.asn:162
    oneof gnb_id_choice {
        BitString gnb_id = 1 [json_name = "gnb_ID"];
    }
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:167
//{GlobalKPMv2node-en-gNB-ID}
message GlobalKpmnodeEnGnbId {
    GlobalenGnbId global_g_nb_id = 1 [json_name = "global_gNB_ID"];
    GnbCuUpId g_nb_cu_up_id = 2 [json_name = "gNB_CU_UP_ID:OPTIONAL"];
    GnbDuId g_nb_du_id = 3 [json_name = "gNB_DU_ID:OPTIONAL"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:174
//{GlobalenGNB-ID}
message GlobalenGnbId {
    PlmnIdentity p_lmn_identity = 1 [json_name = "pLMN_Identity"];
    EngnbId g_nb_id = 2 [json_name = "gNB_ID"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:180
//{ENGNB-ID}
message EngnbId {
    // choice from e2sm_kpm_v2.0.2-rm.asn:180
    oneof engnb_id {
        BitString g_nb_id = 1 [json_name = "gNB_ID"];
    }
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:185
//{GlobalKPMv2node-ng-eNB-ID}
message GlobalKpmnodeNgEnbId {
    GlobalngeNbId global_ng_e_nb_id = 1 [json_name = "global_ng_eNB_ID"];
    GnbDuId g_nb_du_id = 2 [json_name = "gNB_DU_ID:OPTIONAL"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:191
//{GlobalngeNB-ID-KPMv2}
message GlobalngeNbId {
    PlmnIdentity plmn_id = 1 [json_name = "plmn_id"];
    EnbIdChoice enb_id = 2 [json_name = "enb_id"];
    BitString short_macro_e_nb_id = 3 [json_name = "short_Macro_eNB_ID"];
    BitString long_macro_e_nb_id = 4 [json_name = "long_Macro_eNB_ID"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:199
//{ENB-ID-Choice}
message EnbIdChoice {
    // choice from e2sm_kpm_v2.0.2-rm.asn:199
    oneof enb_id_choice {
        BitString enb_id_macro = 1 [json_name = "enb_ID_macro"];
        BitString enb_id_shortmacro = 2 [json_name = "enb_ID_shortmacro"];
        BitString enb_id_longmacro = 3 [json_name = "enb_ID_longmacro"];
    }
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:206
//{GlobalKPMv2node-eNB-ID}
message GlobalKpmnodeEnbId {
    GlobalEnbId global_e_nb_id = 1 [json_name = "global_eNB_ID"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:211
//{GlobalENB-ID}
message GlobalEnbId {
    PlmnIdentity p_lmn_identity = 1 [json_name = "pLMN_Identity"];
    EnbId e_nb_id = 2 [json_name = "eNB_ID"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:217
//{ENB-ID-KPMv2}
message EnbId {
    // choice from e2sm_kpm_v2.0.2-rm.asn:217
    oneof enb_id {
        BitString macro_e_nb_id = 1 [json_name = "macro_eNB_ID"];
        BitString home_e_nb_id = 2 [json_name = "home_eNB_ID"];
    }
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:225
//{RANfunction-Name}
message RanfunctionName {
    string ran_function_short_name = 1 [json_name = "ranFunction_ShortName"];
    string ran_function_e2_sm_oid = 2 [json_name = "ranFunction_E2SM_OID"];
    string ran_function_description = 3 [json_name = "ranFunction_Decsription"];
    int32 ran_function_instance = 4 [json_name = "ranFunction_Instance:OPTIONAL"];
};

// range of Integer from e2sm_kpm_v2.0.2-rm.asn:234
//{RIC-Style-Type}
message RicStyleType {
    int32 value = 1 [json_name = "value"];
};

// range of Integer from e2sm_kpm_v2.0.2-rm.asn:242
//{RIC-Format-Type}
message RicFormatType {
    int32 value = 1 [json_name = "value"];
};

// constant Integer from e2sm_kpm_v2.0.2-rm.asn:242
//{-}
message MaxnoofKpmnodes {
    int32 value = 1 [(validate.v1.rules).int32.const = 1024, json_name = "value"];
};

// constant Integer from e2sm_kpm_v2.0.2-rm.asn:243
//{-}
message MaxnoofCells {
    int32 value = 1 [(validate.v1.rules).int32.const = 16384, json_name = "value"];
};

// constant Integer from e2sm_kpm_v2.0.2-rm.asn:244
//{-}
message MaxnoofRicstyles {
    int32 value = 1 [(validate.v1.rules).int32.const = 63, json_name = "value"];
};

// constant Integer from e2sm_kpm_v2.0.2-rm.asn:245
//{-}
message MaxnoofMeasurementInfo {
    int32 value = 1 [(validate.v1.rules).int32.const = 65536, json_name = "value"];
};

// constant Integer from e2sm_kpm_v2.0.2-rm.asn:246
//{-}
message MaxnoofLabelInfo {
    int64 value = 1 [(validate.v1.rules).int64.const = 2147483647, json_name = "value"];
};

// constant Integer from e2sm_kpm_v2.0.2-rm.asn:247
//{-}
message MaxnoofMeasurementRecord {
    int32 value = 1 [(validate.v1.rules).int32.const = 65536, json_name = "value"];
};

// constant Integer from e2sm_kpm_v2.0.2-rm.asn:248
//{-}
message MaxnoofMeasurementValue {
    int64 value = 1 [(validate.v1.rules).int64.const = 2147483647, json_name = "value"];
};

// constant Integer from e2sm_kpm_v2.0.2-rm.asn:249
//{-}
message MaxnoofConditionInfo {
    int32 value = 1 [(validate.v1.rules).int32.const = 32768, json_name="value"];
};

// constant Integer from e2sm_kpm_v2.0.2-rm.asn:250
//{-}
message MaxnoofUeid {
    int32 value = 1 [(validate.v1.rules).int32.const = 65535, json_name="value"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:255
//{MeasurementInfoList}
message MeasurementInfoList {
    repeated MeasurementInfoItem value = 1 [json_name = "value"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:256
//{MeasurementInfoItem}
message MeasurementInfoItem {
    MeasurementType meas_type = 1 [json_name = "measType"];
    LabelInfoList label_info_list = 2 [json_name = "labelInfoList:OPTIONAL"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:263
//{LabelInfoList}
message LabelInfoList {
    repeated LabelInfoItem value = 1 [json_name = "value"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:264
//{LabelInfoItem}
message LabelInfoItem {
    MeasurementLabel meas_label = 1 [json_name = "measLabel"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:270
//{MeasurementData}
message MeasurementData {
    repeated MeasurementDataItem value = 1 [json_name = "value"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:271
//{MeasurementDataItem}
message MeasurementDataItem {
    MeasurementRecord meas_record = 1 [json_name = "measRecord"];
    IncompleteFlag incomplete_flag = 2 [json_name = "incompleteFlag:OPTIONAL"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:278
//{MeasurementRecord}
message MeasurementRecord {
    repeated MeasurementRecordItem value = 1 [json_name = "value"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:279
//{MeasurementRecordItem}
message MeasurementRecordItem {
    // choice from e2sm_kpm_v2.0.2-rm.asn:279
    oneof measurement_record_item {
        int64 integer = 1 [json_name = "integer"];
        double real = 2 [json_name = "real"];
        int32 no_value = 3 [(validate.v1.rules).int32 = {gte: 0, lt: 1}, json_name = "noValue"];
    }
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:287
//{MeasurementInfo-Action-List}
message MeasurementInfoActionList {
    repeated MeasurementInfoActionItem value = 1 [json_name = "value"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:288
//{MeasurementInfo-Action-Item}
message MeasurementInfoActionItem {
    MeasurementTypeName meas_name = 1 [json_name = "measName"];
    MeasurementTypeId meas_id = 2 [json_name = "measID:OPTIONAL"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:295
//{MeasurementCondList}
message MeasurementCondList {
    repeated MeasurementCondItem value = 1 [json_name = "value"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:296
//{MeasurementCondItem}
message MeasurementCondItem {
    MeasurementType meas_type = 1 [json_name = "measType"];
    MatchingCondList matching_cond = 2 [json_name = "matchingCond"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:303
//{MeasurementCondUEidList}
message MeasurementCondUeidList {
    repeated MeasurementCondUeidItem value = 1 [json_name = "value"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:304
//{MeasurementCondUEidItem}
message MeasurementCondUeidItem {
    MeasurementType meas_type = 1 [json_name = "measType"];
    MatchingCondList matching_cond = 2 [json_name = "matchingCond"];
    MatchingUeidList matching_ueid_list = 3 [json_name = "matchingUEidList:OPTIONAL"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:312
//{MatchingCondList}
message MatchingCondList {
    repeated MatchingCondItem value = 1 [json_name = "value"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:313
//{MatchingCondItem}
message MatchingCondItem {
    // choice from e2sm_kpm_v2.0.2-rm.asn:313
    oneof matching_cond_item {
        MeasurementLabel meas_label = 1 [json_name = "measLabel"];
        TestCondInfo test_cond_info = 2 [json_name = "testCondInfo"];
    }
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:320
//{MatchingUEidList}
message MatchingUeidList {
    repeated MatchingUeidItem value = 1 [json_name = "value"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:321
//{MatchingUEidItem}
message MatchingUeidItem {
    UeIdentity ue_id = 1 [json_name = "ueID"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:337
//{E2SM-KPMv2-EventTriggerDefinition}
message E2SmKpmEventTriggerDefinition {
    // choice from e2sm-kpm-ies_v2.asn1:337
    oneof e2_sm_kpm_event_trigger_definition {
        E2SmKpmEventTriggerDefinitionFormat1 event_definition_format1 = 1 [json_name = "eventDefinition_Format1"];
    }
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:342
//{E2SM-KPMv2-EventTriggerDefinition-Format1}
message E2SmKpmEventTriggerDefinitionFormat1 {
    uint32 reporting_period = 1 [json_name = "reportingPeriod"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:351
//{E2SM-KPMv2-ActionDefinition}
message E2SmKpmActionDefinition {
    RicStyleType ric_style_type = 1 [json_name = "ric_Style_Type"];
    oneof e2_sm_kpm_action_definition {
        E2SmKpmActionDefinitionFormat1 action_definition_format1 = 2 [json_name = "actionDefinition_Format1"];
        E2SmKpmActionDefinitionFormat2 action_definition_format2 = 3 [json_name = "actionDefinition_Format2"];
        E2SmKpmActionDefinitionFormat3 action_definition_format3 = 4 [json_name = "actionDefinition_Format3"];
    }
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:362
//{E2SM-KPMv2-ActionDefinition-Format1}
message E2SmKpmActionDefinitionFormat1 {
    CellObjectId cell_obj_id = 1 [json_name = "cellObjID"];
    MeasurementInfoList meas_info_list = 2 [json_name = "measInfoList"];
    GranularityPeriod granul_period = 3 [json_name = "granulPeriod"];
    SubscriptionId subscript_id = 4 [json_name = "subscriptID"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:370
//{E2SM-KPMv2-ActionDefinition-Format2}
message E2SmKpmActionDefinitionFormat2 {
    UeIdentity ue_id = 1 [json_name = "ueID"];
    E2SmKpmActionDefinitionFormat1 subscript_info = 2 [json_name = "subscriptInfo"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:376
//{E2SM-KPMv2-ActionDefinition-Format3}
message E2SmKpmActionDefinitionFormat3 {
    CellObjectId cell_obj_id = 1 [json_name = "cellObjID"];
    MeasurementCondList meas_cond_list = 2 [json_name = "measCondList"];
    GranularityPeriod granul_period = 3 [json_name = "granulPeriod"];
    SubscriptionId subscript_id = 4 [json_name = "subscriptID"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:391
//{E2SM-KPMv2-IndicationHeader}
message E2SmKpmIndicationHeader {
    // choice from e2sm-kpm-v01.00.asn1:391
    oneof e2_sm_kpm_indication_header {
        E2SmKpmIndicationHeaderFormat1 indication_header_format1 = 1 [json_name = "indicationHeader_Format1"];
    }
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:396
//{E2SM-KPMv2-IndicationHeader-Format1}
message E2SmKpmIndicationHeaderFormat1 {
    TimeStamp collet_start_time = 1 [json_name = "colletStartTime"];
    string file_formatversion = 2 [json_name = "fileFormatversion:OPTIONAL"];
    string sender_name = 3 [json_name = "senderName:OPTIONAL"];
    string sender_type = 4 [json_name = "senderType:OPTIONAL"];
    string vendor_name = 5 [json_name = "vendorName:OPTIONAL"];
    GlobalKpmnodeId kpm_node_id = 6 [json_name = "kpmNodeID:OPTIONAL"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:414
//{E2SM-KPMv2-IndicationMessage}
message E2SmKpmIndicationMessage {
    // choice from e2sm_kpm_ies_v2.asn:414
    oneof e2_sm_kpm_indication_message {
        E2SmKpmIndicationMessageFormat1 indication_message_format1 = 1 [json_name = "indicationMessage_Format1"];
        E2SmKpmIndicationMessageFormat2 indication_message_format2 = 2 [json_name = "indicationMessage_Format2"];
    }
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:419
//{E2SM-KPMv2-IndicationMessage-Format1}
message E2SmKpmIndicationMessageFormat1 {
    SubscriptionId subscript_id = 1 [json_name = "subscriptID"];
    CellObjectId cell_obj_id = 2 [json_name = "cellObjID:OPTIONAL"];
    GranularityPeriod granul_period = 3 [json_name = "granulPeriod:OPTIONAL"];
    MeasurementInfoList meas_info_list = 4 [json_name = "measInfoList:OPTIONAL"];
    MeasurementData meas_data = 5 [json_name = "measData"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:428
//{E2SM-KPMv2-IndicationMessage-Format2}
message E2SmKpmIndicationMessageFormat2 {
    SubscriptionId subscript_id = 1 [json_name = "subscriptID"];
    CellObjectId cell_obj_id = 2 [json_name = "cellObjID:OPTIONAL"];
    GranularityPeriod granul_period = 3 [json_name = "granulPeriod:OPTIONAL"];
    MeasurementCondUeidList meas_cond_ueid_list = 4 [json_name = "measCondUEidList"];
    MeasurementData meas_data = 5 [json_name = "measData"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:441
//{E2SM-KPMv2-RANfunction-Description}
message E2SmKpmRanfunctionDescription {
    RanfunctionName ran_function_name = 1 [json_name = "ranFunction_Name"];
    repeated RicKpmnodeItem ric_kpm_node_list = 2 [(validate.v1.rules).repeated = {max_items: 1024}, json_name = "ric_KPM_Node_List:OPTIONAL"];
    repeated RicEventTriggerStyleItem ric_event_trigger_style_list = 3 [(validate.v1.rules).repeated = {max_items: 63}, json_name = "ric_EventTriggerStyle_List:OPTIONAL"];
    repeated RicReportStyleItem ric_report_style_list = 4 [(validate.v1.rules).repeated = {max_items: 63}, json_name = "ric_ReportStyle_List:OPTIONAL"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:449
//{RIC-KPMNode-Item}
message RicKpmnodeItem {
    GlobalKpmnodeId ric_kpmnode_type = 1 [json_name = "ric_KPMNode_Type"];
    repeated CellMeasurementObjectItem cell_measurement_object_list = 2 [(validate.v1.rules).repeated = {max_items: 16384}, json_name = "cell_Measurement_Object_List:OPTIONAL"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:455
//{Cell-Measurement-Object-Item}
message CellMeasurementObjectItem {
    CellObjectId cell_object_id = 1 [json_name = "cell_object_ID"];
    CellGlobalId cell_global_id = 2 [json_name = "cell_global_ID"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:461
//{RIC-EventTriggerStyle-Item}
message RicEventTriggerStyleItem {
    RicStyleType ric_event_trigger_style_type = 1 [json_name = "ric_EventTriggerStyle_Type"];
    RicStyleName ric_event_trigger_style_name = 2 [json_name = "ric_EventTriggerStyle_Name"];
    RicFormatType ric_event_trigger_format_type = 3 [json_name = "ric_EventTriggerFormat_Type"];
};

// sequence from e2sm_kpm_v2.0.2-rm.asn:468
//{RIC-ReportStyle-Item}
message RicReportStyleItem {
    RicStyleType ric_report_style_type = 1 [json_name = "ric_ReportStyle_Type"];
    RicStyleName ric_report_style_name = 2 [json_name = "ric_ReportStyle_Name"];
    RicFormatType ric_action_format_type = 3 [json_name = "ric_ActionFormat_Type"];
    MeasurementInfoActionList meas_info_action_list = 4 [json_name = "measInfo_Action_List"];
    RicFormatType ric_indication_header_format_type = 5 [json_name = "ric_IndicationHeaderFormat_Type"];
    RicFormatType ric_indication_message_format_type = 6 [json_name = "ric_IndicationMessageFormat_Type"];
};

//Additionally copied and pasted..

//{RIC-Style-Name}
message RicStyleName {
    string value = 1 [(validate.v1.rules).string = {min_len: 1, max_len: 150}, json_name = "value"];
}

//{CellObjectID}
message CellObjectId {
    string value = 1 [(validate.v1.rules).string = {min_len: 0, max_len: 400}, json_name = "value"];
}

//{MeasurementTypeName}
message MeasurementTypeName {
    string value = 1 [(validate.v1.rules).string = {min_len: 1, max_len: 150}, json_name = "value"];
}

//{UE-Identity}
message UeIdentity {
    string value = 1 [json_name = "value"];
}

//{PLMN-Identity}
message PlmnIdentity {
    bytes value = 1 [(validate.v1.rules).bytes.len = 3, json_name = "value"];
}

//{TimeStamp}
message TimeStamp {
    bytes value = 1 [(validate.v1.rules).bytes.len = 4, json_name = "value"];
}

//{EUTRACellIdentity}
message EutracellIdentity {
    BitString value = 1 [json_name = "value"]; //28
}

//{NRCellIdentity}
message NrcellIdentity {
    BitString value = 1 [json_name = "value"]; //36
}

//{BIT_STRING}
message BitString {
    uint64 value = 1 [json_name = "value"];
    uint32 len = 2 [(validate.v1.rules).uint32.lte = 64, json_name = "len"];
}
