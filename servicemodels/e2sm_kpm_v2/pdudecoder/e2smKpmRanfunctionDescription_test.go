// SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
//
// SPDX-License-Identifier: LicenseRef-ONF-Member-1.0

package pdudecoder

import (
	kpmctypes "github.com/onosproject/onos-e2-sm/servicemodels/e2sm_kpm_v2/kpmctypes"
	"gotest.tools/assert"
	"io/ioutil"
	"testing"
)

func Test_DecodeE2SmKpmRanfunctionDescription(t *testing.T) {
	e2smKpmRanfunctionDescription, err := ioutil.ReadFile("../test/E2SM-KPM-RANfunction-Description.xml")
	assert.NilError(t, err, "Unexpected error when loading file")
	e2SmKpmPdu, err := kpmctypes.XerDecodeE2SmKpmRanfunctionDescription(e2smKpmRanfunctionDescription)
	assert.NilError(t, err)

	ranFunctionName, ricEventList, ricReportList, err := DecodeE2SmKpmRanfunctionDescription(e2SmKpmPdu)
	assert.NilError(t, err)
	//assert.Assert(t, ranFunctionName != nil)
	assert.Equal(t, "1.3.6.1.4.1.53148.1.2.2.2", string(ranFunctionName.RanFunctionE2SmOid))
	//assert.Assert(t, ricEventList != nil)
	assert.Equal(t, 1, len(*ricEventList))
	//assert.Assert(t, ricReportList != nil)
	assert.Equal(t, 1, len(*ricReportList))
}

func Test_DecodeE2SmKpmRanfunctionDescriptionBytes(t *testing.T) {
	rfd, err := kpmctypes.PerDecodeE2SmKpmRanfunctionDescription(rfdKushal)
	assert.NilError(t, err)
	err = rfd.Validate()
	assert.NilError(t, err)
	assert.Equal(t, "ORAN-E2SM-KPM", rfd.GetRanFunctionName().GetRanFunctionShortName())
	assert.Equal(t, "KPM monitor", rfd.GetRanFunctionName().GetRanFunctionDescription())
	assert.Equal(t, "1.3.6.1.4.1.53148.1.2.2.2", rfd.GetRanFunctionName().GetRanFunctionE2SmOid())
	//assert.Equal(t, 21, int(rfd.GetRanFunctionName().GetRanFunctionInstance()))

	assert.Equal(t, 1, len(rfd.GetRicReportStyleList()))
	assert.Equal(t, 1, len(rfd.GetRicEventTriggerStyleList()))
}

//var ranFuncDescBytes = []byte{
//	0x74, 0x04, 0x6f, 0x6e, 0x66, 0x00, 0x00, 0x05, 0x6f, 0x69, 0x64, 0x31, 0x32, 0x33,
//	0x07, 0x00, 0x73, 0x6f, 0x6d, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x01, 0x15,
//	0x00, 0x00, 0x43, 0x00, 0x21, 0x22, 0x23, 0x00, 0xd4, 0xbc, 0x08, 0x80, 0x30, 0x39, 0x20, 0x1a, 0x85, 0x00, 0x00,
//	0x00, 0x00, 0x03, 0x4f, 0x4e, 0x46, 0x00, 0x21, 0x22, 0x23, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x01, 0x0b, 0x01,
//	0x00, 0x6f, 0x6e, 0x66, 0x01, 0x0f, 0x00, 0x01, 0x0b, 0x01, 0x00, 0x6f, 0x6e, 0x66, 0x01, 0x0f, 0x00, 0x00, 0x41,
//	0xa0, 0x4f, 0x70, 0x65, 0x6e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x00, 0x00, 0x17, 0x01,
//	0x2f, 0x01, 0x18}

var rfdKushal = []byte{
	0x70, 0x18, 0x4F, 0x52, 0x41, 0x4E, 0x2D, 0x45, 0x32, 0x53, 0x4D, 0x2D, 0x4B, 0x50, 0x4D, 0x00, 0x00, 0x18, 0x31, 0x2E,
	0x33, 0x2E, 0x36, 0x2E, 0x31, 0x2E, 0x34, 0x2E, 0x31, 0x2E, 0x35, 0x33, 0x31, 0x34, 0x38, 0x2E, 0x31, 0x2E, 0x32, 0x2E,
	0x32, 0x2E, 0x32, 0x05, 0x00, 0x4B, 0x50, 0x4D, 0x20, 0x6D, 0x6F, 0x6E, 0x69, 0x74, 0x6F, 0x72, 0x00, 0x00, 0x58, 0x02,
	0xF8, 0x29, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x45, 0x55, 0x74, 0x72, 0x61, 0x6E, 0x43, 0x65, 0x6C,
	0x6C, 0x46, 0x44, 0x44, 0x40, 0x02, 0xF8, 0x29, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x01, 0x01, 0x03, 0x80, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x31, 0x01, 0x01, 0x00, 0x01, 0x06, 0x1E, 0x80, 0x4F, 0x2D, 0x43, 0x55, 0x2D, 0x55, 0x50, 0x20,
	0x4D, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6D, 0x65, 0x6E, 0x74, 0x20, 0x43, 0x6F, 0x6E, 0x74, 0x61, 0x69, 0x6E, 0x65,
	0x72, 0x20, 0x66, 0x6F, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x45, 0x50, 0x43, 0x20, 0x63, 0x6F, 0x6E, 0x6E, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x20, 0x64, 0x65, 0x70, 0x6C, 0x6F, 0x79, 0x6D, 0x65, 0x6E, 0x74, 0x01, 0x06, 0x00, 0x04, 0x42, 0x60,
	0x52, 0x52, 0x43, 0x2E, 0x43, 0x6F, 0x6E, 0x6E, 0x45, 0x73, 0x74, 0x61, 0x62, 0x41, 0x74, 0x74, 0x2E, 0x73, 0x75, 0x6D,
	0x00, 0x00, 0x00, 0x42, 0x80, 0x52, 0x52, 0x43, 0x2E, 0x43, 0x6F, 0x6E, 0x6E, 0x45, 0x73, 0x74, 0x61, 0x62, 0x53, 0x75,
	0x63, 0x63, 0x2E, 0x73, 0x75, 0x6D, 0x00, 0x00, 0x01, 0x42, 0xA0, 0x52, 0x52, 0x43, 0x2E, 0x43, 0x6F, 0x6E, 0x6E, 0x52,
	0x65, 0x45, 0x73, 0x74, 0x61, 0x62, 0x41, 0x74, 0x74, 0x2E, 0x73, 0x75, 0x6D, 0x00, 0x00, 0x02, 0x41, 0x60, 0x52, 0x52,
	0x43, 0x2E, 0x43, 0x6F, 0x6E, 0x6E, 0x4D, 0x65, 0x61, 0x6E, 0x00, 0x00, 0x03, 0x41, 0x40, 0x52, 0x52, 0x43, 0x2E, 0x43,
	0x6F, 0x6E, 0x6E, 0x4D, 0x61, 0x78, 0x00, 0x00, 0x04, 0x01, 0x01, 0x01, 0x01,
}
