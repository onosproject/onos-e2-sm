/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "E2SM-KPM-IEs"
 * 	found in "../v2/e2sm_kpm_v2.0.3-changed.asn"
 * 	`asn1c -fcompound-names -fincludes-quoted -fno-include-deps -findirect-choice -gen-PER -no-gen-OER -D.`
 */

#ifndef	_MeasurementRecordItem_KPMv2_H_
#define	_MeasurementRecordItem_KPMv2_H_


#include "asn_application.h"

/* Including external dependencies */
#include "NativeInteger.h"
#include "NativeReal.h"
#include "NULL.h"
#include "constr_CHOICE.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum MeasurementRecordItem_KPMv2_PR {
	MeasurementRecordItem_KPMv2_PR_NOTHING,	/* No components present */
	MeasurementRecordItem_KPMv2_PR_integer,
	MeasurementRecordItem_KPMv2_PR_real,
	MeasurementRecordItem_KPMv2_PR_noValue
	/* Extensions may appear below */
	
} MeasurementRecordItem_KPMv2_PR;

/* MeasurementRecordItem-KPMv2 */
typedef struct MeasurementRecordItem_KPMv2 {
	MeasurementRecordItem_KPMv2_PR present;
	union MeasurementRecordItem_KPMv2_u {
		unsigned long	 integer;
		double	 real;
		NULL_t	 noValue;
		/*
		 * This type is extensible,
		 * possible extensions are below.
		 */
	} choice;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} MeasurementRecordItem_KPMv2_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_integer_2;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_MeasurementRecordItem_KPMv2;
extern asn_CHOICE_specifics_t asn_SPC_MeasurementRecordItem_KPMv2_specs_1;
extern asn_TYPE_member_t asn_MBR_MeasurementRecordItem_KPMv2_1[3];
extern asn_per_constraints_t asn_PER_type_MeasurementRecordItem_KPMv2_constr_1;

#ifdef __cplusplus
}
#endif

#endif	/* _MeasurementRecordItem_KPMv2_H_ */
#include "asn_internal.h"
