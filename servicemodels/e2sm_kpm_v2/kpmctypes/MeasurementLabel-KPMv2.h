/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "E2SM-KPM-IEs"
 * 	found in "../v2/e2sm_kpm_v2.0.3-changed.asn"
 * 	`asn1c -fcompound-names -fincludes-quoted -fno-include-deps -findirect-choice -gen-PER -no-gen-OER -D.`
 */

#ifndef	_MeasurementLabel_KPMv2_H_
#define	_MeasurementLabel_KPMv2_H_


#include "asn_application.h"

/* Including external dependencies */
#include "PLMN-Identity-KPMv2.h"
#include "FiveQI-KPMv2.h"
#include "QFI-KPMv2.h"
#include "QCI-KPMv2.h"
#include "ARP-KPMv2.h"
#include "NativeInteger.h"
#include "NativeEnumerated.h"
#include "constr_SEQUENCE.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum MeasurementLabel_KPMv2__sUM {
	MeasurementLabel_KPMv2__sUM_true	= 0
	/*
	 * Enumeration is extensible
	 */
} e_MeasurementLabel_KPMv2__sUM;

/* MeasurementLabel_KPMv2__sUM */
typedef long	 MeasurementLabel_KPMv2__sUM_t;

typedef enum MeasurementLabel_KPMv2__preLabelOverride {
	MeasurementLabel_KPMv2__preLabelOverride_true	= 0
	/*
	 * Enumeration is extensible
	 */
} e_MeasurementLabel_KPMv2__preLabelOverride;

/* MeasurementLabel_KPMv2__preLabelOverride */
typedef long	 MeasurementLabel_KPMv2__preLabelOverride_t;

typedef enum MeasurementLabel_KPMv2__startEndInd {
	MeasurementLabel_KPMv2__startEndInd_start	= 0,
	MeasurementLabel_KPMv2__startEndInd_end	= 1
	/*
	 * Enumeration is extensible
	 */
} e_MeasurementLabel_KPMv2__startEndInd;

/* MeasurementLabel_KPMv2__startEndInd */
typedef long	 MeasurementLabel_KPMv2__startEndInd_t;

/* Forward declarations */
struct SNSSAI_KPMv2;

/* MeasurementLabel-KPMv2 */
typedef struct MeasurementLabel_KPMv2 {
	PLMN_Identity_KPMv2_t	*plmnID;	/* OPTIONAL */
	struct SNSSAI_KPMv2	*sliceID;	/* OPTIONAL */
	FiveQI_KPMv2_t	*fiveQI;	/* OPTIONAL */
	QFI_KPMv2_t	*qFI;	/* OPTIONAL */
	QCI_KPMv2_t	*qCI;	/* OPTIONAL */
	QCI_KPMv2_t	*qCImax;	/* OPTIONAL */
	QCI_KPMv2_t	*qCImin;	/* OPTIONAL */
	ARP_KPMv2_t	*aRPmax;	/* OPTIONAL */
	ARP_KPMv2_t	*aRPmin;	/* OPTIONAL */
	long	*bitrateRange;	/* OPTIONAL */
	long	*layerMU_MIMO;	/* OPTIONAL */
	MeasurementLabel_KPMv2__sUM_t	*sUM;	/* OPTIONAL */
	long	*distBinX;	/* OPTIONAL */
	long	*distBinY;	/* OPTIONAL */
	long	*distBinZ;	/* OPTIONAL */
	MeasurementLabel_KPMv2__preLabelOverride_t	*preLabelOverride;	/* OPTIONAL */
	MeasurementLabel_KPMv2__startEndInd_t	*startEndInd;	/* OPTIONAL */
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} MeasurementLabel_KPMv2_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_sUM_13;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_preLabelOverride_19;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_startEndInd_22;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_MeasurementLabel_KPMv2;
extern asn_SEQUENCE_specifics_t asn_SPC_MeasurementLabel_KPMv2_specs_1;
extern asn_TYPE_member_t asn_MBR_MeasurementLabel_KPMv2_1[17];

#ifdef __cplusplus
}
#endif

#endif	/* _MeasurementLabel_KPMv2_H_ */
#include "asn_internal.h"
