/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "E2SM-KPM-IEs"
 * 	found in "../v2/e2sm_kpm_v2.0.3-changed.asn"
 * 	`asn1c -fcompound-names -fincludes-quoted -fno-include-deps -findirect-choice -gen-PER -no-gen-OER -D.`
 */

#ifndef	_MeasurementType_KPMv2_H_
#define	_MeasurementType_KPMv2_H_


#include "asn_application.h"

/* Including external dependencies */
#include "MeasurementTypeName-KPMv2.h"
#include "MeasurementTypeID-KPMv2.h"
#include "constr_CHOICE.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum MeasurementType_KPMv2_PR {
	MeasurementType_KPMv2_PR_NOTHING,	/* No components present */
	MeasurementType_KPMv2_PR_measName,
	MeasurementType_KPMv2_PR_measID
	/* Extensions may appear below */
	
} MeasurementType_KPMv2_PR;

/* MeasurementType-KPMv2 */
typedef struct MeasurementType_KPMv2 {
	MeasurementType_KPMv2_PR present;
	union MeasurementType_KPMv2_u {
		MeasurementTypeName_KPMv2_t	 measName;
		MeasurementTypeID_KPMv2_t	 measID;
		/*
		 * This type is extensible,
		 * possible extensions are below.
		 */
	} choice;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} MeasurementType_KPMv2_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_MeasurementType_KPMv2;
extern asn_CHOICE_specifics_t asn_SPC_MeasurementType_KPMv2_specs_1;
extern asn_TYPE_member_t asn_MBR_MeasurementType_KPMv2_1[2];
extern asn_per_constraints_t asn_PER_type_MeasurementType_KPMv2_constr_1;

#ifdef __cplusplus
}
#endif

#endif	/* _MeasurementType_KPMv2_H_ */
#include "asn_internal.h"
