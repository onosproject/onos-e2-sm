////////////////////// e2sm-common-ies.proto //////////////////////
// Protobuf generated from /e2sm_common_ies.asn1 by asn1c-0.9.29
// E2SM-COMMON-IEs { iso(1) identified-organization(3) dod(6) internet(1) private(4) enterprise(1) oran(53148) e2(1) version1(1) e2sm(2) e2sm-COMMON-IEs(0) }

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.19.4
// source: e2sm_ccc/v1/e2sm_common_ies.proto

package e2sm_common_ies

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	asn1 "github.com/onosproject/onos-lib-go/api/asn1/v1/asn1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// enumerated from e2sm_common_ies.asn1:110
type MessageTypeInterfaceMessageId int32

const (
	MessageTypeInterfaceMessageId_MESSAGE_TYPE_INTERFACE_MESSAGE_ID_INITIATING_MESSAGE   MessageTypeInterfaceMessageId = 0
	MessageTypeInterfaceMessageId_MESSAGE_TYPE_INTERFACE_MESSAGE_ID_SUCCESSFUL_OUTCOME   MessageTypeInterfaceMessageId = 1
	MessageTypeInterfaceMessageId_MESSAGE_TYPE_INTERFACE_MESSAGE_ID_UNSUCCESSFUL_OUTCOME MessageTypeInterfaceMessageId = 2
)

// Enum value maps for MessageTypeInterfaceMessageId.
var (
	MessageTypeInterfaceMessageId_name = map[int32]string{
		0: "MESSAGE_TYPE_INTERFACE_MESSAGE_ID_INITIATING_MESSAGE",
		1: "MESSAGE_TYPE_INTERFACE_MESSAGE_ID_SUCCESSFUL_OUTCOME",
		2: "MESSAGE_TYPE_INTERFACE_MESSAGE_ID_UNSUCCESSFUL_OUTCOME",
	}
	MessageTypeInterfaceMessageId_value = map[string]int32{
		"MESSAGE_TYPE_INTERFACE_MESSAGE_ID_INITIATING_MESSAGE":   0,
		"MESSAGE_TYPE_INTERFACE_MESSAGE_ID_SUCCESSFUL_OUTCOME":   1,
		"MESSAGE_TYPE_INTERFACE_MESSAGE_ID_UNSUCCESSFUL_OUTCOME": 2,
	}
)

func (x MessageTypeInterfaceMessageId) Enum() *MessageTypeInterfaceMessageId {
	p := new(MessageTypeInterfaceMessageId)
	*p = x
	return p
}

func (x MessageTypeInterfaceMessageId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageTypeInterfaceMessageId) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_enumTypes[0].Descriptor()
}

func (MessageTypeInterfaceMessageId) Type() protoreflect.EnumType {
	return &file_e2sm_ccc_v1_e2sm_common_ies_proto_enumTypes[0]
}

func (x MessageTypeInterfaceMessageId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageTypeInterfaceMessageId.Descriptor instead.
func (MessageTypeInterfaceMessageId) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{0}
}

// enumerated from e2sm_common_ies.asn1:114
type InterfaceType int32

const (
	InterfaceType_INTERFACE_TYPE_N_G InterfaceType = 0
	InterfaceType_INTERFACE_TYPE_XN  InterfaceType = 1
	InterfaceType_INTERFACE_TYPE_F1  InterfaceType = 2
	InterfaceType_INTERFACE_TYPE_E1  InterfaceType = 3
	InterfaceType_INTERFACE_TYPE_S1  InterfaceType = 4
	InterfaceType_INTERFACE_TYPE_X2  InterfaceType = 5
	InterfaceType_INTERFACE_TYPE_W1  InterfaceType = 6
)

// Enum value maps for InterfaceType.
var (
	InterfaceType_name = map[int32]string{
		0: "INTERFACE_TYPE_N_G",
		1: "INTERFACE_TYPE_XN",
		2: "INTERFACE_TYPE_F1",
		3: "INTERFACE_TYPE_E1",
		4: "INTERFACE_TYPE_S1",
		5: "INTERFACE_TYPE_X2",
		6: "INTERFACE_TYPE_W1",
	}
	InterfaceType_value = map[string]int32{
		"INTERFACE_TYPE_N_G": 0,
		"INTERFACE_TYPE_XN":  1,
		"INTERFACE_TYPE_F1":  2,
		"INTERFACE_TYPE_E1":  3,
		"INTERFACE_TYPE_S1":  4,
		"INTERFACE_TYPE_X2":  5,
		"INTERFACE_TYPE_W1":  6,
	}
)

func (x InterfaceType) Enum() *InterfaceType {
	p := new(InterfaceType)
	*p = x
	return p
}

func (x InterfaceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InterfaceType) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_enumTypes[1].Descriptor()
}

func (InterfaceType) Type() protoreflect.EnumType {
	return &file_e2sm_ccc_v1_e2sm_common_ies_proto_enumTypes[1]
}

func (x InterfaceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InterfaceType.Descriptor instead.
func (InterfaceType) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{1}
}

// enumerated from e2sm_common_ies.asn1:152
type RrcclassLte int32

const (
	RrcclassLte_RRCCLASS_LTE_B_CCH_BCH         RrcclassLte = 0
	RrcclassLte_RRCCLASS_LTE_B_CCH_BCH_MBMS    RrcclassLte = 1
	RrcclassLte_RRCCLASS_LTE_B_CCH_DL_SCH      RrcclassLte = 2
	RrcclassLte_RRCCLASS_LTE_B_CCH_DL_SCH_BR   RrcclassLte = 3
	RrcclassLte_RRCCLASS_LTE_B_CCH_DL_SCH_MBMS RrcclassLte = 4
	RrcclassLte_RRCCLASS_LTE_M_CCH             RrcclassLte = 5
	RrcclassLte_RRCCLASS_LTE_P_CCH             RrcclassLte = 6
	RrcclassLte_RRCCLASS_LTE_D_L_CCCH          RrcclassLte = 7
	RrcclassLte_RRCCLASS_LTE_D_L_DCCH          RrcclassLte = 8
	RrcclassLte_RRCCLASS_LTE_U_L_CCCH          RrcclassLte = 9
	RrcclassLte_RRCCLASS_LTE_U_L_DCCH          RrcclassLte = 10
	RrcclassLte_RRCCLASS_LTE_S_C_MCCH          RrcclassLte = 11
)

// Enum value maps for RrcclassLte.
var (
	RrcclassLte_name = map[int32]string{
		0:  "RRCCLASS_LTE_B_CCH_BCH",
		1:  "RRCCLASS_LTE_B_CCH_BCH_MBMS",
		2:  "RRCCLASS_LTE_B_CCH_DL_SCH",
		3:  "RRCCLASS_LTE_B_CCH_DL_SCH_BR",
		4:  "RRCCLASS_LTE_B_CCH_DL_SCH_MBMS",
		5:  "RRCCLASS_LTE_M_CCH",
		6:  "RRCCLASS_LTE_P_CCH",
		7:  "RRCCLASS_LTE_D_L_CCCH",
		8:  "RRCCLASS_LTE_D_L_DCCH",
		9:  "RRCCLASS_LTE_U_L_CCCH",
		10: "RRCCLASS_LTE_U_L_DCCH",
		11: "RRCCLASS_LTE_S_C_MCCH",
	}
	RrcclassLte_value = map[string]int32{
		"RRCCLASS_LTE_B_CCH_BCH":         0,
		"RRCCLASS_LTE_B_CCH_BCH_MBMS":    1,
		"RRCCLASS_LTE_B_CCH_DL_SCH":      2,
		"RRCCLASS_LTE_B_CCH_DL_SCH_BR":   3,
		"RRCCLASS_LTE_B_CCH_DL_SCH_MBMS": 4,
		"RRCCLASS_LTE_M_CCH":             5,
		"RRCCLASS_LTE_P_CCH":             6,
		"RRCCLASS_LTE_D_L_CCCH":          7,
		"RRCCLASS_LTE_D_L_DCCH":          8,
		"RRCCLASS_LTE_U_L_CCCH":          9,
		"RRCCLASS_LTE_U_L_DCCH":          10,
		"RRCCLASS_LTE_S_C_MCCH":          11,
	}
)

func (x RrcclassLte) Enum() *RrcclassLte {
	p := new(RrcclassLte)
	*p = x
	return p
}

func (x RrcclassLte) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RrcclassLte) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_enumTypes[2].Descriptor()
}

func (RrcclassLte) Type() protoreflect.EnumType {
	return &file_e2sm_ccc_v1_e2sm_common_ies_proto_enumTypes[2]
}

func (x RrcclassLte) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RrcclassLte.Descriptor instead.
func (RrcclassLte) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{2}
}

// enumerated from e2sm_common_ies.asn1:154
type RrcclassNR int32

const (
	RrcclassNR_RRCCLASS_NR_B_CCH_BCH    RrcclassNR = 0
	RrcclassNR_RRCCLASS_NR_B_CCH_DL_SCH RrcclassNR = 1
	RrcclassNR_RRCCLASS_NR_D_L_CCCH     RrcclassNR = 2
	RrcclassNR_RRCCLASS_NR_D_L_DCCH     RrcclassNR = 3
	RrcclassNR_RRCCLASS_NR_P_CCH        RrcclassNR = 4
	RrcclassNR_RRCCLASS_NR_U_L_CCCH     RrcclassNR = 5
	RrcclassNR_RRCCLASS_NR_U_L_CCCH1    RrcclassNR = 6
	RrcclassNR_RRCCLASS_NR_U_L_DCCH     RrcclassNR = 7
)

// Enum value maps for RrcclassNR.
var (
	RrcclassNR_name = map[int32]string{
		0: "RRCCLASS_NR_B_CCH_BCH",
		1: "RRCCLASS_NR_B_CCH_DL_SCH",
		2: "RRCCLASS_NR_D_L_CCCH",
		3: "RRCCLASS_NR_D_L_DCCH",
		4: "RRCCLASS_NR_P_CCH",
		5: "RRCCLASS_NR_U_L_CCCH",
		6: "RRCCLASS_NR_U_L_CCCH1",
		7: "RRCCLASS_NR_U_L_DCCH",
	}
	RrcclassNR_value = map[string]int32{
		"RRCCLASS_NR_B_CCH_BCH":    0,
		"RRCCLASS_NR_B_CCH_DL_SCH": 1,
		"RRCCLASS_NR_D_L_CCCH":     2,
		"RRCCLASS_NR_D_L_DCCH":     3,
		"RRCCLASS_NR_P_CCH":        4,
		"RRCCLASS_NR_U_L_CCCH":     5,
		"RRCCLASS_NR_U_L_CCCH1":    6,
		"RRCCLASS_NR_U_L_DCCH":     7,
	}
)

func (x RrcclassNR) Enum() *RrcclassNR {
	p := new(RrcclassNR)
	*p = x
	return p
}

func (x RrcclassNR) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RrcclassNR) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_enumTypes[3].Descriptor()
}

func (RrcclassNR) Type() protoreflect.EnumType {
	return &file_e2sm_ccc_v1_e2sm_common_ies_proto_enumTypes[3]
}

func (x RrcclassNR) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RrcclassNR.Descriptor instead.
func (RrcclassNR) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{3}
}

// enumerated from e2sm_common_ies.asn1:532
type NrfrequencyShift7P5Khz int32

const (
	NrfrequencyShift7P5Khz_NRFREQUENCY_SHIFT7P5KHZ_FALSE NrfrequencyShift7P5Khz = 0
	NrfrequencyShift7P5Khz_NRFREQUENCY_SHIFT7P5KHZ_TRUE  NrfrequencyShift7P5Khz = 1
)

// Enum value maps for NrfrequencyShift7P5Khz.
var (
	NrfrequencyShift7P5Khz_name = map[int32]string{
		0: "NRFREQUENCY_SHIFT7P5KHZ_FALSE",
		1: "NRFREQUENCY_SHIFT7P5KHZ_TRUE",
	}
	NrfrequencyShift7P5Khz_value = map[string]int32{
		"NRFREQUENCY_SHIFT7P5KHZ_FALSE": 0,
		"NRFREQUENCY_SHIFT7P5KHZ_TRUE":  1,
	}
)

func (x NrfrequencyShift7P5Khz) Enum() *NrfrequencyShift7P5Khz {
	p := new(NrfrequencyShift7P5Khz)
	*p = x
	return p
}

func (x NrfrequencyShift7P5Khz) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NrfrequencyShift7P5Khz) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_enumTypes[4].Descriptor()
}

func (NrfrequencyShift7P5Khz) Type() protoreflect.EnumType {
	return &file_e2sm_ccc_v1_e2sm_common_ies_proto_enumTypes[4]
}

func (x NrfrequencyShift7P5Khz) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NrfrequencyShift7P5Khz.Descriptor instead.
func (NrfrequencyShift7P5Khz) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{4}
}

// constant Integer from e2sm_common_ies.asn1:26
// {-}
type MaxE1Apid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:65535,valueUB:65535,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:65535,valueUB:65535,"`
}

func (x *MaxE1Apid) Reset() {
	*x = MaxE1Apid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxE1Apid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxE1Apid) ProtoMessage() {}

func (x *MaxE1Apid) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxE1Apid.ProtoReflect.Descriptor instead.
func (*MaxE1Apid) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{0}
}

func (x *MaxE1Apid) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_common_ies.asn1:27
// {-}
type MaxF1Apid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4,"`
}

func (x *MaxF1Apid) Reset() {
	*x = MaxF1Apid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxF1Apid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxF1Apid) ProtoMessage() {}

func (x *MaxF1Apid) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxF1Apid.ProtoReflect.Descriptor instead.
func (*MaxF1Apid) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{1}
}

func (x *MaxF1Apid) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_common_ies.asn1:30
// {-}
type MaxEarfcn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:65535,valueUB:65535,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:65535,valueUB:65535,"`
}

func (x *MaxEarfcn) Reset() {
	*x = MaxEarfcn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxEarfcn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxEarfcn) ProtoMessage() {}

func (x *MaxEarfcn) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxEarfcn.ProtoReflect.Descriptor instead.
func (*MaxEarfcn) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{2}
}

func (x *MaxEarfcn) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_common_ies.asn1:33
// {-}
type MaxNrarfcn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:3279165,valueUB:3279165,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:3279165,valueUB:3279165,"`
}

func (x *MaxNrarfcn) Reset() {
	*x = MaxNrarfcn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrarfcn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrarfcn) ProtoMessage() {}

func (x *MaxNrarfcn) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrarfcn.ProtoReflect.Descriptor instead.
func (*MaxNrarfcn) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{3}
}

func (x *MaxNrarfcn) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_common_ies.asn1:34
// {-}
type MaxnoofNrCellBands struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32,"`
}

func (x *MaxnoofNrCellBands) Reset() {
	*x = MaxnoofNrCellBands{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofNrCellBands) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofNrCellBands) ProtoMessage() {}

func (x *MaxnoofNrCellBands) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofNrCellBands.ProtoReflect.Descriptor instead.
func (*MaxnoofNrCellBands) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{4}
}

func (x *MaxnoofNrCellBands) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm_common_ies.asn1:44
// @inject_tag: aper:"choiceExt"
// {CGI}
type Cgi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_common_ies.asn1:44
	//
	// Types that are assignable to Cgi:
	//	*Cgi_NRCgi
	//	*Cgi_EUtraCgi
	Cgi isCgi_Cgi `protobuf_oneof:"cgi"`
}

func (x *Cgi) Reset() {
	*x = Cgi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cgi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cgi) ProtoMessage() {}

func (x *Cgi) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cgi.ProtoReflect.Descriptor instead.
func (*Cgi) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{5}
}

func (m *Cgi) GetCgi() isCgi_Cgi {
	if m != nil {
		return m.Cgi
	}
	return nil
}

func (x *Cgi) GetNRCgi() *NrCGi {
	if x, ok := x.GetCgi().(*Cgi_NRCgi); ok {
		return x.NRCgi
	}
	return nil
}

func (x *Cgi) GetEUtraCgi() *EutraCGi {
	if x, ok := x.GetCgi().(*Cgi_EUtraCgi); ok {
		return x.EUtraCgi
	}
	return nil
}

type isCgi_Cgi interface {
	isCgi_Cgi()
}

type Cgi_NRCgi struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt,"
	NRCgi *NrCGi `protobuf:"bytes,1,opt,name=n_r_cgi,json=nR-CGI,proto3,oneof" aper:"choiceIdx:1,valueExt,"`
}

type Cgi_EUtraCgi struct {
	// @inject_tag: aper:"choiceIdx:2,valueExt,"
	EUtraCgi *EutraCGi `protobuf:"bytes,2,opt,name=e_utra_cgi,json=eUTRA-CGI,proto3,oneof" aper:"choiceIdx:2,valueExt,"`
}

func (*Cgi_NRCgi) isCgi_Cgi() {}

func (*Cgi_EUtraCgi) isCgi_Cgi() {}

// sequence from e2sm_common_ies.asn1:50
// @inject_tag: aper:"choiceExt"
// {CoreCPID}
type CoreCpid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_common_ies.asn1:50
	//
	// Types that are assignable to CoreCpid:
	//	*CoreCpid_FiveGc
	//	*CoreCpid_EPc
	CoreCpid isCoreCpid_CoreCpid `protobuf_oneof:"core_cpid"`
}

func (x *CoreCpid) Reset() {
	*x = CoreCpid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreCpid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreCpid) ProtoMessage() {}

func (x *CoreCpid) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreCpid.ProtoReflect.Descriptor instead.
func (*CoreCpid) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{6}
}

func (m *CoreCpid) GetCoreCpid() isCoreCpid_CoreCpid {
	if m != nil {
		return m.CoreCpid
	}
	return nil
}

func (x *CoreCpid) GetFiveGc() *Guami {
	if x, ok := x.GetCoreCpid().(*CoreCpid_FiveGc); ok {
		return x.FiveGc
	}
	return nil
}

func (x *CoreCpid) GetEPc() *Gummei {
	if x, ok := x.GetCoreCpid().(*CoreCpid_EPc); ok {
		return x.EPc
	}
	return nil
}

type isCoreCpid_CoreCpid interface {
	isCoreCpid_CoreCpid()
}

type CoreCpid_FiveGc struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt,"
	FiveGc *Guami `protobuf:"bytes,1,opt,name=five_gc,json=fiveGC,proto3,oneof" aper:"choiceIdx:1,valueExt,"`
}

type CoreCpid_EPc struct {
	// @inject_tag: aper:"choiceIdx:2,valueExt,"
	EPc *Gummei `protobuf:"bytes,2,opt,name=e_pc,json=ePC,proto3,oneof" aper:"choiceIdx:2,valueExt,"`
}

func (*CoreCpid_FiveGc) isCoreCpid_CoreCpid() {}

func (*CoreCpid_EPc) isCoreCpid_CoreCpid() {}

// sequence from e2sm_common_ies.asn1:56
// @inject_tag: aper:"choiceExt"
// {InterfaceIdentifier}
type InterfaceIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_common_ies.asn1:56
	//
	// Types that are assignable to InterfaceIdentifier:
	//	*InterfaceIdentifier_NG
	//	*InterfaceIdentifier_XN
	//	*InterfaceIdentifier_F1
	//	*InterfaceIdentifier_E1
	//	*InterfaceIdentifier_S1
	//	*InterfaceIdentifier_X2
	//	*InterfaceIdentifier_W1
	InterfaceIdentifier isInterfaceIdentifier_InterfaceIdentifier `protobuf_oneof:"interface_identifier"`
}

func (x *InterfaceIdentifier) Reset() {
	*x = InterfaceIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceIdentifier) ProtoMessage() {}

func (x *InterfaceIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceIdentifier.ProtoReflect.Descriptor instead.
func (*InterfaceIdentifier) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{7}
}

func (m *InterfaceIdentifier) GetInterfaceIdentifier() isInterfaceIdentifier_InterfaceIdentifier {
	if m != nil {
		return m.InterfaceIdentifier
	}
	return nil
}

func (x *InterfaceIdentifier) GetNG() *InterfaceIdNG {
	if x, ok := x.GetInterfaceIdentifier().(*InterfaceIdentifier_NG); ok {
		return x.NG
	}
	return nil
}

func (x *InterfaceIdentifier) GetXN() *InterfaceIdXn {
	if x, ok := x.GetInterfaceIdentifier().(*InterfaceIdentifier_XN); ok {
		return x.XN
	}
	return nil
}

func (x *InterfaceIdentifier) GetF1() *InterfaceIdF1 {
	if x, ok := x.GetInterfaceIdentifier().(*InterfaceIdentifier_F1); ok {
		return x.F1
	}
	return nil
}

func (x *InterfaceIdentifier) GetE1() *InterfaceIdE1 {
	if x, ok := x.GetInterfaceIdentifier().(*InterfaceIdentifier_E1); ok {
		return x.E1
	}
	return nil
}

func (x *InterfaceIdentifier) GetS1() *InterfaceIdS1 {
	if x, ok := x.GetInterfaceIdentifier().(*InterfaceIdentifier_S1); ok {
		return x.S1
	}
	return nil
}

func (x *InterfaceIdentifier) GetX2() *InterfaceIdX2 {
	if x, ok := x.GetInterfaceIdentifier().(*InterfaceIdentifier_X2); ok {
		return x.X2
	}
	return nil
}

func (x *InterfaceIdentifier) GetW1() *InterfaceIdW1 {
	if x, ok := x.GetInterfaceIdentifier().(*InterfaceIdentifier_W1); ok {
		return x.W1
	}
	return nil
}

type isInterfaceIdentifier_InterfaceIdentifier interface {
	isInterfaceIdentifier_InterfaceIdentifier()
}

type InterfaceIdentifier_NG struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt,"
	NG *InterfaceIdNG `protobuf:"bytes,1,opt,name=n_g,json=nG,proto3,oneof" aper:"choiceIdx:1,valueExt,"`
}

type InterfaceIdentifier_XN struct {
	// @inject_tag: aper:"choiceIdx:2,valueExt,"
	XN *InterfaceIdXn `protobuf:"bytes,2,opt,name=x_n,json=xN,proto3,oneof" aper:"choiceIdx:2,valueExt,"`
}

type InterfaceIdentifier_F1 struct {
	// @inject_tag: aper:"choiceIdx:3,valueExt,"
	F1 *InterfaceIdF1 `protobuf:"bytes,3,opt,name=f1,proto3,oneof" aper:"choiceIdx:3,valueExt,"`
}

type InterfaceIdentifier_E1 struct {
	// @inject_tag: aper:"choiceIdx:4,valueExt,"
	E1 *InterfaceIdE1 `protobuf:"bytes,4,opt,name=e1,proto3,oneof" aper:"choiceIdx:4,valueExt,"`
}

type InterfaceIdentifier_S1 struct {
	// @inject_tag: aper:"choiceIdx:5,valueExt,"
	S1 *InterfaceIdS1 `protobuf:"bytes,5,opt,name=s1,proto3,oneof" aper:"choiceIdx:5,valueExt,"`
}

type InterfaceIdentifier_X2 struct {
	// @inject_tag: aper:"choiceIdx:6,valueExt,"
	X2 *InterfaceIdX2 `protobuf:"bytes,6,opt,name=x2,proto3,oneof" aper:"choiceIdx:6,valueExt,"`
}

type InterfaceIdentifier_W1 struct {
	// @inject_tag: aper:"choiceIdx:7,valueExt,"
	W1 *InterfaceIdW1 `protobuf:"bytes,7,opt,name=w1,proto3,oneof" aper:"choiceIdx:7,valueExt,"`
}

func (*InterfaceIdentifier_NG) isInterfaceIdentifier_InterfaceIdentifier() {}

func (*InterfaceIdentifier_XN) isInterfaceIdentifier_InterfaceIdentifier() {}

func (*InterfaceIdentifier_F1) isInterfaceIdentifier_InterfaceIdentifier() {}

func (*InterfaceIdentifier_E1) isInterfaceIdentifier_InterfaceIdentifier() {}

func (*InterfaceIdentifier_S1) isInterfaceIdentifier_InterfaceIdentifier() {}

func (*InterfaceIdentifier_X2) isInterfaceIdentifier_InterfaceIdentifier() {}

func (*InterfaceIdentifier_W1) isInterfaceIdentifier_InterfaceIdentifier() {}

// sequence from e2sm_common_ies.asn1:67
// @inject_tag: aper:"valueExt"
// {InterfaceID-NG}
type InterfaceIdNG struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,"
	Guami *Guami `protobuf:"bytes,1,opt,name=guami,proto3" json:"guami,omitempty" aper:"valueExt,"`
}

func (x *InterfaceIdNG) Reset() {
	*x = InterfaceIdNG{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceIdNG) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceIdNG) ProtoMessage() {}

func (x *InterfaceIdNG) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceIdNG.ProtoReflect.Descriptor instead.
func (*InterfaceIdNG) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{8}
}

func (x *InterfaceIdNG) GetGuami() *Guami {
	if x != nil {
		return x.Guami
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:72
// @inject_tag: aper:"valueExt"
// {InterfaceID-Xn}
type InterfaceIdXn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"choiceExt,"
	GlobalNgRanId *GlobalNgrannodeId `protobuf:"bytes,1,opt,name=global_ng_ran_id,json=global-NG-RAN-ID,proto3" json:"global_ng_ran_id,omitempty" aper:"choiceExt,"`
}

func (x *InterfaceIdXn) Reset() {
	*x = InterfaceIdXn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceIdXn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceIdXn) ProtoMessage() {}

func (x *InterfaceIdXn) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceIdXn.ProtoReflect.Descriptor instead.
func (*InterfaceIdXn) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{9}
}

func (x *InterfaceIdXn) GetGlobalNgRanId() *GlobalNgrannodeId {
	if x != nil {
		return x.GlobalNgRanId
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:77
// @inject_tag: aper:"valueExt"
// {InterfaceID-F1}
type InterfaceIdF1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,"
	GlobalGnbId *GlobalGnbID `protobuf:"bytes,1,opt,name=global_gnb_id,json=globalGNB-ID,proto3" json:"global_gnb_id,omitempty" aper:"valueExt,"`
	GNbDuId     *GnbDUID     `protobuf:"bytes,2,opt,name=g_nb_du_id,json=gNB-DU-ID,proto3" json:"g_nb_du_id,omitempty"`
}

func (x *InterfaceIdF1) Reset() {
	*x = InterfaceIdF1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceIdF1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceIdF1) ProtoMessage() {}

func (x *InterfaceIdF1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceIdF1.ProtoReflect.Descriptor instead.
func (*InterfaceIdF1) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{10}
}

func (x *InterfaceIdF1) GetGlobalGnbId() *GlobalGnbID {
	if x != nil {
		return x.GlobalGnbId
	}
	return nil
}

func (x *InterfaceIdF1) GetGNbDuId() *GnbDUID {
	if x != nil {
		return x.GNbDuId
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:83
// @inject_tag: aper:"valueExt"
// {InterfaceID-E1}
type InterfaceIdE1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,"
	GlobalGnbId *GlobalGnbID `protobuf:"bytes,1,opt,name=global_gnb_id,json=globalGNB-ID,proto3" json:"global_gnb_id,omitempty" aper:"valueExt,"`
	GNbCuUpId   *GnbCUUPID   `protobuf:"bytes,2,opt,name=g_nb_cu_up_id,json=gNB-CU-UP-ID,proto3" json:"g_nb_cu_up_id,omitempty"`
}

func (x *InterfaceIdE1) Reset() {
	*x = InterfaceIdE1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceIdE1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceIdE1) ProtoMessage() {}

func (x *InterfaceIdE1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceIdE1.ProtoReflect.Descriptor instead.
func (*InterfaceIdE1) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{11}
}

func (x *InterfaceIdE1) GetGlobalGnbId() *GlobalGnbID {
	if x != nil {
		return x.GlobalGnbId
	}
	return nil
}

func (x *InterfaceIdE1) GetGNbCuUpId() *GnbCUUPID {
	if x != nil {
		return x.GNbCuUpId
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:89
// @inject_tag: aper:"valueExt"
// {InterfaceID-S1}
type InterfaceIdS1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,"
	GUmmei *Gummei `protobuf:"bytes,1,opt,name=g_ummei,json=gUMMEI,proto3" json:"g_ummei,omitempty" aper:"valueExt,"`
}

func (x *InterfaceIdS1) Reset() {
	*x = InterfaceIdS1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceIdS1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceIdS1) ProtoMessage() {}

func (x *InterfaceIdS1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceIdS1.ProtoReflect.Descriptor instead.
func (*InterfaceIdS1) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{12}
}

func (x *InterfaceIdS1) GetGUmmei() *Gummei {
	if x != nil {
		return x.GUmmei
	}
	return nil
}

// choice from e2sm_common_ies.asn1:95
// @inject_tag: aper:"choiceExt"
// {nodeTypeInterfaceID-X2}
type NodeTypeInterfaceIdX2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_common_ies.asn1:95
	//
	// Types that are assignable to NodeTypeInterfaceIdX2:
	//	*NodeTypeInterfaceIdX2_GlobalENbId
	//	*NodeTypeInterfaceIdX2_GlobalEnGNbId
	NodeTypeInterfaceIdX2 isNodeTypeInterfaceIdX2_NodeTypeInterfaceIdX2 `protobuf_oneof:"node_type_interface_id_x2"`
}

func (x *NodeTypeInterfaceIdX2) Reset() {
	*x = NodeTypeInterfaceIdX2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeTypeInterfaceIdX2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeTypeInterfaceIdX2) ProtoMessage() {}

func (x *NodeTypeInterfaceIdX2) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeTypeInterfaceIdX2.ProtoReflect.Descriptor instead.
func (*NodeTypeInterfaceIdX2) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{13}
}

func (m *NodeTypeInterfaceIdX2) GetNodeTypeInterfaceIdX2() isNodeTypeInterfaceIdX2_NodeTypeInterfaceIdX2 {
	if m != nil {
		return m.NodeTypeInterfaceIdX2
	}
	return nil
}

func (x *NodeTypeInterfaceIdX2) GetGlobalENbId() *GlobalEnbID {
	if x, ok := x.GetNodeTypeInterfaceIdX2().(*NodeTypeInterfaceIdX2_GlobalENbId); ok {
		return x.GlobalENbId
	}
	return nil
}

func (x *NodeTypeInterfaceIdX2) GetGlobalEnGNbId() *GlobalenGnbID {
	if x, ok := x.GetNodeTypeInterfaceIdX2().(*NodeTypeInterfaceIdX2_GlobalEnGNbId); ok {
		return x.GlobalEnGNbId
	}
	return nil
}

type isNodeTypeInterfaceIdX2_NodeTypeInterfaceIdX2 interface {
	isNodeTypeInterfaceIdX2_NodeTypeInterfaceIdX2()
}

type NodeTypeInterfaceIdX2_GlobalENbId struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt,"
	GlobalENbId *GlobalEnbID `protobuf:"bytes,1,opt,name=global_e_nb_id,json=global-eNB-ID,proto3,oneof" aper:"choiceIdx:1,valueExt,"`
}

type NodeTypeInterfaceIdX2_GlobalEnGNbId struct {
	// @inject_tag: aper:"choiceIdx:2,valueExt,"
	GlobalEnGNbId *GlobalenGnbID `protobuf:"bytes,2,opt,name=global_en_g_nb_id,json=global-en-gNB-ID,proto3,oneof" aper:"choiceIdx:2,valueExt,"`
}

func (*NodeTypeInterfaceIdX2_GlobalENbId) isNodeTypeInterfaceIdX2_NodeTypeInterfaceIdX2() {}

func (*NodeTypeInterfaceIdX2_GlobalEnGNbId) isNodeTypeInterfaceIdX2_NodeTypeInterfaceIdX2() {}

// sequence from e2sm_common_ies.asn1:98
// @inject_tag: aper:"valueExt"
// {InterfaceID-X2}
type InterfaceIdX2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"choiceExt,"
	NodeType *NodeTypeInterfaceIdX2 `protobuf:"bytes,1,opt,name=node_type,json=nodeType,proto3" json:"node_type,omitempty" aper:"choiceExt,"`
}

func (x *InterfaceIdX2) Reset() {
	*x = InterfaceIdX2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceIdX2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceIdX2) ProtoMessage() {}

func (x *InterfaceIdX2) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceIdX2.ProtoReflect.Descriptor instead.
func (*InterfaceIdX2) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{14}
}

func (x *InterfaceIdX2) GetNodeType() *NodeTypeInterfaceIdX2 {
	if x != nil {
		return x.NodeType
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:103
// @inject_tag: aper:"valueExt"
// {InterfaceID-W1}
type InterfaceIdW1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,"
	GlobalNgENbId *GlobalNgEnbID `protobuf:"bytes,1,opt,name=global_ng_e_nb_id,json=global-ng-eNB-ID,proto3" json:"global_ng_e_nb_id,omitempty" aper:"valueExt,"`
	NgENbDuId     *NgenbDUID     `protobuf:"bytes,2,opt,name=ng_e_nb_du_id,json=ng-eNB-DU-ID,proto3" json:"ng_e_nb_du_id,omitempty"`
}

func (x *InterfaceIdW1) Reset() {
	*x = InterfaceIdW1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceIdW1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceIdW1) ProtoMessage() {}

func (x *InterfaceIdW1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceIdW1.ProtoReflect.Descriptor instead.
func (*InterfaceIdW1) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{15}
}

func (x *InterfaceIdW1) GetGlobalNgENbId() *GlobalNgEnbID {
	if x != nil {
		return x.GlobalNgENbId
	}
	return nil
}

func (x *InterfaceIdW1) GetNgENbDuId() *NgenbDUID {
	if x != nil {
		return x.NgENbDuId
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:109
// @inject_tag: aper:"valueExt"
// {Interface-MessageID}
type InterfaceMessageId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterfaceProcedureId int32 `protobuf:"varint,1,opt,name=interface_procedure_id,json=interfaceProcedureID,proto3" json:"interface_procedure_id,omitempty"`
	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:2,"
	MessageType MessageTypeInterfaceMessageId `protobuf:"varint,2,opt,name=message_type,json=messageType,proto3,enum=e2sm_ccc.v1.MessageTypeInterfaceMessageId" json:"message_type,omitempty" aper:"valueExt,valueLB:0,valueUB:2,"`
}

func (x *InterfaceMessageId) Reset() {
	*x = InterfaceMessageId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceMessageId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceMessageId) ProtoMessage() {}

func (x *InterfaceMessageId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceMessageId.ProtoReflect.Descriptor instead.
func (*InterfaceMessageId) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{16}
}

func (x *InterfaceMessageId) GetInterfaceProcedureId() int32 {
	if x != nil {
		return x.InterfaceProcedureId
	}
	return 0
}

func (x *InterfaceMessageId) GetMessageType() MessageTypeInterfaceMessageId {
	if x != nil {
		return x.MessageType
	}
	return MessageTypeInterfaceMessageId_MESSAGE_TYPE_INTERFACE_MESSAGE_ID_INITIATING_MESSAGE
}

// sequence from e2sm_common_ies.asn1:117
// @inject_tag: aper:"choiceExt"
// {GroupID}
type GroupId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_common_ies.asn1:117
	//
	// Types that are assignable to GroupId:
	//	*GroupId_FiveGc
	//	*GroupId_EPc
	GroupId isGroupId_GroupId `protobuf_oneof:"group_id"`
}

func (x *GroupId) Reset() {
	*x = GroupId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupId) ProtoMessage() {}

func (x *GroupId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupId.ProtoReflect.Descriptor instead.
func (*GroupId) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{17}
}

func (m *GroupId) GetGroupId() isGroupId_GroupId {
	if m != nil {
		return m.GroupId
	}
	return nil
}

func (x *GroupId) GetFiveGc() *FiveQi {
	if x, ok := x.GetGroupId().(*GroupId_FiveGc); ok {
		return x.FiveGc
	}
	return nil
}

func (x *GroupId) GetEPc() *Qci {
	if x, ok := x.GetGroupId().(*GroupId_EPc); ok {
		return x.EPc
	}
	return nil
}

type isGroupId_GroupId interface {
	isGroupId_GroupId()
}

type GroupId_FiveGc struct {
	// @inject_tag: aper:"choiceIdx:1,"
	FiveGc *FiveQi `protobuf:"bytes,1,opt,name=five_gc,json=fiveGC,proto3,oneof" aper:"choiceIdx:1,"`
}

type GroupId_EPc struct {
	// @inject_tag: aper:"choiceIdx:2,"
	EPc *Qci `protobuf:"bytes,2,opt,name=e_pc,json=ePC,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*GroupId_FiveGc) isGroupId_GroupId() {}

func (*GroupId_EPc) isGroupId_GroupId() {}

// sequence from e2sm_common_ies.asn1:123
// @inject_tag: aper:"choiceExt"
// {QoSID}
type QoSid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_common_ies.asn1:123
	//
	// Types that are assignable to QoSid:
	//	*QoSid_FiveGc
	//	*QoSid_EPc
	QoSid isQoSid_QoSid `protobuf_oneof:"qo_sid"`
}

func (x *QoSid) Reset() {
	*x = QoSid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QoSid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QoSid) ProtoMessage() {}

func (x *QoSid) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QoSid.ProtoReflect.Descriptor instead.
func (*QoSid) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{18}
}

func (m *QoSid) GetQoSid() isQoSid_QoSid {
	if m != nil {
		return m.QoSid
	}
	return nil
}

func (x *QoSid) GetFiveGc() *FiveQi {
	if x, ok := x.GetQoSid().(*QoSid_FiveGc); ok {
		return x.FiveGc
	}
	return nil
}

func (x *QoSid) GetEPc() *Qci {
	if x, ok := x.GetQoSid().(*QoSid_EPc); ok {
		return x.EPc
	}
	return nil
}

type isQoSid_QoSid interface {
	isQoSid_QoSid()
}

type QoSid_FiveGc struct {
	// @inject_tag: aper:"choiceIdx:1,"
	FiveGc *FiveQi `protobuf:"bytes,1,opt,name=five_gc,json=fiveGC,proto3,oneof" aper:"choiceIdx:1,"`
}

type QoSid_EPc struct {
	// @inject_tag: aper:"choiceIdx:2,"
	EPc *Qci `protobuf:"bytes,2,opt,name=e_pc,json=ePC,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*QoSid_FiveGc) isQoSid_QoSid() {}

func (*QoSid_EPc) isQoSid_QoSid() {}

// sequence from e2sm_common_ies.asn1:129
// @inject_tag: aper:"valueExt"
// {RANfunction-Name}
type RanfunctionName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:150,"
	RanFunctionShortName string `protobuf:"bytes,1,opt,name=ran_function_short_name,json=ranFunction-ShortName,proto3" json:"ran_function_short_name,omitempty" aper:"sizeExt,sizeLB:1,sizeUB:150,"`
	// @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:1000,"
	RanFunctionE2SmOid string `protobuf:"bytes,2,opt,name=ran_function_e2_sm_oid,json=ranFunction-E2SM-OID,proto3" json:"ran_function_e2_sm_oid,omitempty" aper:"sizeExt,sizeLB:1,sizeUB:1000,"`
	// @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:150,"
	RanFunctionDescription string `protobuf:"bytes,3,opt,name=ran_function_description,json=ranFunction-Description,proto3" json:"ran_function_description,omitempty" aper:"sizeExt,sizeLB:1,sizeUB:150,"`
	// @inject_tag: aper:"optional,"
	RanFunctionInstance *int32 `protobuf:"varint,4,opt,name=ran_function_instance,json=ranFunction-Instance,proto3,oneof" json:"ran_function_instance,omitempty" aper:"optional,"`
}

func (x *RanfunctionName) Reset() {
	*x = RanfunctionName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanfunctionName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanfunctionName) ProtoMessage() {}

func (x *RanfunctionName) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanfunctionName.ProtoReflect.Descriptor instead.
func (*RanfunctionName) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{19}
}

func (x *RanfunctionName) GetRanFunctionShortName() string {
	if x != nil {
		return x.RanFunctionShortName
	}
	return ""
}

func (x *RanfunctionName) GetRanFunctionE2SmOid() string {
	if x != nil {
		return x.RanFunctionE2SmOid
	}
	return ""
}

func (x *RanfunctionName) GetRanFunctionDescription() string {
	if x != nil {
		return x.RanFunctionDescription
	}
	return ""
}

func (x *RanfunctionName) GetRanFunctionInstance() int32 {
	if x != nil && x.RanFunctionInstance != nil {
		return *x.RanFunctionInstance
	}
	return 0
}

// range of Integer from e2sm_common_ies.asn1:138
// {RIC-Format-Type}
type RicFormatType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RicFormatType) Reset() {
	*x = RicFormatType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicFormatType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicFormatType) ProtoMessage() {}

func (x *RicFormatType) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicFormatType.ProtoReflect.Descriptor instead.
func (*RicFormatType) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{20}
}

func (x *RicFormatType) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_common_ies.asn1:140
// {RIC-Style-Type}
type RicStyleType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RicStyleType) Reset() {
	*x = RicStyleType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicStyleType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicStyleType) ProtoMessage() {}

func (x *RicStyleType) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicStyleType.ProtoReflect.Descriptor instead.
func (*RicStyleType) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{21}
}

func (x *RicStyleType) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_common_ies.asn1:140
// {RIC-Style-Name}
type RicStyleName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:150,"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeExt,sizeLB:1,sizeUB:150,"`
}

func (x *RicStyleName) Reset() {
	*x = RicStyleName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicStyleName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicStyleName) ProtoMessage() {}

func (x *RicStyleName) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicStyleName.ProtoReflect.Descriptor instead.
func (*RicStyleName) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{22}
}

func (x *RicStyleName) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// choice from e2sm_common_ies.asn1:144
// @inject_tag: aper:"choiceExt"
// {rrcTypeRRC-MessageID}
type RrcTypeRrcMessageId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_common_ies.asn1:144
	//
	// Types that are assignable to RrcTypeRrcMessageId:
	//	*RrcTypeRrcMessageId_LTe
	//	*RrcTypeRrcMessageId_NR
	RrcTypeRrcMessageId isRrcTypeRrcMessageId_RrcTypeRrcMessageId `protobuf_oneof:"rrc_type_rrc_message_id"`
}

func (x *RrcTypeRrcMessageId) Reset() {
	*x = RrcTypeRrcMessageId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RrcTypeRrcMessageId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RrcTypeRrcMessageId) ProtoMessage() {}

func (x *RrcTypeRrcMessageId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RrcTypeRrcMessageId.ProtoReflect.Descriptor instead.
func (*RrcTypeRrcMessageId) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{23}
}

func (m *RrcTypeRrcMessageId) GetRrcTypeRrcMessageId() isRrcTypeRrcMessageId_RrcTypeRrcMessageId {
	if m != nil {
		return m.RrcTypeRrcMessageId
	}
	return nil
}

func (x *RrcTypeRrcMessageId) GetLTe() RrcclassLte {
	if x, ok := x.GetRrcTypeRrcMessageId().(*RrcTypeRrcMessageId_LTe); ok {
		return x.LTe
	}
	return RrcclassLte_RRCCLASS_LTE_B_CCH_BCH
}

func (x *RrcTypeRrcMessageId) GetNR() RrcclassNR {
	if x, ok := x.GetRrcTypeRrcMessageId().(*RrcTypeRrcMessageId_NR); ok {
		return x.NR
	}
	return RrcclassNR_RRCCLASS_NR_B_CCH_BCH
}

type isRrcTypeRrcMessageId_RrcTypeRrcMessageId interface {
	isRrcTypeRrcMessageId_RrcTypeRrcMessageId()
}

type RrcTypeRrcMessageId_LTe struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt,valueLB:0,valueUB:11,"
	LTe RrcclassLte `protobuf:"varint,1,opt,name=l_te,json=lTE,proto3,enum=e2sm_ccc.v1.RrcclassLte,oneof" aper:"choiceIdx:1,valueExt,valueLB:0,valueUB:11,"`
}

type RrcTypeRrcMessageId_NR struct {
	// @inject_tag: aper:"choiceIdx:2,valueExt,valueLB:0,valueUB:7,"
	NR RrcclassNR `protobuf:"varint,2,opt,name=n_r,json=nR,proto3,enum=e2sm_ccc.v1.RrcclassNR,oneof" aper:"choiceIdx:2,valueExt,valueLB:0,valueUB:7,"`
}

func (*RrcTypeRrcMessageId_LTe) isRrcTypeRrcMessageId_RrcTypeRrcMessageId() {}

func (*RrcTypeRrcMessageId_NR) isRrcTypeRrcMessageId_RrcTypeRrcMessageId() {}

// sequence from e2sm_common_ies.asn1:147
// @inject_tag: aper:"valueExt"
// {RRC-MessageID}
type RrcMessageId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"choiceExt,"
	RrcType   *RrcTypeRrcMessageId `protobuf:"bytes,1,opt,name=rrc_type,json=rrcType,proto3" json:"rrc_type,omitempty" aper:"choiceExt,"`
	MessageId int32                `protobuf:"varint,2,opt,name=message_id,json=messageID,proto3" json:"message_id,omitempty"`
}

func (x *RrcMessageId) Reset() {
	*x = RrcMessageId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RrcMessageId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RrcMessageId) ProtoMessage() {}

func (x *RrcMessageId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RrcMessageId.ProtoReflect.Descriptor instead.
func (*RrcMessageId) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{24}
}

func (x *RrcMessageId) GetRrcType() *RrcTypeRrcMessageId {
	if x != nil {
		return x.RrcType
	}
	return nil
}

func (x *RrcMessageId) GetMessageId() int32 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

// sequence from e2sm_common_ies.asn1:157
// @inject_tag: aper:"choiceExt"
// {ServingCell-ARFCN}
type ServingCellARfcn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_common_ies.asn1:157
	//
	// Types that are assignable to ServingCellArfcn:
	//	*ServingCellARfcn_NR
	//	*ServingCellARfcn_EUtra
	ServingCellArfcn isServingCellARfcn_ServingCellArfcn `protobuf_oneof:"serving_cell_arfcn"`
}

func (x *ServingCellARfcn) Reset() {
	*x = ServingCellARfcn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServingCellARfcn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServingCellARfcn) ProtoMessage() {}

func (x *ServingCellARfcn) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServingCellARfcn.ProtoReflect.Descriptor instead.
func (*ServingCellARfcn) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{25}
}

func (m *ServingCellARfcn) GetServingCellArfcn() isServingCellARfcn_ServingCellArfcn {
	if m != nil {
		return m.ServingCellArfcn
	}
	return nil
}

func (x *ServingCellARfcn) GetNR() *NrARfcn {
	if x, ok := x.GetServingCellArfcn().(*ServingCellARfcn_NR); ok {
		return x.NR
	}
	return nil
}

func (x *ServingCellARfcn) GetEUtra() *EUTraARfcn {
	if x, ok := x.GetServingCellArfcn().(*ServingCellARfcn_EUtra); ok {
		return x.EUtra
	}
	return nil
}

type isServingCellARfcn_ServingCellArfcn interface {
	isServingCellARfcn_ServingCellArfcn()
}

type ServingCellARfcn_NR struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt,"
	NR *NrARfcn `protobuf:"bytes,1,opt,name=n_r,json=nR,proto3,oneof" aper:"choiceIdx:1,valueExt,"`
}

type ServingCellARfcn_EUtra struct {
	// @inject_tag: aper:"choiceIdx:2,"
	EUtra *EUTraARfcn `protobuf:"bytes,2,opt,name=e_utra,json=eUTRA,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*ServingCellARfcn_NR) isServingCellARfcn_ServingCellArfcn() {}

func (*ServingCellARfcn_EUtra) isServingCellARfcn_ServingCellArfcn() {}

// sequence from e2sm_common_ies.asn1:163
// @inject_tag: aper:"choiceExt"
// {ServingCell-PCI}
type ServingCellPCi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_common_ies.asn1:163
	//
	// Types that are assignable to ServingCellPci:
	//	*ServingCellPCi_NR
	//	*ServingCellPCi_EUtra
	ServingCellPci isServingCellPCi_ServingCellPci `protobuf_oneof:"serving_cell_pci"`
}

func (x *ServingCellPCi) Reset() {
	*x = ServingCellPCi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServingCellPCi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServingCellPCi) ProtoMessage() {}

func (x *ServingCellPCi) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServingCellPCi.ProtoReflect.Descriptor instead.
func (*ServingCellPCi) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{26}
}

func (m *ServingCellPCi) GetServingCellPci() isServingCellPCi_ServingCellPci {
	if m != nil {
		return m.ServingCellPci
	}
	return nil
}

func (x *ServingCellPCi) GetNR() *NrPCi {
	if x, ok := x.GetServingCellPci().(*ServingCellPCi_NR); ok {
		return x.NR
	}
	return nil
}

func (x *ServingCellPCi) GetEUtra() *EUTraPCi {
	if x, ok := x.GetServingCellPci().(*ServingCellPCi_EUtra); ok {
		return x.EUtra
	}
	return nil
}

type isServingCellPCi_ServingCellPci interface {
	isServingCellPCi_ServingCellPci()
}

type ServingCellPCi_NR struct {
	// @inject_tag: aper:"choiceIdx:1,"
	NR *NrPCi `protobuf:"bytes,1,opt,name=n_r,json=nR,proto3,oneof" aper:"choiceIdx:1,"`
}

type ServingCellPCi_EUtra struct {
	// @inject_tag: aper:"choiceIdx:2,"
	EUtra *EUTraPCi `protobuf:"bytes,2,opt,name=e_utra,json=eUTRA,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*ServingCellPCi_NR) isServingCellPCi_ServingCellPci() {}

func (*ServingCellPCi_EUtra) isServingCellPCi_ServingCellPci() {}

// sequence from e2sm_common_ies.asn1:169
// @inject_tag: aper:"choiceExt"
// {UEID}
type Ueid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_common_ies.asn1:169
	//
	// Types that are assignable to Ueid:
	//	*Ueid_GNbUeid
	//	*Ueid_GNbDuUeid
	//	*Ueid_GNbCuUpUeid
	//	*Ueid_NgENbUeid
	//	*Ueid_NgENbDuUeid
	//	*Ueid_EnGNbUeid
	//	*Ueid_ENbUeid
	Ueid isUeid_Ueid `protobuf_oneof:"ueid"`
}

func (x *Ueid) Reset() {
	*x = Ueid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ueid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ueid) ProtoMessage() {}

func (x *Ueid) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ueid.ProtoReflect.Descriptor instead.
func (*Ueid) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{27}
}

func (m *Ueid) GetUeid() isUeid_Ueid {
	if m != nil {
		return m.Ueid
	}
	return nil
}

func (x *Ueid) GetGNbUeid() *UeidGNb {
	if x, ok := x.GetUeid().(*Ueid_GNbUeid); ok {
		return x.GNbUeid
	}
	return nil
}

func (x *Ueid) GetGNbDuUeid() *UeidGNbDU {
	if x, ok := x.GetUeid().(*Ueid_GNbDuUeid); ok {
		return x.GNbDuUeid
	}
	return nil
}

func (x *Ueid) GetGNbCuUpUeid() *UeidGNbCUUP {
	if x, ok := x.GetUeid().(*Ueid_GNbCuUpUeid); ok {
		return x.GNbCuUpUeid
	}
	return nil
}

func (x *Ueid) GetNgENbUeid() *UeidNGENb {
	if x, ok := x.GetUeid().(*Ueid_NgENbUeid); ok {
		return x.NgENbUeid
	}
	return nil
}

func (x *Ueid) GetNgENbDuUeid() *UeidNGENbDU {
	if x, ok := x.GetUeid().(*Ueid_NgENbDuUeid); ok {
		return x.NgENbDuUeid
	}
	return nil
}

func (x *Ueid) GetEnGNbUeid() *UeidENGNb {
	if x, ok := x.GetUeid().(*Ueid_EnGNbUeid); ok {
		return x.EnGNbUeid
	}
	return nil
}

func (x *Ueid) GetENbUeid() *UeidENb {
	if x, ok := x.GetUeid().(*Ueid_ENbUeid); ok {
		return x.ENbUeid
	}
	return nil
}

type isUeid_Ueid interface {
	isUeid_Ueid()
}

type Ueid_GNbUeid struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt,"
	GNbUeid *UeidGNb `protobuf:"bytes,1,opt,name=g_nb_ueid,json=gNB-UEID,proto3,oneof" aper:"choiceIdx:1,valueExt,"`
}

type Ueid_GNbDuUeid struct {
	// @inject_tag: aper:"choiceIdx:2,valueExt,"
	GNbDuUeid *UeidGNbDU `protobuf:"bytes,2,opt,name=g_nb_du_ueid,json=gNB-DU-UEID,proto3,oneof" aper:"choiceIdx:2,valueExt,"`
}

type Ueid_GNbCuUpUeid struct {
	// @inject_tag: aper:"choiceIdx:3,valueExt,"
	GNbCuUpUeid *UeidGNbCUUP `protobuf:"bytes,3,opt,name=g_nb_cu_up_ueid,json=gNB-CU-UP-UEID,proto3,oneof" aper:"choiceIdx:3,valueExt,"`
}

type Ueid_NgENbUeid struct {
	// @inject_tag: aper:"choiceIdx:4,valueExt,"
	NgENbUeid *UeidNGENb `protobuf:"bytes,4,opt,name=ng_e_nb_ueid,json=ng-eNB-UEID,proto3,oneof" aper:"choiceIdx:4,valueExt,"`
}

type Ueid_NgENbDuUeid struct {
	// @inject_tag: aper:"choiceIdx:5,valueExt,"
	NgENbDuUeid *UeidNGENbDU `protobuf:"bytes,5,opt,name=ng_e_nb_du_ueid,json=ng-eNB-DU-UEID,proto3,oneof" aper:"choiceIdx:5,valueExt,"`
}

type Ueid_EnGNbUeid struct {
	// @inject_tag: aper:"choiceIdx:6,valueExt,"
	EnGNbUeid *UeidENGNb `protobuf:"bytes,6,opt,name=en_g_nb_ueid,json=en-gNB-UEID,proto3,oneof" aper:"choiceIdx:6,valueExt,"`
}

type Ueid_ENbUeid struct {
	// @inject_tag: aper:"choiceIdx:7,valueExt,"
	ENbUeid *UeidENb `protobuf:"bytes,7,opt,name=e_nb_ueid,json=eNB-UEID,proto3,oneof" aper:"choiceIdx:7,valueExt,"`
}

func (*Ueid_GNbUeid) isUeid_Ueid() {}

func (*Ueid_GNbDuUeid) isUeid_Ueid() {}

func (*Ueid_GNbCuUpUeid) isUeid_Ueid() {}

func (*Ueid_NgENbUeid) isUeid_Ueid() {}

func (*Ueid_NgENbDuUeid) isUeid_Ueid() {}

func (*Ueid_EnGNbUeid) isUeid_Ueid() {}

func (*Ueid_ENbUeid) isUeid_Ueid() {}

// sequence from e2sm_common_ies.asn1:180
// @inject_tag: aper:"valueExt"
// {UEID-GNB}
type UeidGNb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AmfUeNgapId *AmfUENGapID `protobuf:"bytes,1,opt,name=amf_ue_ngap_id,json=amf-UE-NGAP-ID,proto3" json:"amf_ue_ngap_id,omitempty"`
	// @inject_tag: aper:"valueExt,"
	Guami *Guami `protobuf:"bytes,2,opt,name=guami,proto3" json:"guami,omitempty" aper:"valueExt,"`
	// @inject_tag: aper:"optional,"
	GNbCuUeF1ApIdList *UeidGNbCUF1ApIDList `protobuf:"bytes,3,opt,name=g_nb_cu_ue_f1_ap_id_list,json=gNB-CU-UE-F1AP-ID-List,proto3,oneof" json:"g_nb_cu_ue_f1_ap_id_list,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	GNbCuCpUeE1ApIdList *UeidGNbCUCPE1ApIDList `protobuf:"bytes,4,opt,name=g_nb_cu_cp_ue_e1_ap_id_list,json=gNB-CU-CP-UE-E1AP-ID-List,proto3,oneof" json:"g_nb_cu_cp_ue_e1_ap_id_list,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	RanUeid *Ranueid `protobuf:"bytes,5,opt,name=ran_ueid,json=ran-UEID,proto3,oneof" json:"ran_ueid,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	MNgRanUeXnApId *NgRAnnodeUexnApid `protobuf:"bytes,6,opt,name=m_ng_ran_ue_xn_ap_id,json=m-NG-RAN-UE-XnAP-ID,proto3,oneof" json:"m_ng_ran_ue_xn_ap_id,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,valueExt,"
	GlobalGnbId *GlobalGnbID `protobuf:"bytes,7,opt,name=global_gnb_id,json=globalGNB-ID,proto3,oneof" json:"global_gnb_id,omitempty" aper:"optional,valueExt,"`
	// @inject_tag: aper:"optional,choiceExt,fromValueExt,"
	GlobalNgRannodeId *GlobalNgrannodeId `protobuf:"bytes,8,opt,name=global_ng_rannode_id,json=globalNG-RANNode-ID,proto3,oneof" json:"global_ng_rannode_id,omitempty" aper:"optional,choiceExt,fromValueExt,"`
}

func (x *UeidGNb) Reset() {
	*x = UeidGNb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UeidGNb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UeidGNb) ProtoMessage() {}

func (x *UeidGNb) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UeidGNb.ProtoReflect.Descriptor instead.
func (*UeidGNb) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{28}
}

func (x *UeidGNb) GetAmfUeNgapId() *AmfUENGapID {
	if x != nil {
		return x.AmfUeNgapId
	}
	return nil
}

func (x *UeidGNb) GetGuami() *Guami {
	if x != nil {
		return x.Guami
	}
	return nil
}

func (x *UeidGNb) GetGNbCuUeF1ApIdList() *UeidGNbCUF1ApIDList {
	if x != nil {
		return x.GNbCuUeF1ApIdList
	}
	return nil
}

func (x *UeidGNb) GetGNbCuCpUeE1ApIdList() *UeidGNbCUCPE1ApIDList {
	if x != nil {
		return x.GNbCuCpUeE1ApIdList
	}
	return nil
}

func (x *UeidGNb) GetRanUeid() *Ranueid {
	if x != nil {
		return x.RanUeid
	}
	return nil
}

func (x *UeidGNb) GetMNgRanUeXnApId() *NgRAnnodeUexnApid {
	if x != nil {
		return x.MNgRanUeXnApId
	}
	return nil
}

func (x *UeidGNb) GetGlobalGnbId() *GlobalGnbID {
	if x != nil {
		return x.GlobalGnbId
	}
	return nil
}

func (x *UeidGNb) GetGlobalNgRannodeId() *GlobalNgrannodeId {
	if x != nil {
		return x.GlobalNgRannodeId
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:198
// {UEID-GNB-CU-CP-E1AP-ID-List}
type UeidGNbCUCPE1ApIDList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:65535,"
	Value []*UeidGNbCUCPE1ApIDItem `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"valueExt,sizeLB:1,sizeUB:65535,"`
}

func (x *UeidGNbCUCPE1ApIDList) Reset() {
	*x = UeidGNbCUCPE1ApIDList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UeidGNbCUCPE1ApIDList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UeidGNbCUCPE1ApIDList) ProtoMessage() {}

func (x *UeidGNbCUCPE1ApIDList) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UeidGNbCUCPE1ApIDList.ProtoReflect.Descriptor instead.
func (*UeidGNbCUCPE1ApIDList) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{29}
}

func (x *UeidGNbCUCPE1ApIDList) GetValue() []*UeidGNbCUCPE1ApIDItem {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:199
// @inject_tag: aper:"valueExt"
// {UEID-GNB-CU-CP-E1AP-ID-Item}
type UeidGNbCUCPE1ApIDItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GNbCuCpUeE1ApId *GnbCUCPUEE1ApID `protobuf:"bytes,1,opt,name=g_nb_cu_cp_ue_e1_ap_id,json=gNB-CU-CP-UE-E1AP-ID,proto3" json:"g_nb_cu_cp_ue_e1_ap_id,omitempty"`
}

func (x *UeidGNbCUCPE1ApIDItem) Reset() {
	*x = UeidGNbCUCPE1ApIDItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UeidGNbCUCPE1ApIDItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UeidGNbCUCPE1ApIDItem) ProtoMessage() {}

func (x *UeidGNbCUCPE1ApIDItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UeidGNbCUCPE1ApIDItem.ProtoReflect.Descriptor instead.
func (*UeidGNbCUCPE1ApIDItem) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{30}
}

func (x *UeidGNbCUCPE1ApIDItem) GetGNbCuCpUeE1ApId() *GnbCUCPUEE1ApID {
	if x != nil {
		return x.GNbCuCpUeE1ApId
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:205
// {UEID-GNB-CU-F1AP-ID-List}
type UeidGNbCUF1ApIDList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:4,"
	Value []*UeidGNbCUCPF1ApIDItem `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"valueExt,sizeLB:1,sizeUB:4,"`
}

func (x *UeidGNbCUF1ApIDList) Reset() {
	*x = UeidGNbCUF1ApIDList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UeidGNbCUF1ApIDList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UeidGNbCUF1ApIDList) ProtoMessage() {}

func (x *UeidGNbCUF1ApIDList) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UeidGNbCUF1ApIDList.ProtoReflect.Descriptor instead.
func (*UeidGNbCUF1ApIDList) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{31}
}

func (x *UeidGNbCUF1ApIDList) GetValue() []*UeidGNbCUCPF1ApIDItem {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:206
// @inject_tag: aper:"valueExt"
// {UEID-GNB-CU-CP-F1AP-ID-Item}
type UeidGNbCUCPF1ApIDItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GNbCuUeF1ApId *GnbCUUEF1ApID `protobuf:"bytes,1,opt,name=g_nb_cu_ue_f1_ap_id,json=gNB-CU-UE-F1AP-ID,proto3" json:"g_nb_cu_ue_f1_ap_id,omitempty"`
}

func (x *UeidGNbCUCPF1ApIDItem) Reset() {
	*x = UeidGNbCUCPF1ApIDItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UeidGNbCUCPF1ApIDItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UeidGNbCUCPF1ApIDItem) ProtoMessage() {}

func (x *UeidGNbCUCPF1ApIDItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UeidGNbCUCPF1ApIDItem.ProtoReflect.Descriptor instead.
func (*UeidGNbCUCPF1ApIDItem) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{32}
}

func (x *UeidGNbCUCPF1ApIDItem) GetGNbCuUeF1ApId() *GnbCUUEF1ApID {
	if x != nil {
		return x.GNbCuUeF1ApId
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:211
// @inject_tag: aper:"valueExt"
// {UEID-GNB-DU}
type UeidGNbDU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GNbCuUeF1ApId *GnbCUUEF1ApID `protobuf:"bytes,1,opt,name=g_nb_cu_ue_f1_ap_id,json=gNB-CU-UE-F1AP-ID,proto3" json:"g_nb_cu_ue_f1_ap_id,omitempty"`
	// @inject_tag: aper:"optional,"
	RanUeid *Ranueid `protobuf:"bytes,2,opt,name=ran_ueid,json=ran-UEID,proto3,oneof" json:"ran_ueid,omitempty" aper:"optional,"`
}

func (x *UeidGNbDU) Reset() {
	*x = UeidGNbDU{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UeidGNbDU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UeidGNbDU) ProtoMessage() {}

func (x *UeidGNbDU) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UeidGNbDU.ProtoReflect.Descriptor instead.
func (*UeidGNbDU) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{33}
}

func (x *UeidGNbDU) GetGNbCuUeF1ApId() *GnbCUUEF1ApID {
	if x != nil {
		return x.GNbCuUeF1ApId
	}
	return nil
}

func (x *UeidGNbDU) GetRanUeid() *Ranueid {
	if x != nil {
		return x.RanUeid
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:217
// @inject_tag: aper:"valueExt"
// {UEID-GNB-CU-UP}
type UeidGNbCUUP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GNbCuCpUeE1ApId *GnbCUCPUEE1ApID `protobuf:"bytes,1,opt,name=g_nb_cu_cp_ue_e1_ap_id,json=gNB-CU-CP-UE-E1AP-ID,proto3" json:"g_nb_cu_cp_ue_e1_ap_id,omitempty"`
	// @inject_tag: aper:"optional,"
	RanUeid *Ranueid `protobuf:"bytes,2,opt,name=ran_ueid,json=ran-UEID,proto3,oneof" json:"ran_ueid,omitempty" aper:"optional,"`
}

func (x *UeidGNbCUUP) Reset() {
	*x = UeidGNbCUUP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UeidGNbCUUP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UeidGNbCUUP) ProtoMessage() {}

func (x *UeidGNbCUUP) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UeidGNbCUUP.ProtoReflect.Descriptor instead.
func (*UeidGNbCUUP) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{34}
}

func (x *UeidGNbCUUP) GetGNbCuCpUeE1ApId() *GnbCUCPUEE1ApID {
	if x != nil {
		return x.GNbCuCpUeE1ApId
	}
	return nil
}

func (x *UeidGNbCUUP) GetRanUeid() *Ranueid {
	if x != nil {
		return x.RanUeid
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:223
// @inject_tag: aper:"valueExt"
// {UEID-NG-ENB}
type UeidNGENb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AmfUeNgapId *AmfUENGapID `protobuf:"bytes,1,opt,name=amf_ue_ngap_id,json=amf-UE-NGAP-ID,proto3" json:"amf_ue_ngap_id,omitempty"`
	// @inject_tag: aper:"valueExt,"
	Guami *Guami `protobuf:"bytes,2,opt,name=guami,proto3" json:"guami,omitempty" aper:"valueExt,"`
	// @inject_tag: aper:"optional,"
	NgENbCuUeW1ApId *NgenbCUUEW1ApID `protobuf:"bytes,3,opt,name=ng_e_nb_cu_ue_w1_ap_id,json=ng-eNB-CU-UE-W1AP-ID,proto3,oneof" json:"ng_e_nb_cu_ue_w1_ap_id,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	MNgRanUeXnApId *NgRAnnodeUexnApid `protobuf:"bytes,4,opt,name=m_ng_ran_ue_xn_ap_id,json=m-NG-RAN-UE-XnAP-ID,proto3,oneof" json:"m_ng_ran_ue_xn_ap_id,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,valueExt,"
	GlobalNgEnbId *GlobalNgEnbID `protobuf:"bytes,5,opt,name=global_ng_enb_id,json=globalNgENB-ID,proto3,oneof" json:"global_ng_enb_id,omitempty" aper:"optional,valueExt,"`
	// @inject_tag: aper:"optional,choiceExt,fromValueExt,"
	GlobalNgRannodeId *GlobalNgrannodeId `protobuf:"bytes,6,opt,name=global_ng_rannode_id,json=globalNG-RANNode-ID,proto3,oneof" json:"global_ng_rannode_id,omitempty" aper:"optional,choiceExt,fromValueExt,"`
}

func (x *UeidNGENb) Reset() {
	*x = UeidNGENb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UeidNGENb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UeidNGENb) ProtoMessage() {}

func (x *UeidNGENb) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UeidNGENb.ProtoReflect.Descriptor instead.
func (*UeidNGENb) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{35}
}

func (x *UeidNGENb) GetAmfUeNgapId() *AmfUENGapID {
	if x != nil {
		return x.AmfUeNgapId
	}
	return nil
}

func (x *UeidNGENb) GetGuami() *Guami {
	if x != nil {
		return x.Guami
	}
	return nil
}

func (x *UeidNGENb) GetNgENbCuUeW1ApId() *NgenbCUUEW1ApID {
	if x != nil {
		return x.NgENbCuUeW1ApId
	}
	return nil
}

func (x *UeidNGENb) GetMNgRanUeXnApId() *NgRAnnodeUexnApid {
	if x != nil {
		return x.MNgRanUeXnApId
	}
	return nil
}

func (x *UeidNGENb) GetGlobalNgEnbId() *GlobalNgEnbID {
	if x != nil {
		return x.GlobalNgEnbId
	}
	return nil
}

func (x *UeidNGENb) GetGlobalNgRannodeId() *GlobalNgrannodeId {
	if x != nil {
		return x.GlobalNgRannodeId
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:237
// @inject_tag: aper:"valueExt"
// {UEID-NG-ENB-DU}
type UeidNGENbDU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NgENbCuUeW1ApId *NgenbCUUEW1ApID `protobuf:"bytes,1,opt,name=ng_e_nb_cu_ue_w1_ap_id,json=ng-eNB-CU-UE-W1AP-ID,proto3" json:"ng_e_nb_cu_ue_w1_ap_id,omitempty"`
}

func (x *UeidNGENbDU) Reset() {
	*x = UeidNGENbDU{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UeidNGENbDU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UeidNGENbDU) ProtoMessage() {}

func (x *UeidNGENbDU) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UeidNGENbDU.ProtoReflect.Descriptor instead.
func (*UeidNGENbDU) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{36}
}

func (x *UeidNGENbDU) GetNgENbCuUeW1ApId() *NgenbCUUEW1ApID {
	if x != nil {
		return x.NgENbCuUeW1ApId
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:242
// @inject_tag: aper:"valueExt"
// {UEID-EN-GNB}
type UeidENGNb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MENbUeX2ApId *EnbUEX2ApID `protobuf:"bytes,1,opt,name=m_e_nb_ue_x2_ap_id,json=m-eNB-UE-X2AP-ID,proto3" json:"m_e_nb_ue_x2_ap_id,omitempty"`
	// @inject_tag: aper:"optional,"
	MENbUeX2ApIdExtension *EnbUEX2ApIDExtension `protobuf:"bytes,2,opt,name=m_e_nb_ue_x2_ap_id_extension,json=m-eNB-UE-X2AP-ID-Extension,proto3,oneof" json:"m_e_nb_ue_x2_ap_id_extension,omitempty" aper:"optional,"`
	// @inject_tag: aper:"valueExt,"
	GlobalEnbId *GlobalEnbID `protobuf:"bytes,3,opt,name=global_enb_id,json=globalENB-ID,proto3" json:"global_enb_id,omitempty" aper:"valueExt,"`
	// @inject_tag: aper:"optional,"
	GNbCuUeF1ApId *GnbCUUEF1ApID `protobuf:"bytes,4,opt,name=g_nb_cu_ue_f1_ap_id,json=gNB-CU-UE-F1AP-ID,proto3,oneof" json:"g_nb_cu_ue_f1_ap_id,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	GNbCuCpUeE1ApIdList *UeidGNbCUCPE1ApIDList `protobuf:"bytes,5,opt,name=g_nb_cu_cp_ue_e1_ap_id_list,json=gNB-CU-CP-UE-E1AP-ID-List,proto3,oneof" json:"g_nb_cu_cp_ue_e1_ap_id_list,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	RanUeid *Ranueid `protobuf:"bytes,6,opt,name=ran_ueid,json=ran-UEID,proto3,oneof" json:"ran_ueid,omitempty" aper:"optional,"`
}

func (x *UeidENGNb) Reset() {
	*x = UeidENGNb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UeidENGNb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UeidENGNb) ProtoMessage() {}

func (x *UeidENGNb) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UeidENGNb.ProtoReflect.Descriptor instead.
func (*UeidENGNb) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{37}
}

func (x *UeidENGNb) GetMENbUeX2ApId() *EnbUEX2ApID {
	if x != nil {
		return x.MENbUeX2ApId
	}
	return nil
}

func (x *UeidENGNb) GetMENbUeX2ApIdExtension() *EnbUEX2ApIDExtension {
	if x != nil {
		return x.MENbUeX2ApIdExtension
	}
	return nil
}

func (x *UeidENGNb) GetGlobalEnbId() *GlobalEnbID {
	if x != nil {
		return x.GlobalEnbId
	}
	return nil
}

func (x *UeidENGNb) GetGNbCuUeF1ApId() *GnbCUUEF1ApID {
	if x != nil {
		return x.GNbCuUeF1ApId
	}
	return nil
}

func (x *UeidENGNb) GetGNbCuCpUeE1ApIdList() *UeidGNbCUCPE1ApIDList {
	if x != nil {
		return x.GNbCuCpUeE1ApIdList
	}
	return nil
}

func (x *UeidENGNb) GetRanUeid() *Ranueid {
	if x != nil {
		return x.RanUeid
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:254
// @inject_tag: aper:"valueExt"
// {UEID-ENB}
type UeidENb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MMeUeS1ApId *MmeUES1ApID `protobuf:"bytes,1,opt,name=m_me_ue_s1_ap_id,json=mME-UE-S1AP-ID,proto3" json:"m_me_ue_s1_ap_id,omitempty"`
	// @inject_tag: aper:"valueExt,"
	GUmmei *Gummei `protobuf:"bytes,2,opt,name=g_ummei,json=gUMMEI,proto3" json:"g_ummei,omitempty" aper:"valueExt,"`
	// @inject_tag: aper:"optional,"
	MENbUeX2ApId *EnbUEX2ApID `protobuf:"bytes,3,opt,name=m_e_nb_ue_x2_ap_id,json=m-eNB-UE-X2AP-ID,proto3,oneof" json:"m_e_nb_ue_x2_ap_id,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	MENbUeX2ApIdExtension *EnbUEX2ApIDExtension `protobuf:"bytes,4,opt,name=m_e_nb_ue_x2_ap_id_extension,json=m-eNB-UE-X2AP-ID-Extension,proto3,oneof" json:"m_e_nb_ue_x2_ap_id_extension,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,valueExt,"
	GlobalEnbId *GlobalEnbID `protobuf:"bytes,5,opt,name=global_enb_id,json=globalENB-ID,proto3,oneof" json:"global_enb_id,omitempty" aper:"optional,valueExt,"`
}

func (x *UeidENb) Reset() {
	*x = UeidENb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UeidENb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UeidENb) ProtoMessage() {}

func (x *UeidENb) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UeidENb.ProtoReflect.Descriptor instead.
func (*UeidENb) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{38}
}

func (x *UeidENb) GetMMeUeS1ApId() *MmeUES1ApID {
	if x != nil {
		return x.MMeUeS1ApId
	}
	return nil
}

func (x *UeidENb) GetGUmmei() *Gummei {
	if x != nil {
		return x.GUmmei
	}
	return nil
}

func (x *UeidENb) GetMENbUeX2ApId() *EnbUEX2ApID {
	if x != nil {
		return x.MENbUeX2ApId
	}
	return nil
}

func (x *UeidENb) GetMENbUeX2ApIdExtension() *EnbUEX2ApIDExtension {
	if x != nil {
		return x.MENbUeX2ApIdExtension
	}
	return nil
}

func (x *UeidENb) GetGlobalEnbId() *GlobalEnbID {
	if x != nil {
		return x.GlobalEnbId
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:277
// @inject_tag: aper:"choiceExt"
// {ENB-ID}
type EnbID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_common_ies.asn1:277
	//
	// Types that are assignable to EnbId:
	//	*EnbID_MacroENbId
	//	*EnbID_HomeENbId
	//	*EnbID_ShortMacroENbId
	//	*EnbID_LongMacroENbId
	EnbId isEnbID_EnbId `protobuf_oneof:"enb_id"`
}

func (x *EnbID) Reset() {
	*x = EnbID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnbID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnbID) ProtoMessage() {}

func (x *EnbID) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnbID.ProtoReflect.Descriptor instead.
func (*EnbID) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{39}
}

func (m *EnbID) GetEnbId() isEnbID_EnbId {
	if m != nil {
		return m.EnbId
	}
	return nil
}

func (x *EnbID) GetMacroENbId() *asn1.BitString {
	if x, ok := x.GetEnbId().(*EnbID_MacroENbId); ok {
		return x.MacroENbId
	}
	return nil
}

func (x *EnbID) GetHomeENbId() *asn1.BitString {
	if x, ok := x.GetEnbId().(*EnbID_HomeENbId); ok {
		return x.HomeENbId
	}
	return nil
}

func (x *EnbID) GetShortMacroENbId() *asn1.BitString {
	if x, ok := x.GetEnbId().(*EnbID_ShortMacroENbId); ok {
		return x.ShortMacroENbId
	}
	return nil
}

func (x *EnbID) GetLongMacroENbId() *asn1.BitString {
	if x, ok := x.GetEnbId().(*EnbID_LongMacroENbId); ok {
		return x.LongMacroENbId
	}
	return nil
}

type isEnbID_EnbId interface {
	isEnbID_EnbId()
}

type EnbID_MacroENbId struct {
	// @inject_tag: aper:"choiceIdx:1,sizeLB:20,sizeUB:20,"
	MacroENbId *asn1.BitString `protobuf:"bytes,1,opt,name=macro_e_nb_id,json=macro-eNB-ID,proto3,oneof" aper:"choiceIdx:1,sizeLB:20,sizeUB:20,"`
}

type EnbID_HomeENbId struct {
	// @inject_tag: aper:"choiceIdx:2,sizeLB:28,sizeUB:28,"
	HomeENbId *asn1.BitString `protobuf:"bytes,2,opt,name=home_e_nb_id,json=home-eNB-ID,proto3,oneof" aper:"choiceIdx:2,sizeLB:28,sizeUB:28,"`
}

type EnbID_ShortMacroENbId struct {
	// @inject_tag: aper:"choiceIdx:3,fromChoiceExt,sizeLB:18,sizeUB:18,"
	ShortMacroENbId *asn1.BitString `protobuf:"bytes,3,opt,name=short_macro_e_nb_id,json=short-Macro-eNB-ID,proto3,oneof" aper:"choiceIdx:3,fromChoiceExt,sizeLB:18,sizeUB:18,"`
}

type EnbID_LongMacroENbId struct {
	// @inject_tag: aper:"choiceIdx:4,fromChoiceExt,sizeLB:21,sizeUB:21,"
	LongMacroENbId *asn1.BitString `protobuf:"bytes,4,opt,name=long_macro_e_nb_id,json=long-Macro-eNB-ID,proto3,oneof" aper:"choiceIdx:4,fromChoiceExt,sizeLB:21,sizeUB:21,"`
}

func (*EnbID_MacroENbId) isEnbID_EnbId() {}

func (*EnbID_HomeENbId) isEnbID_EnbId() {}

func (*EnbID_ShortMacroENbId) isEnbID_EnbId() {}

func (*EnbID_LongMacroENbId) isEnbID_EnbId() {}

// sequence from e2sm_common_ies.asn1:286
// @inject_tag: aper:"valueExt"
// {GlobalENB-ID}
type GlobalEnbID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnidentity *Plmnidentity `protobuf:"bytes,1,opt,name=p_lmnidentity,json=pLMNIdentity,proto3" json:"p_lmnidentity,omitempty"`
	// @inject_tag: aper:"choiceExt,"
	ENbId *EnbID `protobuf:"bytes,2,opt,name=e_nb_id,json=eNB-ID,proto3" json:"e_nb_id,omitempty" aper:"choiceExt,"`
}

func (x *GlobalEnbID) Reset() {
	*x = GlobalEnbID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalEnbID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalEnbID) ProtoMessage() {}

func (x *GlobalEnbID) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalEnbID.ProtoReflect.Descriptor instead.
func (*GlobalEnbID) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{40}
}

func (x *GlobalEnbID) GetPLmnidentity() *Plmnidentity {
	if x != nil {
		return x.PLmnidentity
	}
	return nil
}

func (x *GlobalEnbID) GetENbId() *EnbID {
	if x != nil {
		return x.ENbId
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:293
// @inject_tag: aper:"valueExt"
// {GUMMEI}
type Gummei struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnIdentity *Plmnidentity `protobuf:"bytes,1,opt,name=p_lmn_identity,json=pLMN-Identity,proto3" json:"p_lmn_identity,omitempty"`
	MMeGroupId   *MmeGroupID   `protobuf:"bytes,2,opt,name=m_me_group_id,json=mME-Group-ID,proto3" json:"m_me_group_id,omitempty"`
	MMeCode      *MmeCode      `protobuf:"bytes,3,opt,name=m_me_code,json=mME-Code,proto3" json:"m_me_code,omitempty"`
}

func (x *Gummei) Reset() {
	*x = Gummei{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Gummei) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Gummei) ProtoMessage() {}

func (x *Gummei) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Gummei.ProtoReflect.Descriptor instead.
func (*Gummei) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{41}
}

func (x *Gummei) GetPLmnIdentity() *Plmnidentity {
	if x != nil {
		return x.PLmnIdentity
	}
	return nil
}

func (x *Gummei) GetMMeGroupId() *MmeGroupID {
	if x != nil {
		return x.MMeGroupId
	}
	return nil
}

func (x *Gummei) GetMMeCode() *MmeCode {
	if x != nil {
		return x.MMeCode
	}
	return nil
}

// range of Integer from e2sm_common_ies.asn1:300
// {MME-Group-ID}
type MmeGroupID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:2,sizeUB:2,"
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:2,sizeUB:2,"`
}

func (x *MmeGroupID) Reset() {
	*x = MmeGroupID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MmeGroupID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MmeGroupID) ProtoMessage() {}

func (x *MmeGroupID) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MmeGroupID.ProtoReflect.Descriptor instead.
func (*MmeGroupID) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{42}
}

func (x *MmeGroupID) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// range of Integer from e2sm_common_ies.asn1:303
// {MME-Code}
type MmeCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:1,"
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:1,"`
}

func (x *MmeCode) Reset() {
	*x = MmeCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MmeCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MmeCode) ProtoMessage() {}

func (x *MmeCode) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MmeCode.ProtoReflect.Descriptor instead.
func (*MmeCode) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{43}
}

func (x *MmeCode) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// range of Integer from e2sm_common_ies.asn1:306
// {MME-UE-S1AP-ID}
type MmeUES1ApID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:4294967295,"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:4294967295,"`
}

func (x *MmeUES1ApID) Reset() {
	*x = MmeUES1ApID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MmeUES1ApID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MmeUES1ApID) ProtoMessage() {}

func (x *MmeUES1ApID) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MmeUES1ApID.ProtoReflect.Descriptor instead.
func (*MmeUES1ApID) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{44}
}

func (x *MmeUES1ApID) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_common_ies.asn1:309
// {QCI}
type Qci struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:255,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:255,"`
}

func (x *Qci) Reset() {
	*x = Qci{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qci) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qci) ProtoMessage() {}

func (x *Qci) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qci.ProtoReflect.Descriptor instead.
func (*Qci) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{45}
}

func (x *Qci) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_common_ies.asn1:312
// {SubscriberProfileIDforRFP}
type SubscriberProfileIdforRfp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1,valueUB:256,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1,valueUB:256,"`
}

func (x *SubscriberProfileIdforRfp) Reset() {
	*x = SubscriberProfileIdforRfp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriberProfileIdforRfp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriberProfileIdforRfp) ProtoMessage() {}

func (x *SubscriberProfileIdforRfp) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriberProfileIdforRfp.ProtoReflect.Descriptor instead.
func (*SubscriberProfileIdforRfp) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{46}
}

func (x *SubscriberProfileIdforRfp) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm_common_ies.asn1:327
// @inject_tag: aper:"choiceExt"
// {EN-GNB-ID}
type EnGNbID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_common_ies.asn1:327
	//
	// Types that are assignable to EnGnbId:
	//	*EnGNbID_EnGNbId
	EnGnbId isEnGNbID_EnGnbId `protobuf_oneof:"en_gnb_id"`
}

func (x *EnGNbID) Reset() {
	*x = EnGNbID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnGNbID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnGNbID) ProtoMessage() {}

func (x *EnGNbID) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnGNbID.ProtoReflect.Descriptor instead.
func (*EnGNbID) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{47}
}

func (m *EnGNbID) GetEnGnbId() isEnGNbID_EnGnbId {
	if m != nil {
		return m.EnGnbId
	}
	return nil
}

func (x *EnGNbID) GetEnGNbId() *asn1.BitString {
	if x, ok := x.GetEnGnbId().(*EnGNbID_EnGNbId); ok {
		return x.EnGNbId
	}
	return nil
}

type isEnGNbID_EnGnbId interface {
	isEnGNbID_EnGnbId()
}

type EnGNbID_EnGNbId struct {
	// @inject_tag: aper:"choiceIdx:1,sizeLB:22,sizeUB:32,"
	EnGNbId *asn1.BitString `protobuf:"bytes,1,opt,name=en_g_nb_id,json=en-gNB-ID,proto3,oneof" aper:"choiceIdx:1,sizeLB:22,sizeUB:32,"`
}

func (*EnGNbID_EnGNbId) isEnGNbID_EnGnbId() {}

// range of Integer from e2sm_common_ies.asn1:332
// {ENB-UE-X2AP-ID}
type EnbUEX2ApID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:4095,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:4095,"`
}

func (x *EnbUEX2ApID) Reset() {
	*x = EnbUEX2ApID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnbUEX2ApID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnbUEX2ApID) ProtoMessage() {}

func (x *EnbUEX2ApID) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnbUEX2ApID.ProtoReflect.Descriptor instead.
func (*EnbUEX2ApID) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{48}
}

func (x *EnbUEX2ApID) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_common_ies.asn1:335
// {ENB-UE-X2AP-ID-Extension}
type EnbUEX2ApIDExtension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:4095,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueExt,valueLB:0,valueUB:4095,"`
}

func (x *EnbUEX2ApIDExtension) Reset() {
	*x = EnbUEX2ApIDExtension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnbUEX2ApIDExtension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnbUEX2ApIDExtension) ProtoMessage() {}

func (x *EnbUEX2ApIDExtension) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnbUEX2ApIDExtension.ProtoReflect.Descriptor instead.
func (*EnbUEX2ApIDExtension) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{49}
}

func (x *EnbUEX2ApIDExtension) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_common_ies.asn1:338
// {E-UTRA-ARFCN}
type EUTraARfcn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:65535,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:65535,"`
}

func (x *EUTraARfcn) Reset() {
	*x = EUTraARfcn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EUTraARfcn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EUTraARfcn) ProtoMessage() {}

func (x *EUTraARfcn) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EUTraARfcn.ProtoReflect.Descriptor instead.
func (*EUTraARfcn) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{50}
}

func (x *EUTraARfcn) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_common_ies.asn1:341
// {E-UTRA-PCI}
type EUTraPCi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:503,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueExt,valueLB:0,valueUB:503,"`
}

func (x *EUTraPCi) Reset() {
	*x = EUTraPCi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EUTraPCi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EUTraPCi) ProtoMessage() {}

func (x *EUTraPCi) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EUTraPCi.ProtoReflect.Descriptor instead.
func (*EUTraPCi) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{51}
}

func (x *EUTraPCi) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_common_ies.asn1:344
// {E-UTRA-TAC}
type EUTraTAc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:2,sizeUB:2,"
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:2,sizeUB:2,"`
}

func (x *EUTraTAc) Reset() {
	*x = EUTraTAc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EUTraTAc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EUTraTAc) ProtoMessage() {}

func (x *EUTraTAc) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EUTraTAc.ProtoReflect.Descriptor instead.
func (*EUTraTAc) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{52}
}

func (x *EUTraTAc) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:348
// @inject_tag: aper:"valueExt"
// {GlobalenGNB-ID}
type GlobalenGnbID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnIdentity *Plmnidentity `protobuf:"bytes,1,opt,name=p_lmn_identity,json=pLMN-Identity,proto3" json:"p_lmn_identity,omitempty"`
	// @inject_tag: aper:"choiceExt,"
	EnGNbId *EnGNbID `protobuf:"bytes,2,opt,name=en_g_nb_id,json=en-gNB-ID,proto3" json:"en_g_nb_id,omitempty" aper:"choiceExt,"`
}

func (x *GlobalenGnbID) Reset() {
	*x = GlobalenGnbID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalenGnbID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalenGnbID) ProtoMessage() {}

func (x *GlobalenGnbID) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalenGnbID.ProtoReflect.Descriptor instead.
func (*GlobalenGnbID) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{53}
}

func (x *GlobalenGnbID) GetPLmnIdentity() *Plmnidentity {
	if x != nil {
		return x.PLmnIdentity
	}
	return nil
}

func (x *GlobalenGnbID) GetEnGNbId() *EnGNbID {
	if x != nil {
		return x.EnGNbId
	}
	return nil
}

// range of Integer from e2sm_common_ies.asn1:358
// {NGENB-CU-UE-W1AP-ID}
type NgenbCUUEW1ApID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:4294967295,"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:4294967295,"`
}

func (x *NgenbCUUEW1ApID) Reset() {
	*x = NgenbCUUEW1ApID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NgenbCUUEW1ApID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NgenbCUUEW1ApID) ProtoMessage() {}

func (x *NgenbCUUEW1ApID) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NgenbCUUEW1ApID.ProtoReflect.Descriptor instead.
func (*NgenbCUUEW1ApID) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{54}
}

func (x *NgenbCUUEW1ApID) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_common_ies.asn1:361
// {NGENB-DU-ID}
type NgenbDUID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:68719476735,"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:68719476735,"`
}

func (x *NgenbDUID) Reset() {
	*x = NgenbDUID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NgenbDUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NgenbDUID) ProtoMessage() {}

func (x *NgenbDUID) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NgenbDUID.ProtoReflect.Descriptor instead.
func (*NgenbDUID) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{55}
}

func (x *NgenbDUID) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_common_ies.asn1:369
// {AMFPointer}
type Amfpointer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:6,sizeUB:6,"
	Value *asn1.BitString `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:6,sizeUB:6,"`
}

func (x *Amfpointer) Reset() {
	*x = Amfpointer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Amfpointer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Amfpointer) ProtoMessage() {}

func (x *Amfpointer) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Amfpointer.ProtoReflect.Descriptor instead.
func (*Amfpointer) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{56}
}

func (x *Amfpointer) GetValue() *asn1.BitString {
	if x != nil {
		return x.Value
	}
	return nil
}

// range of Integer from e2sm_common_ies.asn1:372
// {AMFRegionID}
type AmfregionId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:8,sizeUB:8,"
	Value *asn1.BitString `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:8,sizeUB:8,"`
}

func (x *AmfregionId) Reset() {
	*x = AmfregionId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AmfregionId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmfregionId) ProtoMessage() {}

func (x *AmfregionId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmfregionId.ProtoReflect.Descriptor instead.
func (*AmfregionId) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{57}
}

func (x *AmfregionId) GetValue() *asn1.BitString {
	if x != nil {
		return x.Value
	}
	return nil
}

// range of Integer from e2sm_common_ies.asn1:375
// {AMFSetID}
type AmfsetId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:10,sizeUB:10,"
	Value *asn1.BitString `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:10,sizeUB:10,"`
}

func (x *AmfsetId) Reset() {
	*x = AmfsetId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AmfsetId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmfsetId) ProtoMessage() {}

func (x *AmfsetId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmfsetId.ProtoReflect.Descriptor instead.
func (*AmfsetId) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{58}
}

func (x *AmfsetId) GetValue() *asn1.BitString {
	if x != nil {
		return x.Value
	}
	return nil
}

// range of Integer from e2sm_common_ies.asn1:378
// {AMF-UE-NGAP-ID}
type AmfUENGapID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:1099511627775,"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:1099511627775,"`
}

func (x *AmfUENGapID) Reset() {
	*x = AmfUENGapID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AmfUENGapID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmfUENGapID) ProtoMessage() {}

func (x *AmfUENGapID) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmfUENGapID.ProtoReflect.Descriptor instead.
func (*AmfUENGapID) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{59}
}

func (x *AmfUENGapID) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_common_ies.asn1:381
// {EUTRACellIdentity}
type EutracellIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:28,sizeUB:28,"
	Value *asn1.BitString `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:28,sizeUB:28,"`
}

func (x *EutracellIdentity) Reset() {
	*x = EutracellIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EutracellIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EutracellIdentity) ProtoMessage() {}

func (x *EutracellIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EutracellIdentity.ProtoReflect.Descriptor instead.
func (*EutracellIdentity) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{60}
}

func (x *EutracellIdentity) GetValue() *asn1.BitString {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:385
// @inject_tag: aper:"valueExt"
// {EUTRA-CGI}
type EutraCGi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnidentity      *Plmnidentity      `protobuf:"bytes,1,opt,name=p_lmnidentity,json=pLMNIdentity,proto3" json:"p_lmnidentity,omitempty"`
	EUtracellIdentity *EutracellIdentity `protobuf:"bytes,2,opt,name=e_utracell_identity,json=eUTRACellIdentity,proto3" json:"e_utracell_identity,omitempty"`
}

func (x *EutraCGi) Reset() {
	*x = EutraCGi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EutraCGi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EutraCGi) ProtoMessage() {}

func (x *EutraCGi) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EutraCGi.ProtoReflect.Descriptor instead.
func (*EutraCGi) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{61}
}

func (x *EutraCGi) GetPLmnidentity() *Plmnidentity {
	if x != nil {
		return x.PLmnidentity
	}
	return nil
}

func (x *EutraCGi) GetEUtracellIdentity() *EutracellIdentity {
	if x != nil {
		return x.EUtracellIdentity
	}
	return nil
}

// range of Integer from e2sm_common_ies.asn1:391
// {FiveQI}
type FiveQi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:255,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueExt,valueLB:0,valueUB:255,"`
}

func (x *FiveQi) Reset() {
	*x = FiveQi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FiveQi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FiveQi) ProtoMessage() {}

func (x *FiveQi) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FiveQi.ProtoReflect.Descriptor instead.
func (*FiveQi) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{62}
}

func (x *FiveQi) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm_common_ies.asn1:395
// @inject_tag: aper:"valueExt"
// {GlobalGNB-ID}
type GlobalGnbID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnidentity *Plmnidentity `protobuf:"bytes,1,opt,name=p_lmnidentity,json=pLMNIdentity,proto3" json:"p_lmnidentity,omitempty"`
	// @inject_tag: aper:"choiceExt,"
	GNbId *GnbID `protobuf:"bytes,2,opt,name=g_nb_id,json=gNB-ID,proto3" json:"g_nb_id,omitempty" aper:"choiceExt,"`
}

func (x *GlobalGnbID) Reset() {
	*x = GlobalGnbID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalGnbID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalGnbID) ProtoMessage() {}

func (x *GlobalGnbID) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalGnbID.ProtoReflect.Descriptor instead.
func (*GlobalGnbID) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{63}
}

func (x *GlobalGnbID) GetPLmnidentity() *Plmnidentity {
	if x != nil {
		return x.PLmnidentity
	}
	return nil
}

func (x *GlobalGnbID) GetGNbId() *GnbID {
	if x != nil {
		return x.GNbId
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:402
// @inject_tag: aper:"valueExt"
// {GlobalNgENB-ID}
type GlobalNgEnbID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnidentity *Plmnidentity `protobuf:"bytes,1,opt,name=p_lmnidentity,json=pLMNIdentity,proto3" json:"p_lmnidentity,omitempty"`
	// @inject_tag: aper:"choiceExt,"
	NgEnbId *NgEnbID `protobuf:"bytes,2,opt,name=ng_enb_id,json=ngENB-ID,proto3" json:"ng_enb_id,omitempty" aper:"choiceExt,"`
}

func (x *GlobalNgEnbID) Reset() {
	*x = GlobalNgEnbID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalNgEnbID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalNgEnbID) ProtoMessage() {}

func (x *GlobalNgEnbID) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalNgEnbID.ProtoReflect.Descriptor instead.
func (*GlobalNgEnbID) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{64}
}

func (x *GlobalNgEnbID) GetPLmnidentity() *Plmnidentity {
	if x != nil {
		return x.PLmnidentity
	}
	return nil
}

func (x *GlobalNgEnbID) GetNgEnbId() *NgEnbID {
	if x != nil {
		return x.NgEnbId
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:409
// @inject_tag: aper:"choiceExt"
// {GNB-ID}
type GnbID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_common_ies.asn1:409
	//
	// Types that are assignable to GnbId:
	//	*GnbID_GNbId
	GnbId isGnbID_GnbId `protobuf_oneof:"gnb_id"`
}

func (x *GnbID) Reset() {
	*x = GnbID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnbID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnbID) ProtoMessage() {}

func (x *GnbID) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnbID.ProtoReflect.Descriptor instead.
func (*GnbID) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{65}
}

func (m *GnbID) GetGnbId() isGnbID_GnbId {
	if m != nil {
		return m.GnbId
	}
	return nil
}

func (x *GnbID) GetGNbId() *asn1.BitString {
	if x, ok := x.GetGnbId().(*GnbID_GNbId); ok {
		return x.GNbId
	}
	return nil
}

type isGnbID_GnbId interface {
	isGnbID_GnbId()
}

type GnbID_GNbId struct {
	// @inject_tag: aper:"choiceIdx:1,sizeLB:22,sizeUB:32,"
	GNbId *asn1.BitString `protobuf:"bytes,1,opt,name=g_nb_id,json=gNB-ID,proto3,oneof" aper:"choiceIdx:1,sizeLB:22,sizeUB:32,"`
}

func (*GnbID_GNbId) isGnbID_GnbId() {}

// sequence from e2sm_common_ies.asn1:415
// @inject_tag: aper:"valueExt"
// {GUAMI}
type Guami struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnidentity *Plmnidentity `protobuf:"bytes,1,opt,name=p_lmnidentity,json=pLMNIdentity,proto3" json:"p_lmnidentity,omitempty"`
	AMfregionId  *AmfregionId  `protobuf:"bytes,2,opt,name=a_mfregion_id,json=aMFRegionID,proto3" json:"a_mfregion_id,omitempty"`
	AMfsetId     *AmfsetId     `protobuf:"bytes,3,opt,name=a_mfset_id,json=aMFSetID,proto3" json:"a_mfset_id,omitempty"`
	AMfpointer   *Amfpointer   `protobuf:"bytes,4,opt,name=a_mfpointer,json=aMFPointer,proto3" json:"a_mfpointer,omitempty"`
}

func (x *Guami) Reset() {
	*x = Guami{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Guami) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Guami) ProtoMessage() {}

func (x *Guami) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Guami.ProtoReflect.Descriptor instead.
func (*Guami) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{66}
}

func (x *Guami) GetPLmnidentity() *Plmnidentity {
	if x != nil {
		return x.PLmnidentity
	}
	return nil
}

func (x *Guami) GetAMfregionId() *AmfregionId {
	if x != nil {
		return x.AMfregionId
	}
	return nil
}

func (x *Guami) GetAMfsetId() *AmfsetId {
	if x != nil {
		return x.AMfsetId
	}
	return nil
}

func (x *Guami) GetAMfpointer() *Amfpointer {
	if x != nil {
		return x.AMfpointer
	}
	return nil
}

// range of Integer from e2sm_common_ies.asn1:423
// {IndexToRFSP}
type IndexToRfsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:1,valueUB:256,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueExt,valueLB:1,valueUB:256,"`
}

func (x *IndexToRfsp) Reset() {
	*x = IndexToRfsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexToRfsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexToRfsp) ProtoMessage() {}

func (x *IndexToRfsp) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexToRfsp.ProtoReflect.Descriptor instead.
func (*IndexToRfsp) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{67}
}

func (x *IndexToRfsp) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm_common_ies.asn1:427
// @inject_tag: aper:"choiceExt"
// {NgENB-ID}
type NgEnbID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_common_ies.asn1:427
	//
	// Types that are assignable to NgEnbId:
	//	*NgEnbID_MacroNgEnbId
	//	*NgEnbID_ShortMacroNgEnbId
	//	*NgEnbID_LongMacroNgEnbId
	NgEnbId isNgEnbID_NgEnbId `protobuf_oneof:"ng_enb_id"`
}

func (x *NgEnbID) Reset() {
	*x = NgEnbID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NgEnbID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NgEnbID) ProtoMessage() {}

func (x *NgEnbID) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NgEnbID.ProtoReflect.Descriptor instead.
func (*NgEnbID) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{68}
}

func (m *NgEnbID) GetNgEnbId() isNgEnbID_NgEnbId {
	if m != nil {
		return m.NgEnbId
	}
	return nil
}

func (x *NgEnbID) GetMacroNgEnbId() *asn1.BitString {
	if x, ok := x.GetNgEnbId().(*NgEnbID_MacroNgEnbId); ok {
		return x.MacroNgEnbId
	}
	return nil
}

func (x *NgEnbID) GetShortMacroNgEnbId() *asn1.BitString {
	if x, ok := x.GetNgEnbId().(*NgEnbID_ShortMacroNgEnbId); ok {
		return x.ShortMacroNgEnbId
	}
	return nil
}

func (x *NgEnbID) GetLongMacroNgEnbId() *asn1.BitString {
	if x, ok := x.GetNgEnbId().(*NgEnbID_LongMacroNgEnbId); ok {
		return x.LongMacroNgEnbId
	}
	return nil
}

type isNgEnbID_NgEnbId interface {
	isNgEnbID_NgEnbId()
}

type NgEnbID_MacroNgEnbId struct {
	// @inject_tag: aper:"choiceIdx:1,sizeLB:20,sizeUB:20,"
	MacroNgEnbId *asn1.BitString `protobuf:"bytes,1,opt,name=macro_ng_enb_id,json=macroNgENB-ID,proto3,oneof" aper:"choiceIdx:1,sizeLB:20,sizeUB:20,"`
}

type NgEnbID_ShortMacroNgEnbId struct {
	// @inject_tag: aper:"choiceIdx:2,sizeLB:18,sizeUB:18,"
	ShortMacroNgEnbId *asn1.BitString `protobuf:"bytes,2,opt,name=short_macro_ng_enb_id,json=shortMacroNgENB-ID,proto3,oneof" aper:"choiceIdx:2,sizeLB:18,sizeUB:18,"`
}

type NgEnbID_LongMacroNgEnbId struct {
	// @inject_tag: aper:"choiceIdx:3,sizeLB:21,sizeUB:21,"
	LongMacroNgEnbId *asn1.BitString `protobuf:"bytes,3,opt,name=long_macro_ng_enb_id,json=longMacroNgENB-ID,proto3,oneof" aper:"choiceIdx:3,sizeLB:21,sizeUB:21,"`
}

func (*NgEnbID_MacroNgEnbId) isNgEnbID_NgEnbId() {}

func (*NgEnbID_ShortMacroNgEnbId) isNgEnbID_NgEnbId() {}

func (*NgEnbID_LongMacroNgEnbId) isNgEnbID_NgEnbId() {}

// range of Integer from e2sm_common_ies.asn1:434
// {NRCellIdentity}
type NrcellIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:36,sizeUB:36,"
	Value *asn1.BitString `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:36,sizeUB:36,"`
}

func (x *NrcellIdentity) Reset() {
	*x = NrcellIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NrcellIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NrcellIdentity) ProtoMessage() {}

func (x *NrcellIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NrcellIdentity.ProtoReflect.Descriptor instead.
func (*NrcellIdentity) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{69}
}

func (x *NrcellIdentity) GetValue() *asn1.BitString {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:438
// @inject_tag: aper:"valueExt"
// {NR-CGI}
type NrCGi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnidentity   *Plmnidentity   `protobuf:"bytes,1,opt,name=p_lmnidentity,json=pLMNIdentity,proto3" json:"p_lmnidentity,omitempty"`
	NRcellIdentity *NrcellIdentity `protobuf:"bytes,2,opt,name=n_rcell_identity,json=nRCellIdentity,proto3" json:"n_rcell_identity,omitempty"`
}

func (x *NrCGi) Reset() {
	*x = NrCGi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NrCGi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NrCGi) ProtoMessage() {}

func (x *NrCGi) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NrCGi.ProtoReflect.Descriptor instead.
func (*NrCGi) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{70}
}

func (x *NrCGi) GetPLmnidentity() *Plmnidentity {
	if x != nil {
		return x.PLmnidentity
	}
	return nil
}

func (x *NrCGi) GetNRcellIdentity() *NrcellIdentity {
	if x != nil {
		return x.NRcellIdentity
	}
	return nil
}

// range of Integer from e2sm_common_ies.asn1:444
// {PLMNIdentity}
type Plmnidentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:3,sizeUB:3,"
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:3,sizeUB:3,"`
}

func (x *Plmnidentity) Reset() {
	*x = Plmnidentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plmnidentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plmnidentity) ProtoMessage() {}

func (x *Plmnidentity) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plmnidentity.ProtoReflect.Descriptor instead.
func (*Plmnidentity) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{71}
}

func (x *Plmnidentity) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// range of Integer from e2sm_common_ies.asn1:447
// {QosFlowIdentifier}
type QosFlowIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueExt,valueLB:0,valueUB:63,"`
}

func (x *QosFlowIdentifier) Reset() {
	*x = QosFlowIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QosFlowIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QosFlowIdentifier) ProtoMessage() {}

func (x *QosFlowIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QosFlowIdentifier.ProtoReflect.Descriptor instead.
func (*QosFlowIdentifier) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{72}
}

func (x *QosFlowIdentifier) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_common_ies.asn1:450
// {SD}
type Sd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:3,sizeUB:3,"
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:3,sizeUB:3,"`
}

func (x *Sd) Reset() {
	*x = Sd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sd) ProtoMessage() {}

func (x *Sd) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sd.ProtoReflect.Descriptor instead.
func (*Sd) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{73}
}

func (x *Sd) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:454
// @inject_tag: aper:"valueExt"
// {S-NSSAI}
type SNSsai struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SSt *Sst `protobuf:"bytes,1,opt,name=s_st,json=sST,proto3" json:"s_st,omitempty"`
	// @inject_tag: aper:"optional,"
	SD *Sd `protobuf:"bytes,2,opt,name=s_d,json=sD,proto3,oneof" json:"s_d,omitempty" aper:"optional,"`
}

func (x *SNSsai) Reset() {
	*x = SNSsai{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SNSsai) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SNSsai) ProtoMessage() {}

func (x *SNSsai) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SNSsai.ProtoReflect.Descriptor instead.
func (*SNSsai) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{74}
}

func (x *SNSsai) GetSSt() *Sst {
	if x != nil {
		return x.SSt
	}
	return nil
}

func (x *SNSsai) GetSD() *Sd {
	if x != nil {
		return x.SD
	}
	return nil
}

// range of Integer from e2sm_common_ies.asn1:460
// {SST}
type Sst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:1,"
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:1,"`
}

func (x *Sst) Reset() {
	*x = Sst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sst) ProtoMessage() {}

func (x *Sst) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sst.ProtoReflect.Descriptor instead.
func (*Sst) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{75}
}

func (x *Sst) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// range of Integer from e2sm_common_ies.asn1:467
// {NG-RANnodeUEXnAPID}
type NgRAnnodeUexnApid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:4294967295,"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:4294967295,"`
}

func (x *NgRAnnodeUexnApid) Reset() {
	*x = NgRAnnodeUexnApid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NgRAnnodeUexnApid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NgRAnnodeUexnApid) ProtoMessage() {}

func (x *NgRAnnodeUexnApid) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NgRAnnodeUexnApid.ProtoReflect.Descriptor instead.
func (*NgRAnnodeUexnApid) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{76}
}

func (x *NgRAnnodeUexnApid) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm_common_ies.asn1:470
// @inject_tag: aper:"choiceExt"
// {GlobalNGRANNodeID}
type GlobalNgrannodeId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_common_ies.asn1:470
	//
	// Types that are assignable to GlobalNgrannodeId:
	//	*GlobalNgrannodeId_GNb
	//	*GlobalNgrannodeId_NgENb
	GlobalNgrannodeId isGlobalNgrannodeId_GlobalNgrannodeId `protobuf_oneof:"global_ngrannode_id"`
}

func (x *GlobalNgrannodeId) Reset() {
	*x = GlobalNgrannodeId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalNgrannodeId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalNgrannodeId) ProtoMessage() {}

func (x *GlobalNgrannodeId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalNgrannodeId.ProtoReflect.Descriptor instead.
func (*GlobalNgrannodeId) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{77}
}

func (m *GlobalNgrannodeId) GetGlobalNgrannodeId() isGlobalNgrannodeId_GlobalNgrannodeId {
	if m != nil {
		return m.GlobalNgrannodeId
	}
	return nil
}

func (x *GlobalNgrannodeId) GetGNb() *GlobalGnbID {
	if x, ok := x.GetGlobalNgrannodeId().(*GlobalNgrannodeId_GNb); ok {
		return x.GNb
	}
	return nil
}

func (x *GlobalNgrannodeId) GetNgENb() *GlobalNgEnbID {
	if x, ok := x.GetGlobalNgrannodeId().(*GlobalNgrannodeId_NgENb); ok {
		return x.NgENb
	}
	return nil
}

type isGlobalNgrannodeId_GlobalNgrannodeId interface {
	isGlobalNgrannodeId_GlobalNgrannodeId()
}

type GlobalNgrannodeId_GNb struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt,"
	GNb *GlobalGnbID `protobuf:"bytes,1,opt,name=g_nb,json=gNB,proto3,oneof" aper:"choiceIdx:1,valueExt,"`
}

type GlobalNgrannodeId_NgENb struct {
	// @inject_tag: aper:"choiceIdx:2,valueExt,"
	NgENb *GlobalNgEnbID `protobuf:"bytes,2,opt,name=ng_e_nb,json=ng-eNB,proto3,oneof" aper:"choiceIdx:2,valueExt,"`
}

func (*GlobalNgrannodeId_GNb) isGlobalNgrannodeId_GlobalNgrannodeId() {}

func (*GlobalNgrannodeId_NgENb) isGlobalNgrannodeId_GlobalNgrannodeId() {}

// range of Integer from e2sm_common_ies.asn1:480
// {GNB-CU-CP-UE-E1AP-ID}
type GnbCUCPUEE1ApID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:4294967295,"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:4294967295,"`
}

func (x *GnbCUCPUEE1ApID) Reset() {
	*x = GnbCUCPUEE1ApID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnbCUCPUEE1ApID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnbCUCPUEE1ApID) ProtoMessage() {}

func (x *GnbCUCPUEE1ApID) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnbCUCPUEE1ApID.ProtoReflect.Descriptor instead.
func (*GnbCUCPUEE1ApID) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{78}
}

func (x *GnbCUCPUEE1ApID) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_common_ies.asn1:483
// {GNB-CU-UP-ID}
type GnbCUUPID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:68719476735,"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:68719476735,"`
}

func (x *GnbCUUPID) Reset() {
	*x = GnbCUUPID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnbCUUPID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnbCUUPID) ProtoMessage() {}

func (x *GnbCUUPID) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnbCUUPID.ProtoReflect.Descriptor instead.
func (*GnbCUUPID) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{79}
}

func (x *GnbCUUPID) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_common_ies.asn1:490
// {FiveGS-TAC}
type FiveGsTAc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:3,sizeUB:3,"
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:3,sizeUB:3,"`
}

func (x *FiveGsTAc) Reset() {
	*x = FiveGsTAc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FiveGsTAc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FiveGsTAc) ProtoMessage() {}

func (x *FiveGsTAc) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FiveGsTAc.ProtoReflect.Descriptor instead.
func (*FiveGsTAc) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{80}
}

func (x *FiveGsTAc) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:494
// @inject_tag: aper:"valueExt"
// {FreqBandNrItem}
type FreqBandNrItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:1,valueUB:1024,"
	FreqBandIndicatorNr int32 `protobuf:"varint,1,opt,name=freq_band_indicator_nr,json=freqBandIndicatorNr,proto3" json:"freq_band_indicator_nr,omitempty" aper:"valueExt,valueLB:1,valueUB:1024,"`
}

func (x *FreqBandNrItem) Reset() {
	*x = FreqBandNrItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreqBandNrItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreqBandNrItem) ProtoMessage() {}

func (x *FreqBandNrItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreqBandNrItem.ProtoReflect.Descriptor instead.
func (*FreqBandNrItem) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{81}
}

func (x *FreqBandNrItem) GetFreqBandIndicatorNr() int32 {
	if x != nil {
		return x.FreqBandIndicatorNr
	}
	return 0
}

// range of Integer from e2sm_common_ies.asn1:499
// {GNB-CU-UE-F1AP-ID}
type GnbCUUEF1ApID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:4294967295,"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:4294967295,"`
}

func (x *GnbCUUEF1ApID) Reset() {
	*x = GnbCUUEF1ApID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnbCUUEF1ApID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnbCUUEF1ApID) ProtoMessage() {}

func (x *GnbCUUEF1ApID) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnbCUUEF1ApID.ProtoReflect.Descriptor instead.
func (*GnbCUUEF1ApID) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{82}
}

func (x *GnbCUUEF1ApID) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_common_ies.asn1:502
// {GNB-DU-ID}
type GnbDUID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:68719476735,"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:68719476735,"`
}

func (x *GnbDUID) Reset() {
	*x = GnbDUID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnbDUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnbDUID) ProtoMessage() {}

func (x *GnbDUID) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnbDUID.ProtoReflect.Descriptor instead.
func (*GnbDUID) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{83}
}

func (x *GnbDUID) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_common_ies.asn1:505
// {NR-PCI}
type NrPCi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:1007,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:1007,"`
}

func (x *NrPCi) Reset() {
	*x = NrPCi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NrPCi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NrPCi) ProtoMessage() {}

func (x *NrPCi) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NrPCi.ProtoReflect.Descriptor instead.
func (*NrPCi) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{84}
}

func (x *NrPCi) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm_common_ies.asn1:509
// @inject_tag: aper:"valueExt"
// {NR-ARFCN}
type NrARfcn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:3279165,"
	NRarfcn int32 `protobuf:"varint,1,opt,name=n_rarfcn,json=nRARFCN,proto3" json:"n_rarfcn,omitempty" aper:"valueLB:0,valueUB:3279165,"`
}

func (x *NrARfcn) Reset() {
	*x = NrARfcn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NrARfcn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NrARfcn) ProtoMessage() {}

func (x *NrARfcn) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NrARfcn.ProtoReflect.Descriptor instead.
func (*NrARfcn) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{85}
}

func (x *NrARfcn) GetNRarfcn() int32 {
	if x != nil {
		return x.NRarfcn
	}
	return 0
}

// sequence from e2sm_common_ies.asn1:517
// {NRFrequencyBand-List}
type NrfrequencyBandList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:32,"
	Value []*NrfrequencyBandItem `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"valueExt,sizeLB:1,sizeUB:32,"`
}

func (x *NrfrequencyBandList) Reset() {
	*x = NrfrequencyBandList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NrfrequencyBandList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NrfrequencyBandList) ProtoMessage() {}

func (x *NrfrequencyBandList) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NrfrequencyBandList.ProtoReflect.Descriptor instead.
func (*NrfrequencyBandList) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{86}
}

func (x *NrfrequencyBandList) GetValue() []*NrfrequencyBandItem {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:518
// @inject_tag: aper:"valueExt"
// {NRFrequencyBandItem}
type NrfrequencyBandItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:1,valueUB:1024,"
	FreqBandIndicatorNr  int32                 `protobuf:"varint,1,opt,name=freq_band_indicator_nr,json=freqBandIndicatorNr,proto3" json:"freq_band_indicator_nr,omitempty" aper:"valueExt,valueLB:1,valueUB:1024,"`
	SupportedSulbandList *SupportedSulbandList `protobuf:"bytes,2,opt,name=supported_sulband_list,json=supportedSULBandList,proto3" json:"supported_sulband_list,omitempty"`
}

func (x *NrfrequencyBandItem) Reset() {
	*x = NrfrequencyBandItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NrfrequencyBandItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NrfrequencyBandItem) ProtoMessage() {}

func (x *NrfrequencyBandItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NrfrequencyBandItem.ProtoReflect.Descriptor instead.
func (*NrfrequencyBandItem) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{87}
}

func (x *NrfrequencyBandItem) GetFreqBandIndicatorNr() int32 {
	if x != nil {
		return x.FreqBandIndicatorNr
	}
	return 0
}

func (x *NrfrequencyBandItem) GetSupportedSulbandList() *SupportedSulbandList {
	if x != nil {
		return x.SupportedSulbandList
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:525
// @inject_tag: aper:"valueExt"
// {NRFrequencyInfo}
type NrfrequencyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,"
	NrArfcn           *NrARfcn             `protobuf:"bytes,1,opt,name=nr_arfcn,json=nrARFCN,proto3" json:"nr_arfcn,omitempty" aper:"valueExt,"`
	FrequencyBandList *NrfrequencyBandList `protobuf:"bytes,2,opt,name=frequency_band_list,json=frequencyBand-List,proto3" json:"frequency_band_list,omitempty"`
	// @inject_tag: aper:"optional,valueExt,valueLB:0,valueUB:1,"
	FrequencyShift7P5Khz *NrfrequencyShift7P5Khz `protobuf:"varint,3,opt,name=frequency_shift7p5khz,json=frequencyShift7p5khz,proto3,enum=e2sm_ccc.v1.NrfrequencyShift7P5Khz,oneof" json:"frequency_shift7p5khz,omitempty" aper:"optional,valueExt,valueLB:0,valueUB:1,"`
}

func (x *NrfrequencyInfo) Reset() {
	*x = NrfrequencyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NrfrequencyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NrfrequencyInfo) ProtoMessage() {}

func (x *NrfrequencyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NrfrequencyInfo.ProtoReflect.Descriptor instead.
func (*NrfrequencyInfo) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{88}
}

func (x *NrfrequencyInfo) GetNrArfcn() *NrARfcn {
	if x != nil {
		return x.NrArfcn
	}
	return nil
}

func (x *NrfrequencyInfo) GetFrequencyBandList() *NrfrequencyBandList {
	if x != nil {
		return x.FrequencyBandList
	}
	return nil
}

func (x *NrfrequencyInfo) GetFrequencyShift7P5Khz() NrfrequencyShift7P5Khz {
	if x != nil && x.FrequencyShift7P5Khz != nil {
		return *x.FrequencyShift7P5Khz
	}
	return NrfrequencyShift7P5Khz_NRFREQUENCY_SHIFT7P5KHZ_FALSE
}

// range of Integer from e2sm_common_ies.asn1:535
// {RANUEID}
type Ranueid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:8,sizeUB:8,"
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:8,sizeUB:8,"`
}

func (x *Ranueid) Reset() {
	*x = Ranueid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ranueid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ranueid) ProtoMessage() {}

func (x *Ranueid) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ranueid.ProtoReflect.Descriptor instead.
func (*Ranueid) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{89}
}

func (x *Ranueid) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:541
// {SupportedSULBandList}
type SupportedSulbandList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,sizeLB:0,sizeUB:32,"
	Value []*SupportedSulfreqBandItem `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"valueExt,sizeLB:0,sizeUB:32,"`
}

func (x *SupportedSulbandList) Reset() {
	*x = SupportedSulbandList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportedSulbandList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportedSulbandList) ProtoMessage() {}

func (x *SupportedSulbandList) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportedSulbandList.ProtoReflect.Descriptor instead.
func (*SupportedSulbandList) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{90}
}

func (x *SupportedSulbandList) GetValue() []*SupportedSulfreqBandItem {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_common_ies.asn1:542
// @inject_tag: aper:"valueExt"
// {SupportedSULFreqBandItem}
type SupportedSulfreqBandItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:1,valueUB:1024,"
	FreqBandIndicatorNr int32 `protobuf:"varint,1,opt,name=freq_band_indicator_nr,json=freqBandIndicatorNr,proto3" json:"freq_band_indicator_nr,omitempty" aper:"valueExt,valueLB:1,valueUB:1024,"`
}

func (x *SupportedSulfreqBandItem) Reset() {
	*x = SupportedSulfreqBandItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportedSulfreqBandItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportedSulfreqBandItem) ProtoMessage() {}

func (x *SupportedSulfreqBandItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportedSulfreqBandItem.ProtoReflect.Descriptor instead.
func (*SupportedSulfreqBandItem) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{91}
}

func (x *SupportedSulfreqBandItem) GetFreqBandIndicatorNr() int32 {
	if x != nil {
		return x.FreqBandIndicatorNr
	}
	return 0
}

var File_e2sm_ccc_v1_e2sm_common_ies_proto protoreflect.FileDescriptor

var file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDesc = []byte{
	0x0a, 0x21, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31,
	0x1a, 0x1a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x61, 0x73,
	0x6e, 0x31, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x2c, 0x0a, 0x09, 0x4d, 0x61, 0x78, 0x45, 0x31, 0x41, 0x70, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42,
	0x06, 0x1a, 0x04, 0x08, 0xff, 0xff, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2a,
	0x0a, 0x09, 0x4d, 0x61, 0x78, 0x46, 0x31, 0x41, 0x70, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a, 0x09, 0x4d, 0x61,
	0x78, 0x45, 0x61, 0x72, 0x66, 0x63, 0x6e, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x08, 0xff, 0xff,
	0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x0a, 0x4d, 0x61, 0x78, 0x4e,
	0x72, 0x61, 0x72, 0x66, 0x63, 0x6e, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x08, 0xbd, 0x92, 0xc8,
	0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x12, 0x4d, 0x61, 0x78, 0x6e,
	0x6f, 0x6f, 0x66, 0x4e, 0x72, 0x43, 0x65, 0x6c, 0x6c, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x1d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x73, 0x0a,
	0x03, 0x43, 0x67, 0x69, 0x12, 0x2d, 0x0a, 0x07, 0x6e, 0x5f, 0x72, 0x5f, 0x63, 0x67, 0x69, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x72, 0x43, 0x47, 0x69, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x52, 0x2d,
	0x43, 0x47, 0x49, 0x12, 0x36, 0x0a, 0x0a, 0x65, 0x5f, 0x75, 0x74, 0x72, 0x61, 0x5f, 0x63, 0x67,
	0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63,
	0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x75, 0x74, 0x72, 0x61, 0x43, 0x47, 0x69, 0x48, 0x00,
	0x52, 0x09, 0x65, 0x55, 0x54, 0x52, 0x41, 0x2d, 0x43, 0x47, 0x49, 0x42, 0x05, 0x0a, 0x03, 0x63,
	0x67, 0x69, 0x22, 0x70, 0x0a, 0x08, 0x43, 0x6f, 0x72, 0x65, 0x43, 0x70, 0x69, 0x64, 0x12, 0x2d,
	0x0a, 0x07, 0x66, 0x69, 0x76, 0x65, 0x5f, 0x67, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x75,
	0x61, 0x6d, 0x69, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x76, 0x65, 0x47, 0x43, 0x12, 0x28, 0x0a,
	0x04, 0x65, 0x5f, 0x70, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x75, 0x6d, 0x6d, 0x65, 0x69,
	0x48, 0x00, 0x52, 0x03, 0x65, 0x50, 0x43, 0x42, 0x0b, 0x0a, 0x09, 0x63, 0x6f, 0x72, 0x65, 0x5f,
	0x63, 0x70, 0x69, 0x64, 0x22, 0xf1, 0x02, 0x0a, 0x13, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x03,
	0x6e, 0x5f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x4e, 0x47, 0x48, 0x00, 0x52, 0x02, 0x6e, 0x47, 0x12, 0x2d, 0x0a, 0x03, 0x78,
	0x5f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x58, 0x6e, 0x48, 0x00, 0x52, 0x02, 0x78, 0x4e, 0x12, 0x2c, 0x0a, 0x02, 0x66, 0x31,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x46, 0x31, 0x48, 0x00, 0x52, 0x02, 0x66, 0x31, 0x12, 0x2c, 0x0a, 0x02, 0x65, 0x31, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x45, 0x31,
	0x48, 0x00, 0x52, 0x02, 0x65, 0x31, 0x12, 0x2c, 0x0a, 0x02, 0x73, 0x31, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x53, 0x31, 0x48, 0x00,
	0x52, 0x02, 0x73, 0x31, 0x12, 0x2c, 0x0a, 0x02, 0x78, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x58, 0x32, 0x48, 0x00, 0x52, 0x02,
	0x78, 0x32, 0x12, 0x2c, 0x0a, 0x02, 0x77, 0x31, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x57, 0x31, 0x48, 0x00, 0x52, 0x02, 0x77, 0x31,
	0x42, 0x16, 0x0a, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x39, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x4e, 0x47, 0x12, 0x28, 0x0a, 0x05, 0x67, 0x75, 0x61,
	0x6d, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x75, 0x61, 0x6d, 0x69, 0x52, 0x05, 0x67, 0x75,
	0x61, 0x6d, 0x69, 0x22, 0x5b, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x58, 0x6e, 0x12, 0x4a, 0x0a, 0x10, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6e,
	0x67, 0x5f, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x4e, 0x67, 0x72, 0x61, 0x6e, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x52, 0x10,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2d, 0x4e, 0x47, 0x2d, 0x52, 0x41, 0x4e, 0x2d, 0x49, 0x44,
	0x22, 0x83, 0x01, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x46, 0x31, 0x12, 0x3d, 0x0a, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x67, 0x6e, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x47, 0x6e,
	0x62, 0x49, 0x44, 0x52, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x47, 0x4e, 0x42, 0x2d, 0x49,
	0x44, 0x12, 0x33, 0x0a, 0x0a, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x64, 0x75, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6e, 0x62, 0x44, 0x55, 0x49, 0x44, 0x52, 0x09, 0x67, 0x4e, 0x42,
	0x2d, 0x44, 0x55, 0x2d, 0x49, 0x44, 0x22, 0x8b, 0x01, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x45, 0x31, 0x12, 0x3d, 0x0a, 0x0d, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x5f, 0x67, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x47, 0x6e, 0x62, 0x49, 0x44, 0x52, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x47, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x12, 0x3b, 0x0a, 0x0d, 0x67, 0x5f, 0x6e, 0x62, 0x5f,
	0x63, 0x75, 0x5f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6e, 0x62,
	0x43, 0x55, 0x55, 0x50, 0x49, 0x44, 0x52, 0x0c, 0x67, 0x4e, 0x42, 0x2d, 0x43, 0x55, 0x2d, 0x55,
	0x50, 0x2d, 0x49, 0x44, 0x22, 0x3d, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x53, 0x31, 0x12, 0x2c, 0x0a, 0x07, 0x67, 0x5f, 0x75, 0x6d, 0x6d, 0x65, 0x69,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x75, 0x6d, 0x6d, 0x65, 0x69, 0x52, 0x06, 0x67, 0x55, 0x4d,
	0x4d, 0x45, 0x49, 0x22, 0xc2, 0x01, 0x0a, 0x15, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x58, 0x32, 0x12, 0x41, 0x0a,
	0x0e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6e, 0x62, 0x49, 0x44, 0x48,
	0x00, 0x52, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x49, 0x44,
	0x12, 0x49, 0x0a, 0x11, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x5f, 0x67, 0x5f,
	0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x65, 0x6e, 0x47, 0x6e, 0x62, 0x49, 0x44, 0x48, 0x00, 0x52, 0x10, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x2d, 0x65, 0x6e, 0x2d, 0x67, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x42, 0x1b, 0x0a, 0x19, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x78, 0x32, 0x22, 0x50, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x58, 0x32, 0x12, 0x3f, 0x0a, 0x09, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x58, 0x32,
	0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x0d, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x57, 0x31, 0x12, 0x47, 0x0a, 0x11,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6e, 0x67, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63,
	0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x67, 0x45, 0x6e,
	0x62, 0x49, 0x44, 0x52, 0x10, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2d, 0x6e, 0x67, 0x2d, 0x65,
	0x4e, 0x42, 0x2d, 0x49, 0x44, 0x12, 0x3b, 0x0a, 0x0d, 0x6e, 0x67, 0x5f, 0x65, 0x5f, 0x6e, 0x62,
	0x5f, 0x64, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x67, 0x65, 0x6e, 0x62,
	0x44, 0x55, 0x49, 0x44, 0x52, 0x0c, 0x6e, 0x67, 0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x44, 0x55, 0x2d,
	0x49, 0x44, 0x22, 0x99, 0x01, 0x0a, 0x12, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x49, 0x44, 0x12,
	0x4d, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x6c,
	0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x07, 0x66, 0x69, 0x76,
	0x65, 0x5f, 0x67, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x76, 0x65, 0x51, 0x69, 0x48,
	0x00, 0x52, 0x06, 0x66, 0x69, 0x76, 0x65, 0x47, 0x43, 0x12, 0x25, 0x0a, 0x04, 0x65, 0x5f, 0x70,
	0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63,
	0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x63, 0x69, 0x48, 0x00, 0x52, 0x03, 0x65, 0x50, 0x43,
	0x42, 0x0a, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x22, 0x68, 0x0a, 0x05,
	0x51, 0x6f, 0x53, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x07, 0x66, 0x69, 0x76, 0x65, 0x5f, 0x67, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x76, 0x65, 0x51, 0x69, 0x48, 0x00, 0x52, 0x06, 0x66,
	0x69, 0x76, 0x65, 0x47, 0x43, 0x12, 0x25, 0x0a, 0x04, 0x65, 0x5f, 0x70, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x51, 0x63, 0x69, 0x48, 0x00, 0x52, 0x03, 0x65, 0x50, 0x43, 0x42, 0x08, 0x0a, 0x06,
	0x71, 0x6f, 0x5f, 0x73, 0x69, 0x64, 0x22, 0xb2, 0x02, 0x0a, 0x0f, 0x52, 0x61, 0x6e, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x17, 0x72, 0x61,
	0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x01, 0x18, 0x96, 0x01, 0x52, 0x15, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40,
	0x0a, 0x16, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65,
	0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xe8, 0x07, 0x52, 0x14, 0x72, 0x61, 0x6e, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x45, 0x32, 0x53, 0x4d, 0x2d, 0x4f, 0x49, 0x44,
	0x12, 0x45, 0x0a, 0x18, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0x96, 0x01, 0x52, 0x17,
	0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x15, 0x72, 0x61, 0x6e, 0x5f, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x14, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x25, 0x0a, 0x0d, 0x52,
	0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x24, 0x0a, 0x0c, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0c, 0x52, 0x69, 0x63, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01,
	0x18, 0x96, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x13, 0x52,
	0x72, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x72, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x5f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x72, 0x63, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4c, 0x74, 0x65, 0x48, 0x00, 0x52, 0x03, 0x6c, 0x54,
	0x45, 0x12, 0x2a, 0x0a, 0x03, 0x6e, 0x5f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x72, 0x63,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x52, 0x48, 0x00, 0x52, 0x02, 0x6e, 0x52, 0x42, 0x19, 0x0a,
	0x17, 0x72, 0x72, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x72, 0x72, 0x63, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x6a, 0x0a, 0x0c, 0x52, 0x72, 0x63, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x08, 0x72, 0x72, 0x63, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x72, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x72, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x52, 0x07, 0x72, 0x72,
	0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x44, 0x22, 0x83, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67,
	0x43, 0x65, 0x6c, 0x6c, 0x41, 0x52, 0x66, 0x63, 0x6e, 0x12, 0x27, 0x0a, 0x03, 0x6e, 0x5f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x72, 0x41, 0x52, 0x66, 0x63, 0x6e, 0x48, 0x00, 0x52, 0x02,
	0x6e, 0x52, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x5f, 0x75, 0x74, 0x72, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x55, 0x54, 0x72, 0x61, 0x41, 0x52, 0x66, 0x63, 0x6e, 0x48, 0x00, 0x52, 0x05, 0x65,
	0x55, 0x54, 0x52, 0x41, 0x42, 0x14, 0x0a, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x61, 0x72, 0x66, 0x63, 0x6e, 0x22, 0x7b, 0x0a, 0x0e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x6c, 0x6c, 0x50, 0x43, 0x69, 0x12, 0x25, 0x0a, 0x03,
	0x6e, 0x5f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x72, 0x50, 0x43, 0x69, 0x48, 0x00, 0x52,
	0x02, 0x6e, 0x52, 0x12, 0x2e, 0x0a, 0x06, 0x65, 0x5f, 0x75, 0x74, 0x72, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x55, 0x54, 0x72, 0x61, 0x50, 0x43, 0x69, 0x48, 0x00, 0x52, 0x05, 0x65, 0x55,
	0x54, 0x52, 0x41, 0x42, 0x12, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x65, 0x6c, 0x6c, 0x5f, 0x70, 0x63, 0x69, 0x22, 0xb9, 0x03, 0x0a, 0x04, 0x55, 0x65, 0x69, 0x64,
	0x12, 0x33, 0x0a, 0x09, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x75, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x65, 0x69, 0x64, 0x47, 0x4e, 0x62, 0x48, 0x00, 0x52, 0x08, 0x67, 0x4e, 0x42,
	0x2d, 0x55, 0x45, 0x49, 0x44, 0x12, 0x3b, 0x0a, 0x0c, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x64, 0x75,
	0x5f, 0x75, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65, 0x69, 0x64, 0x47, 0x4e,
	0x62, 0x44, 0x55, 0x48, 0x00, 0x52, 0x0b, 0x67, 0x4e, 0x42, 0x2d, 0x44, 0x55, 0x2d, 0x55, 0x45,
	0x49, 0x44, 0x12, 0x43, 0x0a, 0x0f, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x75, 0x70,
	0x5f, 0x75, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65, 0x69, 0x64, 0x47, 0x4e,
	0x62, 0x43, 0x55, 0x55, 0x50, 0x48, 0x00, 0x52, 0x0e, 0x67, 0x4e, 0x42, 0x2d, 0x43, 0x55, 0x2d,
	0x55, 0x50, 0x2d, 0x55, 0x45, 0x49, 0x44, 0x12, 0x3b, 0x0a, 0x0c, 0x6e, 0x67, 0x5f, 0x65, 0x5f,
	0x6e, 0x62, 0x5f, 0x75, 0x65, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65, 0x69, 0x64,
	0x4e, 0x47, 0x45, 0x4e, 0x62, 0x48, 0x00, 0x52, 0x0b, 0x6e, 0x67, 0x2d, 0x65, 0x4e, 0x42, 0x2d,
	0x55, 0x45, 0x49, 0x44, 0x12, 0x43, 0x0a, 0x0f, 0x6e, 0x67, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f,
	0x64, 0x75, 0x5f, 0x75, 0x65, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65, 0x69, 0x64,
	0x4e, 0x47, 0x45, 0x4e, 0x62, 0x44, 0x55, 0x48, 0x00, 0x52, 0x0e, 0x6e, 0x67, 0x2d, 0x65, 0x4e,
	0x42, 0x2d, 0x44, 0x55, 0x2d, 0x55, 0x45, 0x49, 0x44, 0x12, 0x3b, 0x0a, 0x0c, 0x65, 0x6e, 0x5f,
	0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x75, 0x65, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65,
	0x69, 0x64, 0x45, 0x4e, 0x47, 0x4e, 0x62, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x6e, 0x2d, 0x67, 0x4e,
	0x42, 0x2d, 0x55, 0x45, 0x49, 0x44, 0x12, 0x33, 0x0a, 0x09, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x75,
	0x65, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65, 0x69, 0x64, 0x45, 0x4e, 0x62, 0x48,
	0x00, 0x52, 0x08, 0x65, 0x4e, 0x42, 0x2d, 0x55, 0x45, 0x49, 0x44, 0x42, 0x06, 0x0a, 0x04, 0x75,
	0x65, 0x69, 0x64, 0x22, 0xf8, 0x05, 0x0a, 0x07, 0x55, 0x65, 0x69, 0x64, 0x47, 0x4e, 0x62, 0x12,
	0x40, 0x0a, 0x0e, 0x61, 0x6d, 0x66, 0x5f, 0x75, 0x65, 0x5f, 0x6e, 0x67, 0x61, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63,
	0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6d, 0x66, 0x55, 0x45, 0x4e, 0x47, 0x61, 0x70, 0x49,
	0x44, 0x52, 0x0e, 0x61, 0x6d, 0x66, 0x2d, 0x55, 0x45, 0x2d, 0x4e, 0x47, 0x41, 0x50, 0x2d, 0x49,
	0x44, 0x12, 0x28, 0x0a, 0x05, 0x67, 0x75, 0x61, 0x6d, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x75, 0x61, 0x6d, 0x69, 0x52, 0x05, 0x67, 0x75, 0x61, 0x6d, 0x69, 0x12, 0x5f, 0x0a, 0x18, 0x67,
	0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x75, 0x65, 0x5f, 0x66, 0x31, 0x5f, 0x61, 0x70, 0x5f,
	0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65, 0x69, 0x64,
	0x47, 0x4e, 0x62, 0x43, 0x55, 0x46, 0x31, 0x41, 0x70, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x16, 0x67, 0x4e, 0x42, 0x2d, 0x43, 0x55, 0x2d, 0x55, 0x45, 0x2d, 0x46, 0x31, 0x41,
	0x50, 0x2d, 0x49, 0x44, 0x2d, 0x4c, 0x69, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x67, 0x0a, 0x1b,
	0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x63, 0x70, 0x5f, 0x75, 0x65, 0x5f, 0x65, 0x31,
	0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x65, 0x69, 0x64, 0x47, 0x4e, 0x62, 0x43, 0x55, 0x43, 0x50, 0x45, 0x31, 0x41, 0x70, 0x49,
	0x44, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x01, 0x52, 0x19, 0x67, 0x4e, 0x42, 0x2d, 0x43, 0x55, 0x2d,
	0x43, 0x50, 0x2d, 0x55, 0x45, 0x2d, 0x45, 0x31, 0x41, 0x50, 0x2d, 0x49, 0x44, 0x2d, 0x4c, 0x69,
	0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x08, 0x72, 0x61, 0x6e, 0x5f, 0x75, 0x65, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63,
	0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x75, 0x65, 0x69, 0x64, 0x48, 0x02, 0x52,
	0x08, 0x72, 0x61, 0x6e, 0x2d, 0x55, 0x45, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x56, 0x0a, 0x14,
	0x6d, 0x5f, 0x6e, 0x67, 0x5f, 0x72, 0x61, 0x6e, 0x5f, 0x75, 0x65, 0x5f, 0x78, 0x6e, 0x5f, 0x61,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x67, 0x52, 0x41, 0x6e, 0x6e, 0x6f,
	0x64, 0x65, 0x55, 0x65, 0x78, 0x6e, 0x41, 0x70, 0x69, 0x64, 0x48, 0x03, 0x52, 0x13, 0x6d, 0x2d,
	0x4e, 0x47, 0x2d, 0x52, 0x41, 0x4e, 0x2d, 0x55, 0x45, 0x2d, 0x58, 0x6e, 0x41, 0x50, 0x2d, 0x49,
	0x44, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x67,
	0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x47, 0x6e, 0x62, 0x49, 0x44, 0x48, 0x04, 0x52, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x47,
	0x4e, 0x42, 0x2d, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x56, 0x0a, 0x14, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x5f, 0x6e, 0x67, 0x5f, 0x72, 0x61, 0x6e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x67, 0x72, 0x61, 0x6e,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x48, 0x05, 0x52, 0x13, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x4e, 0x47, 0x2d, 0x52, 0x41, 0x4e, 0x4e, 0x6f, 0x64, 0x65, 0x2d, 0x49, 0x44, 0x88, 0x01, 0x01,
	0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x75, 0x65, 0x5f,
	0x66, 0x31, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x1e, 0x0a,
	0x1c, 0x5f, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x63, 0x70, 0x5f, 0x75, 0x65, 0x5f,
	0x65, 0x31, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x72, 0x61, 0x6e, 0x5f, 0x75, 0x65, 0x69, 0x64, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x6d,
	0x5f, 0x6e, 0x67, 0x5f, 0x72, 0x61, 0x6e, 0x5f, 0x75, 0x65, 0x5f, 0x78, 0x6e, 0x5f, 0x61, 0x70,
	0x5f, 0x69, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x67,
	0x6e, 0x62, 0x5f, 0x69, 0x64, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x5f, 0x6e, 0x67, 0x5f, 0x72, 0x61, 0x6e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x5f,
	0x0a, 0x15, 0x55, 0x65, 0x69, 0x64, 0x47, 0x4e, 0x62, 0x43, 0x55, 0x43, 0x50, 0x45, 0x31, 0x41,
	0x70, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65, 0x69, 0x64, 0x47, 0x4e, 0x62, 0x43, 0x55, 0x43, 0x50,
	0x45, 0x31, 0x41, 0x70, 0x49, 0x44, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x92,
	0x01, 0x06, 0x08, 0x01, 0x10, 0xff, 0xff, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x6b, 0x0a, 0x15, 0x55, 0x65, 0x69, 0x64, 0x47, 0x4e, 0x62, 0x43, 0x55, 0x43, 0x50, 0x45, 0x31,
	0x41, 0x70, 0x49, 0x44, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x52, 0x0a, 0x16, 0x67, 0x5f, 0x6e, 0x62,
	0x5f, 0x63, 0x75, 0x5f, 0x63, 0x70, 0x5f, 0x75, 0x65, 0x5f, 0x65, 0x31, 0x5f, 0x61, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6e, 0x62, 0x43, 0x55, 0x43, 0x50, 0x55, 0x45,
	0x45, 0x31, 0x41, 0x70, 0x49, 0x44, 0x52, 0x14, 0x67, 0x4e, 0x42, 0x2d, 0x43, 0x55, 0x2d, 0x43,
	0x50, 0x2d, 0x55, 0x45, 0x2d, 0x45, 0x31, 0x41, 0x50, 0x2d, 0x49, 0x44, 0x22, 0x5b, 0x0a, 0x13,
	0x55, 0x65, 0x69, 0x64, 0x47, 0x4e, 0x62, 0x43, 0x55, 0x46, 0x31, 0x41, 0x70, 0x49, 0x44, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x65, 0x69, 0x64, 0x47, 0x4e, 0x62, 0x43, 0x55, 0x43, 0x50, 0x46, 0x31, 0x41, 0x70,
	0x49, 0x44, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01,
	0x10, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x63, 0x0a, 0x15, 0x55, 0x65, 0x69,
	0x64, 0x47, 0x4e, 0x62, 0x43, 0x55, 0x43, 0x50, 0x46, 0x31, 0x41, 0x70, 0x49, 0x44, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x4a, 0x0a, 0x13, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x75, 0x65,
	0x5f, 0x66, 0x31, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6e,
	0x62, 0x43, 0x55, 0x55, 0x45, 0x46, 0x31, 0x41, 0x70, 0x49, 0x44, 0x52, 0x11, 0x67, 0x4e, 0x42,
	0x2d, 0x43, 0x55, 0x2d, 0x55, 0x45, 0x2d, 0x46, 0x31, 0x41, 0x50, 0x2d, 0x49, 0x44, 0x22, 0x9b,
	0x01, 0x0a, 0x09, 0x55, 0x65, 0x69, 0x64, 0x47, 0x4e, 0x62, 0x44, 0x55, 0x12, 0x4a, 0x0a, 0x13,
	0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x75, 0x65, 0x5f, 0x66, 0x31, 0x5f, 0x61, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6e, 0x62, 0x43, 0x55, 0x55, 0x45, 0x46,
	0x31, 0x41, 0x70, 0x49, 0x44, 0x52, 0x11, 0x67, 0x4e, 0x42, 0x2d, 0x43, 0x55, 0x2d, 0x55, 0x45,
	0x2d, 0x46, 0x31, 0x41, 0x50, 0x2d, 0x49, 0x44, 0x12, 0x35, 0x0a, 0x08, 0x72, 0x61, 0x6e, 0x5f,
	0x75, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x75, 0x65, 0x69, 0x64,
	0x48, 0x00, 0x52, 0x08, 0x72, 0x61, 0x6e, 0x2d, 0x55, 0x45, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x72, 0x61, 0x6e, 0x5f, 0x75, 0x65, 0x69, 0x64, 0x22, 0xa5, 0x01, 0x0a,
	0x0b, 0x55, 0x65, 0x69, 0x64, 0x47, 0x4e, 0x62, 0x43, 0x55, 0x55, 0x50, 0x12, 0x52, 0x0a, 0x16,
	0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x63, 0x70, 0x5f, 0x75, 0x65, 0x5f, 0x65, 0x31,
	0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6e, 0x62, 0x43, 0x55,
	0x43, 0x50, 0x55, 0x45, 0x45, 0x31, 0x41, 0x70, 0x49, 0x44, 0x52, 0x14, 0x67, 0x4e, 0x42, 0x2d,
	0x43, 0x55, 0x2d, 0x43, 0x50, 0x2d, 0x55, 0x45, 0x2d, 0x45, 0x31, 0x41, 0x50, 0x2d, 0x49, 0x44,
	0x12, 0x35, 0x0a, 0x08, 0x72, 0x61, 0x6e, 0x5f, 0x75, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x61, 0x6e, 0x75, 0x65, 0x69, 0x64, 0x48, 0x00, 0x52, 0x08, 0x72, 0x61, 0x6e, 0x2d,
	0x55, 0x45, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x72, 0x61, 0x6e, 0x5f,
	0x75, 0x65, 0x69, 0x64, 0x22, 0xad, 0x04, 0x0a, 0x09, 0x55, 0x65, 0x69, 0x64, 0x4e, 0x47, 0x45,
	0x4e, 0x62, 0x12, 0x40, 0x0a, 0x0e, 0x61, 0x6d, 0x66, 0x5f, 0x75, 0x65, 0x5f, 0x6e, 0x67, 0x61,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6d, 0x66, 0x55, 0x45, 0x4e, 0x47,
	0x61, 0x70, 0x49, 0x44, 0x52, 0x0e, 0x61, 0x6d, 0x66, 0x2d, 0x55, 0x45, 0x2d, 0x4e, 0x47, 0x41,
	0x50, 0x2d, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x05, 0x67, 0x75, 0x61, 0x6d, 0x69, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x75, 0x61, 0x6d, 0x69, 0x52, 0x05, 0x67, 0x75, 0x61, 0x6d, 0x69, 0x12, 0x57,
	0x0a, 0x16, 0x6e, 0x67, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x75, 0x65, 0x5f,
	0x77, 0x31, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x67, 0x65,
	0x6e, 0x62, 0x43, 0x55, 0x55, 0x45, 0x57, 0x31, 0x41, 0x70, 0x49, 0x44, 0x48, 0x00, 0x52, 0x14,
	0x6e, 0x67, 0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x43, 0x55, 0x2d, 0x55, 0x45, 0x2d, 0x57, 0x31, 0x41,
	0x50, 0x2d, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x56, 0x0a, 0x14, 0x6d, 0x5f, 0x6e, 0x67, 0x5f,
	0x72, 0x61, 0x6e, 0x5f, 0x75, 0x65, 0x5f, 0x78, 0x6e, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x67, 0x52, 0x41, 0x6e, 0x6e, 0x6f, 0x64, 0x65, 0x55, 0x65, 0x78,
	0x6e, 0x41, 0x70, 0x69, 0x64, 0x48, 0x01, 0x52, 0x13, 0x6d, 0x2d, 0x4e, 0x47, 0x2d, 0x52, 0x41,
	0x4e, 0x2d, 0x55, 0x45, 0x2d, 0x58, 0x6e, 0x41, 0x50, 0x2d, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12,
	0x49, 0x0a, 0x10, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x67,
	0x45, 0x6e, 0x62, 0x49, 0x44, 0x48, 0x02, 0x52, 0x0e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e,
	0x67, 0x45, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x56, 0x0a, 0x14, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6e, 0x67, 0x5f, 0x72, 0x61, 0x6e, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x67, 0x72,
	0x61, 0x6e, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x48, 0x03, 0x52, 0x13, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x4e, 0x47, 0x2d, 0x52, 0x41, 0x4e, 0x4e, 0x6f, 0x64, 0x65, 0x2d, 0x49, 0x44, 0x88,
	0x01, 0x01, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x6e, 0x67, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x63,
	0x75, 0x5f, 0x75, 0x65, 0x5f, 0x77, 0x31, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x42, 0x17, 0x0a,
	0x15, 0x5f, 0x6d, 0x5f, 0x6e, 0x67, 0x5f, 0x72, 0x61, 0x6e, 0x5f, 0x75, 0x65, 0x5f, 0x78, 0x6e,
	0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x5f, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x42, 0x17, 0x0a, 0x15, 0x5f,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6e, 0x67, 0x5f, 0x72, 0x61, 0x6e, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x64, 0x22, 0x61, 0x0a, 0x0b, 0x55, 0x65, 0x69, 0x64, 0x4e, 0x47, 0x45, 0x4e,
	0x62, 0x44, 0x55, 0x12, 0x52, 0x0a, 0x16, 0x6e, 0x67, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x63,
	0x75, 0x5f, 0x75, 0x65, 0x5f, 0x77, 0x31, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x67, 0x65, 0x6e, 0x62, 0x43, 0x55, 0x55, 0x45, 0x57, 0x31, 0x41, 0x70, 0x49,
	0x44, 0x52, 0x14, 0x6e, 0x67, 0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x43, 0x55, 0x2d, 0x55, 0x45, 0x2d,
	0x57, 0x31, 0x41, 0x50, 0x2d, 0x49, 0x44, 0x22, 0xd3, 0x04, 0x0a, 0x09, 0x55, 0x65, 0x69, 0x64,
	0x45, 0x4e, 0x47, 0x4e, 0x62, 0x12, 0x46, 0x0a, 0x12, 0x6d, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f,
	0x75, 0x65, 0x5f, 0x78, 0x32, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x6e, 0x62, 0x55, 0x45, 0x58, 0x32, 0x41, 0x70, 0x49, 0x44, 0x52, 0x10, 0x6d, 0x2d, 0x65,
	0x4e, 0x42, 0x2d, 0x55, 0x45, 0x2d, 0x58, 0x32, 0x41, 0x50, 0x2d, 0x49, 0x44, 0x12, 0x68, 0x0a,
	0x1c, 0x6d, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x75, 0x65, 0x5f, 0x78, 0x32, 0x5f, 0x61, 0x70,
	0x5f, 0x69, 0x64, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6e, 0x62, 0x55, 0x45, 0x58, 0x32, 0x41, 0x70, 0x49, 0x44, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x1a, 0x6d, 0x2d, 0x65, 0x4e, 0x42, 0x2d,
	0x55, 0x45, 0x2d, 0x58, 0x32, 0x41, 0x50, 0x2d, 0x49, 0x44, 0x2d, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x5f, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x45, 0x6e, 0x62, 0x49, 0x44, 0x52, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x45, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x12, 0x4f, 0x0a, 0x13, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63,
	0x75, 0x5f, 0x75, 0x65, 0x5f, 0x66, 0x31, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6e, 0x62, 0x43, 0x55, 0x55, 0x45, 0x46, 0x31, 0x41, 0x70, 0x49, 0x44, 0x48,
	0x01, 0x52, 0x11, 0x67, 0x4e, 0x42, 0x2d, 0x43, 0x55, 0x2d, 0x55, 0x45, 0x2d, 0x46, 0x31, 0x41,
	0x50, 0x2d, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x67, 0x0a, 0x1b, 0x67, 0x5f, 0x6e, 0x62, 0x5f,
	0x63, 0x75, 0x5f, 0x63, 0x70, 0x5f, 0x75, 0x65, 0x5f, 0x65, 0x31, 0x5f, 0x61, 0x70, 0x5f, 0x69,
	0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65, 0x69, 0x64, 0x47,
	0x4e, 0x62, 0x43, 0x55, 0x43, 0x50, 0x45, 0x31, 0x41, 0x70, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74,
	0x48, 0x02, 0x52, 0x19, 0x67, 0x4e, 0x42, 0x2d, 0x43, 0x55, 0x2d, 0x43, 0x50, 0x2d, 0x55, 0x45,
	0x2d, 0x45, 0x31, 0x41, 0x50, 0x2d, 0x49, 0x44, 0x2d, 0x4c, 0x69, 0x73, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x35, 0x0a, 0x08, 0x72, 0x61, 0x6e, 0x5f, 0x75, 0x65, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x61, 0x6e, 0x75, 0x65, 0x69, 0x64, 0x48, 0x03, 0x52, 0x08, 0x72, 0x61, 0x6e, 0x2d,
	0x55, 0x45, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x1f, 0x0a, 0x1d, 0x5f, 0x6d, 0x5f, 0x65, 0x5f,
	0x6e, 0x62, 0x5f, 0x75, 0x65, 0x5f, 0x78, 0x32, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x5f, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x67, 0x5f, 0x6e,
	0x62, 0x5f, 0x63, 0x75, 0x5f, 0x75, 0x65, 0x5f, 0x66, 0x31, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64,
	0x42, 0x1e, 0x0a, 0x1c, 0x5f, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x63, 0x70, 0x5f,
	0x75, 0x65, 0x5f, 0x65, 0x31, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x72, 0x61, 0x6e, 0x5f, 0x75, 0x65, 0x69, 0x64, 0x22, 0xc0, 0x03,
	0x0a, 0x07, 0x55, 0x65, 0x69, 0x64, 0x45, 0x4e, 0x62, 0x12, 0x42, 0x0a, 0x10, 0x6d, 0x5f, 0x6d,
	0x65, 0x5f, 0x75, 0x65, 0x5f, 0x73, 0x31, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x6d, 0x65, 0x55, 0x45, 0x53, 0x31, 0x41, 0x70, 0x49, 0x44, 0x52, 0x0e, 0x6d,
	0x4d, 0x45, 0x2d, 0x55, 0x45, 0x2d, 0x53, 0x31, 0x41, 0x50, 0x2d, 0x49, 0x44, 0x12, 0x2c, 0x0a,
	0x07, 0x67, 0x5f, 0x75, 0x6d, 0x6d, 0x65, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x75, 0x6d,
	0x6d, 0x65, 0x69, 0x52, 0x06, 0x67, 0x55, 0x4d, 0x4d, 0x45, 0x49, 0x12, 0x4b, 0x0a, 0x12, 0x6d,
	0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x75, 0x65, 0x5f, 0x78, 0x32, 0x5f, 0x61, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63,
	0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x62, 0x55, 0x45, 0x58, 0x32, 0x41, 0x70, 0x49,
	0x44, 0x48, 0x00, 0x52, 0x10, 0x6d, 0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x55, 0x45, 0x2d, 0x58, 0x32,
	0x41, 0x50, 0x2d, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x68, 0x0a, 0x1c, 0x6d, 0x5f, 0x65, 0x5f,
	0x6e, 0x62, 0x5f, 0x75, 0x65, 0x5f, 0x78, 0x32, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x5f, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x62,
	0x55, 0x45, 0x58, 0x32, 0x41, 0x70, 0x49, 0x44, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x48, 0x01, 0x52, 0x1a, 0x6d, 0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x55, 0x45, 0x2d, 0x58, 0x32,
	0x41, 0x50, 0x2d, 0x49, 0x44, 0x2d, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x42, 0x0a, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6e,
	0x62, 0x49, 0x44, 0x48, 0x02, 0x52, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x4e, 0x42,
	0x2d, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x6d, 0x5f, 0x65, 0x5f, 0x6e,
	0x62, 0x5f, 0x75, 0x65, 0x5f, 0x78, 0x32, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x42, 0x1f, 0x0a,
	0x1d, 0x5f, 0x6d, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x75, 0x65, 0x5f, 0x78, 0x32, 0x5f, 0x61,
	0x70, 0x5f, 0x69, 0x64, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64,
	0x22, 0x91, 0x02, 0x0a, 0x05, 0x45, 0x6e, 0x62, 0x49, 0x44, 0x12, 0x39, 0x0a, 0x0d, 0x6d, 0x61,
	0x63, 0x72, 0x6f, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x2d, 0x65,
	0x4e, 0x42, 0x2d, 0x49, 0x44, 0x12, 0x37, 0x0a, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x65, 0x5f,
	0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73,
	0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48,
	0x00, 0x52, 0x0b, 0x68, 0x6f, 0x6d, 0x65, 0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x12, 0x45,
	0x0a, 0x13, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x5f, 0x65, 0x5f,
	0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73,
	0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48,
	0x00, 0x52, 0x12, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x2d, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x2d, 0x65,
	0x4e, 0x42, 0x2d, 0x49, 0x44, 0x12, 0x43, 0x0a, 0x12, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x6d, 0x61,
	0x63, 0x72, 0x6f, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x11, 0x6c, 0x6f, 0x6e, 0x67, 0x2d, 0x4d, 0x61,
	0x63, 0x72, 0x6f, 0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x65, 0x6e,
	0x62, 0x5f, 0x69, 0x64, 0x22, 0x7a, 0x0a, 0x0b, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6e,
	0x62, 0x49, 0x44, 0x12, 0x3e, 0x0a, 0x0d, 0x70, 0x5f, 0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x70, 0x4c, 0x4d, 0x4e, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x07, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x6e, 0x62, 0x49, 0x44, 0x52, 0x06, 0x65, 0x4e, 0x42, 0x2d, 0x49, 0x44,
	0x22, 0xbb, 0x01, 0x0a, 0x06, 0x47, 0x75, 0x6d, 0x6d, 0x65, 0x69, 0x12, 0x40, 0x0a, 0x0e, 0x70,
	0x5f, 0x6c, 0x6d, 0x6e, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0d,
	0x70, 0x4c, 0x4d, 0x4e, 0x2d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x3c, 0x0a,
	0x0d, 0x6d, 0x5f, 0x6d, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x52, 0x0c, 0x6d,
	0x4d, 0x45, 0x2d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2d, 0x49, 0x44, 0x12, 0x31, 0x0a, 0x09, 0x6d,
	0x5f, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6d, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x6d, 0x4d, 0x45, 0x2d, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x2d,
	0x0a, 0x0a, 0x4d, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1f, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x09, 0xfa, 0x42, 0x06,
	0x7a, 0x04, 0x10, 0x02, 0x18, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2a, 0x0a,
	0x07, 0x4d, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x7a, 0x04, 0x10, 0x01,
	0x18, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x0b, 0x4d, 0x6d, 0x65,
	0x55, 0x45, 0x53, 0x31, 0x41, 0x70, 0x49, 0x44, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x22, 0x08, 0x18, 0xff,
	0xff, 0xff, 0xff, 0x0f, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x27, 0x0a,
	0x03, 0x51, 0x63, 0x69, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0xff, 0x01, 0x28, 0x00, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3d, 0x0a, 0x19, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x66, 0x6f, 0x72,
	0x52, 0x66, 0x70, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0x80, 0x02, 0x28, 0x01, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4b, 0x0a, 0x07, 0x45, 0x6e, 0x47, 0x4e, 0x62, 0x49, 0x44,
	0x12, 0x33, 0x0a, 0x0a, 0x65, 0x6e, 0x5f, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x09, 0x65, 0x6e, 0x2d, 0x67,
	0x4e, 0x42, 0x2d, 0x49, 0x44, 0x42, 0x0b, 0x0a, 0x09, 0x65, 0x6e, 0x5f, 0x67, 0x6e, 0x62, 0x5f,
	0x69, 0x64, 0x22, 0x2f, 0x0a, 0x0b, 0x45, 0x6e, 0x62, 0x55, 0x45, 0x58, 0x32, 0x41, 0x70, 0x49,
	0x44, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0xff, 0x1f, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x14, 0x45, 0x6e, 0x62, 0x55, 0x45, 0x58, 0x32, 0x41, 0x70,
	0x49, 0x44, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a,
	0x05, 0x18, 0xff, 0x1f, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a,
	0x0a, 0x45, 0x55, 0x54, 0x72, 0x61, 0x41, 0x52, 0x66, 0x63, 0x6e, 0x12, 0x21, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x1a,
	0x06, 0x18, 0xff, 0xff, 0x03, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c,
	0x0a, 0x08, 0x45, 0x55, 0x54, 0x72, 0x61, 0x50, 0x43, 0x69, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05,
	0x18, 0xf7, 0x03, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2b, 0x0a, 0x08,
	0x45, 0x55, 0x54, 0x72, 0x61, 0x54, 0x41, 0x63, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x7a, 0x04, 0x10, 0x02,
	0x18, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x0d, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x47, 0x6e, 0x62, 0x49, 0x44, 0x12, 0x40, 0x0a, 0x0e, 0x70,
	0x5f, 0x6c, 0x6d, 0x6e, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0d,
	0x70, 0x4c, 0x4d, 0x4e, 0x2d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x33, 0x0a,
	0x0a, 0x65, 0x6e, 0x5f, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x6e, 0x47, 0x4e, 0x62, 0x49, 0x44, 0x52, 0x09, 0x65, 0x6e, 0x2d, 0x67, 0x4e, 0x42, 0x2d,
	0x49, 0x44, 0x22, 0x36, 0x0a, 0x0f, 0x4e, 0x67, 0x65, 0x6e, 0x62, 0x43, 0x55, 0x55, 0x45, 0x57,
	0x31, 0x41, 0x70, 0x49, 0x44, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x22, 0x08, 0x18, 0xff, 0xff, 0xff, 0xff,
	0x0f, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x09, 0x4e, 0x67,
	0x65, 0x6e, 0x62, 0x44, 0x55, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x22, 0x09, 0x18, 0xff, 0xff,
	0xff, 0xff, 0xff, 0x01, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x36, 0x0a,
	0x0a, 0x41, 0x6d, 0x66, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x0b, 0x41, 0x6d, 0x66, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69,
	0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x34,
	0x0a, 0x08, 0x41, 0x6d, 0x66, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x0b, 0x41, 0x6d, 0x66, 0x55, 0x45, 0x4e, 0x47, 0x61,
	0x70, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x22, 0x09, 0x18, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1f,
	0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3d, 0x0a, 0x11, 0x45, 0x75, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x28,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x08, 0x45, 0x75, 0x74,
	0x72, 0x61, 0x43, 0x47, 0x69, 0x12, 0x3e, 0x0a, 0x0d, 0x70, 0x5f, 0x6c, 0x6d, 0x6e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x70, 0x4c, 0x4d, 0x4e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x4e, 0x0a, 0x13, 0x65, 0x5f, 0x75, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x75, 0x74, 0x72, 0x61, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x11, 0x65, 0x55, 0x54, 0x52, 0x41, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x2a, 0x0a, 0x06, 0x46, 0x69, 0x76, 0x65, 0x51, 0x69, 0x12,
	0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0xff, 0x01, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x7a, 0x0a, 0x0b, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x47, 0x6e, 0x62, 0x49, 0x44,
	0x12, 0x3e, 0x0a, 0x0d, 0x70, 0x5f, 0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63,
	0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x0c, 0x70, 0x4c, 0x4d, 0x4e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x2b, 0x0a, 0x07, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6e, 0x62, 0x49, 0x44, 0x52, 0x06, 0x67, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x22, 0x82, 0x01,
	0x0a, 0x0d, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x67, 0x45, 0x6e, 0x62, 0x49, 0x44, 0x12,
	0x3e, 0x0a, 0x0d, 0x70, 0x5f, 0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x0c, 0x70, 0x4c, 0x4d, 0x4e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x31, 0x0a, 0x09, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x67, 0x45, 0x6e, 0x62, 0x49, 0x44, 0x52, 0x08, 0x6e, 0x67, 0x45, 0x4e, 0x42, 0x2d,
	0x49, 0x44, 0x22, 0x40, 0x0a, 0x05, 0x47, 0x6e, 0x62, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x07, 0x67,
	0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x48, 0x00, 0x52, 0x06, 0x67, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x67, 0x6e,
	0x62, 0x5f, 0x69, 0x64, 0x22, 0xf4, 0x01, 0x0a, 0x05, 0x47, 0x75, 0x61, 0x6d, 0x69, 0x12, 0x3e,
	0x0a, 0x0d, 0x70, 0x5f, 0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x0c, 0x70, 0x4c, 0x4d, 0x4e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x3c,
	0x0a, 0x0d, 0x61, 0x5f, 0x6d, 0x66, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6d, 0x66, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52,
	0x0b, 0x61, 0x4d, 0x46, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x33, 0x0a, 0x0a,
	0x61, 0x5f, 0x6d, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x6d, 0x66, 0x73, 0x65, 0x74, 0x49, 0x64, 0x52, 0x08, 0x61, 0x4d, 0x46, 0x53, 0x65, 0x74, 0x49,
	0x44, 0x12, 0x38, 0x0a, 0x0b, 0x61, 0x5f, 0x6d, 0x66, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6d, 0x66, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x52,
	0x0a, 0x61, 0x4d, 0x46, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x22, 0x2f, 0x0a, 0x0b, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x54, 0x6f, 0x52, 0x66, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05,
	0x18, 0x80, 0x02, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xe4, 0x01, 0x0a,
	0x07, 0x4e, 0x67, 0x45, 0x6e, 0x62, 0x49, 0x44, 0x12, 0x3c, 0x0a, 0x0f, 0x6d, 0x61, 0x63, 0x72,
	0x6f, 0x5f, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0d, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x4e, 0x67,
	0x45, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x12, 0x47, 0x0a, 0x15, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f,
	0x6d, 0x61, 0x63, 0x72, 0x6f, 0x5f, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x12, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x4e, 0x67, 0x45, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x12,
	0x45, 0x0a, 0x14, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x5f, 0x6e, 0x67,
	0x5f, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x48, 0x00, 0x52, 0x11, 0x6c, 0x6f, 0x6e, 0x67, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x4e, 0x67,
	0x45, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x42, 0x0b, 0x0a, 0x09, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x62,
	0x5f, 0x69, 0x64, 0x22, 0x3a, 0x0a, 0x0e, 0x4e, 0x72, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x8e, 0x01, 0x0a, 0x05, 0x4e, 0x72, 0x43, 0x47, 0x69, 0x12, 0x3e, 0x0a, 0x0d, 0x70, 0x5f, 0x6c,
	0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x70, 0x4c, 0x4d,
	0x4e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x45, 0x0a, 0x10, 0x6e, 0x5f, 0x72,
	0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x72, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x0e, 0x6e, 0x52, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x22, 0x2f, 0x0a, 0x0c, 0x50, 0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42,
	0x09, 0xfa, 0x42, 0x06, 0x7a, 0x04, 0x10, 0x03, 0x18, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x34, 0x0a, 0x11, 0x51, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x3f, 0x28, 0x00,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x25, 0x0a, 0x02, 0x53, 0x64, 0x12, 0x1f, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x09, 0xfa, 0x42,
	0x06, 0x7a, 0x04, 0x10, 0x03, 0x18, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5c,
	0x0a, 0x06, 0x53, 0x4e, 0x53, 0x73, 0x61, 0x69, 0x12, 0x23, 0x0a, 0x04, 0x73, 0x5f, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x73, 0x74, 0x52, 0x03, 0x73, 0x53, 0x54, 0x12, 0x25, 0x0a,
	0x03, 0x73, 0x5f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x64, 0x48, 0x00, 0x52, 0x02, 0x73,
	0x44, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x5f, 0x64, 0x22, 0x26, 0x0a, 0x03,
	0x53, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x7a, 0x04, 0x10, 0x01, 0x18, 0x01, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x11, 0x4e, 0x67, 0x52, 0x41, 0x6e, 0x6e, 0x6f, 0x64,
	0x65, 0x55, 0x65, 0x78, 0x6e, 0x41, 0x70, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x22, 0x08, 0x18,
	0xff, 0xff, 0xff, 0xff, 0x0f, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x90,
	0x01, 0x0a, 0x11, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x67, 0x72, 0x61, 0x6e, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x04, 0x67, 0x5f, 0x6e, 0x62, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x47, 0x6e, 0x62, 0x49, 0x44, 0x48, 0x00, 0x52, 0x03,
	0x67, 0x4e, 0x42, 0x12, 0x35, 0x0a, 0x07, 0x6e, 0x67, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x67, 0x45, 0x6e, 0x62, 0x49, 0x44,
	0x48, 0x00, 0x52, 0x06, 0x6e, 0x67, 0x2d, 0x65, 0x4e, 0x42, 0x42, 0x15, 0x0a, 0x13, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6e, 0x67, 0x72, 0x61, 0x6e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69,
	0x64, 0x22, 0x36, 0x0a, 0x0f, 0x47, 0x6e, 0x62, 0x43, 0x55, 0x43, 0x50, 0x55, 0x45, 0x45, 0x31,
	0x41, 0x70, 0x49, 0x44, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x22, 0x08, 0x18, 0xff, 0xff, 0xff, 0xff, 0x0f,
	0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x09, 0x47, 0x6e, 0x62,
	0x43, 0x55, 0x55, 0x50, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x22, 0x09, 0x18, 0xff, 0xff, 0xff,
	0xff, 0xff, 0x01, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a, 0x09,
	0x46, 0x69, 0x76, 0x65, 0x47, 0x73, 0x54, 0x41, 0x63, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x7a, 0x04, 0x10,
	0x03, 0x18, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x45, 0x0a, 0x0e, 0x46, 0x72,
	0x65, 0x71, 0x42, 0x61, 0x6e, 0x64, 0x4e, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x33, 0x0a, 0x16,
	0x66, 0x72, 0x65, 0x71, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x66, 0x72,
	0x65, 0x71, 0x42, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x4e,
	0x72, 0x22, 0x34, 0x0a, 0x0d, 0x47, 0x6e, 0x62, 0x43, 0x55, 0x55, 0x45, 0x46, 0x31, 0x41, 0x70,
	0x49, 0x44, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x22, 0x08, 0x18, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x28, 0x00,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x07, 0x47, 0x6e, 0x62, 0x44, 0x55,
	0x49, 0x44, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x22, 0x09, 0x18, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x28,
	0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x29, 0x0a, 0x05, 0x4e, 0x72, 0x50, 0x43,
	0x69, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0xef, 0x07, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x24, 0x0a, 0x07, 0x4e, 0x72, 0x41, 0x52, 0x66, 0x63, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x6e, 0x5f, 0x72, 0x61, 0x72, 0x66, 0x63, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x6e, 0x52, 0x41, 0x52, 0x46, 0x43, 0x4e, 0x22, 0x59, 0x0a, 0x13, 0x4e, 0x72, 0x66,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x42, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x72,
	0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x61, 0x6e, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x20, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x13, 0x4e, 0x72, 0x66, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x79, 0x42, 0x61, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x33, 0x0a, 0x16,
	0x66, 0x72, 0x65, 0x71, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x66, 0x72,
	0x65, 0x71, 0x42, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x4e,
	0x72, 0x12, 0x57, 0x0a, 0x16, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x73,
	0x75, 0x6c, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x75, 0x6c, 0x62, 0x61, 0x6e, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x14, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53,
	0x55, 0x4c, 0x42, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x8e, 0x02, 0x0a, 0x0f, 0x4e,
	0x72, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f,
	0x0a, 0x08, 0x6e, 0x72, 0x5f, 0x61, 0x72, 0x66, 0x63, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x72, 0x41, 0x52, 0x66, 0x63, 0x6e, 0x52, 0x07, 0x6e, 0x72, 0x41, 0x52, 0x46, 0x43, 0x4e, 0x12,
	0x51, 0x0a, 0x13, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x62, 0x61, 0x6e,
	0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x72, 0x66, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x12,
	0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x61, 0x6e, 0x64, 0x2d, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x5d, 0x0a, 0x15, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f,
	0x73, 0x68, 0x69, 0x66, 0x74, 0x37, 0x70, 0x35, 0x6b, 0x68, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x23, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x72, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x68, 0x69, 0x66, 0x74,
	0x37, 0x70, 0x35, 0x6b, 0x68, 0x7a, 0x48, 0x00, 0x52, 0x14, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x79, 0x53, 0x68, 0x69, 0x66, 0x74, 0x37, 0x70, 0x35, 0x6b, 0x68, 0x7a, 0x88, 0x01,
	0x01, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f,
	0x73, 0x68, 0x69, 0x66, 0x74, 0x37, 0x70, 0x35, 0x6b, 0x68, 0x7a, 0x22, 0x2a, 0x0a, 0x07, 0x52,
	0x61, 0x6e, 0x75, 0x65, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x7a, 0x04, 0x10, 0x08, 0x18, 0x08,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5f, 0x0a, 0x14, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x53, 0x75, 0x6c, 0x62, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x47, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x75, 0x6c, 0x66, 0x72, 0x65, 0x71, 0x42, 0x61, 0x6e,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x00, 0x10,
	0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4f, 0x0a, 0x18, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x75, 0x6c, 0x66, 0x72, 0x65, 0x71, 0x42, 0x61, 0x6e, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x33, 0x0a, 0x16, 0x66, 0x72, 0x65, 0x71, 0x5f, 0x62, 0x61, 0x6e,
	0x64, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x66, 0x72, 0x65, 0x71, 0x42, 0x61, 0x6e, 0x64, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x72, 0x2a, 0xcf, 0x01, 0x0a, 0x1d, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x34, 0x4d,
	0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45,
	0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x49, 0x44,
	0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x4d, 0x45, 0x53, 0x53,
	0x41, 0x47, 0x45, 0x10, 0x00, 0x12, 0x38, 0x0a, 0x34, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f,
	0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45,
	0x53, 0x53, 0x46, 0x55, 0x4c, 0x5f, 0x4f, 0x55, 0x54, 0x43, 0x4f, 0x4d, 0x45, 0x10, 0x01, 0x12,
	0x3a, 0x0a, 0x36, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47,
	0x45, 0x5f, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x46, 0x55,
	0x4c, 0x5f, 0x4f, 0x55, 0x54, 0x43, 0x4f, 0x4d, 0x45, 0x10, 0x02, 0x2a, 0xb1, 0x01, 0x0a, 0x0d,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x12, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4e, 0x5f, 0x47, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41,
	0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x58, 0x4e, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11,
	0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46,
	0x31, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x31, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x31, 0x10,
	0x04, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x58, 0x32, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x54, 0x45,
	0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x31, 0x10, 0x06, 0x2a,
	0xe6, 0x02, 0x0a, 0x0b, 0x52, 0x72, 0x63, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4c, 0x74, 0x65, 0x12,
	0x1a, 0x0a, 0x16, 0x52, 0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4c, 0x54, 0x45, 0x5f,
	0x42, 0x5f, 0x43, 0x43, 0x48, 0x5f, 0x42, 0x43, 0x48, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x52,
	0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4c, 0x54, 0x45, 0x5f, 0x42, 0x5f, 0x43, 0x43,
	0x48, 0x5f, 0x42, 0x43, 0x48, 0x5f, 0x4d, 0x42, 0x4d, 0x53, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19,
	0x52, 0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4c, 0x54, 0x45, 0x5f, 0x42, 0x5f, 0x43,
	0x43, 0x48, 0x5f, 0x44, 0x4c, 0x5f, 0x53, 0x43, 0x48, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x52,
	0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4c, 0x54, 0x45, 0x5f, 0x42, 0x5f, 0x43, 0x43,
	0x48, 0x5f, 0x44, 0x4c, 0x5f, 0x53, 0x43, 0x48, 0x5f, 0x42, 0x52, 0x10, 0x03, 0x12, 0x22, 0x0a,
	0x1e, 0x52, 0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4c, 0x54, 0x45, 0x5f, 0x42, 0x5f,
	0x43, 0x43, 0x48, 0x5f, 0x44, 0x4c, 0x5f, 0x53, 0x43, 0x48, 0x5f, 0x4d, 0x42, 0x4d, 0x53, 0x10,
	0x04, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4c, 0x54,
	0x45, 0x5f, 0x4d, 0x5f, 0x43, 0x43, 0x48, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x52, 0x43,
	0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4c, 0x54, 0x45, 0x5f, 0x50, 0x5f, 0x43, 0x43, 0x48, 0x10,
	0x06, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4c, 0x54,
	0x45, 0x5f, 0x44, 0x5f, 0x4c, 0x5f, 0x43, 0x43, 0x43, 0x48, 0x10, 0x07, 0x12, 0x19, 0x0a, 0x15,
	0x52, 0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4c, 0x54, 0x45, 0x5f, 0x44, 0x5f, 0x4c,
	0x5f, 0x44, 0x43, 0x43, 0x48, 0x10, 0x08, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x52, 0x43, 0x43, 0x4c,
	0x41, 0x53, 0x53, 0x5f, 0x4c, 0x54, 0x45, 0x5f, 0x55, 0x5f, 0x4c, 0x5f, 0x43, 0x43, 0x43, 0x48,
	0x10, 0x09, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4c,
	0x54, 0x45, 0x5f, 0x55, 0x5f, 0x4c, 0x5f, 0x44, 0x43, 0x43, 0x48, 0x10, 0x0a, 0x12, 0x19, 0x0a,
	0x15, 0x52, 0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4c, 0x54, 0x45, 0x5f, 0x53, 0x5f,
	0x43, 0x5f, 0x4d, 0x43, 0x43, 0x48, 0x10, 0x0b, 0x2a, 0xdf, 0x01, 0x0a, 0x0a, 0x52, 0x72, 0x63,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x52, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x52, 0x43, 0x43, 0x4c,
	0x41, 0x53, 0x53, 0x5f, 0x4e, 0x52, 0x5f, 0x42, 0x5f, 0x43, 0x43, 0x48, 0x5f, 0x42, 0x43, 0x48,
	0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4e,
	0x52, 0x5f, 0x42, 0x5f, 0x43, 0x43, 0x48, 0x5f, 0x44, 0x4c, 0x5f, 0x53, 0x43, 0x48, 0x10, 0x01,
	0x12, 0x18, 0x0a, 0x14, 0x52, 0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4e, 0x52, 0x5f,
	0x44, 0x5f, 0x4c, 0x5f, 0x43, 0x43, 0x43, 0x48, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x52,
	0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4e, 0x52, 0x5f, 0x44, 0x5f, 0x4c, 0x5f, 0x44, 0x43,
	0x43, 0x48, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53,
	0x5f, 0x4e, 0x52, 0x5f, 0x50, 0x5f, 0x43, 0x43, 0x48, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x52,
	0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4e, 0x52, 0x5f, 0x55, 0x5f, 0x4c, 0x5f, 0x43,
	0x43, 0x43, 0x48, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x52, 0x43, 0x43, 0x4c, 0x41, 0x53,
	0x53, 0x5f, 0x4e, 0x52, 0x5f, 0x55, 0x5f, 0x4c, 0x5f, 0x43, 0x43, 0x43, 0x48, 0x31, 0x10, 0x06,
	0x12, 0x18, 0x0a, 0x14, 0x52, 0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4e, 0x52, 0x5f,
	0x55, 0x5f, 0x4c, 0x5f, 0x44, 0x43, 0x43, 0x48, 0x10, 0x07, 0x2a, 0x5d, 0x0a, 0x16, 0x4e, 0x72,
	0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x68, 0x69, 0x66, 0x74, 0x37, 0x70,
	0x35, 0x6b, 0x68, 0x7a, 0x12, 0x21, 0x0a, 0x1d, 0x4e, 0x52, 0x46, 0x52, 0x45, 0x51, 0x55, 0x45,
	0x4e, 0x43, 0x59, 0x5f, 0x53, 0x48, 0x49, 0x46, 0x54, 0x37, 0x50, 0x35, 0x4b, 0x48, 0x5a, 0x5f,
	0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x4e, 0x52, 0x46, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x53, 0x48, 0x49, 0x46, 0x54, 0x37, 0x50, 0x35, 0x4b,
	0x48, 0x5a, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x01, 0x42, 0x4d, 0x5a, 0x4b, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6e, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2f, 0x6f, 0x6e, 0x6f, 0x73, 0x2d, 0x65, 0x32, 0x2d, 0x73, 0x6d, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x32, 0x73, 0x6d, 0x2d, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2d, 0x69, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescOnce sync.Once
	file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescData = file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDesc
)

func file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescGZIP() []byte {
	file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescOnce.Do(func() {
		file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescData = protoimpl.X.CompressGZIP(file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescData)
	})
	return file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDescData
}

var file_e2sm_ccc_v1_e2sm_common_ies_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes = make([]protoimpl.MessageInfo, 92)
var file_e2sm_ccc_v1_e2sm_common_ies_proto_goTypes = []interface{}{
	(MessageTypeInterfaceMessageId)(0), // 0: e2sm_ccc.v1.MessageTypeInterfaceMessageId
	(InterfaceType)(0),                 // 1: e2sm_ccc.v1.InterfaceType
	(RrcclassLte)(0),                   // 2: e2sm_ccc.v1.RrcclassLte
	(RrcclassNR)(0),                    // 3: e2sm_ccc.v1.RrcclassNR
	(NrfrequencyShift7P5Khz)(0),        // 4: e2sm_ccc.v1.NrfrequencyShift7p5khz
	(*MaxE1Apid)(nil),                  // 5: e2sm_ccc.v1.MaxE1Apid
	(*MaxF1Apid)(nil),                  // 6: e2sm_ccc.v1.MaxF1Apid
	(*MaxEarfcn)(nil),                  // 7: e2sm_ccc.v1.MaxEarfcn
	(*MaxNrarfcn)(nil),                 // 8: e2sm_ccc.v1.MaxNrarfcn
	(*MaxnoofNrCellBands)(nil),         // 9: e2sm_ccc.v1.MaxnoofNrCellBands
	(*Cgi)(nil),                        // 10: e2sm_ccc.v1.Cgi
	(*CoreCpid)(nil),                   // 11: e2sm_ccc.v1.CoreCpid
	(*InterfaceIdentifier)(nil),        // 12: e2sm_ccc.v1.InterfaceIdentifier
	(*InterfaceIdNG)(nil),              // 13: e2sm_ccc.v1.InterfaceIdNG
	(*InterfaceIdXn)(nil),              // 14: e2sm_ccc.v1.InterfaceIdXn
	(*InterfaceIdF1)(nil),              // 15: e2sm_ccc.v1.InterfaceIdF1
	(*InterfaceIdE1)(nil),              // 16: e2sm_ccc.v1.InterfaceIdE1
	(*InterfaceIdS1)(nil),              // 17: e2sm_ccc.v1.InterfaceIdS1
	(*NodeTypeInterfaceIdX2)(nil),      // 18: e2sm_ccc.v1.NodeTypeInterfaceIdX2
	(*InterfaceIdX2)(nil),              // 19: e2sm_ccc.v1.InterfaceIdX2
	(*InterfaceIdW1)(nil),              // 20: e2sm_ccc.v1.InterfaceIdW1
	(*InterfaceMessageId)(nil),         // 21: e2sm_ccc.v1.InterfaceMessageId
	(*GroupId)(nil),                    // 22: e2sm_ccc.v1.GroupId
	(*QoSid)(nil),                      // 23: e2sm_ccc.v1.QoSid
	(*RanfunctionName)(nil),            // 24: e2sm_ccc.v1.RanfunctionName
	(*RicFormatType)(nil),              // 25: e2sm_ccc.v1.RicFormatType
	(*RicStyleType)(nil),               // 26: e2sm_ccc.v1.RicStyleType
	(*RicStyleName)(nil),               // 27: e2sm_ccc.v1.RicStyleName
	(*RrcTypeRrcMessageId)(nil),        // 28: e2sm_ccc.v1.RrcTypeRrcMessageId
	(*RrcMessageId)(nil),               // 29: e2sm_ccc.v1.RrcMessageId
	(*ServingCellARfcn)(nil),           // 30: e2sm_ccc.v1.ServingCellARfcn
	(*ServingCellPCi)(nil),             // 31: e2sm_ccc.v1.ServingCellPCi
	(*Ueid)(nil),                       // 32: e2sm_ccc.v1.Ueid
	(*UeidGNb)(nil),                    // 33: e2sm_ccc.v1.UeidGNb
	(*UeidGNbCUCPE1ApIDList)(nil),      // 34: e2sm_ccc.v1.UeidGNbCUCPE1ApIDList
	(*UeidGNbCUCPE1ApIDItem)(nil),      // 35: e2sm_ccc.v1.UeidGNbCUCPE1ApIDItem
	(*UeidGNbCUF1ApIDList)(nil),        // 36: e2sm_ccc.v1.UeidGNbCUF1ApIDList
	(*UeidGNbCUCPF1ApIDItem)(nil),      // 37: e2sm_ccc.v1.UeidGNbCUCPF1ApIDItem
	(*UeidGNbDU)(nil),                  // 38: e2sm_ccc.v1.UeidGNbDU
	(*UeidGNbCUUP)(nil),                // 39: e2sm_ccc.v1.UeidGNbCUUP
	(*UeidNGENb)(nil),                  // 40: e2sm_ccc.v1.UeidNGENb
	(*UeidNGENbDU)(nil),                // 41: e2sm_ccc.v1.UeidNGENbDU
	(*UeidENGNb)(nil),                  // 42: e2sm_ccc.v1.UeidENGNb
	(*UeidENb)(nil),                    // 43: e2sm_ccc.v1.UeidENb
	(*EnbID)(nil),                      // 44: e2sm_ccc.v1.EnbID
	(*GlobalEnbID)(nil),                // 45: e2sm_ccc.v1.GlobalEnbID
	(*Gummei)(nil),                     // 46: e2sm_ccc.v1.Gummei
	(*MmeGroupID)(nil),                 // 47: e2sm_ccc.v1.MmeGroupID
	(*MmeCode)(nil),                    // 48: e2sm_ccc.v1.MmeCode
	(*MmeUES1ApID)(nil),                // 49: e2sm_ccc.v1.MmeUES1ApID
	(*Qci)(nil),                        // 50: e2sm_ccc.v1.Qci
	(*SubscriberProfileIdforRfp)(nil),  // 51: e2sm_ccc.v1.SubscriberProfileIdforRfp
	(*EnGNbID)(nil),                    // 52: e2sm_ccc.v1.EnGNbID
	(*EnbUEX2ApID)(nil),                // 53: e2sm_ccc.v1.EnbUEX2ApID
	(*EnbUEX2ApIDExtension)(nil),       // 54: e2sm_ccc.v1.EnbUEX2ApIDExtension
	(*EUTraARfcn)(nil),                 // 55: e2sm_ccc.v1.EUTraARfcn
	(*EUTraPCi)(nil),                   // 56: e2sm_ccc.v1.EUTraPCi
	(*EUTraTAc)(nil),                   // 57: e2sm_ccc.v1.EUTraTAc
	(*GlobalenGnbID)(nil),              // 58: e2sm_ccc.v1.GlobalenGnbID
	(*NgenbCUUEW1ApID)(nil),            // 59: e2sm_ccc.v1.NgenbCUUEW1ApID
	(*NgenbDUID)(nil),                  // 60: e2sm_ccc.v1.NgenbDUID
	(*Amfpointer)(nil),                 // 61: e2sm_ccc.v1.Amfpointer
	(*AmfregionId)(nil),                // 62: e2sm_ccc.v1.AmfregionId
	(*AmfsetId)(nil),                   // 63: e2sm_ccc.v1.AmfsetId
	(*AmfUENGapID)(nil),                // 64: e2sm_ccc.v1.AmfUENGapID
	(*EutracellIdentity)(nil),          // 65: e2sm_ccc.v1.EutracellIdentity
	(*EutraCGi)(nil),                   // 66: e2sm_ccc.v1.EutraCGi
	(*FiveQi)(nil),                     // 67: e2sm_ccc.v1.FiveQi
	(*GlobalGnbID)(nil),                // 68: e2sm_ccc.v1.GlobalGnbID
	(*GlobalNgEnbID)(nil),              // 69: e2sm_ccc.v1.GlobalNgEnbID
	(*GnbID)(nil),                      // 70: e2sm_ccc.v1.GnbID
	(*Guami)(nil),                      // 71: e2sm_ccc.v1.Guami
	(*IndexToRfsp)(nil),                // 72: e2sm_ccc.v1.IndexToRfsp
	(*NgEnbID)(nil),                    // 73: e2sm_ccc.v1.NgEnbID
	(*NrcellIdentity)(nil),             // 74: e2sm_ccc.v1.NrcellIdentity
	(*NrCGi)(nil),                      // 75: e2sm_ccc.v1.NrCGi
	(*Plmnidentity)(nil),               // 76: e2sm_ccc.v1.Plmnidentity
	(*QosFlowIdentifier)(nil),          // 77: e2sm_ccc.v1.QosFlowIdentifier
	(*Sd)(nil),                         // 78: e2sm_ccc.v1.Sd
	(*SNSsai)(nil),                     // 79: e2sm_ccc.v1.SNSsai
	(*Sst)(nil),                        // 80: e2sm_ccc.v1.Sst
	(*NgRAnnodeUexnApid)(nil),          // 81: e2sm_ccc.v1.NgRAnnodeUexnApid
	(*GlobalNgrannodeId)(nil),          // 82: e2sm_ccc.v1.GlobalNgrannodeId
	(*GnbCUCPUEE1ApID)(nil),            // 83: e2sm_ccc.v1.GnbCUCPUEE1ApID
	(*GnbCUUPID)(nil),                  // 84: e2sm_ccc.v1.GnbCUUPID
	(*FiveGsTAc)(nil),                  // 85: e2sm_ccc.v1.FiveGsTAc
	(*FreqBandNrItem)(nil),             // 86: e2sm_ccc.v1.FreqBandNrItem
	(*GnbCUUEF1ApID)(nil),              // 87: e2sm_ccc.v1.GnbCUUEF1ApID
	(*GnbDUID)(nil),                    // 88: e2sm_ccc.v1.GnbDUID
	(*NrPCi)(nil),                      // 89: e2sm_ccc.v1.NrPCi
	(*NrARfcn)(nil),                    // 90: e2sm_ccc.v1.NrARfcn
	(*NrfrequencyBandList)(nil),        // 91: e2sm_ccc.v1.NrfrequencyBandList
	(*NrfrequencyBandItem)(nil),        // 92: e2sm_ccc.v1.NrfrequencyBandItem
	(*NrfrequencyInfo)(nil),            // 93: e2sm_ccc.v1.NrfrequencyInfo
	(*Ranueid)(nil),                    // 94: e2sm_ccc.v1.Ranueid
	(*SupportedSulbandList)(nil),       // 95: e2sm_ccc.v1.SupportedSulbandList
	(*SupportedSulfreqBandItem)(nil),   // 96: e2sm_ccc.v1.SupportedSulfreqBandItem
	(*asn1.BitString)(nil),             // 97: asn1.v1.BitString
}
var file_e2sm_ccc_v1_e2sm_common_ies_proto_depIdxs = []int32{
	75,  // 0: e2sm_ccc.v1.Cgi.n_r_cgi:type_name -> e2sm_ccc.v1.NrCGi
	66,  // 1: e2sm_ccc.v1.Cgi.e_utra_cgi:type_name -> e2sm_ccc.v1.EutraCGi
	71,  // 2: e2sm_ccc.v1.CoreCpid.five_gc:type_name -> e2sm_ccc.v1.Guami
	46,  // 3: e2sm_ccc.v1.CoreCpid.e_pc:type_name -> e2sm_ccc.v1.Gummei
	13,  // 4: e2sm_ccc.v1.InterfaceIdentifier.n_g:type_name -> e2sm_ccc.v1.InterfaceIdNG
	14,  // 5: e2sm_ccc.v1.InterfaceIdentifier.x_n:type_name -> e2sm_ccc.v1.InterfaceIdXn
	15,  // 6: e2sm_ccc.v1.InterfaceIdentifier.f1:type_name -> e2sm_ccc.v1.InterfaceIdF1
	16,  // 7: e2sm_ccc.v1.InterfaceIdentifier.e1:type_name -> e2sm_ccc.v1.InterfaceIdE1
	17,  // 8: e2sm_ccc.v1.InterfaceIdentifier.s1:type_name -> e2sm_ccc.v1.InterfaceIdS1
	19,  // 9: e2sm_ccc.v1.InterfaceIdentifier.x2:type_name -> e2sm_ccc.v1.InterfaceIdX2
	20,  // 10: e2sm_ccc.v1.InterfaceIdentifier.w1:type_name -> e2sm_ccc.v1.InterfaceIdW1
	71,  // 11: e2sm_ccc.v1.InterfaceIdNG.guami:type_name -> e2sm_ccc.v1.Guami
	82,  // 12: e2sm_ccc.v1.InterfaceIdXn.global_ng_ran_id:type_name -> e2sm_ccc.v1.GlobalNgrannodeId
	68,  // 13: e2sm_ccc.v1.InterfaceIdF1.global_gnb_id:type_name -> e2sm_ccc.v1.GlobalGnbID
	88,  // 14: e2sm_ccc.v1.InterfaceIdF1.g_nb_du_id:type_name -> e2sm_ccc.v1.GnbDUID
	68,  // 15: e2sm_ccc.v1.InterfaceIdE1.global_gnb_id:type_name -> e2sm_ccc.v1.GlobalGnbID
	84,  // 16: e2sm_ccc.v1.InterfaceIdE1.g_nb_cu_up_id:type_name -> e2sm_ccc.v1.GnbCUUPID
	46,  // 17: e2sm_ccc.v1.InterfaceIdS1.g_ummei:type_name -> e2sm_ccc.v1.Gummei
	45,  // 18: e2sm_ccc.v1.NodeTypeInterfaceIdX2.global_e_nb_id:type_name -> e2sm_ccc.v1.GlobalEnbID
	58,  // 19: e2sm_ccc.v1.NodeTypeInterfaceIdX2.global_en_g_nb_id:type_name -> e2sm_ccc.v1.GlobalenGnbID
	18,  // 20: e2sm_ccc.v1.InterfaceIdX2.node_type:type_name -> e2sm_ccc.v1.NodeTypeInterfaceIdX2
	69,  // 21: e2sm_ccc.v1.InterfaceIdW1.global_ng_e_nb_id:type_name -> e2sm_ccc.v1.GlobalNgEnbID
	60,  // 22: e2sm_ccc.v1.InterfaceIdW1.ng_e_nb_du_id:type_name -> e2sm_ccc.v1.NgenbDUID
	0,   // 23: e2sm_ccc.v1.InterfaceMessageId.message_type:type_name -> e2sm_ccc.v1.MessageTypeInterfaceMessageId
	67,  // 24: e2sm_ccc.v1.GroupId.five_gc:type_name -> e2sm_ccc.v1.FiveQi
	50,  // 25: e2sm_ccc.v1.GroupId.e_pc:type_name -> e2sm_ccc.v1.Qci
	67,  // 26: e2sm_ccc.v1.QoSid.five_gc:type_name -> e2sm_ccc.v1.FiveQi
	50,  // 27: e2sm_ccc.v1.QoSid.e_pc:type_name -> e2sm_ccc.v1.Qci
	2,   // 28: e2sm_ccc.v1.RrcTypeRrcMessageId.l_te:type_name -> e2sm_ccc.v1.RrcclassLte
	3,   // 29: e2sm_ccc.v1.RrcTypeRrcMessageId.n_r:type_name -> e2sm_ccc.v1.RrcclassNR
	28,  // 30: e2sm_ccc.v1.RrcMessageId.rrc_type:type_name -> e2sm_ccc.v1.RrcTypeRrcMessageId
	90,  // 31: e2sm_ccc.v1.ServingCellARfcn.n_r:type_name -> e2sm_ccc.v1.NrARfcn
	55,  // 32: e2sm_ccc.v1.ServingCellARfcn.e_utra:type_name -> e2sm_ccc.v1.EUTraARfcn
	89,  // 33: e2sm_ccc.v1.ServingCellPCi.n_r:type_name -> e2sm_ccc.v1.NrPCi
	56,  // 34: e2sm_ccc.v1.ServingCellPCi.e_utra:type_name -> e2sm_ccc.v1.EUTraPCi
	33,  // 35: e2sm_ccc.v1.Ueid.g_nb_ueid:type_name -> e2sm_ccc.v1.UeidGNb
	38,  // 36: e2sm_ccc.v1.Ueid.g_nb_du_ueid:type_name -> e2sm_ccc.v1.UeidGNbDU
	39,  // 37: e2sm_ccc.v1.Ueid.g_nb_cu_up_ueid:type_name -> e2sm_ccc.v1.UeidGNbCUUP
	40,  // 38: e2sm_ccc.v1.Ueid.ng_e_nb_ueid:type_name -> e2sm_ccc.v1.UeidNGENb
	41,  // 39: e2sm_ccc.v1.Ueid.ng_e_nb_du_ueid:type_name -> e2sm_ccc.v1.UeidNGENbDU
	42,  // 40: e2sm_ccc.v1.Ueid.en_g_nb_ueid:type_name -> e2sm_ccc.v1.UeidENGNb
	43,  // 41: e2sm_ccc.v1.Ueid.e_nb_ueid:type_name -> e2sm_ccc.v1.UeidENb
	64,  // 42: e2sm_ccc.v1.UeidGNb.amf_ue_ngap_id:type_name -> e2sm_ccc.v1.AmfUENGapID
	71,  // 43: e2sm_ccc.v1.UeidGNb.guami:type_name -> e2sm_ccc.v1.Guami
	36,  // 44: e2sm_ccc.v1.UeidGNb.g_nb_cu_ue_f1_ap_id_list:type_name -> e2sm_ccc.v1.UeidGNbCUF1ApIDList
	34,  // 45: e2sm_ccc.v1.UeidGNb.g_nb_cu_cp_ue_e1_ap_id_list:type_name -> e2sm_ccc.v1.UeidGNbCUCPE1ApIDList
	94,  // 46: e2sm_ccc.v1.UeidGNb.ran_ueid:type_name -> e2sm_ccc.v1.Ranueid
	81,  // 47: e2sm_ccc.v1.UeidGNb.m_ng_ran_ue_xn_ap_id:type_name -> e2sm_ccc.v1.NgRAnnodeUexnApid
	68,  // 48: e2sm_ccc.v1.UeidGNb.global_gnb_id:type_name -> e2sm_ccc.v1.GlobalGnbID
	82,  // 49: e2sm_ccc.v1.UeidGNb.global_ng_rannode_id:type_name -> e2sm_ccc.v1.GlobalNgrannodeId
	35,  // 50: e2sm_ccc.v1.UeidGNbCUCPE1ApIDList.value:type_name -> e2sm_ccc.v1.UeidGNbCUCPE1ApIDItem
	83,  // 51: e2sm_ccc.v1.UeidGNbCUCPE1ApIDItem.g_nb_cu_cp_ue_e1_ap_id:type_name -> e2sm_ccc.v1.GnbCUCPUEE1ApID
	37,  // 52: e2sm_ccc.v1.UeidGNbCUF1ApIDList.value:type_name -> e2sm_ccc.v1.UeidGNbCUCPF1ApIDItem
	87,  // 53: e2sm_ccc.v1.UeidGNbCUCPF1ApIDItem.g_nb_cu_ue_f1_ap_id:type_name -> e2sm_ccc.v1.GnbCUUEF1ApID
	87,  // 54: e2sm_ccc.v1.UeidGNbDU.g_nb_cu_ue_f1_ap_id:type_name -> e2sm_ccc.v1.GnbCUUEF1ApID
	94,  // 55: e2sm_ccc.v1.UeidGNbDU.ran_ueid:type_name -> e2sm_ccc.v1.Ranueid
	83,  // 56: e2sm_ccc.v1.UeidGNbCUUP.g_nb_cu_cp_ue_e1_ap_id:type_name -> e2sm_ccc.v1.GnbCUCPUEE1ApID
	94,  // 57: e2sm_ccc.v1.UeidGNbCUUP.ran_ueid:type_name -> e2sm_ccc.v1.Ranueid
	64,  // 58: e2sm_ccc.v1.UeidNGENb.amf_ue_ngap_id:type_name -> e2sm_ccc.v1.AmfUENGapID
	71,  // 59: e2sm_ccc.v1.UeidNGENb.guami:type_name -> e2sm_ccc.v1.Guami
	59,  // 60: e2sm_ccc.v1.UeidNGENb.ng_e_nb_cu_ue_w1_ap_id:type_name -> e2sm_ccc.v1.NgenbCUUEW1ApID
	81,  // 61: e2sm_ccc.v1.UeidNGENb.m_ng_ran_ue_xn_ap_id:type_name -> e2sm_ccc.v1.NgRAnnodeUexnApid
	69,  // 62: e2sm_ccc.v1.UeidNGENb.global_ng_enb_id:type_name -> e2sm_ccc.v1.GlobalNgEnbID
	82,  // 63: e2sm_ccc.v1.UeidNGENb.global_ng_rannode_id:type_name -> e2sm_ccc.v1.GlobalNgrannodeId
	59,  // 64: e2sm_ccc.v1.UeidNGENbDU.ng_e_nb_cu_ue_w1_ap_id:type_name -> e2sm_ccc.v1.NgenbCUUEW1ApID
	53,  // 65: e2sm_ccc.v1.UeidENGNb.m_e_nb_ue_x2_ap_id:type_name -> e2sm_ccc.v1.EnbUEX2ApID
	54,  // 66: e2sm_ccc.v1.UeidENGNb.m_e_nb_ue_x2_ap_id_extension:type_name -> e2sm_ccc.v1.EnbUEX2ApIDExtension
	45,  // 67: e2sm_ccc.v1.UeidENGNb.global_enb_id:type_name -> e2sm_ccc.v1.GlobalEnbID
	87,  // 68: e2sm_ccc.v1.UeidENGNb.g_nb_cu_ue_f1_ap_id:type_name -> e2sm_ccc.v1.GnbCUUEF1ApID
	34,  // 69: e2sm_ccc.v1.UeidENGNb.g_nb_cu_cp_ue_e1_ap_id_list:type_name -> e2sm_ccc.v1.UeidGNbCUCPE1ApIDList
	94,  // 70: e2sm_ccc.v1.UeidENGNb.ran_ueid:type_name -> e2sm_ccc.v1.Ranueid
	49,  // 71: e2sm_ccc.v1.UeidENb.m_me_ue_s1_ap_id:type_name -> e2sm_ccc.v1.MmeUES1ApID
	46,  // 72: e2sm_ccc.v1.UeidENb.g_ummei:type_name -> e2sm_ccc.v1.Gummei
	53,  // 73: e2sm_ccc.v1.UeidENb.m_e_nb_ue_x2_ap_id:type_name -> e2sm_ccc.v1.EnbUEX2ApID
	54,  // 74: e2sm_ccc.v1.UeidENb.m_e_nb_ue_x2_ap_id_extension:type_name -> e2sm_ccc.v1.EnbUEX2ApIDExtension
	45,  // 75: e2sm_ccc.v1.UeidENb.global_enb_id:type_name -> e2sm_ccc.v1.GlobalEnbID
	97,  // 76: e2sm_ccc.v1.EnbID.macro_e_nb_id:type_name -> asn1.v1.BitString
	97,  // 77: e2sm_ccc.v1.EnbID.home_e_nb_id:type_name -> asn1.v1.BitString
	97,  // 78: e2sm_ccc.v1.EnbID.short_macro_e_nb_id:type_name -> asn1.v1.BitString
	97,  // 79: e2sm_ccc.v1.EnbID.long_macro_e_nb_id:type_name -> asn1.v1.BitString
	76,  // 80: e2sm_ccc.v1.GlobalEnbID.p_lmnidentity:type_name -> e2sm_ccc.v1.Plmnidentity
	44,  // 81: e2sm_ccc.v1.GlobalEnbID.e_nb_id:type_name -> e2sm_ccc.v1.EnbID
	76,  // 82: e2sm_ccc.v1.Gummei.p_lmn_identity:type_name -> e2sm_ccc.v1.Plmnidentity
	47,  // 83: e2sm_ccc.v1.Gummei.m_me_group_id:type_name -> e2sm_ccc.v1.MmeGroupID
	48,  // 84: e2sm_ccc.v1.Gummei.m_me_code:type_name -> e2sm_ccc.v1.MmeCode
	97,  // 85: e2sm_ccc.v1.EnGNbID.en_g_nb_id:type_name -> asn1.v1.BitString
	76,  // 86: e2sm_ccc.v1.GlobalenGnbID.p_lmn_identity:type_name -> e2sm_ccc.v1.Plmnidentity
	52,  // 87: e2sm_ccc.v1.GlobalenGnbID.en_g_nb_id:type_name -> e2sm_ccc.v1.EnGNbID
	97,  // 88: e2sm_ccc.v1.Amfpointer.value:type_name -> asn1.v1.BitString
	97,  // 89: e2sm_ccc.v1.AmfregionId.value:type_name -> asn1.v1.BitString
	97,  // 90: e2sm_ccc.v1.AmfsetId.value:type_name -> asn1.v1.BitString
	97,  // 91: e2sm_ccc.v1.EutracellIdentity.value:type_name -> asn1.v1.BitString
	76,  // 92: e2sm_ccc.v1.EutraCGi.p_lmnidentity:type_name -> e2sm_ccc.v1.Plmnidentity
	65,  // 93: e2sm_ccc.v1.EutraCGi.e_utracell_identity:type_name -> e2sm_ccc.v1.EutracellIdentity
	76,  // 94: e2sm_ccc.v1.GlobalGnbID.p_lmnidentity:type_name -> e2sm_ccc.v1.Plmnidentity
	70,  // 95: e2sm_ccc.v1.GlobalGnbID.g_nb_id:type_name -> e2sm_ccc.v1.GnbID
	76,  // 96: e2sm_ccc.v1.GlobalNgEnbID.p_lmnidentity:type_name -> e2sm_ccc.v1.Plmnidentity
	73,  // 97: e2sm_ccc.v1.GlobalNgEnbID.ng_enb_id:type_name -> e2sm_ccc.v1.NgEnbID
	97,  // 98: e2sm_ccc.v1.GnbID.g_nb_id:type_name -> asn1.v1.BitString
	76,  // 99: e2sm_ccc.v1.Guami.p_lmnidentity:type_name -> e2sm_ccc.v1.Plmnidentity
	62,  // 100: e2sm_ccc.v1.Guami.a_mfregion_id:type_name -> e2sm_ccc.v1.AmfregionId
	63,  // 101: e2sm_ccc.v1.Guami.a_mfset_id:type_name -> e2sm_ccc.v1.AmfsetId
	61,  // 102: e2sm_ccc.v1.Guami.a_mfpointer:type_name -> e2sm_ccc.v1.Amfpointer
	97,  // 103: e2sm_ccc.v1.NgEnbID.macro_ng_enb_id:type_name -> asn1.v1.BitString
	97,  // 104: e2sm_ccc.v1.NgEnbID.short_macro_ng_enb_id:type_name -> asn1.v1.BitString
	97,  // 105: e2sm_ccc.v1.NgEnbID.long_macro_ng_enb_id:type_name -> asn1.v1.BitString
	97,  // 106: e2sm_ccc.v1.NrcellIdentity.value:type_name -> asn1.v1.BitString
	76,  // 107: e2sm_ccc.v1.NrCGi.p_lmnidentity:type_name -> e2sm_ccc.v1.Plmnidentity
	74,  // 108: e2sm_ccc.v1.NrCGi.n_rcell_identity:type_name -> e2sm_ccc.v1.NrcellIdentity
	80,  // 109: e2sm_ccc.v1.SNSsai.s_st:type_name -> e2sm_ccc.v1.Sst
	78,  // 110: e2sm_ccc.v1.SNSsai.s_d:type_name -> e2sm_ccc.v1.Sd
	68,  // 111: e2sm_ccc.v1.GlobalNgrannodeId.g_nb:type_name -> e2sm_ccc.v1.GlobalGnbID
	69,  // 112: e2sm_ccc.v1.GlobalNgrannodeId.ng_e_nb:type_name -> e2sm_ccc.v1.GlobalNgEnbID
	92,  // 113: e2sm_ccc.v1.NrfrequencyBandList.value:type_name -> e2sm_ccc.v1.NrfrequencyBandItem
	95,  // 114: e2sm_ccc.v1.NrfrequencyBandItem.supported_sulband_list:type_name -> e2sm_ccc.v1.SupportedSulbandList
	90,  // 115: e2sm_ccc.v1.NrfrequencyInfo.nr_arfcn:type_name -> e2sm_ccc.v1.NrARfcn
	91,  // 116: e2sm_ccc.v1.NrfrequencyInfo.frequency_band_list:type_name -> e2sm_ccc.v1.NrfrequencyBandList
	4,   // 117: e2sm_ccc.v1.NrfrequencyInfo.frequency_shift7p5khz:type_name -> e2sm_ccc.v1.NrfrequencyShift7p5khz
	96,  // 118: e2sm_ccc.v1.SupportedSulbandList.value:type_name -> e2sm_ccc.v1.SupportedSulfreqBandItem
	119, // [119:119] is the sub-list for method output_type
	119, // [119:119] is the sub-list for method input_type
	119, // [119:119] is the sub-list for extension type_name
	119, // [119:119] is the sub-list for extension extendee
	0,   // [0:119] is the sub-list for field type_name
}

func init() { file_e2sm_ccc_v1_e2sm_common_ies_proto_init() }
func file_e2sm_ccc_v1_e2sm_common_ies_proto_init() {
	if File_e2sm_ccc_v1_e2sm_common_ies_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxE1Apid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxF1Apid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxEarfcn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrarfcn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofNrCellBands); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cgi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoreCpid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceIdNG); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceIdXn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceIdF1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceIdE1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceIdS1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeTypeInterfaceIdX2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceIdX2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceIdW1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceMessageId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QoSid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanfunctionName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicFormatType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicStyleType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicStyleName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RrcTypeRrcMessageId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RrcMessageId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServingCellARfcn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServingCellPCi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ueid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UeidGNb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UeidGNbCUCPE1ApIDList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UeidGNbCUCPE1ApIDItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UeidGNbCUF1ApIDList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UeidGNbCUCPF1ApIDItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UeidGNbDU); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UeidGNbCUUP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UeidNGENb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UeidNGENbDU); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UeidENGNb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UeidENb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnbID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalEnbID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Gummei); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MmeGroupID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MmeCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MmeUES1ApID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qci); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriberProfileIdforRfp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnGNbID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnbUEX2ApID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnbUEX2ApIDExtension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EUTraARfcn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EUTraPCi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EUTraTAc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalenGnbID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NgenbCUUEW1ApID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NgenbDUID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Amfpointer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AmfregionId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AmfsetId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AmfUENGapID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EutracellIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EutraCGi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FiveQi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalGnbID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalNgEnbID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnbID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Guami); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexToRfsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NgEnbID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NrcellIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NrCGi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plmnidentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QosFlowIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SNSsai); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NgRAnnodeUexnApid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalNgrannodeId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnbCUCPUEE1ApID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnbCUUPID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FiveGsTAc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreqBandNrItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnbCUUEF1ApID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnbDUID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NrPCi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NrARfcn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NrfrequencyBandList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NrfrequencyBandItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NrfrequencyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ranueid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportedSulbandList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportedSulfreqBandItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Cgi_NRCgi)(nil),
		(*Cgi_EUtraCgi)(nil),
	}
	file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*CoreCpid_FiveGc)(nil),
		(*CoreCpid_EPc)(nil),
	}
	file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*InterfaceIdentifier_NG)(nil),
		(*InterfaceIdentifier_XN)(nil),
		(*InterfaceIdentifier_F1)(nil),
		(*InterfaceIdentifier_E1)(nil),
		(*InterfaceIdentifier_S1)(nil),
		(*InterfaceIdentifier_X2)(nil),
		(*InterfaceIdentifier_W1)(nil),
	}
	file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*NodeTypeInterfaceIdX2_GlobalENbId)(nil),
		(*NodeTypeInterfaceIdX2_GlobalEnGNbId)(nil),
	}
	file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*GroupId_FiveGc)(nil),
		(*GroupId_EPc)(nil),
	}
	file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*QoSid_FiveGc)(nil),
		(*QoSid_EPc)(nil),
	}
	file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[23].OneofWrappers = []interface{}{
		(*RrcTypeRrcMessageId_LTe)(nil),
		(*RrcTypeRrcMessageId_NR)(nil),
	}
	file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[25].OneofWrappers = []interface{}{
		(*ServingCellARfcn_NR)(nil),
		(*ServingCellARfcn_EUtra)(nil),
	}
	file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[26].OneofWrappers = []interface{}{
		(*ServingCellPCi_NR)(nil),
		(*ServingCellPCi_EUtra)(nil),
	}
	file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[27].OneofWrappers = []interface{}{
		(*Ueid_GNbUeid)(nil),
		(*Ueid_GNbDuUeid)(nil),
		(*Ueid_GNbCuUpUeid)(nil),
		(*Ueid_NgENbUeid)(nil),
		(*Ueid_NgENbDuUeid)(nil),
		(*Ueid_EnGNbUeid)(nil),
		(*Ueid_ENbUeid)(nil),
	}
	file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[28].OneofWrappers = []interface{}{}
	file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[33].OneofWrappers = []interface{}{}
	file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[34].OneofWrappers = []interface{}{}
	file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[35].OneofWrappers = []interface{}{}
	file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[37].OneofWrappers = []interface{}{}
	file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[38].OneofWrappers = []interface{}{}
	file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[39].OneofWrappers = []interface{}{
		(*EnbID_MacroENbId)(nil),
		(*EnbID_HomeENbId)(nil),
		(*EnbID_ShortMacroENbId)(nil),
		(*EnbID_LongMacroENbId)(nil),
	}
	file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[47].OneofWrappers = []interface{}{
		(*EnGNbID_EnGNbId)(nil),
	}
	file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[65].OneofWrappers = []interface{}{
		(*GnbID_GNbId)(nil),
	}
	file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[68].OneofWrappers = []interface{}{
		(*NgEnbID_MacroNgEnbId)(nil),
		(*NgEnbID_ShortMacroNgEnbId)(nil),
		(*NgEnbID_LongMacroNgEnbId)(nil),
	}
	file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[74].OneofWrappers = []interface{}{}
	file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[77].OneofWrappers = []interface{}{
		(*GlobalNgrannodeId_GNb)(nil),
		(*GlobalNgrannodeId_NgENb)(nil),
	}
	file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes[88].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   92,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_e2sm_ccc_v1_e2sm_common_ies_proto_goTypes,
		DependencyIndexes: file_e2sm_ccc_v1_e2sm_common_ies_proto_depIdxs,
		EnumInfos:         file_e2sm_ccc_v1_e2sm_common_ies_proto_enumTypes,
		MessageInfos:      file_e2sm_ccc_v1_e2sm_common_ies_proto_msgTypes,
	}.Build()
	File_e2sm_ccc_v1_e2sm_common_ies_proto = out.File
	file_e2sm_ccc_v1_e2sm_common_ies_proto_rawDesc = nil
	file_e2sm_ccc_v1_e2sm_common_ies_proto_goTypes = nil
	file_e2sm_ccc_v1_e2sm_common_ies_proto_depIdxs = nil
}
