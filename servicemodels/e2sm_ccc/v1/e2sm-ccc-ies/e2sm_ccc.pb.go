////////////////////// e2sm-ccc-ies.proto //////////////////////
// Protobuf generated from /e2sm_ccc.asn1 by asn1c-0.9.29
// E2SM-CCC-IEs { iso(1) identified-organization(3) dod(6) internet(1) private(4) enterprise(1) oran(53148) e2(1) version1(1) e2sm(2) e2sm-CCC-IEs(103) }

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.19.4
// source: e2sm_ccc/v1/e2sm_ccc.proto

package e2sm_ccc_ies

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	e2sm_common_ies "github.com/onosproject/onos-e2-sm/servicemodels/e2sm_ccc/v1/e2sm-common-ies"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// enumerated from e2sm_ccc.asn1:125
type CellState int32

const (
	CellState_CELL_STATE_IDLE     CellState = 0
	CellState_CELL_STATE_INACTIVE CellState = 1
	CellState_CELL_STATE_ACTIVE   CellState = 2
)

// Enum value maps for CellState.
var (
	CellState_name = map[int32]string{
		0: "CELL_STATE_IDLE",
		1: "CELL_STATE_INACTIVE",
		2: "CELL_STATE_ACTIVE",
	}
	CellState_value = map[string]int32{
		"CELL_STATE_IDLE":     0,
		"CELL_STATE_INACTIVE": 1,
		"CELL_STATE_ACTIVE":   2,
	}
)

func (x CellState) Enum() *CellState {
	p := new(CellState)
	*p = x
	return p
}

func (x CellState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CellState) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_enumTypes[0].Descriptor()
}

func (CellState) Type() protoreflect.EnumType {
	return &file_e2sm_ccc_v1_e2sm_ccc_proto_enumTypes[0]
}

func (x CellState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CellState.Descriptor instead.
func (CellState) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{0}
}

// enumerated from e2sm_ccc.asn1:127
type CyclicPrefix int32

const (
	CyclicPrefix_CYCLIC_PREFIX_NORMAL   CyclicPrefix = 0
	CyclicPrefix_CYCLIC_PREFIX_EXTENDED CyclicPrefix = 1
)

// Enum value maps for CyclicPrefix.
var (
	CyclicPrefix_name = map[int32]string{
		0: "CYCLIC_PREFIX_NORMAL",
		1: "CYCLIC_PREFIX_EXTENDED",
	}
	CyclicPrefix_value = map[string]int32{
		"CYCLIC_PREFIX_NORMAL":   0,
		"CYCLIC_PREFIX_EXTENDED": 1,
	}
)

func (x CyclicPrefix) Enum() *CyclicPrefix {
	p := new(CyclicPrefix)
	*p = x
	return p
}

func (x CyclicPrefix) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CyclicPrefix) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_enumTypes[1].Descriptor()
}

func (CyclicPrefix) Type() protoreflect.EnumType {
	return &file_e2sm_ccc_v1_e2sm_ccc_proto_enumTypes[1]
}

func (x CyclicPrefix) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CyclicPrefix.Descriptor instead.
func (CyclicPrefix) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{1}
}

// enumerated from e2sm_ccc.asn1:130
type BwpContext int32

const (
	BwpContext_BWP_CONTEXT_DL  BwpContext = 0
	BwpContext_BWP_CONTEXT_UL  BwpContext = 1
	BwpContext_BWP_CONTEXT_SUL BwpContext = 2
)

// Enum value maps for BwpContext.
var (
	BwpContext_name = map[int32]string{
		0: "BWP_CONTEXT_DL",
		1: "BWP_CONTEXT_UL",
		2: "BWP_CONTEXT_SUL",
	}
	BwpContext_value = map[string]int32{
		"BWP_CONTEXT_DL":  0,
		"BWP_CONTEXT_UL":  1,
		"BWP_CONTEXT_SUL": 2,
	}
)

func (x BwpContext) Enum() *BwpContext {
	p := new(BwpContext)
	*p = x
	return p
}

func (x BwpContext) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BwpContext) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_enumTypes[2].Descriptor()
}

func (BwpContext) Type() protoreflect.EnumType {
	return &file_e2sm_ccc_v1_e2sm_ccc_proto_enumTypes[2]
}

func (x BwpContext) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BwpContext.Descriptor instead.
func (BwpContext) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{2}
}

// enumerated from e2sm_ccc.asn1:132
type IsInitialBwp int32

const (
	IsInitialBwp_IS_INITIAL_BWP_INITIAL IsInitialBwp = 0
	IsInitialBwp_IS_INITIAL_BWP_OTHER   IsInitialBwp = 1
)

// Enum value maps for IsInitialBwp.
var (
	IsInitialBwp_name = map[int32]string{
		0: "IS_INITIAL_BWP_INITIAL",
		1: "IS_INITIAL_BWP_OTHER",
	}
	IsInitialBwp_value = map[string]int32{
		"IS_INITIAL_BWP_INITIAL": 0,
		"IS_INITIAL_BWP_OTHER":   1,
	}
)

func (x IsInitialBwp) Enum() *IsInitialBwp {
	p := new(IsInitialBwp)
	*p = x
	return p
}

func (x IsInitialBwp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IsInitialBwp) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_enumTypes[3].Descriptor()
}

func (IsInitialBwp) Type() protoreflect.EnumType {
	return &file_e2sm_ccc_v1_e2sm_ccc_proto_enumTypes[3]
}

func (x IsInitialBwp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IsInitialBwp.Descriptor instead.
func (IsInitialBwp) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{3}
}

// enumerated from e2sm_ccc.asn1:135
type IndicationReason int32

const (
	IndicationReason_INDICATION_REASON_UPON_SUBSCRIPTION IndicationReason = 0
	IndicationReason_INDICATION_REASON_UPON_CHANGE       IndicationReason = 1
	IndicationReason_INDICATION_REASON_PERIODIC          IndicationReason = 2
)

// Enum value maps for IndicationReason.
var (
	IndicationReason_name = map[int32]string{
		0: "INDICATION_REASON_UPON_SUBSCRIPTION",
		1: "INDICATION_REASON_UPON_CHANGE",
		2: "INDICATION_REASON_PERIODIC",
	}
	IndicationReason_value = map[string]int32{
		"INDICATION_REASON_UPON_SUBSCRIPTION": 0,
		"INDICATION_REASON_UPON_CHANGE":       1,
		"INDICATION_REASON_PERIODIC":          2,
	}
)

func (x IndicationReason) Enum() *IndicationReason {
	p := new(IndicationReason)
	*p = x
	return p
}

func (x IndicationReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IndicationReason) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_enumTypes[4].Descriptor()
}

func (IndicationReason) Type() protoreflect.EnumType {
	return &file_e2sm_ccc_v1_e2sm_ccc_proto_enumTypes[4]
}

func (x IndicationReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IndicationReason.Descriptor instead.
func (IndicationReason) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{4}
}

// enumerated from e2sm_ccc.asn1:137
type ChangeType int32

const (
	ChangeType_CHANGE_TYPE_NONE         ChangeType = 0
	ChangeType_CHANGE_TYPE_MODIFICATION ChangeType = 1
	ChangeType_CHANGE_TYPE_ADDITION     ChangeType = 2
	ChangeType_CHANGE_TYPE_DELETION     ChangeType = 3
)

// Enum value maps for ChangeType.
var (
	ChangeType_name = map[int32]string{
		0: "CHANGE_TYPE_NONE",
		1: "CHANGE_TYPE_MODIFICATION",
		2: "CHANGE_TYPE_ADDITION",
		3: "CHANGE_TYPE_DELETION",
	}
	ChangeType_value = map[string]int32{
		"CHANGE_TYPE_NONE":         0,
		"CHANGE_TYPE_MODIFICATION": 1,
		"CHANGE_TYPE_ADDITION":     2,
		"CHANGE_TYPE_DELETION":     3,
	}
)

func (x ChangeType) Enum() *ChangeType {
	p := new(ChangeType)
	*p = x
	return p
}

func (x ChangeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangeType) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_enumTypes[5].Descriptor()
}

func (ChangeType) Type() protoreflect.EnumType {
	return &file_e2sm_ccc_v1_e2sm_ccc_proto_enumTypes[5]
}

func (x ChangeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChangeType.Descriptor instead.
func (ChangeType) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{5}
}

// enumerated from e2sm_ccc.asn1:139
type ReportType int32

const (
	ReportType_REPORT_TYPE_ALL    ReportType = 0
	ReportType_REPORT_TYPE_CHANGE ReportType = 1
)

// Enum value maps for ReportType.
var (
	ReportType_name = map[int32]string{
		0: "REPORT_TYPE_ALL",
		1: "REPORT_TYPE_CHANGE",
	}
	ReportType_value = map[string]int32{
		"REPORT_TYPE_ALL":    0,
		"REPORT_TYPE_CHANGE": 1,
	}
)

func (x ReportType) Enum() *ReportType {
	p := new(ReportType)
	*p = x
	return p
}

func (x ReportType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReportType) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_enumTypes[6].Descriptor()
}

func (ReportType) Type() protoreflect.EnumType {
	return &file_e2sm_ccc_v1_e2sm_ccc_proto_enumTypes[6]
}

func (x ReportType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReportType.Descriptor instead.
func (ReportType) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{6}
}

// enumerated from e2sm_ccc.asn1:141
type ResourceType int32

const (
	ResourceType_RESOURCE_TYPE_PRB_UL ResourceType = 0
	ResourceType_RESOURCE_TYPE_PRB_DL ResourceType = 1
	ResourceType_RESOURCE_TYPE_DRB    ResourceType = 2
	ResourceType_RESOURCE_TYPE_RRC    ResourceType = 3
)

// Enum value maps for ResourceType.
var (
	ResourceType_name = map[int32]string{
		0: "RESOURCE_TYPE_PRB_UL",
		1: "RESOURCE_TYPE_PRB_DL",
		2: "RESOURCE_TYPE_DRB",
		3: "RESOURCE_TYPE_RRC",
	}
	ResourceType_value = map[string]int32{
		"RESOURCE_TYPE_PRB_UL": 0,
		"RESOURCE_TYPE_PRB_DL": 1,
		"RESOURCE_TYPE_DRB":    2,
		"RESOURCE_TYPE_RRC":    3,
	}
)

func (x ResourceType) Enum() *ResourceType {
	p := new(ResourceType)
	*p = x
	return p
}

func (x ResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_enumTypes[7].Descriptor()
}

func (ResourceType) Type() protoreflect.EnumType {
	return &file_e2sm_ccc_v1_e2sm_ccc_proto_enumTypes[7]
}

func (x ResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceType.Descriptor instead.
func (ResourceType) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{7}
}

// enumerated from e2sm_ccc.asn1:143
type SchedulerType int32

const (
	SchedulerType_SCHEDULER_TYPE_ROUND_ROBIN         SchedulerType = 0
	SchedulerType_SCHEDULER_TYPE_PROPORTIONALLY_FAIR SchedulerType = 1
	SchedulerType_SCHEDULER_TYPE_QOS_BASED           SchedulerType = 2
)

// Enum value maps for SchedulerType.
var (
	SchedulerType_name = map[int32]string{
		0: "SCHEDULER_TYPE_ROUND_ROBIN",
		1: "SCHEDULER_TYPE_PROPORTIONALLY_FAIR",
		2: "SCHEDULER_TYPE_QOS_BASED",
	}
	SchedulerType_value = map[string]int32{
		"SCHEDULER_TYPE_ROUND_ROBIN":         0,
		"SCHEDULER_TYPE_PROPORTIONALLY_FAIR": 1,
		"SCHEDULER_TYPE_QOS_BASED":           2,
	}
)

func (x SchedulerType) Enum() *SchedulerType {
	p := new(SchedulerType)
	*p = x
	return p
}

func (x SchedulerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SchedulerType) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_enumTypes[8].Descriptor()
}

func (SchedulerType) Type() protoreflect.EnumType {
	return &file_e2sm_ccc_v1_e2sm_ccc_proto_enumTypes[8]
}

func (x SchedulerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SchedulerType.Descriptor instead.
func (SchedulerType) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{8}
}

// enumerated from e2sm_ccc.asn1:148
type SsbPeriodicity int32

const (
	SsbPeriodicity_SSB_PERIODICITY_N5   SsbPeriodicity = 0
	SsbPeriodicity_SSB_PERIODICITY_N10  SsbPeriodicity = 1
	SsbPeriodicity_SSB_PERIODICITY_N20  SsbPeriodicity = 2
	SsbPeriodicity_SSB_PERIODICITY_N40  SsbPeriodicity = 3
	SsbPeriodicity_SSB_PERIODICITY_N80  SsbPeriodicity = 4
	SsbPeriodicity_SSB_PERIODICITY_N160 SsbPeriodicity = 5
)

// Enum value maps for SsbPeriodicity.
var (
	SsbPeriodicity_name = map[int32]string{
		0: "SSB_PERIODICITY_N5",
		1: "SSB_PERIODICITY_N10",
		2: "SSB_PERIODICITY_N20",
		3: "SSB_PERIODICITY_N40",
		4: "SSB_PERIODICITY_N80",
		5: "SSB_PERIODICITY_N160",
	}
	SsbPeriodicity_value = map[string]int32{
		"SSB_PERIODICITY_N5":   0,
		"SSB_PERIODICITY_N10":  1,
		"SSB_PERIODICITY_N20":  2,
		"SSB_PERIODICITY_N40":  3,
		"SSB_PERIODICITY_N80":  4,
		"SSB_PERIODICITY_N160": 5,
	}
)

func (x SsbPeriodicity) Enum() *SsbPeriodicity {
	p := new(SsbPeriodicity)
	*p = x
	return p
}

func (x SsbPeriodicity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SsbPeriodicity) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_enumTypes[9].Descriptor()
}

func (SsbPeriodicity) Type() protoreflect.EnumType {
	return &file_e2sm_ccc_v1_e2sm_ccc_proto_enumTypes[9]
}

func (x SsbPeriodicity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SsbPeriodicity.Descriptor instead.
func (SsbPeriodicity) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{9}
}

// enumerated from e2sm_ccc.asn1:150
type SsbDuration int32

const (
	SsbDuration_SSB_DURATION_N1 SsbDuration = 0
	SsbDuration_SSB_DURATION_N2 SsbDuration = 1
	SsbDuration_SSB_DURATION_N3 SsbDuration = 2
	SsbDuration_SSB_DURATION_N4 SsbDuration = 3
	SsbDuration_SSB_DURATION_N5 SsbDuration = 4
)

// Enum value maps for SsbDuration.
var (
	SsbDuration_name = map[int32]string{
		0: "SSB_DURATION_N1",
		1: "SSB_DURATION_N2",
		2: "SSB_DURATION_N3",
		3: "SSB_DURATION_N4",
		4: "SSB_DURATION_N5",
	}
	SsbDuration_value = map[string]int32{
		"SSB_DURATION_N1": 0,
		"SSB_DURATION_N2": 1,
		"SSB_DURATION_N3": 2,
		"SSB_DURATION_N4": 3,
		"SSB_DURATION_N5": 4,
	}
)

func (x SsbDuration) Enum() *SsbDuration {
	p := new(SsbDuration)
	*p = x
	return p
}

func (x SsbDuration) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SsbDuration) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_enumTypes[10].Descriptor()
}

func (SsbDuration) Type() protoreflect.EnumType {
	return &file_e2sm_ccc_v1_e2sm_ccc_proto_enumTypes[10]
}

func (x SsbDuration) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SsbDuration.Descriptor instead.
func (SsbDuration) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{10}
}

// enumerated from e2sm_ccc.asn1:152
type SsbSubCarrierSpacing int32

const (
	SsbSubCarrierSpacing_SSB_SUB_CARRIER_SPACING_N15  SsbSubCarrierSpacing = 0
	SsbSubCarrierSpacing_SSB_SUB_CARRIER_SPACING_N30  SsbSubCarrierSpacing = 1
	SsbSubCarrierSpacing_SSB_SUB_CARRIER_SPACING_N120 SsbSubCarrierSpacing = 2
	SsbSubCarrierSpacing_SSB_SUB_CARRIER_SPACING_N240 SsbSubCarrierSpacing = 3
)

// Enum value maps for SsbSubCarrierSpacing.
var (
	SsbSubCarrierSpacing_name = map[int32]string{
		0: "SSB_SUB_CARRIER_SPACING_N15",
		1: "SSB_SUB_CARRIER_SPACING_N30",
		2: "SSB_SUB_CARRIER_SPACING_N120",
		3: "SSB_SUB_CARRIER_SPACING_N240",
	}
	SsbSubCarrierSpacing_value = map[string]int32{
		"SSB_SUB_CARRIER_SPACING_N15":  0,
		"SSB_SUB_CARRIER_SPACING_N30":  1,
		"SSB_SUB_CARRIER_SPACING_N120": 2,
		"SSB_SUB_CARRIER_SPACING_N240": 3,
	}
)

func (x SsbSubCarrierSpacing) Enum() *SsbSubCarrierSpacing {
	p := new(SsbSubCarrierSpacing)
	*p = x
	return p
}

func (x SsbSubCarrierSpacing) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SsbSubCarrierSpacing) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_enumTypes[11].Descriptor()
}

func (SsbSubCarrierSpacing) Type() protoreflect.EnumType {
	return &file_e2sm_ccc_v1_e2sm_ccc_proto_enumTypes[11]
}

func (x SsbSubCarrierSpacing) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SsbSubCarrierSpacing.Descriptor instead.
func (SsbSubCarrierSpacing) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{11}
}

// enumerated from e2sm_ccc.asn1:154
type SubCarrierSpacing int32

const (
	SubCarrierSpacing_SUB_CARRIER_SPACING_N15  SubCarrierSpacing = 0
	SubCarrierSpacing_SUB_CARRIER_SPACING_N30  SubCarrierSpacing = 1
	SubCarrierSpacing_SUB_CARRIER_SPACING_N60  SubCarrierSpacing = 2
	SubCarrierSpacing_SUB_CARRIER_SPACING_N120 SubCarrierSpacing = 3
)

// Enum value maps for SubCarrierSpacing.
var (
	SubCarrierSpacing_name = map[int32]string{
		0: "SUB_CARRIER_SPACING_N15",
		1: "SUB_CARRIER_SPACING_N30",
		2: "SUB_CARRIER_SPACING_N60",
		3: "SUB_CARRIER_SPACING_N120",
	}
	SubCarrierSpacing_value = map[string]int32{
		"SUB_CARRIER_SPACING_N15":  0,
		"SUB_CARRIER_SPACING_N30":  1,
		"SUB_CARRIER_SPACING_N60":  2,
		"SUB_CARRIER_SPACING_N120": 3,
	}
)

func (x SubCarrierSpacing) Enum() *SubCarrierSpacing {
	p := new(SubCarrierSpacing)
	*p = x
	return p
}

func (x SubCarrierSpacing) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubCarrierSpacing) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_enumTypes[12].Descriptor()
}

func (SubCarrierSpacing) Type() protoreflect.EnumType {
	return &file_e2sm_ccc_v1_e2sm_ccc_proto_enumTypes[12]
}

func (x SubCarrierSpacing) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubCarrierSpacing.Descriptor instead.
func (SubCarrierSpacing) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{12}
}

// constant Integer from e2sm_ccc.asn1:42
// {-}
type MaxnoofPlmninfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:65536,valueUB:65536,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:65536,valueUB:65536,"`
}

func (x *MaxnoofPlmninfo) Reset() {
	*x = MaxnoofPlmninfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofPlmninfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofPlmninfo) ProtoMessage() {}

func (x *MaxnoofPlmninfo) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofPlmninfo.ProtoReflect.Descriptor instead.
func (*MaxnoofPlmninfo) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{0}
}

func (x *MaxnoofPlmninfo) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_ccc.asn1:43
// {-}
type MaxnoofRrmpolicyMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:65536,valueUB:65536,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:65536,valueUB:65536,"`
}

func (x *MaxnoofRrmpolicyMember) Reset() {
	*x = MaxnoofRrmpolicyMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofRrmpolicyMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofRrmpolicyMember) ProtoMessage() {}

func (x *MaxnoofRrmpolicyMember) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofRrmpolicyMember.ProtoReflect.Descriptor instead.
func (*MaxnoofRrmpolicyMember) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{1}
}

func (x *MaxnoofRrmpolicyMember) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_ccc.asn1:44
// {-}
type MaxnoofConfigurationsReported struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:65535,valueUB:65535,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:65535,valueUB:65535,"`
}

func (x *MaxnoofConfigurationsReported) Reset() {
	*x = MaxnoofConfigurationsReported{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofConfigurationsReported) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofConfigurationsReported) ProtoMessage() {}

func (x *MaxnoofConfigurationsReported) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofConfigurationsReported.ProtoReflect.Descriptor instead.
func (*MaxnoofConfigurationsReported) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{2}
}

func (x *MaxnoofConfigurationsReported) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_ccc.asn1:45
// {-}
type MaxnoofCellsReported struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:65535,valueUB:65535,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:65535,valueUB:65535,"`
}

func (x *MaxnoofCellsReported) Reset() {
	*x = MaxnoofCellsReported{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofCellsReported) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofCellsReported) ProtoMessage() {}

func (x *MaxnoofCellsReported) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofCellsReported.ProtoReflect.Descriptor instead.
func (*MaxnoofCellsReported) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{3}
}

func (x *MaxnoofCellsReported) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_ccc.asn1:46
// {-}
type MaxnoofCells struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:65535,valueUB:65535,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:65535,valueUB:65535,"`
}

func (x *MaxnoofCells) Reset() {
	*x = MaxnoofCells{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofCells) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofCells) ProtoMessage() {}

func (x *MaxnoofCells) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofCells.ProtoReflect.Descriptor instead.
func (*MaxnoofCells) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{4}
}

func (x *MaxnoofCells) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_ccc.asn1:47
// {-}
type MaxnoofCellsRanFunctionDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1024,valueUB:1024,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1024,valueUB:1024,"`
}

func (x *MaxnoofCellsRanFunctionDefinition) Reset() {
	*x = MaxnoofCellsRanFunctionDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofCellsRanFunctionDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofCellsRanFunctionDefinition) ProtoMessage() {}

func (x *MaxnoofCellsRanFunctionDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofCellsRanFunctionDefinition.ProtoReflect.Descriptor instead.
func (*MaxnoofCellsRanFunctionDefinition) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{5}
}

func (x *MaxnoofCellsRanFunctionDefinition) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_ccc.asn1:48
// {-}
type MaxnoofConfigurations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1024,valueUB:1024,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1024,valueUB:1024,"`
}

func (x *MaxnoofConfigurations) Reset() {
	*x = MaxnoofConfigurations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofConfigurations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofConfigurations) ProtoMessage() {}

func (x *MaxnoofConfigurations) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofConfigurations.ProtoReflect.Descriptor instead.
func (*MaxnoofConfigurations) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{6}
}

func (x *MaxnoofConfigurations) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_ccc.asn1:49
// {-}
type MaxnoofAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:65535,valueUB:65535,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:65535,valueUB:65535,"`
}

func (x *MaxnoofAttributes) Reset() {
	*x = MaxnoofAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofAttributes) ProtoMessage() {}

func (x *MaxnoofAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofAttributes.ProtoReflect.Descriptor instead.
func (*MaxnoofAttributes) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{7}
}

func (x *MaxnoofAttributes) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_ccc.asn1:50
// {-}
type MaxnoofRicstyles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxnoofRicstyles) Reset() {
	*x = MaxnoofRicstyles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofRicstyles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofRicstyles) ProtoMessage() {}

func (x *MaxnoofRicstyles) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofRicstyles.ProtoReflect.Descriptor instead.
func (*MaxnoofRicstyles) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{8}
}

func (x *MaxnoofRicstyles) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_ccc.asn1:51
// {-}
type MaxnoofEventTriggerStyles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:63,valueUB:63,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:63,valueUB:63,"`
}

func (x *MaxnoofEventTriggerStyles) Reset() {
	*x = MaxnoofEventTriggerStyles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofEventTriggerStyles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofEventTriggerStyles) ProtoMessage() {}

func (x *MaxnoofEventTriggerStyles) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofEventTriggerStyles.ProtoReflect.Descriptor instead.
func (*MaxnoofEventTriggerStyles) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{9}
}

func (x *MaxnoofEventTriggerStyles) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_ccc.asn1:52
// {-}
type MaxnoofNodeLevelConfigStructures struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:256,valueUB:256,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:256,valueUB:256,"`
}

func (x *MaxnoofNodeLevelConfigStructures) Reset() {
	*x = MaxnoofNodeLevelConfigStructures{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofNodeLevelConfigStructures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofNodeLevelConfigStructures) ProtoMessage() {}

func (x *MaxnoofNodeLevelConfigStructures) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofNodeLevelConfigStructures.ProtoReflect.Descriptor instead.
func (*MaxnoofNodeLevelConfigStructures) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{10}
}

func (x *MaxnoofNodeLevelConfigStructures) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_ccc.asn1:53
// {-}
type MaxnoofAttributesToReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:65535,valueUB:65535,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:65535,valueUB:65535,"`
}

func (x *MaxnoofAttributesToReport) Reset() {
	*x = MaxnoofAttributesToReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofAttributesToReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofAttributesToReport) ProtoMessage() {}

func (x *MaxnoofAttributesToReport) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofAttributesToReport.ProtoReflect.Descriptor instead.
func (*MaxnoofAttributesToReport) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{11}
}

func (x *MaxnoofAttributesToReport) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_ccc.asn1:54
// {-}
type MaxnoofConfigurationsToReportFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:256,valueUB:256,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:256,valueUB:256,"`
}

func (x *MaxnoofConfigurationsToReportFormat1) Reset() {
	*x = MaxnoofConfigurationsToReportFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofConfigurationsToReportFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofConfigurationsToReportFormat1) ProtoMessage() {}

func (x *MaxnoofConfigurationsToReportFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofConfigurationsToReportFormat1.ProtoReflect.Descriptor instead.
func (*MaxnoofConfigurationsToReportFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{12}
}

func (x *MaxnoofConfigurationsToReportFormat1) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_ccc.asn1:55
// {-}
type MaxnoofConfigurationsToReportFormat2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1024,valueUB:1024,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1024,valueUB:1024,"`
}

func (x *MaxnoofConfigurationsToReportFormat2) Reset() {
	*x = MaxnoofConfigurationsToReportFormat2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofConfigurationsToReportFormat2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofConfigurationsToReportFormat2) ProtoMessage() {}

func (x *MaxnoofConfigurationsToReportFormat2) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofConfigurationsToReportFormat2.ProtoReflect.Descriptor instead.
func (*MaxnoofConfigurationsToReportFormat2) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{13}
}

func (x *MaxnoofConfigurationsToReportFormat2) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_ccc.asn1:57
// {-}
type MaxnoofBwp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:256,valueUB:256,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:256,valueUB:256,"`
}

func (x *MaxnoofBwp) Reset() {
	*x = MaxnoofBwp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofBwp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofBwp) ProtoMessage() {}

func (x *MaxnoofBwp) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofBwp.ProtoReflect.Descriptor instead.
func (*MaxnoofBwp) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{14}
}

func (x *MaxnoofBwp) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_ccc.asn1:58
// {-}
type MaxNrofPhysicalResourceBlocks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:550,valueUB:550,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:550,valueUB:550,"`
}

func (x *MaxNrofPhysicalResourceBlocks) Reset() {
	*x = MaxNrofPhysicalResourceBlocks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrofPhysicalResourceBlocks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrofPhysicalResourceBlocks) ProtoMessage() {}

func (x *MaxNrofPhysicalResourceBlocks) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrofPhysicalResourceBlocks.ProtoReflect.Descriptor instead.
func (*MaxNrofPhysicalResourceBlocks) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{15}
}

func (x *MaxNrofPhysicalResourceBlocks) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_ccc.asn1:59
// {-}
type MaxnoofSliceItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1024,valueUB:1024,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1024,valueUB:1024,"`
}

func (x *MaxnoofSliceItems) Reset() {
	*x = MaxnoofSliceItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofSliceItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofSliceItems) ProtoMessage() {}

func (x *MaxnoofSliceItems) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofSliceItems.ProtoReflect.Descriptor instead.
func (*MaxnoofSliceItems) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{16}
}

func (x *MaxnoofSliceItems) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_ccc.asn1:60
// {-}
type MinSizeGgnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:30,valueUB:30,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:30,valueUB:30,"`
}

func (x *MinSizeGgnbId) Reset() {
	*x = MinSizeGgnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinSizeGgnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinSizeGgnbId) ProtoMessage() {}

func (x *MinSizeGgnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinSizeGgnbId.ProtoReflect.Descriptor instead.
func (*MinSizeGgnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{17}
}

func (x *MinSizeGgnbId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_ccc.asn1:61
// {-}
type MaxSizeGgnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:44,valueUB:44,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:44,valueUB:44,"`
}

func (x *MaxSizeGgnbId) Reset() {
	*x = MaxSizeGgnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxSizeGgnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxSizeGgnbId) ProtoMessage() {}

func (x *MaxSizeGgnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxSizeGgnbId.ProtoReflect.Descriptor instead.
func (*MaxSizeGgnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{18}
}

func (x *MaxSizeGgnbId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_ccc.asn1:62
// {-}
type MaxnoofGgnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1024,valueUB:1024,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1024,valueUB:1024,"`
}

func (x *MaxnoofGgnbId) Reset() {
	*x = MaxnoofGgnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofGgnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofGgnbId) ProtoMessage() {}

func (x *MaxnoofGgnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofGgnbId.ProtoReflect.Descriptor instead.
func (*MaxnoofGgnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{19}
}

func (x *MaxnoofGgnbId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_ccc.asn1:63
// {-}
type MinSizeGenbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:26,valueUB:26,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:26,valueUB:26,"`
}

func (x *MinSizeGenbId) Reset() {
	*x = MinSizeGenbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinSizeGenbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinSizeGenbId) ProtoMessage() {}

func (x *MinSizeGenbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinSizeGenbId.ProtoReflect.Descriptor instead.
func (*MinSizeGenbId) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{20}
}

func (x *MinSizeGenbId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_ccc.asn1:64
// {-}
type MaxSizeGenbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:37,valueUB:37,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:37,valueUB:37,"`
}

func (x *MaxSizeGenbId) Reset() {
	*x = MaxSizeGenbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxSizeGenbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxSizeGenbId) ProtoMessage() {}

func (x *MaxSizeGenbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxSizeGenbId.ProtoReflect.Descriptor instead.
func (*MaxSizeGenbId) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{21}
}

func (x *MaxSizeGenbId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_ccc.asn1:65
// {-}
type MaxnoofGenbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1024,valueUB:1024,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1024,valueUB:1024,"`
}

func (x *MaxnoofGenbId) Reset() {
	*x = MaxnoofGenbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofGenbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofGenbId) ProtoMessage() {}

func (x *MaxnoofGenbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofGenbId.ProtoReflect.Descriptor instead.
func (*MaxnoofGenbId) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{22}
}

func (x *MaxnoofGenbId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_ccc.asn1:66
// {-}
type MinBandwidth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:5,valueUB:5,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:5,valueUB:5,"`
}

func (x *MinBandwidth) Reset() {
	*x = MinBandwidth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinBandwidth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinBandwidth) ProtoMessage() {}

func (x *MinBandwidth) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinBandwidth.ProtoReflect.Descriptor instead.
func (*MinBandwidth) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{23}
}

func (x *MinBandwidth) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_ccc.asn1:67
// {-}
type MaxBandwidth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:400,valueUB:400,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:400,valueUB:400,"`
}

func (x *MaxBandwidth) Reset() {
	*x = MaxBandwidth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxBandwidth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxBandwidth) ProtoMessage() {}

func (x *MaxBandwidth) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxBandwidth.ProtoReflect.Descriptor instead.
func (*MaxBandwidth) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{24}
}

func (x *MaxBandwidth) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_ccc.asn1:77
// {GnbId}
type GnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:4294967295,"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:4294967295,"`
}

func (x *GnbId) Reset() {
	*x = GnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnbId) ProtoMessage() {}

func (x *GnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnbId.ProtoReflect.Descriptor instead.
func (*GnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{25}
}

func (x *GnbId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_ccc.asn1:79
// {GnbIdLength}
type GnbIdLength struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:22,valueUB:32,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:22,valueUB:32,"`
}

func (x *GnbIdLength) Reset() {
	*x = GnbIdLength{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnbIdLength) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnbIdLength) ProtoMessage() {}

func (x *GnbIdLength) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnbIdLength.ProtoReflect.Descriptor instead.
func (*GnbIdLength) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{26}
}

func (x *GnbIdLength) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_ccc.asn1:81
// {GnbName}
type GnbName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:150,"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeExt,sizeLB:1,sizeUB:150,"`
}

func (x *GnbName) Reset() {
	*x = GnbName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnbName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnbName) ProtoMessage() {}

func (x *GnbName) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnbName.ProtoReflect.Descriptor instead.
func (*GnbName) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{27}
}

func (x *GnbName) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// range of Integer from e2sm_ccc.asn1:83
// {GnbDuId}
type GnbDuId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:68719476735,"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:68719476735,"`
}

func (x *GnbDuId) Reset() {
	*x = GnbDuId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnbDuId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnbDuId) ProtoMessage() {}

func (x *GnbDuId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnbDuId.ProtoReflect.Descriptor instead.
func (*GnbDuId) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{28}
}

func (x *GnbDuId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_ccc.asn1:85
// {GnbCuUpId}
type GnbCuUpId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:68719476735,"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:68719476735,"`
}

func (x *GnbCuUpId) Reset() {
	*x = GnbCuUpId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnbCuUpId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnbCuUpId) ProtoMessage() {}

func (x *GnbCuUpId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnbCuUpId.ProtoReflect.Descriptor instead.
func (*GnbCuUpId) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{29}
}

func (x *GnbCuUpId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm_ccc.asn1:89
// {SnssaiList}
type SnssaiList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:1024,"
	Value []*e2sm_common_ies.SNSsai `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"valueExt,sizeLB:1,sizeUB:1024,"`
}

func (x *SnssaiList) Reset() {
	*x = SnssaiList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnssaiList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnssaiList) ProtoMessage() {}

func (x *SnssaiList) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnssaiList.ProtoReflect.Descriptor instead.
func (*SnssaiList) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{30}
}

func (x *SnssaiList) GetValue() []*e2sm_common_ies.SNSsai {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_ccc.asn1:91
// {PlmnIdList}
type PlmnIdList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:65536,"
	Value []*e2sm_common_ies.Plmnidentity `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:65536,"`
}

func (x *PlmnIdList) Reset() {
	*x = PlmnIdList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlmnIdList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlmnIdList) ProtoMessage() {}

func (x *PlmnIdList) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlmnIdList.ProtoReflect.Descriptor instead.
func (*PlmnIdList) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{31}
}

func (x *PlmnIdList) GetValue() []*e2sm_common_ies.Plmnidentity {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_ccc.asn1:92
// {PlmnInfo}
type PlmnInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlmnId *e2sm_common_ies.Plmnidentity `protobuf:"bytes,1,opt,name=plmn_id,json=plmnId,proto3" json:"plmn_id,omitempty"`
	// @inject_tag: aper:"optional,valueExt,"
	Snssai *e2sm_common_ies.SNSsai `protobuf:"bytes,2,opt,name=snssai,proto3,oneof" json:"snssai,omitempty" aper:"optional,valueExt,"`
}

func (x *PlmnInfo) Reset() {
	*x = PlmnInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlmnInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlmnInfo) ProtoMessage() {}

func (x *PlmnInfo) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlmnInfo.ProtoReflect.Descriptor instead.
func (*PlmnInfo) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{32}
}

func (x *PlmnInfo) GetPlmnId() *e2sm_common_ies.Plmnidentity {
	if x != nil {
		return x.PlmnId
	}
	return nil
}

func (x *PlmnInfo) GetSnssai() *e2sm_common_ies.SNSsai {
	if x != nil {
		return x.Snssai
	}
	return nil
}

// sequence from e2sm_ccc.asn1:101
// {PlmnInfoList}
type PlmnInfoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:65536,"
	Value []*PlmnInfo `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:65536,"`
}

func (x *PlmnInfoList) Reset() {
	*x = PlmnInfoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlmnInfoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlmnInfoList) ProtoMessage() {}

func (x *PlmnInfoList) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlmnInfoList.ProtoReflect.Descriptor instead.
func (*PlmnInfoList) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{33}
}

func (x *PlmnInfoList) GetValue() []*PlmnInfo {
	if x != nil {
		return x.Value
	}
	return nil
}

// range of Integer from e2sm_ccc.asn1:101
// {GGnbId}
type GgnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:30,sizeUB:44,"
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:30,sizeUB:44,"`
}

func (x *GgnbId) Reset() {
	*x = GgnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GgnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GgnbId) ProtoMessage() {}

func (x *GgnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GgnbId.ProtoReflect.Descriptor instead.
func (*GgnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{34}
}

func (x *GgnbId) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// range of Integer from e2sm_ccc.asn1:106
// {GEnbId}
type GenbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:26,sizeUB:37,"
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:26,sizeUB:37,"`
}

func (x *GenbId) Reset() {
	*x = GenbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenbId) ProtoMessage() {}

func (x *GenbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenbId.ProtoReflect.Descriptor instead.
func (*GenbId) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{35}
}

func (x *GenbId) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_ccc.asn1:110
// {GGnbIdList}
type GgnbIdList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:1024,"
	Value []*GgnbId `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:1024,"`
}

func (x *GgnbIdList) Reset() {
	*x = GgnbIdList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GgnbIdList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GgnbIdList) ProtoMessage() {}

func (x *GgnbIdList) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GgnbIdList.ProtoReflect.Descriptor instead.
func (*GgnbIdList) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{36}
}

func (x *GgnbIdList) GetValue() []*GgnbId {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_ccc.asn1:112
// {GEnbIdList}
type GenbIdList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:1024,"
	Value []*GenbId `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:1024,"`
}

func (x *GenbIdList) Reset() {
	*x = GenbIdList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenbIdList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenbIdList) ProtoMessage() {}

func (x *GenbIdList) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenbIdList.ProtoReflect.Descriptor instead.
func (*GenbIdList) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{37}
}

func (x *GenbIdList) GetValue() []*GenbId {
	if x != nil {
		return x.Value
	}
	return nil
}

// range of Integer from e2sm_ccc.asn1:112
// {NrPci}
type NrPci struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:503,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:503,"`
}

func (x *NrPci) Reset() {
	*x = NrPci{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NrPci) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NrPci) ProtoMessage() {}

func (x *NrPci) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NrPci.ProtoReflect.Descriptor instead.
func (*NrPci) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{38}
}

func (x *NrPci) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_ccc.asn1:114
// {NrTac}
type NrTac struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:16777215,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:16777215,"`
}

func (x *NrTac) Reset() {
	*x = NrTac{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NrTac) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NrTac) ProtoMessage() {}

func (x *NrTac) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NrTac.ProtoReflect.Descriptor instead.
func (*NrTac) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{39}
}

func (x *NrTac) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm_ccc.asn1:117
// {Tai}
type Tai struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlmnId *e2sm_common_ies.Plmnidentity `protobuf:"bytes,1,opt,name=plmn_id,json=plmnId,proto3" json:"plmn_id,omitempty"`
	NrTac  *NrTac                        `protobuf:"bytes,2,opt,name=nr_tac,json=nrTac,proto3" json:"nr_tac,omitempty"`
}

func (x *Tai) Reset() {
	*x = Tai{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tai) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tai) ProtoMessage() {}

func (x *Tai) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tai.ProtoReflect.Descriptor instead.
func (*Tai) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{40}
}

func (x *Tai) GetPlmnId() *e2sm_common_ies.Plmnidentity {
	if x != nil {
		return x.PlmnId
	}
	return nil
}

func (x *Tai) GetNrTac() *NrTac {
	if x != nil {
		return x.NrTac
	}
	return nil
}

// sequence from e2sm_ccc.asn1:161
// {RrmPolicyMember}
type RrmPolicyMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlmnId *e2sm_common_ies.Plmnidentity `protobuf:"bytes,1,opt,name=plmn_id,json=plmnId,proto3" json:"plmn_id,omitempty"`
	// @inject_tag: aper:"valueExt,"
	Snssai *e2sm_common_ies.SNSsai `protobuf:"bytes,2,opt,name=snssai,proto3" json:"snssai,omitempty" aper:"valueExt,"`
}

func (x *RrmPolicyMember) Reset() {
	*x = RrmPolicyMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RrmPolicyMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RrmPolicyMember) ProtoMessage() {}

func (x *RrmPolicyMember) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RrmPolicyMember.ProtoReflect.Descriptor instead.
func (*RrmPolicyMember) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{41}
}

func (x *RrmPolicyMember) GetPlmnId() *e2sm_common_ies.Plmnidentity {
	if x != nil {
		return x.PlmnId
	}
	return nil
}

func (x *RrmPolicyMember) GetSnssai() *e2sm_common_ies.SNSsai {
	if x != nil {
		return x.Snssai
	}
	return nil
}

// sequence from e2sm_ccc.asn1:167
// {RrmPolicyMemberList}
type RrmPolicyMemberList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:65536,"
	Value []*RrmPolicyMember `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:65536,"`
}

func (x *RrmPolicyMemberList) Reset() {
	*x = RrmPolicyMemberList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RrmPolicyMemberList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RrmPolicyMemberList) ProtoMessage() {}

func (x *RrmPolicyMemberList) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RrmPolicyMemberList.ProtoReflect.Descriptor instead.
func (*RrmPolicyMemberList) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{42}
}

func (x *RrmPolicyMemberList) GetValue() []*RrmPolicyMember {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_ccc.asn1:168
// {O-GnbCuCpFunction}
type OGnbCuCpFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GnbId             *GnbId                        `protobuf:"bytes,1,opt,name=gnb_id,json=gnbId,proto3" json:"gnb_id,omitempty"`
	GnbIdLength       *GnbIdLength                  `protobuf:"bytes,2,opt,name=gnb_id_length,json=gnbIdLength,proto3" json:"gnb_id_length,omitempty"`
	GnbCuName         *GnbName                      `protobuf:"bytes,3,opt,name=gnb_cu_name,json=gnbCuName,proto3" json:"gnb_cu_name,omitempty"`
	PlmnId            *e2sm_common_ies.Plmnidentity `protobuf:"bytes,4,opt,name=plmn_id,json=plmnId,proto3" json:"plmn_id,omitempty"`
	X2ExcludeList     *GenbIdList                   `protobuf:"bytes,5,opt,name=x2_exclude_list,json=x2ExcludeList,proto3" json:"x2_exclude_list,omitempty"`
	XnExcludeList     *GgnbIdList                   `protobuf:"bytes,6,opt,name=xn_exclude_list,json=xnExcludeList,proto3" json:"xn_exclude_list,omitempty"`
	X2IncludeList     *GenbIdList                   `protobuf:"bytes,7,opt,name=x2_include_list,json=x2IncludeList,proto3" json:"x2_include_list,omitempty"`
	XnIncludeList     *GgnbIdList                   `protobuf:"bytes,8,opt,name=xn_include_list,json=xnIncludeList,proto3" json:"xn_include_list,omitempty"`
	X2XnHoexcludeList *GenbIdList                   `protobuf:"bytes,9,opt,name=x2_xn_hoexclude_list,json=x2XnHOExcludeList,proto3" json:"x2_xn_hoexclude_list,omitempty"`
}

func (x *OGnbCuCpFunction) Reset() {
	*x = OGnbCuCpFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OGnbCuCpFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OGnbCuCpFunction) ProtoMessage() {}

func (x *OGnbCuCpFunction) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OGnbCuCpFunction.ProtoReflect.Descriptor instead.
func (*OGnbCuCpFunction) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{43}
}

func (x *OGnbCuCpFunction) GetGnbId() *GnbId {
	if x != nil {
		return x.GnbId
	}
	return nil
}

func (x *OGnbCuCpFunction) GetGnbIdLength() *GnbIdLength {
	if x != nil {
		return x.GnbIdLength
	}
	return nil
}

func (x *OGnbCuCpFunction) GetGnbCuName() *GnbName {
	if x != nil {
		return x.GnbCuName
	}
	return nil
}

func (x *OGnbCuCpFunction) GetPlmnId() *e2sm_common_ies.Plmnidentity {
	if x != nil {
		return x.PlmnId
	}
	return nil
}

func (x *OGnbCuCpFunction) GetX2ExcludeList() *GenbIdList {
	if x != nil {
		return x.X2ExcludeList
	}
	return nil
}

func (x *OGnbCuCpFunction) GetXnExcludeList() *GgnbIdList {
	if x != nil {
		return x.XnExcludeList
	}
	return nil
}

func (x *OGnbCuCpFunction) GetX2IncludeList() *GenbIdList {
	if x != nil {
		return x.X2IncludeList
	}
	return nil
}

func (x *OGnbCuCpFunction) GetXnIncludeList() *GgnbIdList {
	if x != nil {
		return x.XnIncludeList
	}
	return nil
}

func (x *OGnbCuCpFunction) GetX2XnHoexcludeList() *GenbIdList {
	if x != nil {
		return x.X2XnHoexcludeList
	}
	return nil
}

// sequence from e2sm_ccc.asn1:182
// {O-GnbCuUpFunction}
type OGnbCuUpFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GnbId        *GnbId        `protobuf:"bytes,1,opt,name=gnb_id,json=gnbId,proto3" json:"gnb_id,omitempty"`
	GnbIdLength  *GnbIdLength  `protobuf:"bytes,2,opt,name=gnb_id_length,json=gnbIdLength,proto3" json:"gnb_id_length,omitempty"`
	GnbCuUpId    *GnbCuUpId    `protobuf:"bytes,3,opt,name=gnb_cu_up_id,json=gnbCuUpId,proto3" json:"gnb_cu_up_id,omitempty"`
	PlmnInfoList *PlmnInfoList `protobuf:"bytes,4,opt,name=plmn_info_list,json=plmnInfoList,proto3" json:"plmn_info_list,omitempty"`
}

func (x *OGnbCuUpFunction) Reset() {
	*x = OGnbCuUpFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OGnbCuUpFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OGnbCuUpFunction) ProtoMessage() {}

func (x *OGnbCuUpFunction) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OGnbCuUpFunction.ProtoReflect.Descriptor instead.
func (*OGnbCuUpFunction) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{44}
}

func (x *OGnbCuUpFunction) GetGnbId() *GnbId {
	if x != nil {
		return x.GnbId
	}
	return nil
}

func (x *OGnbCuUpFunction) GetGnbIdLength() *GnbIdLength {
	if x != nil {
		return x.GnbIdLength
	}
	return nil
}

func (x *OGnbCuUpFunction) GetGnbCuUpId() *GnbCuUpId {
	if x != nil {
		return x.GnbCuUpId
	}
	return nil
}

func (x *OGnbCuUpFunction) GetPlmnInfoList() *PlmnInfoList {
	if x != nil {
		return x.PlmnInfoList
	}
	return nil
}

// sequence from e2sm_ccc.asn1:189
// {O-GnbDuFunction}
type OGnbDuFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GnbDuId     *GnbDuId     `protobuf:"bytes,1,opt,name=gnb_du_id,json=gnbDuId,proto3" json:"gnb_du_id,omitempty"`
	GnbDuName   *GnbName     `protobuf:"bytes,2,opt,name=gnb_du_name,json=gnbDuName,proto3" json:"gnb_du_name,omitempty"`
	GnbId       *GnbId       `protobuf:"bytes,3,opt,name=gnb_id,json=gnbId,proto3" json:"gnb_id,omitempty"`
	GnbIdLength *GnbIdLength `protobuf:"bytes,4,opt,name=gnb_id_length,json=gnbIdLength,proto3" json:"gnb_id_length,omitempty"`
}

func (x *OGnbDuFunction) Reset() {
	*x = OGnbDuFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OGnbDuFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OGnbDuFunction) ProtoMessage() {}

func (x *OGnbDuFunction) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OGnbDuFunction.ProtoReflect.Descriptor instead.
func (*OGnbDuFunction) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{45}
}

func (x *OGnbDuFunction) GetGnbDuId() *GnbDuId {
	if x != nil {
		return x.GnbDuId
	}
	return nil
}

func (x *OGnbDuFunction) GetGnbDuName() *GnbName {
	if x != nil {
		return x.GnbDuName
	}
	return nil
}

func (x *OGnbDuFunction) GetGnbId() *GnbId {
	if x != nil {
		return x.GnbId
	}
	return nil
}

func (x *OGnbDuFunction) GetGnbIdLength() *GnbIdLength {
	if x != nil {
		return x.GnbIdLength
	}
	return nil
}

// range of Integer from e2sm_ccc.asn1:199
// {CellLocalId}
type CellLocalId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:16383,"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:16383,"`
}

func (x *CellLocalId) Reset() {
	*x = CellLocalId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellLocalId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellLocalId) ProtoMessage() {}

func (x *CellLocalId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellLocalId.ProtoReflect.Descriptor instead.
func (*CellLocalId) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{46}
}

func (x *CellLocalId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm_ccc.asn1:202
// {O-NrCellCu}
type ONrCellCu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellLocalId  *CellLocalId  `protobuf:"bytes,1,opt,name=cell_local_id,json=cellLocalId,proto3" json:"cell_local_id,omitempty"`
	PlmnInfoList *PlmnInfoList `protobuf:"bytes,2,opt,name=plmn_info_list,json=plmnInfoList,proto3" json:"plmn_info_list,omitempty"`
}

func (x *ONrCellCu) Reset() {
	*x = ONrCellCu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ONrCellCu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ONrCellCu) ProtoMessage() {}

func (x *ONrCellCu) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ONrCellCu.ProtoReflect.Descriptor instead.
func (*ONrCellCu) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{47}
}

func (x *ONrCellCu) GetCellLocalId() *CellLocalId {
	if x != nil {
		return x.CellLocalId
	}
	return nil
}

func (x *ONrCellCu) GetPlmnInfoList() *PlmnInfoList {
	if x != nil {
		return x.PlmnInfoList
	}
	return nil
}

// sequence from e2sm_ccc.asn1:208
// {BwpList}
type BwpList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:256,"
	Value []*OBwp `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:256,"`
}

func (x *BwpList) Reset() {
	*x = BwpList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BwpList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BwpList) ProtoMessage() {}

func (x *BwpList) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BwpList.ProtoReflect.Descriptor instead.
func (*BwpList) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{48}
}

func (x *BwpList) GetValue() []*OBwp {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_ccc.asn1:209
// {O-NrCellDu}
type ONrCellDu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellLocalId *CellLocalId `protobuf:"bytes,1,opt,name=cell_local_id,json=cellLocalId,proto3" json:"cell_local_id,omitempty"`
	// @inject_tag: aper:"valueLB:0,valueUB:2,"
	CellState    CellState     `protobuf:"varint,2,opt,name=cell_state,json=cellState,proto3,enum=e2sm_ccc.v1.CellState" json:"cell_state,omitempty" aper:"valueLB:0,valueUB:2,"`
	PlmnInfoList *PlmnInfoList `protobuf:"bytes,3,opt,name=plmn_info_list,json=plmnInfoList,proto3" json:"plmn_info_list,omitempty"`
	NrPci        *NrPci        `protobuf:"bytes,4,opt,name=nr_pci,json=nrPci,proto3" json:"nr_pci,omitempty"`
	NrTac        *NrTac        `protobuf:"bytes,5,opt,name=nr_tac,json=nrTac,proto3" json:"nr_tac,omitempty"`
	// @inject_tag: aper:"valueLB:0,valueUB:3279165,"
	ArfcnDl int32 `protobuf:"varint,6,opt,name=arfcn_dl,json=arfcnDL,proto3" json:"arfcn_dl,omitempty" aper:"valueLB:0,valueUB:3279165,"`
	// @inject_tag: aper:"valueLB:0,valueUB:3279165,"
	ArfcnUl int32 `protobuf:"varint,7,opt,name=arfcn_ul,json=arfcnUL,proto3" json:"arfcn_ul,omitempty" aper:"valueLB:0,valueUB:3279165,"`
	// @inject_tag: aper:"valueLB:0,valueUB:3279165,"
	ArfcnSul int32 `protobuf:"varint,8,opt,name=arfcn_sul,json=arfcnSUL,proto3" json:"arfcn_sul,omitempty" aper:"valueLB:0,valueUB:3279165,"`
	// @inject_tag: aper:"valueLB:5,valueUB:400,"
	BSchannelBwDl int32 `protobuf:"varint,9,opt,name=b_schannel_bw_dl,json=bSChannelBwDL,proto3" json:"b_schannel_bw_dl,omitempty" aper:"valueLB:5,valueUB:400,"`
	// @inject_tag: aper:"valueLB:0,valueUB:3279165,"
	SsbFrequency int32 `protobuf:"varint,10,opt,name=ssb_frequency,json=ssbFrequency,proto3" json:"ssb_frequency,omitempty" aper:"valueLB:0,valueUB:3279165,"`
	// @inject_tag: aper:"valueLB:0,valueUB:5,"
	SsbPeriodicity SsbPeriodicity `protobuf:"varint,11,opt,name=ssb_periodicity,json=ssbPeriodicity,proto3,enum=e2sm_ccc.v1.SsbPeriodicity" json:"ssb_periodicity,omitempty" aper:"valueLB:0,valueUB:5,"`
	// @inject_tag: aper:"valueLB:0,valueUB:3,"
	SsbSubCarrierSpacing SsbSubCarrierSpacing `protobuf:"varint,12,opt,name=ssb_sub_carrier_spacing,json=ssbSubCarrierSpacing,proto3,enum=e2sm_ccc.v1.SsbSubCarrierSpacing" json:"ssb_sub_carrier_spacing,omitempty" aper:"valueLB:0,valueUB:3,"`
	// @inject_tag: aper:"valueLB:0,valueUB:159,"
	SsbOffset int32 `protobuf:"varint,13,opt,name=ssb_offset,json=ssbOffset,proto3" json:"ssb_offset,omitempty" aper:"valueLB:0,valueUB:159,"`
	// @inject_tag: aper:"valueLB:0,valueUB:4,"
	SsbDuration SsbDuration `protobuf:"varint,14,opt,name=ssb_duration,json=ssbDuration,proto3,enum=e2sm_ccc.v1.SsbDuration" json:"ssb_duration,omitempty" aper:"valueLB:0,valueUB:4,"`
	// @inject_tag: aper:"valueLB:5,valueUB:400,"
	BSchannelBwUl int32 `protobuf:"varint,15,opt,name=b_schannel_bw_ul,json=bSChannelBwUL,proto3" json:"b_schannel_bw_ul,omitempty" aper:"valueLB:5,valueUB:400,"`
	// @inject_tag: aper:"valueLB:5,valueUB:400,"
	BSchannelBwSul int32    `protobuf:"varint,16,opt,name=b_schannel_bw_sul,json=bSChannelBwSUL,proto3" json:"b_schannel_bw_sul,omitempty" aper:"valueLB:5,valueUB:400,"`
	BwpList        *BwpList `protobuf:"bytes,17,opt,name=bwp_list,json=bwpList,proto3" json:"bwp_list,omitempty"`
}

func (x *ONrCellDu) Reset() {
	*x = ONrCellDu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ONrCellDu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ONrCellDu) ProtoMessage() {}

func (x *ONrCellDu) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ONrCellDu.ProtoReflect.Descriptor instead.
func (*ONrCellDu) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{49}
}

func (x *ONrCellDu) GetCellLocalId() *CellLocalId {
	if x != nil {
		return x.CellLocalId
	}
	return nil
}

func (x *ONrCellDu) GetCellState() CellState {
	if x != nil {
		return x.CellState
	}
	return CellState_CELL_STATE_IDLE
}

func (x *ONrCellDu) GetPlmnInfoList() *PlmnInfoList {
	if x != nil {
		return x.PlmnInfoList
	}
	return nil
}

func (x *ONrCellDu) GetNrPci() *NrPci {
	if x != nil {
		return x.NrPci
	}
	return nil
}

func (x *ONrCellDu) GetNrTac() *NrTac {
	if x != nil {
		return x.NrTac
	}
	return nil
}

func (x *ONrCellDu) GetArfcnDl() int32 {
	if x != nil {
		return x.ArfcnDl
	}
	return 0
}

func (x *ONrCellDu) GetArfcnUl() int32 {
	if x != nil {
		return x.ArfcnUl
	}
	return 0
}

func (x *ONrCellDu) GetArfcnSul() int32 {
	if x != nil {
		return x.ArfcnSul
	}
	return 0
}

func (x *ONrCellDu) GetBSchannelBwDl() int32 {
	if x != nil {
		return x.BSchannelBwDl
	}
	return 0
}

func (x *ONrCellDu) GetSsbFrequency() int32 {
	if x != nil {
		return x.SsbFrequency
	}
	return 0
}

func (x *ONrCellDu) GetSsbPeriodicity() SsbPeriodicity {
	if x != nil {
		return x.SsbPeriodicity
	}
	return SsbPeriodicity_SSB_PERIODICITY_N5
}

func (x *ONrCellDu) GetSsbSubCarrierSpacing() SsbSubCarrierSpacing {
	if x != nil {
		return x.SsbSubCarrierSpacing
	}
	return SsbSubCarrierSpacing_SSB_SUB_CARRIER_SPACING_N15
}

func (x *ONrCellDu) GetSsbOffset() int32 {
	if x != nil {
		return x.SsbOffset
	}
	return 0
}

func (x *ONrCellDu) GetSsbDuration() SsbDuration {
	if x != nil {
		return x.SsbDuration
	}
	return SsbDuration_SSB_DURATION_N1
}

func (x *ONrCellDu) GetBSchannelBwUl() int32 {
	if x != nil {
		return x.BSchannelBwUl
	}
	return 0
}

func (x *ONrCellDu) GetBSchannelBwSul() int32 {
	if x != nil {
		return x.BSchannelBwSul
	}
	return 0
}

func (x *ONrCellDu) GetBwpList() *BwpList {
	if x != nil {
		return x.BwpList
	}
	return nil
}

// sequence from e2sm_ccc.asn1:229
// {O-RRMPolicyRatio}
type ORRmpolicyRatio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:3,"
	ResourceType ResourceType `protobuf:"varint,1,opt,name=resource_type,json=resourceType,proto3,enum=e2sm_ccc.v1.ResourceType" json:"resource_type,omitempty" aper:"valueLB:0,valueUB:3,"`
	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:2,"
	SchedulerType       SchedulerType        `protobuf:"varint,2,opt,name=scheduler_type,json=schedulerType,proto3,enum=e2sm_ccc.v1.SchedulerType" json:"scheduler_type,omitempty" aper:"valueExt,valueLB:0,valueUB:2,"`
	RRmpolicyMemberList *RrmPolicyMemberList `protobuf:"bytes,3,opt,name=r_rmpolicy_member_list,json=rRMPolicyMemberList,proto3" json:"r_rmpolicy_member_list,omitempty"`
	// @inject_tag: aper:"valueLB:0,valueUB:100,"
	RRmpolicyMaxRatio int32 `protobuf:"varint,4,opt,name=r_rmpolicy_max_ratio,json=rRMPolicyMaxRatio,proto3" json:"r_rmpolicy_max_ratio,omitempty" aper:"valueLB:0,valueUB:100,"`
	// @inject_tag: aper:"valueLB:0,valueUB:100,"
	RRmpolicyMinRatio int32 `protobuf:"varint,5,opt,name=r_rmpolicy_min_ratio,json=rRMPolicyMinRatio,proto3" json:"r_rmpolicy_min_ratio,omitempty" aper:"valueLB:0,valueUB:100,"`
	// @inject_tag: aper:"valueLB:0,valueUB:100,"
	RRmpolicyDedicatedRatio int32 `protobuf:"varint,6,opt,name=r_rmpolicy_dedicated_ratio,json=rRMPolicyDedicatedRatio,proto3" json:"r_rmpolicy_dedicated_ratio,omitempty" aper:"valueLB:0,valueUB:100,"`
}

func (x *ORRmpolicyRatio) Reset() {
	*x = ORRmpolicyRatio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ORRmpolicyRatio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ORRmpolicyRatio) ProtoMessage() {}

func (x *ORRmpolicyRatio) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ORRmpolicyRatio.ProtoReflect.Descriptor instead.
func (*ORRmpolicyRatio) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{50}
}

func (x *ORRmpolicyRatio) GetResourceType() ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return ResourceType_RESOURCE_TYPE_PRB_UL
}

func (x *ORRmpolicyRatio) GetSchedulerType() SchedulerType {
	if x != nil {
		return x.SchedulerType
	}
	return SchedulerType_SCHEDULER_TYPE_ROUND_ROBIN
}

func (x *ORRmpolicyRatio) GetRRmpolicyMemberList() *RrmPolicyMemberList {
	if x != nil {
		return x.RRmpolicyMemberList
	}
	return nil
}

func (x *ORRmpolicyRatio) GetRRmpolicyMaxRatio() int32 {
	if x != nil {
		return x.RRmpolicyMaxRatio
	}
	return 0
}

func (x *ORRmpolicyRatio) GetRRmpolicyMinRatio() int32 {
	if x != nil {
		return x.RRmpolicyMinRatio
	}
	return 0
}

func (x *ORRmpolicyRatio) GetRRmpolicyDedicatedRatio() int32 {
	if x != nil {
		return x.RRmpolicyDedicatedRatio
	}
	return 0
}

// sequence from e2sm_ccc.asn1:238
// {O-Bwp}
type OBwp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:2,"
	BwpContext BwpContext `protobuf:"varint,1,opt,name=bwp_context,json=bwpContext,proto3,enum=e2sm_ccc.v1.BwpContext" json:"bwp_context,omitempty" aper:"valueLB:0,valueUB:2,"`
	// @inject_tag: aper:"valueLB:0,valueUB:1,"
	IsInitialBwp IsInitialBwp `protobuf:"varint,2,opt,name=is_initial_bwp,json=isInitialBwp,proto3,enum=e2sm_ccc.v1.IsInitialBwp" json:"is_initial_bwp,omitempty" aper:"valueLB:0,valueUB:1,"`
	// @inject_tag: aper:"valueLB:0,valueUB:3,"
	SubCarrierSpacing SubCarrierSpacing `protobuf:"varint,3,opt,name=sub_carrier_spacing,json=subCarrierSpacing,proto3,enum=e2sm_ccc.v1.SubCarrierSpacing" json:"sub_carrier_spacing,omitempty" aper:"valueLB:0,valueUB:3,"`
	// @inject_tag: aper:"valueLB:0,valueUB:1,"
	CyclicPrefix CyclicPrefix `protobuf:"varint,4,opt,name=cyclic_prefix,json=cyclicPrefix,proto3,enum=e2sm_ccc.v1.CyclicPrefix" json:"cyclic_prefix,omitempty" aper:"valueLB:0,valueUB:1,"`
	// @inject_tag: aper:"valueLB:0,valueUB:550,"
	StartRb int32 `protobuf:"varint,5,opt,name=start_rb,json=startRB,proto3" json:"start_rb,omitempty" aper:"valueLB:0,valueUB:550,"`
	// @inject_tag: aper:"valueLB:0,valueUB:550,"
	NumberOfRbs int32 `protobuf:"varint,6,opt,name=number_of_rbs,json=numberOfRBs,proto3" json:"number_of_rbs,omitempty" aper:"valueLB:0,valueUB:550,"`
}

func (x *OBwp) Reset() {
	*x = OBwp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OBwp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OBwp) ProtoMessage() {}

func (x *OBwp) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OBwp.ProtoReflect.Descriptor instead.
func (*OBwp) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{51}
}

func (x *OBwp) GetBwpContext() BwpContext {
	if x != nil {
		return x.BwpContext
	}
	return BwpContext_BWP_CONTEXT_DL
}

func (x *OBwp) GetIsInitialBwp() IsInitialBwp {
	if x != nil {
		return x.IsInitialBwp
	}
	return IsInitialBwp_IS_INITIAL_BWP_INITIAL
}

func (x *OBwp) GetSubCarrierSpacing() SubCarrierSpacing {
	if x != nil {
		return x.SubCarrierSpacing
	}
	return SubCarrierSpacing_SUB_CARRIER_SPACING_N15
}

func (x *OBwp) GetCyclicPrefix() CyclicPrefix {
	if x != nil {
		return x.CyclicPrefix
	}
	return CyclicPrefix_CYCLIC_PREFIX_NORMAL
}

func (x *OBwp) GetStartRb() int32 {
	if x != nil {
		return x.StartRb
	}
	return 0
}

func (x *OBwp) GetNumberOfRbs() int32 {
	if x != nil {
		return x.NumberOfRbs
	}
	return 0
}

// sequence from e2sm_ccc.asn1:249
// {RAN-Configuration-Structure}
type RanConfigurationStructure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_ccc.asn1:249
	//
	// Types that are assignable to RanConfigurationStructure:
	//	*RanConfigurationStructure_OGnbCuCpFunction
	//	*RanConfigurationStructure_OGnbCuUpFunction
	//	*RanConfigurationStructure_OGnbDuFunction
	//	*RanConfigurationStructure_ONrCellCu
	//	*RanConfigurationStructure_ONrCellDu
	//	*RanConfigurationStructure_ORrmpolicyRatio
	//	*RanConfigurationStructure_OBwp
	RanConfigurationStructure isRanConfigurationStructure_RanConfigurationStructure `protobuf_oneof:"ran_configuration_structure"`
}

func (x *RanConfigurationStructure) Reset() {
	*x = RanConfigurationStructure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanConfigurationStructure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanConfigurationStructure) ProtoMessage() {}

func (x *RanConfigurationStructure) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanConfigurationStructure.ProtoReflect.Descriptor instead.
func (*RanConfigurationStructure) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{52}
}

func (m *RanConfigurationStructure) GetRanConfigurationStructure() isRanConfigurationStructure_RanConfigurationStructure {
	if m != nil {
		return m.RanConfigurationStructure
	}
	return nil
}

func (x *RanConfigurationStructure) GetOGnbCuCpFunction() *OGnbCuCpFunction {
	if x, ok := x.GetRanConfigurationStructure().(*RanConfigurationStructure_OGnbCuCpFunction); ok {
		return x.OGnbCuCpFunction
	}
	return nil
}

func (x *RanConfigurationStructure) GetOGnbCuUpFunction() *OGnbCuUpFunction {
	if x, ok := x.GetRanConfigurationStructure().(*RanConfigurationStructure_OGnbCuUpFunction); ok {
		return x.OGnbCuUpFunction
	}
	return nil
}

func (x *RanConfigurationStructure) GetOGnbDuFunction() *OGnbDuFunction {
	if x, ok := x.GetRanConfigurationStructure().(*RanConfigurationStructure_OGnbDuFunction); ok {
		return x.OGnbDuFunction
	}
	return nil
}

func (x *RanConfigurationStructure) GetONrCellCu() *ONrCellCu {
	if x, ok := x.GetRanConfigurationStructure().(*RanConfigurationStructure_ONrCellCu); ok {
		return x.ONrCellCu
	}
	return nil
}

func (x *RanConfigurationStructure) GetONrCellDu() *ONrCellDu {
	if x, ok := x.GetRanConfigurationStructure().(*RanConfigurationStructure_ONrCellDu); ok {
		return x.ONrCellDu
	}
	return nil
}

func (x *RanConfigurationStructure) GetORrmpolicyRatio() *ORRmpolicyRatio {
	if x, ok := x.GetRanConfigurationStructure().(*RanConfigurationStructure_ORrmpolicyRatio); ok {
		return x.ORrmpolicyRatio
	}
	return nil
}

func (x *RanConfigurationStructure) GetOBwp() *OBwp {
	if x, ok := x.GetRanConfigurationStructure().(*RanConfigurationStructure_OBwp); ok {
		return x.OBwp
	}
	return nil
}

type isRanConfigurationStructure_RanConfigurationStructure interface {
	isRanConfigurationStructure_RanConfigurationStructure()
}

type RanConfigurationStructure_OGnbCuCpFunction struct {
	// @inject_tag: aper:"choiceIdx:1,"
	OGnbCuCpFunction *OGnbCuCpFunction `protobuf:"bytes,1,opt,name=o_gnb_cu_cp_function,json=o-GnbCuCpFunction,proto3,oneof" aper:"choiceIdx:1,"`
}

type RanConfigurationStructure_OGnbCuUpFunction struct {
	// @inject_tag: aper:"choiceIdx:2,"
	OGnbCuUpFunction *OGnbCuUpFunction `protobuf:"bytes,2,opt,name=o_gnb_cu_up_function,json=o-GnbCuUpFunction,proto3,oneof" aper:"choiceIdx:2,"`
}

type RanConfigurationStructure_OGnbDuFunction struct {
	// @inject_tag: aper:"choiceIdx:3,"
	OGnbDuFunction *OGnbDuFunction `protobuf:"bytes,3,opt,name=o_gnb_du_function,json=o-GnbDuFunction,proto3,oneof" aper:"choiceIdx:3,"`
}

type RanConfigurationStructure_ONrCellCu struct {
	// @inject_tag: aper:"choiceIdx:4,"
	ONrCellCu *ONrCellCu `protobuf:"bytes,4,opt,name=o_nr_cell_cu,json=o-NrCellCu,proto3,oneof" aper:"choiceIdx:4,"`
}

type RanConfigurationStructure_ONrCellDu struct {
	// @inject_tag: aper:"choiceIdx:5,"
	ONrCellDu *ONrCellDu `protobuf:"bytes,5,opt,name=o_nr_cell_du,json=o-NrCellDu,proto3,oneof" aper:"choiceIdx:5,"`
}

type RanConfigurationStructure_ORrmpolicyRatio struct {
	// @inject_tag: aper:"choiceIdx:6,"
	ORrmpolicyRatio *ORRmpolicyRatio `protobuf:"bytes,6,opt,name=o_rrmpolicy_ratio,json=o-RRMPolicyRatio,proto3,oneof" aper:"choiceIdx:6,"`
}

type RanConfigurationStructure_OBwp struct {
	// @inject_tag: aper:"choiceIdx:7,"
	OBwp *OBwp `protobuf:"bytes,7,opt,name=o_bwp,json=o-Bwp,proto3,oneof" aper:"choiceIdx:7,"`
}

func (*RanConfigurationStructure_OGnbCuCpFunction) isRanConfigurationStructure_RanConfigurationStructure() {
}

func (*RanConfigurationStructure_OGnbCuUpFunction) isRanConfigurationStructure_RanConfigurationStructure() {
}

func (*RanConfigurationStructure_OGnbDuFunction) isRanConfigurationStructure_RanConfigurationStructure() {
}

func (*RanConfigurationStructure_ONrCellCu) isRanConfigurationStructure_RanConfigurationStructure() {}

func (*RanConfigurationStructure_ONrCellDu) isRanConfigurationStructure_RanConfigurationStructure() {}

func (*RanConfigurationStructure_ORrmpolicyRatio) isRanConfigurationStructure_RanConfigurationStructure() {
}

func (*RanConfigurationStructure_OBwp) isRanConfigurationStructure_RanConfigurationStructure() {}

// sequence from e2sm_ccc.asn1:262
// {E2SM-CCC-RIC-Indication-Header}
type E2SmCCcRIcIndicationHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"choiceExt,"
	IndicationHeaderFormat *IndicationHeaderFormat `protobuf:"bytes,1,opt,name=indication_header_format,json=indicationHeaderFormat,proto3" json:"indication_header_format,omitempty" aper:"choiceExt,"`
}

func (x *E2SmCCcRIcIndicationHeader) Reset() {
	*x = E2SmCCcRIcIndicationHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmCCcRIcIndicationHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmCCcRIcIndicationHeader) ProtoMessage() {}

func (x *E2SmCCcRIcIndicationHeader) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmCCcRIcIndicationHeader.ProtoReflect.Descriptor instead.
func (*E2SmCCcRIcIndicationHeader) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{53}
}

func (x *E2SmCCcRIcIndicationHeader) GetIndicationHeaderFormat() *IndicationHeaderFormat {
	if x != nil {
		return x.IndicationHeaderFormat
	}
	return nil
}

// sequence from e2sm_ccc.asn1:265
// @inject_tag: aper:"choiceExt"
// {IndicationHeaderFormat}
type IndicationHeaderFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_ccc.asn1:265
	//
	// Types that are assignable to IndicationHeaderFormat:
	//	*IndicationHeaderFormat_E2SmCccIndicationHeaderFormat1
	IndicationHeaderFormat isIndicationHeaderFormat_IndicationHeaderFormat `protobuf_oneof:"indication_header_format"`
}

func (x *IndicationHeaderFormat) Reset() {
	*x = IndicationHeaderFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndicationHeaderFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndicationHeaderFormat) ProtoMessage() {}

func (x *IndicationHeaderFormat) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndicationHeaderFormat.ProtoReflect.Descriptor instead.
func (*IndicationHeaderFormat) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{54}
}

func (m *IndicationHeaderFormat) GetIndicationHeaderFormat() isIndicationHeaderFormat_IndicationHeaderFormat {
	if m != nil {
		return m.IndicationHeaderFormat
	}
	return nil
}

func (x *IndicationHeaderFormat) GetE2SmCccIndicationHeaderFormat1() *E2SmCCcIndicationHeaderFormat1 {
	if x, ok := x.GetIndicationHeaderFormat().(*IndicationHeaderFormat_E2SmCccIndicationHeaderFormat1); ok {
		return x.E2SmCccIndicationHeaderFormat1
	}
	return nil
}

type isIndicationHeaderFormat_IndicationHeaderFormat interface {
	isIndicationHeaderFormat_IndicationHeaderFormat()
}

type IndicationHeaderFormat_E2SmCccIndicationHeaderFormat1 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	E2SmCccIndicationHeaderFormat1 *E2SmCCcIndicationHeaderFormat1 `protobuf:"bytes,1,opt,name=e2_sm_ccc_indication_header_format1,json=e2SM-CCC-IndicationHeaderFormat1,proto3,oneof" aper:"choiceIdx:1,"`
}

func (*IndicationHeaderFormat_E2SmCccIndicationHeaderFormat1) isIndicationHeaderFormat_IndicationHeaderFormat() {
}

// sequence from e2sm_ccc.asn1:270
// {E2SM-CCC-IndicationHeaderFormat1}
type E2SmCCcIndicationHeaderFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:2,"
	IndicationReason IndicationReason `protobuf:"varint,1,opt,name=indication_reason,json=indicationReason,proto3,enum=e2sm_ccc.v1.IndicationReason" json:"indication_reason,omitempty" aper:"valueLB:0,valueUB:2,"`
	// @inject_tag: aper:"sizeLB:8,sizeUB:8,"
	EventTime []byte `protobuf:"bytes,2,opt,name=event_time,json=eventTime,proto3" json:"event_time,omitempty" aper:"sizeLB:8,sizeUB:8,"`
}

func (x *E2SmCCcIndicationHeaderFormat1) Reset() {
	*x = E2SmCCcIndicationHeaderFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmCCcIndicationHeaderFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmCCcIndicationHeaderFormat1) ProtoMessage() {}

func (x *E2SmCCcIndicationHeaderFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmCCcIndicationHeaderFormat1.ProtoReflect.Descriptor instead.
func (*E2SmCCcIndicationHeaderFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{55}
}

func (x *E2SmCCcIndicationHeaderFormat1) GetIndicationReason() IndicationReason {
	if x != nil {
		return x.IndicationReason
	}
	return IndicationReason_INDICATION_REASON_UPON_SUBSCRIPTION
}

func (x *E2SmCCcIndicationHeaderFormat1) GetEventTime() []byte {
	if x != nil {
		return x.EventTime
	}
	return nil
}

// sequence from e2sm_ccc.asn1:278
// {E2SM-CCC-RIC-Indication-Message}
type E2SmCCcRIcIndicationMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndicationMessageFormat *IndicationMessageFormat `protobuf:"bytes,1,opt,name=indication_message_format,json=indicationMessageFormat,proto3" json:"indication_message_format,omitempty"`
}

func (x *E2SmCCcRIcIndicationMessage) Reset() {
	*x = E2SmCCcRIcIndicationMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmCCcRIcIndicationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmCCcRIcIndicationMessage) ProtoMessage() {}

func (x *E2SmCCcRIcIndicationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmCCcRIcIndicationMessage.ProtoReflect.Descriptor instead.
func (*E2SmCCcRIcIndicationMessage) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{56}
}

func (x *E2SmCCcRIcIndicationMessage) GetIndicationMessageFormat() *IndicationMessageFormat {
	if x != nil {
		return x.IndicationMessageFormat
	}
	return nil
}

// sequence from e2sm_ccc.asn1:281
// {IndicationMessageFormat}
type IndicationMessageFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_ccc.asn1:281
	//
	// Types that are assignable to IndicationMessageFormat:
	//	*IndicationMessageFormat_E2SmCccIndicationMessageFormat1
	//	*IndicationMessageFormat_E2SmCccIndicationMessageFormat2
	IndicationMessageFormat isIndicationMessageFormat_IndicationMessageFormat `protobuf_oneof:"indication_message_format"`
}

func (x *IndicationMessageFormat) Reset() {
	*x = IndicationMessageFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndicationMessageFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndicationMessageFormat) ProtoMessage() {}

func (x *IndicationMessageFormat) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndicationMessageFormat.ProtoReflect.Descriptor instead.
func (*IndicationMessageFormat) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{57}
}

func (m *IndicationMessageFormat) GetIndicationMessageFormat() isIndicationMessageFormat_IndicationMessageFormat {
	if m != nil {
		return m.IndicationMessageFormat
	}
	return nil
}

func (x *IndicationMessageFormat) GetE2SmCccIndicationMessageFormat1() *E2SmCCcIndicationMessageFormat1 {
	if x, ok := x.GetIndicationMessageFormat().(*IndicationMessageFormat_E2SmCccIndicationMessageFormat1); ok {
		return x.E2SmCccIndicationMessageFormat1
	}
	return nil
}

func (x *IndicationMessageFormat) GetE2SmCccIndicationMessageFormat2() *E2SmCCcIndicationMessageFormat2 {
	if x, ok := x.GetIndicationMessageFormat().(*IndicationMessageFormat_E2SmCccIndicationMessageFormat2); ok {
		return x.E2SmCccIndicationMessageFormat2
	}
	return nil
}

type isIndicationMessageFormat_IndicationMessageFormat interface {
	isIndicationMessageFormat_IndicationMessageFormat()
}

type IndicationMessageFormat_E2SmCccIndicationMessageFormat1 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	E2SmCccIndicationMessageFormat1 *E2SmCCcIndicationMessageFormat1 `protobuf:"bytes,1,opt,name=e2_sm_ccc_indication_message_format1,json=e2SM-CCC-IndicationMessageFormat1,proto3,oneof" aper:"choiceIdx:1,"`
}

type IndicationMessageFormat_E2SmCccIndicationMessageFormat2 struct {
	// @inject_tag: aper:"choiceIdx:2,"
	E2SmCccIndicationMessageFormat2 *E2SmCCcIndicationMessageFormat2 `protobuf:"bytes,2,opt,name=e2_sm_ccc_indication_message_format2,json=e2SM-CCC-IndicationMessageFormat2,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*IndicationMessageFormat_E2SmCccIndicationMessageFormat1) isIndicationMessageFormat_IndicationMessageFormat() {
}

func (*IndicationMessageFormat_E2SmCccIndicationMessageFormat2) isIndicationMessageFormat_IndicationMessageFormat() {
}

// sequence from e2sm_ccc.asn1:287
// {E2SM-CCC-IndicationMessageFormat1}
type E2SmCCcIndicationMessageFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListOfConfigurationStructuresReported *ListOfConfigurationsReported `protobuf:"bytes,1,opt,name=list_of_configuration_structures_reported,json=listOfConfigurationStructuresReported,proto3" json:"list_of_configuration_structures_reported,omitempty"`
}

func (x *E2SmCCcIndicationMessageFormat1) Reset() {
	*x = E2SmCCcIndicationMessageFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmCCcIndicationMessageFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmCCcIndicationMessageFormat1) ProtoMessage() {}

func (x *E2SmCCcIndicationMessageFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmCCcIndicationMessageFormat1.ProtoReflect.Descriptor instead.
func (*E2SmCCcIndicationMessageFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{58}
}

func (x *E2SmCCcIndicationMessageFormat1) GetListOfConfigurationStructuresReported() *ListOfConfigurationsReported {
	if x != nil {
		return x.ListOfConfigurationStructuresReported
	}
	return nil
}

// sequence from e2sm_ccc.asn1:291
// {ListOfConfigurationsReported}
type ListOfConfigurationsReported struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:65535,"
	Value []*ConfigurationStructure `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:65535,"`
}

func (x *ListOfConfigurationsReported) Reset() {
	*x = ListOfConfigurationsReported{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOfConfigurationsReported) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfConfigurationsReported) ProtoMessage() {}

func (x *ListOfConfigurationsReported) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOfConfigurationsReported.ProtoReflect.Descriptor instead.
func (*ListOfConfigurationsReported) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{59}
}

func (x *ListOfConfigurationsReported) GetValue() []*ConfigurationStructure {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_ccc.asn1:292
// {ConfigurationStructure}
type ConfigurationStructure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:3,"
	ChangeType                    ChangeType                     `protobuf:"varint,1,opt,name=change_type,json=changeType,proto3,enum=e2sm_ccc.v1.ChangeType" json:"change_type,omitempty" aper:"valueLB:0,valueUB:3,"`
	RanConfigurationStructureName *RanConfigurationStructureName `protobuf:"bytes,2,opt,name=ran_configuration_structure_name,json=ranConfigurationStructureName,proto3" json:"ran_configuration_structure_name,omitempty"`
	ValuesOfAttributes            *ValuesOfAttributes            `protobuf:"bytes,3,opt,name=values_of_attributes,json=valuesOfAttributes,proto3" json:"values_of_attributes,omitempty"`
	// @inject_tag: aper:"optional,"
	OldValuesOfAttributes *ValuesOfAttributes `protobuf:"bytes,4,opt,name=old_values_of_attributes,json=oldValuesOfAttributes,proto3,oneof" json:"old_values_of_attributes,omitempty" aper:"optional,"`
}

func (x *ConfigurationStructure) Reset() {
	*x = ConfigurationStructure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationStructure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationStructure) ProtoMessage() {}

func (x *ConfigurationStructure) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationStructure.ProtoReflect.Descriptor instead.
func (*ConfigurationStructure) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{60}
}

func (x *ConfigurationStructure) GetChangeType() ChangeType {
	if x != nil {
		return x.ChangeType
	}
	return ChangeType_CHANGE_TYPE_NONE
}

func (x *ConfigurationStructure) GetRanConfigurationStructureName() *RanConfigurationStructureName {
	if x != nil {
		return x.RanConfigurationStructureName
	}
	return nil
}

func (x *ConfigurationStructure) GetValuesOfAttributes() *ValuesOfAttributes {
	if x != nil {
		return x.ValuesOfAttributes
	}
	return nil
}

func (x *ConfigurationStructure) GetOldValuesOfAttributes() *ValuesOfAttributes {
	if x != nil {
		return x.OldValuesOfAttributes
	}
	return nil
}

// range of Integer from e2sm_ccc.asn1:306
// {RanConfigurationStructureName}
type RanConfigurationStructureName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:5,sizeUB:17,"
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:5,sizeUB:17,"`
}

func (x *RanConfigurationStructureName) Reset() {
	*x = RanConfigurationStructureName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanConfigurationStructureName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanConfigurationStructureName) ProtoMessage() {}

func (x *RanConfigurationStructureName) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanConfigurationStructureName.ProtoReflect.Descriptor instead.
func (*RanConfigurationStructureName) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{61}
}

func (x *RanConfigurationStructureName) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_ccc.asn1:310
// {ValuesOfAttributes}
type ValuesOfAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RanConfigurationStructure *RanConfigurationStructure `protobuf:"bytes,1,opt,name=ran_configuration_structure,json=ranConfigurationStructure,proto3" json:"ran_configuration_structure,omitempty"`
}

func (x *ValuesOfAttributes) Reset() {
	*x = ValuesOfAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValuesOfAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValuesOfAttributes) ProtoMessage() {}

func (x *ValuesOfAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValuesOfAttributes.ProtoReflect.Descriptor instead.
func (*ValuesOfAttributes) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{62}
}

func (x *ValuesOfAttributes) GetRanConfigurationStructure() *RanConfigurationStructure {
	if x != nil {
		return x.RanConfigurationStructure
	}
	return nil
}

// sequence from e2sm_ccc.asn1:314
// {E2SM-CCC-IndicationMessageFormat2}
type E2SmCCcIndicationMessageFormat2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListOfCellsReported *ListOfCellsReported `protobuf:"bytes,1,opt,name=list_of_cells_reported,json=listOfCellsReported,proto3" json:"list_of_cells_reported,omitempty"`
}

func (x *E2SmCCcIndicationMessageFormat2) Reset() {
	*x = E2SmCCcIndicationMessageFormat2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmCCcIndicationMessageFormat2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmCCcIndicationMessageFormat2) ProtoMessage() {}

func (x *E2SmCCcIndicationMessageFormat2) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmCCcIndicationMessageFormat2.ProtoReflect.Descriptor instead.
func (*E2SmCCcIndicationMessageFormat2) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{63}
}

func (x *E2SmCCcIndicationMessageFormat2) GetListOfCellsReported() *ListOfCellsReported {
	if x != nil {
		return x.ListOfCellsReported
	}
	return nil
}

// sequence from e2sm_ccc.asn1:318
// {ListOfCellsReported}
type ListOfCellsReported struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:65535,"
	Value []*CellReported `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:65535,"`
}

func (x *ListOfCellsReported) Reset() {
	*x = ListOfCellsReported{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOfCellsReported) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfCellsReported) ProtoMessage() {}

func (x *ListOfCellsReported) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOfCellsReported.ProtoReflect.Descriptor instead.
func (*ListOfCellsReported) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{64}
}

func (x *ListOfCellsReported) GetValue() []*CellReported {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_ccc.asn1:319
// {CellReported}
type CellReported struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellGlobalId                          *CellGlobalId                 `protobuf:"bytes,1,opt,name=cell_global_id,json=cellGlobalId,proto3" json:"cell_global_id,omitempty"`
	ListOfConfigurationStructuresReported *ListOfConfigurationsReported `protobuf:"bytes,2,opt,name=list_of_configuration_structures_reported,json=listOfConfigurationStructuresReported,proto3" json:"list_of_configuration_structures_reported,omitempty"`
}

func (x *CellReported) Reset() {
	*x = CellReported{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellReported) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellReported) ProtoMessage() {}

func (x *CellReported) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellReported.ProtoReflect.Descriptor instead.
func (*CellReported) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{65}
}

func (x *CellReported) GetCellGlobalId() *CellGlobalId {
	if x != nil {
		return x.CellGlobalId
	}
	return nil
}

func (x *CellReported) GetListOfConfigurationStructuresReported() *ListOfConfigurationsReported {
	if x != nil {
		return x.ListOfConfigurationStructuresReported
	}
	return nil
}

// sequence from e2sm_ccc.asn1:324
// {CellGlobalId}
type CellGlobalId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_ccc.asn1:324
	//
	// Types that are assignable to CellGlobalId:
	//	*CellGlobalId_NRCgi
	//	*CellGlobalId_EUtraCgi
	CellGlobalId isCellGlobalId_CellGlobalId `protobuf_oneof:"cell_global_id"`
}

func (x *CellGlobalId) Reset() {
	*x = CellGlobalId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellGlobalId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellGlobalId) ProtoMessage() {}

func (x *CellGlobalId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellGlobalId.ProtoReflect.Descriptor instead.
func (*CellGlobalId) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{66}
}

func (m *CellGlobalId) GetCellGlobalId() isCellGlobalId_CellGlobalId {
	if m != nil {
		return m.CellGlobalId
	}
	return nil
}

func (x *CellGlobalId) GetNRCgi() *e2sm_common_ies.NrCGi {
	if x, ok := x.GetCellGlobalId().(*CellGlobalId_NRCgi); ok {
		return x.NRCgi
	}
	return nil
}

func (x *CellGlobalId) GetEUtraCgi() *e2sm_common_ies.EutraCGi {
	if x, ok := x.GetCellGlobalId().(*CellGlobalId_EUtraCgi); ok {
		return x.EUtraCgi
	}
	return nil
}

type isCellGlobalId_CellGlobalId interface {
	isCellGlobalId_CellGlobalId()
}

type CellGlobalId_NRCgi struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt,"
	NRCgi *e2sm_common_ies.NrCGi `protobuf:"bytes,1,opt,name=n_r_cgi,json=nR-CGI,proto3,oneof" aper:"choiceIdx:1,valueExt,"`
}

type CellGlobalId_EUtraCgi struct {
	// @inject_tag: aper:"choiceIdx:2,valueExt,"
	EUtraCgi *e2sm_common_ies.EutraCGi `protobuf:"bytes,2,opt,name=e_utra_cgi,json=eUTRA-CGI,proto3,oneof" aper:"choiceIdx:2,valueExt,"`
}

func (*CellGlobalId_NRCgi) isCellGlobalId_CellGlobalId() {}

func (*CellGlobalId_EUtraCgi) isCellGlobalId_CellGlobalId() {}

// sequence from e2sm_ccc.asn1:332
// {E2SM-CCC-RIC-Control-Header}
type E2SmCCcRIcControlHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"choiceExt,"
	ControlHeaderFormat *ControlHeaderFormat `protobuf:"bytes,1,opt,name=control_header_format,json=controlHeaderFormat,proto3" json:"control_header_format,omitempty" aper:"choiceExt,"`
}

func (x *E2SmCCcRIcControlHeader) Reset() {
	*x = E2SmCCcRIcControlHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmCCcRIcControlHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmCCcRIcControlHeader) ProtoMessage() {}

func (x *E2SmCCcRIcControlHeader) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmCCcRIcControlHeader.ProtoReflect.Descriptor instead.
func (*E2SmCCcRIcControlHeader) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{67}
}

func (x *E2SmCCcRIcControlHeader) GetControlHeaderFormat() *ControlHeaderFormat {
	if x != nil {
		return x.ControlHeaderFormat
	}
	return nil
}

// sequence from e2sm_ccc.asn1:335
// @inject_tag: aper:"choiceExt"
// {ControlHeaderFormat}
type ControlHeaderFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_ccc.asn1:335
	//
	// Types that are assignable to ControlHeaderFormat:
	//	*ControlHeaderFormat_E2SmCccControlHeaderFormat1
	ControlHeaderFormat isControlHeaderFormat_ControlHeaderFormat `protobuf_oneof:"control_header_format"`
}

func (x *ControlHeaderFormat) Reset() {
	*x = ControlHeaderFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlHeaderFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlHeaderFormat) ProtoMessage() {}

func (x *ControlHeaderFormat) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlHeaderFormat.ProtoReflect.Descriptor instead.
func (*ControlHeaderFormat) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{68}
}

func (m *ControlHeaderFormat) GetControlHeaderFormat() isControlHeaderFormat_ControlHeaderFormat {
	if m != nil {
		return m.ControlHeaderFormat
	}
	return nil
}

func (x *ControlHeaderFormat) GetE2SmCccControlHeaderFormat1() *E2SmCCcControlHeaderFormat1 {
	if x, ok := x.GetControlHeaderFormat().(*ControlHeaderFormat_E2SmCccControlHeaderFormat1); ok {
		return x.E2SmCccControlHeaderFormat1
	}
	return nil
}

type isControlHeaderFormat_ControlHeaderFormat interface {
	isControlHeaderFormat_ControlHeaderFormat()
}

type ControlHeaderFormat_E2SmCccControlHeaderFormat1 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	E2SmCccControlHeaderFormat1 *E2SmCCcControlHeaderFormat1 `protobuf:"bytes,1,opt,name=e2_sm_ccc_control_header_format1,json=e2SM-CCC-ControlHeaderFormat1,proto3,oneof" aper:"choiceIdx:1,"`
}

func (*ControlHeaderFormat_E2SmCccControlHeaderFormat1) isControlHeaderFormat_ControlHeaderFormat() {}

// sequence from e2sm_ccc.asn1:341
// {E2SM-CCC-ControlHeaderFormat1}
type E2SmCCcControlHeaderFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicStyleType *e2sm_common_ies.RicStyleType `protobuf:"bytes,1,opt,name=ric_style_type,json=ricStyleType,proto3" json:"ric_style_type,omitempty"`
}

func (x *E2SmCCcControlHeaderFormat1) Reset() {
	*x = E2SmCCcControlHeaderFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmCCcControlHeaderFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmCCcControlHeaderFormat1) ProtoMessage() {}

func (x *E2SmCCcControlHeaderFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmCCcControlHeaderFormat1.ProtoReflect.Descriptor instead.
func (*E2SmCCcControlHeaderFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{69}
}

func (x *E2SmCCcControlHeaderFormat1) GetRicStyleType() *e2sm_common_ies.RicStyleType {
	if x != nil {
		return x.RicStyleType
	}
	return nil
}

// sequence from e2sm_ccc.asn1:347
// {E2SM-CCC-RIC-Control-Message}
type E2SmCCcRIcControlMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControlMessageFormat *ControlMessageFormat `protobuf:"bytes,1,opt,name=control_message_format,json=controlMessageFormat,proto3" json:"control_message_format,omitempty"`
}

func (x *E2SmCCcRIcControlMessage) Reset() {
	*x = E2SmCCcRIcControlMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmCCcRIcControlMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmCCcRIcControlMessage) ProtoMessage() {}

func (x *E2SmCCcRIcControlMessage) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmCCcRIcControlMessage.ProtoReflect.Descriptor instead.
func (*E2SmCCcRIcControlMessage) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{70}
}

func (x *E2SmCCcRIcControlMessage) GetControlMessageFormat() *ControlMessageFormat {
	if x != nil {
		return x.ControlMessageFormat
	}
	return nil
}

// sequence from e2sm_ccc.asn1:350
// {ControlMessageFormat}
type ControlMessageFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_ccc.asn1:350
	//
	// Types that are assignable to ControlMessageFormat:
	//	*ControlMessageFormat_E2SmCccControlMessageFormat1
	//	*ControlMessageFormat_E2SmCccControlMessageFormat2
	ControlMessageFormat isControlMessageFormat_ControlMessageFormat `protobuf_oneof:"control_message_format"`
}

func (x *ControlMessageFormat) Reset() {
	*x = ControlMessageFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlMessageFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlMessageFormat) ProtoMessage() {}

func (x *ControlMessageFormat) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlMessageFormat.ProtoReflect.Descriptor instead.
func (*ControlMessageFormat) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{71}
}

func (m *ControlMessageFormat) GetControlMessageFormat() isControlMessageFormat_ControlMessageFormat {
	if m != nil {
		return m.ControlMessageFormat
	}
	return nil
}

func (x *ControlMessageFormat) GetE2SmCccControlMessageFormat1() *E2SmCCcControlMessageFormat1 {
	if x, ok := x.GetControlMessageFormat().(*ControlMessageFormat_E2SmCccControlMessageFormat1); ok {
		return x.E2SmCccControlMessageFormat1
	}
	return nil
}

func (x *ControlMessageFormat) GetE2SmCccControlMessageFormat2() *E2SmCCcControlMessageFormat2 {
	if x, ok := x.GetControlMessageFormat().(*ControlMessageFormat_E2SmCccControlMessageFormat2); ok {
		return x.E2SmCccControlMessageFormat2
	}
	return nil
}

type isControlMessageFormat_ControlMessageFormat interface {
	isControlMessageFormat_ControlMessageFormat()
}

type ControlMessageFormat_E2SmCccControlMessageFormat1 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	E2SmCccControlMessageFormat1 *E2SmCCcControlMessageFormat1 `protobuf:"bytes,1,opt,name=e2_sm_ccc_control_message_format1,json=e2SM-CCC-ControlMessageFormat1,proto3,oneof" aper:"choiceIdx:1,"`
}

type ControlMessageFormat_E2SmCccControlMessageFormat2 struct {
	// @inject_tag: aper:"choiceIdx:2,"
	E2SmCccControlMessageFormat2 *E2SmCCcControlMessageFormat2 `protobuf:"bytes,2,opt,name=e2_sm_ccc_control_message_format2,json=e2SM-CCC-ControlMessageFormat2,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*ControlMessageFormat_E2SmCccControlMessageFormat1) isControlMessageFormat_ControlMessageFormat() {
}

func (*ControlMessageFormat_E2SmCccControlMessageFormat2) isControlMessageFormat_ControlMessageFormat() {
}

// sequence from e2sm_ccc.asn1:356
// {E2SM-CCC-ControlMessageFormat1}
type E2SmCCcControlMessageFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListOfConfigurationStructures *ListOfConfigurationStructures `protobuf:"bytes,1,opt,name=list_of_configuration_structures,json=listOfConfigurationStructures,proto3" json:"list_of_configuration_structures,omitempty"`
}

func (x *E2SmCCcControlMessageFormat1) Reset() {
	*x = E2SmCCcControlMessageFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmCCcControlMessageFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmCCcControlMessageFormat1) ProtoMessage() {}

func (x *E2SmCCcControlMessageFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmCCcControlMessageFormat1.ProtoReflect.Descriptor instead.
func (*E2SmCCcControlMessageFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{72}
}

func (x *E2SmCCcControlMessageFormat1) GetListOfConfigurationStructures() *ListOfConfigurationStructures {
	if x != nil {
		return x.ListOfConfigurationStructures
	}
	return nil
}

// sequence from e2sm_ccc.asn1:360
// {ListOfConfigurationStructures}
type ListOfConfigurationStructures struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:65535,"
	Value []*ConfigurationStructureWrite `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:65535,"`
}

func (x *ListOfConfigurationStructures) Reset() {
	*x = ListOfConfigurationStructures{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOfConfigurationStructures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfConfigurationStructures) ProtoMessage() {}

func (x *ListOfConfigurationStructures) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOfConfigurationStructures.ProtoReflect.Descriptor instead.
func (*ListOfConfigurationStructures) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{73}
}

func (x *ListOfConfigurationStructures) GetValue() []*ConfigurationStructureWrite {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_ccc.asn1:361
// {ConfigurationStructureWrite}
type ConfigurationStructureWrite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RanConfigurationStructureName *RanConfigurationStructureName `protobuf:"bytes,1,opt,name=ran_configuration_structure_name,json=ranConfigurationStructureName,proto3" json:"ran_configuration_structure_name,omitempty"`
	OldValuesOfAttributes         *ValuesOfAttributes            `protobuf:"bytes,2,opt,name=old_values_of_attributes,json=oldValuesOfAttributes,proto3" json:"old_values_of_attributes,omitempty"`
	NewValuesOfAttributes         *ValuesOfAttributes            `protobuf:"bytes,3,opt,name=new_values_of_attributes,json=newValuesOfAttributes,proto3" json:"new_values_of_attributes,omitempty"`
}

func (x *ConfigurationStructureWrite) Reset() {
	*x = ConfigurationStructureWrite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationStructureWrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationStructureWrite) ProtoMessage() {}

func (x *ConfigurationStructureWrite) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationStructureWrite.ProtoReflect.Descriptor instead.
func (*ConfigurationStructureWrite) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{74}
}

func (x *ConfigurationStructureWrite) GetRanConfigurationStructureName() *RanConfigurationStructureName {
	if x != nil {
		return x.RanConfigurationStructureName
	}
	return nil
}

func (x *ConfigurationStructureWrite) GetOldValuesOfAttributes() *ValuesOfAttributes {
	if x != nil {
		return x.OldValuesOfAttributes
	}
	return nil
}

func (x *ConfigurationStructureWrite) GetNewValuesOfAttributes() *ValuesOfAttributes {
	if x != nil {
		return x.NewValuesOfAttributes
	}
	return nil
}

// sequence from e2sm_ccc.asn1:368
// {E2SM-CCC-ControlMessageFormat2}
type E2SmCCcControlMessageFormat2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListOfCellsReported *ListOfCells `protobuf:"bytes,1,opt,name=list_of_cells_reported,json=listOfCellsReported,proto3" json:"list_of_cells_reported,omitempty"`
}

func (x *E2SmCCcControlMessageFormat2) Reset() {
	*x = E2SmCCcControlMessageFormat2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmCCcControlMessageFormat2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmCCcControlMessageFormat2) ProtoMessage() {}

func (x *E2SmCCcControlMessageFormat2) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmCCcControlMessageFormat2.ProtoReflect.Descriptor instead.
func (*E2SmCCcControlMessageFormat2) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{75}
}

func (x *E2SmCCcControlMessageFormat2) GetListOfCellsReported() *ListOfCells {
	if x != nil {
		return x.ListOfCellsReported
	}
	return nil
}

// sequence from e2sm_ccc.asn1:372
// {ListOfCells}
type ListOfCells struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:65535,"
	Value []*CellControlled `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:65535,"`
}

func (x *ListOfCells) Reset() {
	*x = ListOfCells{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOfCells) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfCells) ProtoMessage() {}

func (x *ListOfCells) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOfCells.ProtoReflect.Descriptor instead.
func (*ListOfCells) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{76}
}

func (x *ListOfCells) GetValue() []*CellControlled {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_ccc.asn1:373
// {CellControlled}
type CellControlled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellGlobalId                  *CellGlobalId                  `protobuf:"bytes,1,opt,name=cell_global_id,json=cellGlobalId,proto3" json:"cell_global_id,omitempty"`
	ListOfConfigurationStructures *ListOfConfigurationStructures `protobuf:"bytes,2,opt,name=list_of_configuration_structures,json=listOfConfigurationStructures,proto3" json:"list_of_configuration_structures,omitempty"`
}

func (x *CellControlled) Reset() {
	*x = CellControlled{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellControlled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellControlled) ProtoMessage() {}

func (x *CellControlled) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellControlled.ProtoReflect.Descriptor instead.
func (*CellControlled) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{77}
}

func (x *CellControlled) GetCellGlobalId() *CellGlobalId {
	if x != nil {
		return x.CellGlobalId
	}
	return nil
}

func (x *CellControlled) GetListOfConfigurationStructures() *ListOfConfigurationStructures {
	if x != nil {
		return x.ListOfConfigurationStructures
	}
	return nil
}

// sequence from e2sm_ccc.asn1:380
// {E2SM-CCC-RANFunctionDefinition}
type E2SmCCcRAnfunctionDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,"
	RanFunctionName *e2sm_common_ies.RanfunctionName `protobuf:"bytes,1,opt,name=ran_function_name,json=ranFunctionName,proto3" json:"ran_function_name,omitempty" aper:"valueExt,"`
	// @inject_tag: aper:"optional,"
	ListOfSupportedNodeLevelConfigurationStructures *ListOfSupportedRanconfigurationStructures `protobuf:"bytes,2,opt,name=list_of_supported_node_level_configuration_structures,json=listOfSupportedNodeLevelConfigurationStructures,proto3,oneof" json:"list_of_supported_node_level_configuration_structures,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	ListOfCellsForRanfunctionDefinition *ListOfCellsForRanfunctionDefinition `protobuf:"bytes,3,opt,name=list_of_cells_for_ranfunction_definition,json=listOfCellsForRANFunctionDefinition,proto3,oneof" json:"list_of_cells_for_ranfunction_definition,omitempty" aper:"optional,"`
}

func (x *E2SmCCcRAnfunctionDefinition) Reset() {
	*x = E2SmCCcRAnfunctionDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmCCcRAnfunctionDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmCCcRAnfunctionDefinition) ProtoMessage() {}

func (x *E2SmCCcRAnfunctionDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmCCcRAnfunctionDefinition.ProtoReflect.Descriptor instead.
func (*E2SmCCcRAnfunctionDefinition) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{78}
}

func (x *E2SmCCcRAnfunctionDefinition) GetRanFunctionName() *e2sm_common_ies.RanfunctionName {
	if x != nil {
		return x.RanFunctionName
	}
	return nil
}

func (x *E2SmCCcRAnfunctionDefinition) GetListOfSupportedNodeLevelConfigurationStructures() *ListOfSupportedRanconfigurationStructures {
	if x != nil {
		return x.ListOfSupportedNodeLevelConfigurationStructures
	}
	return nil
}

func (x *E2SmCCcRAnfunctionDefinition) GetListOfCellsForRanfunctionDefinition() *ListOfCellsForRanfunctionDefinition {
	if x != nil {
		return x.ListOfCellsForRanfunctionDefinition
	}
	return nil
}

// sequence from e2sm_ccc.asn1:387
// {ListOfSupportedRANConfigurationStructures}
type ListOfSupportedRanconfigurationStructures struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:0,sizeUB:1024,"
	Value []*RanconfigurationStructure `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:0,sizeUB:1024,"`
}

func (x *ListOfSupportedRanconfigurationStructures) Reset() {
	*x = ListOfSupportedRanconfigurationStructures{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOfSupportedRanconfigurationStructures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfSupportedRanconfigurationStructures) ProtoMessage() {}

func (x *ListOfSupportedRanconfigurationStructures) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOfSupportedRanconfigurationStructures.ProtoReflect.Descriptor instead.
func (*ListOfSupportedRanconfigurationStructures) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{79}
}

func (x *ListOfSupportedRanconfigurationStructures) GetValue() []*RanconfigurationStructure {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_ccc.asn1:388
// {RANConfigurationStructure}
type RanconfigurationStructure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RanConfigurationStructureName *RanConfigurationStructureName `protobuf:"bytes,1,opt,name=ran_configuration_structure_name,json=ranConfigurationStructureName,proto3" json:"ran_configuration_structure_name,omitempty"`
	// @inject_tag: aper:"optional,"
	ListOfSupportedAttributes *ListOfSupportedAttributes `protobuf:"bytes,2,opt,name=list_of_supported_attributes,json=listOfSupportedAttributes,proto3,oneof" json:"list_of_supported_attributes,omitempty" aper:"optional,"`
}

func (x *RanconfigurationStructure) Reset() {
	*x = RanconfigurationStructure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanconfigurationStructure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanconfigurationStructure) ProtoMessage() {}

func (x *RanconfigurationStructure) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanconfigurationStructure.ProtoReflect.Descriptor instead.
func (*RanconfigurationStructure) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{80}
}

func (x *RanconfigurationStructure) GetRanConfigurationStructureName() *RanConfigurationStructureName {
	if x != nil {
		return x.RanConfigurationStructureName
	}
	return nil
}

func (x *RanconfigurationStructure) GetListOfSupportedAttributes() *ListOfSupportedAttributes {
	if x != nil {
		return x.ListOfSupportedAttributes
	}
	return nil
}

// sequence from e2sm_ccc.asn1:394
// {ListOfSupportedAttributes}
type ListOfSupportedAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:0,sizeUB:65535,"
	Value []*Attribute `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:0,sizeUB:65535,"`
}

func (x *ListOfSupportedAttributes) Reset() {
	*x = ListOfSupportedAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOfSupportedAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfSupportedAttributes) ProtoMessage() {}

func (x *ListOfSupportedAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOfSupportedAttributes.ProtoReflect.Descriptor instead.
func (*ListOfSupportedAttributes) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{81}
}

func (x *ListOfSupportedAttributes) GetValue() []*Attribute {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_ccc.asn1:395
// {Attribute}
type Attribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttributeName     *AttributeName `protobuf:"bytes,1,opt,name=attribute_name,json=attributeName,proto3" json:"attribute_name,omitempty"`
	SupportedServices *Ricservices   `protobuf:"bytes,2,opt,name=supported_services,json=supportedServices,proto3" json:"supported_services,omitempty"`
}

func (x *Attribute) Reset() {
	*x = Attribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute) ProtoMessage() {}

func (x *Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute.ProtoReflect.Descriptor instead.
func (*Attribute) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{82}
}

func (x *Attribute) GetAttributeName() *AttributeName {
	if x != nil {
		return x.AttributeName
	}
	return nil
}

func (x *Attribute) GetSupportedServices() *Ricservices {
	if x != nil {
		return x.SupportedServices
	}
	return nil
}

// sequence from e2sm_ccc.asn1:400
// {RICServices}
type Ricservices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,"
	EventTrigger *EventTrigger `protobuf:"bytes,1,opt,name=event_trigger,json=eventTrigger,proto3,oneof" json:"event_trigger,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	ReportService *ReportService `protobuf:"bytes,2,opt,name=report_service,json=reportService,proto3,oneof" json:"report_service,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,valueExt,"
	InsertService *InsertService `protobuf:"bytes,3,opt,name=insert_service,json=insertService,proto3,oneof" json:"insert_service,omitempty" aper:"optional,valueExt,"`
	// @inject_tag: aper:"optional,"
	ControlService *ControlService `protobuf:"bytes,4,opt,name=control_service,json=controlService,proto3,oneof" json:"control_service,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,valueExt,"
	PolicyService *PolicyService `protobuf:"bytes,5,opt,name=policy_service,json=policyService,proto3,oneof" json:"policy_service,omitempty" aper:"optional,valueExt,"`
}

func (x *Ricservices) Reset() {
	*x = Ricservices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ricservices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ricservices) ProtoMessage() {}

func (x *Ricservices) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ricservices.ProtoReflect.Descriptor instead.
func (*Ricservices) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{83}
}

func (x *Ricservices) GetEventTrigger() *EventTrigger {
	if x != nil {
		return x.EventTrigger
	}
	return nil
}

func (x *Ricservices) GetReportService() *ReportService {
	if x != nil {
		return x.ReportService
	}
	return nil
}

func (x *Ricservices) GetInsertService() *InsertService {
	if x != nil {
		return x.InsertService
	}
	return nil
}

func (x *Ricservices) GetControlService() *ControlService {
	if x != nil {
		return x.ControlService
	}
	return nil
}

func (x *Ricservices) GetPolicyService() *PolicyService {
	if x != nil {
		return x.PolicyService
	}
	return nil
}

// sequence from e2sm_ccc.asn1:409
// {EventTrigger}
type EventTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListOfSupportedEventTriggerStyles *ListOfSupportedEventTriggerStyles `protobuf:"bytes,1,opt,name=list_of_supported_event_trigger_styles,json=listOfSupportedEventTriggerStyles,proto3" json:"list_of_supported_event_trigger_styles,omitempty"`
}

func (x *EventTrigger) Reset() {
	*x = EventTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventTrigger) ProtoMessage() {}

func (x *EventTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventTrigger.ProtoReflect.Descriptor instead.
func (*EventTrigger) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{84}
}

func (x *EventTrigger) GetListOfSupportedEventTriggerStyles() *ListOfSupportedEventTriggerStyles {
	if x != nil {
		return x.ListOfSupportedEventTriggerStyles
	}
	return nil
}

// sequence from e2sm_ccc.asn1:413
// {ListOfSupportedEventTriggerStyles}
type ListOfSupportedEventTriggerStyles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:63,"
	Value []*EventTriggerStyle `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:63,"`
}

func (x *ListOfSupportedEventTriggerStyles) Reset() {
	*x = ListOfSupportedEventTriggerStyles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOfSupportedEventTriggerStyles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfSupportedEventTriggerStyles) ProtoMessage() {}

func (x *ListOfSupportedEventTriggerStyles) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOfSupportedEventTriggerStyles.ProtoReflect.Descriptor instead.
func (*ListOfSupportedEventTriggerStyles) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{85}
}

func (x *ListOfSupportedEventTriggerStyles) GetValue() []*EventTriggerStyle {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_ccc.asn1:414
// {EventTriggerStyle}
type EventTriggerStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventTriggerStyleType  *e2sm_common_ies.RicStyleType  `protobuf:"bytes,1,opt,name=event_trigger_style_type,json=eventTriggerStyleType,proto3" json:"event_trigger_style_type,omitempty"`
	EventTriggerStyleName  *e2sm_common_ies.RicStyleName  `protobuf:"bytes,2,opt,name=event_trigger_style_name,json=eventTriggerStyleName,proto3" json:"event_trigger_style_name,omitempty"`
	EventTriggerFormatType *e2sm_common_ies.RicFormatType `protobuf:"bytes,3,opt,name=event_trigger_format_type,json=eventTriggerFormatType,proto3" json:"event_trigger_format_type,omitempty"`
}

func (x *EventTriggerStyle) Reset() {
	*x = EventTriggerStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventTriggerStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventTriggerStyle) ProtoMessage() {}

func (x *EventTriggerStyle) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventTriggerStyle.ProtoReflect.Descriptor instead.
func (*EventTriggerStyle) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{86}
}

func (x *EventTriggerStyle) GetEventTriggerStyleType() *e2sm_common_ies.RicStyleType {
	if x != nil {
		return x.EventTriggerStyleType
	}
	return nil
}

func (x *EventTriggerStyle) GetEventTriggerStyleName() *e2sm_common_ies.RicStyleName {
	if x != nil {
		return x.EventTriggerStyleName
	}
	return nil
}

func (x *EventTriggerStyle) GetEventTriggerFormatType() *e2sm_common_ies.RicFormatType {
	if x != nil {
		return x.EventTriggerFormatType
	}
	return nil
}

// sequence from e2sm_ccc.asn1:421
// {ReportService}
type ReportService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListOfSupportedReportStyles *ListOfSupportedReportStyles `protobuf:"bytes,1,opt,name=list_of_supported_report_styles,json=listOfSupportedReportStyles,proto3" json:"list_of_supported_report_styles,omitempty"`
}

func (x *ReportService) Reset() {
	*x = ReportService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportService) ProtoMessage() {}

func (x *ReportService) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportService.ProtoReflect.Descriptor instead.
func (*ReportService) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{87}
}

func (x *ReportService) GetListOfSupportedReportStyles() *ListOfSupportedReportStyles {
	if x != nil {
		return x.ListOfSupportedReportStyles
	}
	return nil
}

// sequence from e2sm_ccc.asn1:425
// {ListOfSupportedReportStyles}
type ListOfSupportedReportStyles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:63,"
	Value []*ReportStyle `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:63,"`
}

func (x *ListOfSupportedReportStyles) Reset() {
	*x = ListOfSupportedReportStyles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOfSupportedReportStyles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfSupportedReportStyles) ProtoMessage() {}

func (x *ListOfSupportedReportStyles) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOfSupportedReportStyles.ProtoReflect.Descriptor instead.
func (*ListOfSupportedReportStyles) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{88}
}

func (x *ListOfSupportedReportStyles) GetValue() []*ReportStyle {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_ccc.asn1:426
// {ReportStyle}
type ReportStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportServiceStyleType                          *e2sm_common_ies.RicStyleType                    `protobuf:"bytes,1,opt,name=report_service_style_type,json=reportServiceStyleType,proto3" json:"report_service_style_type,omitempty"`
	ReportServiceStyleName                          *e2sm_common_ies.RicStyleName                    `protobuf:"bytes,2,opt,name=report_service_style_name,json=reportServiceStyleName,proto3" json:"report_service_style_name,omitempty"`
	ListOfSupportedEventTriggerStylesForReportStyle *ListOfSupportedEventTriggerStylesForReportStyle `protobuf:"bytes,3,opt,name=list_of_supported_event_trigger_styles_for_report_style,json=listOfSupportedEventTriggerStylesForReportStyle,proto3" json:"list_of_supported_event_trigger_styles_for_report_style,omitempty"`
	ReportServiceActionDefinitionFormatType         *e2sm_common_ies.RicFormatType                   `protobuf:"bytes,4,opt,name=report_service_action_definition_format_type,json=reportServiceActionDefinitionFormatType,proto3" json:"report_service_action_definition_format_type,omitempty"`
	ReportServiceIndicationHeaderFormatType         *e2sm_common_ies.RicFormatType                   `protobuf:"bytes,5,opt,name=report_service_indication_header_format_type,json=reportServiceIndicationHeaderFormatType,proto3" json:"report_service_indication_header_format_type,omitempty"`
	ReportServiceIndicationMessageFormatType        *e2sm_common_ies.RicFormatType                   `protobuf:"bytes,6,opt,name=report_service_indication_message_format_type,json=reportServiceIndicationMessageFormatType,proto3" json:"report_service_indication_message_format_type,omitempty"`
}

func (x *ReportStyle) Reset() {
	*x = ReportStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportStyle) ProtoMessage() {}

func (x *ReportStyle) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportStyle.ProtoReflect.Descriptor instead.
func (*ReportStyle) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{89}
}

func (x *ReportStyle) GetReportServiceStyleType() *e2sm_common_ies.RicStyleType {
	if x != nil {
		return x.ReportServiceStyleType
	}
	return nil
}

func (x *ReportStyle) GetReportServiceStyleName() *e2sm_common_ies.RicStyleName {
	if x != nil {
		return x.ReportServiceStyleName
	}
	return nil
}

func (x *ReportStyle) GetListOfSupportedEventTriggerStylesForReportStyle() *ListOfSupportedEventTriggerStylesForReportStyle {
	if x != nil {
		return x.ListOfSupportedEventTriggerStylesForReportStyle
	}
	return nil
}

func (x *ReportStyle) GetReportServiceActionDefinitionFormatType() *e2sm_common_ies.RicFormatType {
	if x != nil {
		return x.ReportServiceActionDefinitionFormatType
	}
	return nil
}

func (x *ReportStyle) GetReportServiceIndicationHeaderFormatType() *e2sm_common_ies.RicFormatType {
	if x != nil {
		return x.ReportServiceIndicationHeaderFormatType
	}
	return nil
}

func (x *ReportStyle) GetReportServiceIndicationMessageFormatType() *e2sm_common_ies.RicFormatType {
	if x != nil {
		return x.ReportServiceIndicationMessageFormatType
	}
	return nil
}

// sequence from e2sm_ccc.asn1:436
// {ListOfSupportedEventTriggerStylesForReportStyle}
type ListOfSupportedEventTriggerStylesForReportStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:63,"
	Value []*EventTriggerStyleType `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:63,"`
}

func (x *ListOfSupportedEventTriggerStylesForReportStyle) Reset() {
	*x = ListOfSupportedEventTriggerStylesForReportStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOfSupportedEventTriggerStylesForReportStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfSupportedEventTriggerStylesForReportStyle) ProtoMessage() {}

func (x *ListOfSupportedEventTriggerStylesForReportStyle) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOfSupportedEventTriggerStylesForReportStyle.ProtoReflect.Descriptor instead.
func (*ListOfSupportedEventTriggerStylesForReportStyle) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{90}
}

func (x *ListOfSupportedEventTriggerStylesForReportStyle) GetValue() []*EventTriggerStyleType {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_ccc.asn1:438
// {EventTriggerStyleType}
type EventTriggerStyleType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventTriggerStyleType *e2sm_common_ies.RicStyleType `protobuf:"bytes,1,opt,name=event_trigger_style_type,json=eventTriggerStyleType,proto3" json:"event_trigger_style_type,omitempty"`
}

func (x *EventTriggerStyleType) Reset() {
	*x = EventTriggerStyleType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventTriggerStyleType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventTriggerStyleType) ProtoMessage() {}

func (x *EventTriggerStyleType) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventTriggerStyleType.ProtoReflect.Descriptor instead.
func (*EventTriggerStyleType) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{91}
}

func (x *EventTriggerStyleType) GetEventTriggerStyleType() *e2sm_common_ies.RicStyleType {
	if x != nil {
		return x.EventTriggerStyleType
	}
	return nil
}

// sequence from e2sm_ccc.asn1:442
// @inject_tag: aper:"valueExt"
// {InsertService}
type InsertService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *emptypb.Empty `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *InsertService) Reset() {
	*x = InsertService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertService) ProtoMessage() {}

func (x *InsertService) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertService.ProtoReflect.Descriptor instead.
func (*InsertService) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{92}
}

func (x *InsertService) GetValue() *emptypb.Empty {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_ccc.asn1:446
// {ControlService}
type ControlService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListOfSupportedControlStyles *ListOfSupportedControlStyles `protobuf:"bytes,1,opt,name=list_of_supported_control_styles,json=listOfSupportedControlStyles,proto3" json:"list_of_supported_control_styles,omitempty"`
}

func (x *ControlService) Reset() {
	*x = ControlService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlService) ProtoMessage() {}

func (x *ControlService) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlService.ProtoReflect.Descriptor instead.
func (*ControlService) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{93}
}

func (x *ControlService) GetListOfSupportedControlStyles() *ListOfSupportedControlStyles {
	if x != nil {
		return x.ListOfSupportedControlStyles
	}
	return nil
}

// sequence from e2sm_ccc.asn1:450
// {ListOfSupportedControlStyles}
type ListOfSupportedControlStyles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:63,"
	Value []*ControlStyle `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:63,"`
}

func (x *ListOfSupportedControlStyles) Reset() {
	*x = ListOfSupportedControlStyles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOfSupportedControlStyles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfSupportedControlStyles) ProtoMessage() {}

func (x *ListOfSupportedControlStyles) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOfSupportedControlStyles.ProtoReflect.Descriptor instead.
func (*ListOfSupportedControlStyles) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{94}
}

func (x *ListOfSupportedControlStyles) GetValue() []*ControlStyle {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_ccc.asn1:451
// {ControlStyle}
type ControlStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControlServiceStyleType         *e2sm_common_ies.RicStyleType  `protobuf:"bytes,1,opt,name=control_service_style_type,json=controlServiceStyleType,proto3" json:"control_service_style_type,omitempty"`
	ControlServiceStyleName         *e2sm_common_ies.RicStyleName  `protobuf:"bytes,2,opt,name=control_service_style_name,json=controlServiceStyleName,proto3" json:"control_service_style_name,omitempty"`
	ControlServiceHeaderFormatType  *e2sm_common_ies.RicFormatType `protobuf:"bytes,3,opt,name=control_service_header_format_type,json=controlServiceHeaderFormatType,proto3" json:"control_service_header_format_type,omitempty"`
	ControlServiceMessageFormatType *e2sm_common_ies.RicFormatType `protobuf:"bytes,4,opt,name=control_service_message_format_type,json=controlServiceMessageFormatType,proto3" json:"control_service_message_format_type,omitempty"`
	// @inject_tag: aper:"optional,"
	RicCallProcessIdformatType             *e2sm_common_ies.RicFormatType `protobuf:"bytes,5,opt,name=ric_call_process_idformat_type,json=ricCallProcessIDFormatType,proto3,oneof" json:"ric_call_process_idformat_type,omitempty" aper:"optional,"`
	ControlServiceControlOutcomeFormatType *e2sm_common_ies.RicFormatType `protobuf:"bytes,6,opt,name=control_service_control_outcome_format_type,json=controlServiceControlOutcomeFormatType,proto3" json:"control_service_control_outcome_format_type,omitempty"`
}

func (x *ControlStyle) Reset() {
	*x = ControlStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlStyle) ProtoMessage() {}

func (x *ControlStyle) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlStyle.ProtoReflect.Descriptor instead.
func (*ControlStyle) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{95}
}

func (x *ControlStyle) GetControlServiceStyleType() *e2sm_common_ies.RicStyleType {
	if x != nil {
		return x.ControlServiceStyleType
	}
	return nil
}

func (x *ControlStyle) GetControlServiceStyleName() *e2sm_common_ies.RicStyleName {
	if x != nil {
		return x.ControlServiceStyleName
	}
	return nil
}

func (x *ControlStyle) GetControlServiceHeaderFormatType() *e2sm_common_ies.RicFormatType {
	if x != nil {
		return x.ControlServiceHeaderFormatType
	}
	return nil
}

func (x *ControlStyle) GetControlServiceMessageFormatType() *e2sm_common_ies.RicFormatType {
	if x != nil {
		return x.ControlServiceMessageFormatType
	}
	return nil
}

func (x *ControlStyle) GetRicCallProcessIdformatType() *e2sm_common_ies.RicFormatType {
	if x != nil {
		return x.RicCallProcessIdformatType
	}
	return nil
}

func (x *ControlStyle) GetControlServiceControlOutcomeFormatType() *e2sm_common_ies.RicFormatType {
	if x != nil {
		return x.ControlServiceControlOutcomeFormatType
	}
	return nil
}

// sequence from e2sm_ccc.asn1:461
// @inject_tag: aper:"valueExt"
// {PolicyService}
type PolicyService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *emptypb.Empty `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PolicyService) Reset() {
	*x = PolicyService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyService) ProtoMessage() {}

func (x *PolicyService) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyService.ProtoReflect.Descriptor instead.
func (*PolicyService) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{96}
}

func (x *PolicyService) GetValue() *emptypb.Empty {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_ccc.asn1:465
// {ListOfCellsForRANFunctionDefinition}
type ListOfCellsForRanfunctionDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:0,sizeUB:1024,"
	Value []*CellForRanfunctionDefinition `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:0,sizeUB:1024,"`
}

func (x *ListOfCellsForRanfunctionDefinition) Reset() {
	*x = ListOfCellsForRanfunctionDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOfCellsForRanfunctionDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfCellsForRanfunctionDefinition) ProtoMessage() {}

func (x *ListOfCellsForRanfunctionDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOfCellsForRanfunctionDefinition.ProtoReflect.Descriptor instead.
func (*ListOfCellsForRanfunctionDefinition) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{97}
}

func (x *ListOfCellsForRanfunctionDefinition) GetValue() []*CellForRanfunctionDefinition {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_ccc.asn1:466
// {CellForRANFunctionDefinition}
type CellForRanfunctionDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellGlobalId *CellGlobalId `protobuf:"bytes,1,opt,name=cell_global_id,json=cellGlobalID,proto3" json:"cell_global_id,omitempty"`
	// @inject_tag: aper:"optional,"
	ListOfSupportedCellLevelRanconfigurationStructures *ListOfSupportedRanconfigurationStructures `protobuf:"bytes,2,opt,name=list_of_supported_cell_level_ranconfiguration_structures,json=listOfSupportedCellLevelRANConfigurationStructures,proto3,oneof" json:"list_of_supported_cell_level_ranconfiguration_structures,omitempty" aper:"optional,"`
}

func (x *CellForRanfunctionDefinition) Reset() {
	*x = CellForRanfunctionDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellForRanfunctionDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellForRanfunctionDefinition) ProtoMessage() {}

func (x *CellForRanfunctionDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellForRanfunctionDefinition.ProtoReflect.Descriptor instead.
func (*CellForRanfunctionDefinition) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{98}
}

func (x *CellForRanfunctionDefinition) GetCellGlobalId() *CellGlobalId {
	if x != nil {
		return x.CellGlobalId
	}
	return nil
}

func (x *CellForRanfunctionDefinition) GetListOfSupportedCellLevelRanconfigurationStructures() *ListOfSupportedRanconfigurationStructures {
	if x != nil {
		return x.ListOfSupportedCellLevelRanconfigurationStructures
	}
	return nil
}

// sequence from e2sm_ccc.asn1:474
// {E2SM-CCC-RICEventTriggerDefinition}
type E2SmCCcRIceventTriggerDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventTriggerDefinitionFormat *EventTriggerDefinitionFormat `protobuf:"bytes,1,opt,name=event_trigger_definition_format,json=eventTriggerDefinitionFormat,proto3" json:"event_trigger_definition_format,omitempty"`
}

func (x *E2SmCCcRIceventTriggerDefinition) Reset() {
	*x = E2SmCCcRIceventTriggerDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmCCcRIceventTriggerDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmCCcRIceventTriggerDefinition) ProtoMessage() {}

func (x *E2SmCCcRIceventTriggerDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmCCcRIceventTriggerDefinition.ProtoReflect.Descriptor instead.
func (*E2SmCCcRIceventTriggerDefinition) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{99}
}

func (x *E2SmCCcRIceventTriggerDefinition) GetEventTriggerDefinitionFormat() *EventTriggerDefinitionFormat {
	if x != nil {
		return x.EventTriggerDefinitionFormat
	}
	return nil
}

// sequence from e2sm_ccc.asn1:477
// {EventTriggerDefinitionFormat}
type EventTriggerDefinitionFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_ccc.asn1:477
	//
	// Types that are assignable to EventTriggerDefinitionFormat:
	//	*EventTriggerDefinitionFormat_E2SmCccEventTriggerDefinitionFormat1
	//	*EventTriggerDefinitionFormat_E2SmCccEventTriggerDefinitionFormat2
	//	*EventTriggerDefinitionFormat_E2SmCccEventTriggerDefinitionFormat3
	EventTriggerDefinitionFormat isEventTriggerDefinitionFormat_EventTriggerDefinitionFormat `protobuf_oneof:"event_trigger_definition_format"`
}

func (x *EventTriggerDefinitionFormat) Reset() {
	*x = EventTriggerDefinitionFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventTriggerDefinitionFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventTriggerDefinitionFormat) ProtoMessage() {}

func (x *EventTriggerDefinitionFormat) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventTriggerDefinitionFormat.ProtoReflect.Descriptor instead.
func (*EventTriggerDefinitionFormat) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{100}
}

func (m *EventTriggerDefinitionFormat) GetEventTriggerDefinitionFormat() isEventTriggerDefinitionFormat_EventTriggerDefinitionFormat {
	if m != nil {
		return m.EventTriggerDefinitionFormat
	}
	return nil
}

func (x *EventTriggerDefinitionFormat) GetE2SmCccEventTriggerDefinitionFormat1() *E2SmCCcEventTriggerDefinitionFormat1 {
	if x, ok := x.GetEventTriggerDefinitionFormat().(*EventTriggerDefinitionFormat_E2SmCccEventTriggerDefinitionFormat1); ok {
		return x.E2SmCccEventTriggerDefinitionFormat1
	}
	return nil
}

func (x *EventTriggerDefinitionFormat) GetE2SmCccEventTriggerDefinitionFormat2() *E2SmCCcEventTriggerDefinitionFormat2 {
	if x, ok := x.GetEventTriggerDefinitionFormat().(*EventTriggerDefinitionFormat_E2SmCccEventTriggerDefinitionFormat2); ok {
		return x.E2SmCccEventTriggerDefinitionFormat2
	}
	return nil
}

func (x *EventTriggerDefinitionFormat) GetE2SmCccEventTriggerDefinitionFormat3() *E2SmCCcEventTriggerDefinitionFormat3 {
	if x, ok := x.GetEventTriggerDefinitionFormat().(*EventTriggerDefinitionFormat_E2SmCccEventTriggerDefinitionFormat3); ok {
		return x.E2SmCccEventTriggerDefinitionFormat3
	}
	return nil
}

type isEventTriggerDefinitionFormat_EventTriggerDefinitionFormat interface {
	isEventTriggerDefinitionFormat_EventTriggerDefinitionFormat()
}

type EventTriggerDefinitionFormat_E2SmCccEventTriggerDefinitionFormat1 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	E2SmCccEventTriggerDefinitionFormat1 *E2SmCCcEventTriggerDefinitionFormat1 `protobuf:"bytes,1,opt,name=e2_sm_ccc_event_trigger_definition_format1,json=e2SM-CCC-EventTriggerDefinition-Format1,proto3,oneof" aper:"choiceIdx:1,"`
}

type EventTriggerDefinitionFormat_E2SmCccEventTriggerDefinitionFormat2 struct {
	// @inject_tag: aper:"choiceIdx:2,"
	E2SmCccEventTriggerDefinitionFormat2 *E2SmCCcEventTriggerDefinitionFormat2 `protobuf:"bytes,2,opt,name=e2_sm_ccc_event_trigger_definition_format2,json=e2SM-CCC-EventTriggerDefinition-Format2,proto3,oneof" aper:"choiceIdx:2,"`
}

type EventTriggerDefinitionFormat_E2SmCccEventTriggerDefinitionFormat3 struct {
	// @inject_tag: aper:"choiceIdx:3,"
	E2SmCccEventTriggerDefinitionFormat3 *E2SmCCcEventTriggerDefinitionFormat3 `protobuf:"bytes,3,opt,name=e2_sm_ccc_event_trigger_definition_format3,json=e2SM-CCC-EventTriggerDefinition-Format3,proto3,oneof" aper:"choiceIdx:3,"`
}

func (*EventTriggerDefinitionFormat_E2SmCccEventTriggerDefinitionFormat1) isEventTriggerDefinitionFormat_EventTriggerDefinitionFormat() {
}

func (*EventTriggerDefinitionFormat_E2SmCccEventTriggerDefinitionFormat2) isEventTriggerDefinitionFormat_EventTriggerDefinitionFormat() {
}

func (*EventTriggerDefinitionFormat_E2SmCccEventTriggerDefinitionFormat3) isEventTriggerDefinitionFormat_EventTriggerDefinitionFormat() {
}

// sequence from e2sm_ccc.asn1:484
// {E2SM-CCC-EventTriggerDefinition-Format1}
type E2SmCCcEventTriggerDefinitionFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListOfNodeLevelConfigurationStructuresForEventTrigger *ListOfRanconfigurationStructuresForEventTrigger `protobuf:"bytes,1,opt,name=list_of_node_level_configuration_structures_for_event_trigger,json=listOfNodeLevelConfigurationStructuresForEventTrigger,proto3" json:"list_of_node_level_configuration_structures_for_event_trigger,omitempty"`
}

func (x *E2SmCCcEventTriggerDefinitionFormat1) Reset() {
	*x = E2SmCCcEventTriggerDefinitionFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmCCcEventTriggerDefinitionFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmCCcEventTriggerDefinitionFormat1) ProtoMessage() {}

func (x *E2SmCCcEventTriggerDefinitionFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmCCcEventTriggerDefinitionFormat1.ProtoReflect.Descriptor instead.
func (*E2SmCCcEventTriggerDefinitionFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{101}
}

func (x *E2SmCCcEventTriggerDefinitionFormat1) GetListOfNodeLevelConfigurationStructuresForEventTrigger() *ListOfRanconfigurationStructuresForEventTrigger {
	if x != nil {
		return x.ListOfNodeLevelConfigurationStructuresForEventTrigger
	}
	return nil
}

// sequence from e2sm_ccc.asn1:488
// {ListOfRANConfigurationStructuresForEventTrigger}
type ListOfRanconfigurationStructuresForEventTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:256,"
	Value []*RanconfigurationStructureForEventTrigger `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:256,"`
}

func (x *ListOfRanconfigurationStructuresForEventTrigger) Reset() {
	*x = ListOfRanconfigurationStructuresForEventTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOfRanconfigurationStructuresForEventTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfRanconfigurationStructuresForEventTrigger) ProtoMessage() {}

func (x *ListOfRanconfigurationStructuresForEventTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOfRanconfigurationStructuresForEventTrigger.ProtoReflect.Descriptor instead.
func (*ListOfRanconfigurationStructuresForEventTrigger) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{102}
}

func (x *ListOfRanconfigurationStructuresForEventTrigger) GetValue() []*RanconfigurationStructureForEventTrigger {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_ccc.asn1:489
// {RANConfigurationStructureForEventTrigger}
type RanconfigurationStructureForEventTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RanConfigurationStructureName *RanConfigurationStructureName `protobuf:"bytes,1,opt,name=ran_configuration_structure_name,json=ranConfigurationStructureName,proto3" json:"ran_configuration_structure_name,omitempty"`
	// @inject_tag: aper:"optional,"
	ListOfAttributes *ListOfAttributes `protobuf:"bytes,2,opt,name=list_of_attributes,json=listOfAttributes,proto3,oneof" json:"list_of_attributes,omitempty" aper:"optional,"`
}

func (x *RanconfigurationStructureForEventTrigger) Reset() {
	*x = RanconfigurationStructureForEventTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanconfigurationStructureForEventTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanconfigurationStructureForEventTrigger) ProtoMessage() {}

func (x *RanconfigurationStructureForEventTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanconfigurationStructureForEventTrigger.ProtoReflect.Descriptor instead.
func (*RanconfigurationStructureForEventTrigger) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{103}
}

func (x *RanconfigurationStructureForEventTrigger) GetRanConfigurationStructureName() *RanConfigurationStructureName {
	if x != nil {
		return x.RanConfigurationStructureName
	}
	return nil
}

func (x *RanconfigurationStructureForEventTrigger) GetListOfAttributes() *ListOfAttributes {
	if x != nil {
		return x.ListOfAttributes
	}
	return nil
}

// sequence from e2sm_ccc.asn1:495
// {ListOfAttributes}
type ListOfAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:0,sizeUB:65535,"
	Value []*AttributeName `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:0,sizeUB:65535,"`
}

func (x *ListOfAttributes) Reset() {
	*x = ListOfAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOfAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfAttributes) ProtoMessage() {}

func (x *ListOfAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOfAttributes.ProtoReflect.Descriptor instead.
func (*ListOfAttributes) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{104}
}

func (x *ListOfAttributes) GetValue() []*AttributeName {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_ccc.asn1:497
// {E2SM-CCC-EventTriggerDefinition-Format2}
type E2SmCCcEventTriggerDefinitionFormat2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListOfCellLevelConfigurationStructuresForEventTrigger *ListOfCellLevelConfigurationStructuresForEventTrigger `protobuf:"bytes,1,opt,name=list_of_cell_level_configuration_structures_for_event_trigger,json=listOfCellLevelConfigurationStructuresForEventTrigger,proto3" json:"list_of_cell_level_configuration_structures_for_event_trigger,omitempty"`
}

func (x *E2SmCCcEventTriggerDefinitionFormat2) Reset() {
	*x = E2SmCCcEventTriggerDefinitionFormat2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmCCcEventTriggerDefinitionFormat2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmCCcEventTriggerDefinitionFormat2) ProtoMessage() {}

func (x *E2SmCCcEventTriggerDefinitionFormat2) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmCCcEventTriggerDefinitionFormat2.ProtoReflect.Descriptor instead.
func (*E2SmCCcEventTriggerDefinitionFormat2) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{105}
}

func (x *E2SmCCcEventTriggerDefinitionFormat2) GetListOfCellLevelConfigurationStructuresForEventTrigger() *ListOfCellLevelConfigurationStructuresForEventTrigger {
	if x != nil {
		return x.ListOfCellLevelConfigurationStructuresForEventTrigger
	}
	return nil
}

// sequence from e2sm_ccc.asn1:501
// {ListOfCellLevelConfigurationStructuresForEventTrigger}
type ListOfCellLevelConfigurationStructuresForEventTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:1024,"
	Value []*CellLevelConfigurationStructureForEventTrigger `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:1024,"`
}

func (x *ListOfCellLevelConfigurationStructuresForEventTrigger) Reset() {
	*x = ListOfCellLevelConfigurationStructuresForEventTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOfCellLevelConfigurationStructuresForEventTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfCellLevelConfigurationStructuresForEventTrigger) ProtoMessage() {}

func (x *ListOfCellLevelConfigurationStructuresForEventTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOfCellLevelConfigurationStructuresForEventTrigger.ProtoReflect.Descriptor instead.
func (*ListOfCellLevelConfigurationStructuresForEventTrigger) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{106}
}

func (x *ListOfCellLevelConfigurationStructuresForEventTrigger) GetValue() []*CellLevelConfigurationStructureForEventTrigger {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_ccc.asn1:502
// {CellLevelConfigurationStructureForEventTrigger}
type CellLevelConfigurationStructureForEventTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellGlobalId                                    *CellGlobalId                                    `protobuf:"bytes,1,opt,name=cell_global_id,json=cellGlobalId,proto3" json:"cell_global_id,omitempty"`
	ListOfRanconfigurationStructuresForEventTrigger *ListOfRanconfigurationStructuresForEventTrigger `protobuf:"bytes,2,opt,name=list_of_ranconfiguration_structures_for_event_trigger,json=listOfRANConfigurationStructuresForEventTrigger,proto3" json:"list_of_ranconfiguration_structures_for_event_trigger,omitempty"`
}

func (x *CellLevelConfigurationStructureForEventTrigger) Reset() {
	*x = CellLevelConfigurationStructureForEventTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellLevelConfigurationStructureForEventTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellLevelConfigurationStructureForEventTrigger) ProtoMessage() {}

func (x *CellLevelConfigurationStructureForEventTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellLevelConfigurationStructureForEventTrigger.ProtoReflect.Descriptor instead.
func (*CellLevelConfigurationStructureForEventTrigger) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{107}
}

func (x *CellLevelConfigurationStructureForEventTrigger) GetCellGlobalId() *CellGlobalId {
	if x != nil {
		return x.CellGlobalId
	}
	return nil
}

func (x *CellLevelConfigurationStructureForEventTrigger) GetListOfRanconfigurationStructuresForEventTrigger() *ListOfRanconfigurationStructuresForEventTrigger {
	if x != nil {
		return x.ListOfRanconfigurationStructuresForEventTrigger
	}
	return nil
}

// range of Integer from e2sm_ccc.asn1:513
// {AttributeName}
type AttributeName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:15,sizeUB:17,"
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:15,sizeUB:17,"`
}

func (x *AttributeName) Reset() {
	*x = AttributeName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttributeName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeName) ProtoMessage() {}

func (x *AttributeName) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeName.ProtoReflect.Descriptor instead.
func (*AttributeName) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{108}
}

func (x *AttributeName) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_ccc.asn1:517
// {E2SM-CCC-EventTriggerDefinition-Format3}
type E2SmCCcEventTriggerDefinitionFormat3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:10,valueUB:4294967295,"
	Period int32 `protobuf:"varint,1,opt,name=period,proto3" json:"period,omitempty" aper:"valueLB:10,valueUB:4294967295,"`
}

func (x *E2SmCCcEventTriggerDefinitionFormat3) Reset() {
	*x = E2SmCCcEventTriggerDefinitionFormat3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmCCcEventTriggerDefinitionFormat3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmCCcEventTriggerDefinitionFormat3) ProtoMessage() {}

func (x *E2SmCCcEventTriggerDefinitionFormat3) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmCCcEventTriggerDefinitionFormat3.ProtoReflect.Descriptor instead.
func (*E2SmCCcEventTriggerDefinitionFormat3) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{109}
}

func (x *E2SmCCcEventTriggerDefinitionFormat3) GetPeriod() int32 {
	if x != nil {
		return x.Period
	}
	return 0
}

// sequence from e2sm_ccc.asn1:522
// {E2SM-CCC-RICActionDefinition}
type E2SmCCcRIcactionDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicStyleType           *e2sm_common_ies.RicStyleType `protobuf:"bytes,1,opt,name=ric_style_type,json=ricStyleType,proto3" json:"ric_style_type,omitempty"`
	ActionDefinitionFormat *ActionDefinitionFormat       `protobuf:"bytes,2,opt,name=action_definition_format,json=actionDefinitionFormat,proto3" json:"action_definition_format,omitempty"`
}

func (x *E2SmCCcRIcactionDefinition) Reset() {
	*x = E2SmCCcRIcactionDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmCCcRIcactionDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmCCcRIcactionDefinition) ProtoMessage() {}

func (x *E2SmCCcRIcactionDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmCCcRIcactionDefinition.ProtoReflect.Descriptor instead.
func (*E2SmCCcRIcactionDefinition) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{110}
}

func (x *E2SmCCcRIcactionDefinition) GetRicStyleType() *e2sm_common_ies.RicStyleType {
	if x != nil {
		return x.RicStyleType
	}
	return nil
}

func (x *E2SmCCcRIcactionDefinition) GetActionDefinitionFormat() *ActionDefinitionFormat {
	if x != nil {
		return x.ActionDefinitionFormat
	}
	return nil
}

// sequence from e2sm_ccc.asn1:527
// {ActionDefinitionFormat}
type ActionDefinitionFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_ccc.asn1:527
	//
	// Types that are assignable to ActionDefinitionFormat:
	//	*ActionDefinitionFormat_E2SmCccActionDefinitionFormat1
	//	*ActionDefinitionFormat_E2SmCccActionDefinitionFormat2
	ActionDefinitionFormat isActionDefinitionFormat_ActionDefinitionFormat `protobuf_oneof:"action_definition_format"`
}

func (x *ActionDefinitionFormat) Reset() {
	*x = ActionDefinitionFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionDefinitionFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionDefinitionFormat) ProtoMessage() {}

func (x *ActionDefinitionFormat) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionDefinitionFormat.ProtoReflect.Descriptor instead.
func (*ActionDefinitionFormat) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{111}
}

func (m *ActionDefinitionFormat) GetActionDefinitionFormat() isActionDefinitionFormat_ActionDefinitionFormat {
	if m != nil {
		return m.ActionDefinitionFormat
	}
	return nil
}

func (x *ActionDefinitionFormat) GetE2SmCccActionDefinitionFormat1() *E2SmCCcActionDefinitionFormat1 {
	if x, ok := x.GetActionDefinitionFormat().(*ActionDefinitionFormat_E2SmCccActionDefinitionFormat1); ok {
		return x.E2SmCccActionDefinitionFormat1
	}
	return nil
}

func (x *ActionDefinitionFormat) GetE2SmCccActionDefinitionFormat2() *E2SmCCcActionDefinitionFormat2 {
	if x, ok := x.GetActionDefinitionFormat().(*ActionDefinitionFormat_E2SmCccActionDefinitionFormat2); ok {
		return x.E2SmCccActionDefinitionFormat2
	}
	return nil
}

type isActionDefinitionFormat_ActionDefinitionFormat interface {
	isActionDefinitionFormat_ActionDefinitionFormat()
}

type ActionDefinitionFormat_E2SmCccActionDefinitionFormat1 struct {
	// @inject_tag: aper:"choiceIdx:1,"
	E2SmCccActionDefinitionFormat1 *E2SmCCcActionDefinitionFormat1 `protobuf:"bytes,1,opt,name=e2_sm_ccc_action_definition_format1,json=e2SM-CCC-ActionDefinitionFormat1,proto3,oneof" aper:"choiceIdx:1,"`
}

type ActionDefinitionFormat_E2SmCccActionDefinitionFormat2 struct {
	// @inject_tag: aper:"choiceIdx:2,"
	E2SmCccActionDefinitionFormat2 *E2SmCCcActionDefinitionFormat2 `protobuf:"bytes,2,opt,name=e2_sm_ccc_action_definition_format2,json=e2SM-CCC-ActionDefinitionFormat2,proto3,oneof" aper:"choiceIdx:2,"`
}

func (*ActionDefinitionFormat_E2SmCccActionDefinitionFormat1) isActionDefinitionFormat_ActionDefinitionFormat() {
}

func (*ActionDefinitionFormat_E2SmCccActionDefinitionFormat2) isActionDefinitionFormat_ActionDefinitionFormat() {
}

// sequence from e2sm_ccc.asn1:533
// {E2SM-CCC-ActionDefinitionFormat1}
type E2SmCCcActionDefinitionFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListOfNodeLevelRanconfigurationStructuresForAdf *ListOfRanconfigurationStructuresForAdf `protobuf:"bytes,1,opt,name=list_of_node_level_ranconfiguration_structures_for_adf,json=listOfNodeLevelRANConfigurationStructuresForADF,proto3" json:"list_of_node_level_ranconfiguration_structures_for_adf,omitempty"`
}

func (x *E2SmCCcActionDefinitionFormat1) Reset() {
	*x = E2SmCCcActionDefinitionFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmCCcActionDefinitionFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmCCcActionDefinitionFormat1) ProtoMessage() {}

func (x *E2SmCCcActionDefinitionFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmCCcActionDefinitionFormat1.ProtoReflect.Descriptor instead.
func (*E2SmCCcActionDefinitionFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{112}
}

func (x *E2SmCCcActionDefinitionFormat1) GetListOfNodeLevelRanconfigurationStructuresForAdf() *ListOfRanconfigurationStructuresForAdf {
	if x != nil {
		return x.ListOfNodeLevelRanconfigurationStructuresForAdf
	}
	return nil
}

// sequence from e2sm_ccc.asn1:537
// {ListOfRANConfigurationStructuresForADF}
type ListOfRanconfigurationStructuresForAdf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:256,"
	Value []*RanconfigurationStructureForAdf `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:256,"`
}

func (x *ListOfRanconfigurationStructuresForAdf) Reset() {
	*x = ListOfRanconfigurationStructuresForAdf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOfRanconfigurationStructuresForAdf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfRanconfigurationStructuresForAdf) ProtoMessage() {}

func (x *ListOfRanconfigurationStructuresForAdf) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOfRanconfigurationStructuresForAdf.ProtoReflect.Descriptor instead.
func (*ListOfRanconfigurationStructuresForAdf) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{113}
}

func (x *ListOfRanconfigurationStructuresForAdf) GetValue() []*RanconfigurationStructureForAdf {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_ccc.asn1:538
// {RANConfigurationStructureForADF}
type RanconfigurationStructureForAdf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:1,"
	ReportType                    ReportType                     `protobuf:"varint,1,opt,name=report_type,json=reportType,proto3,enum=e2sm_ccc.v1.ReportType" json:"report_type,omitempty" aper:"valueLB:0,valueUB:1,"`
	RanConfigurationStructureName *RanConfigurationStructureName `protobuf:"bytes,2,opt,name=ran_configuration_structure_name,json=ranConfigurationStructureName,proto3" json:"ran_configuration_structure_name,omitempty"`
	// @inject_tag: aper:"optional,"
	ListOfAttributes *ListOfAttributes `protobuf:"bytes,3,opt,name=list_of_attributes,json=listOfAttributes,proto3,oneof" json:"list_of_attributes,omitempty" aper:"optional,"`
}

func (x *RanconfigurationStructureForAdf) Reset() {
	*x = RanconfigurationStructureForAdf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanconfigurationStructureForAdf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanconfigurationStructureForAdf) ProtoMessage() {}

func (x *RanconfigurationStructureForAdf) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanconfigurationStructureForAdf.ProtoReflect.Descriptor instead.
func (*RanconfigurationStructureForAdf) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{114}
}

func (x *RanconfigurationStructureForAdf) GetReportType() ReportType {
	if x != nil {
		return x.ReportType
	}
	return ReportType_REPORT_TYPE_ALL
}

func (x *RanconfigurationStructureForAdf) GetRanConfigurationStructureName() *RanConfigurationStructureName {
	if x != nil {
		return x.RanConfigurationStructureName
	}
	return nil
}

func (x *RanconfigurationStructureForAdf) GetListOfAttributes() *ListOfAttributes {
	if x != nil {
		return x.ListOfAttributes
	}
	return nil
}

// sequence from e2sm_ccc.asn1:545
// {E2SM-CCC-ActionDefinitionFormat2}
type E2SmCCcActionDefinitionFormat2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListOfCellConfigurationsToBeReportedForAdf *ListOfCellConfigurationsToBeReportedForAdf `protobuf:"bytes,1,opt,name=list_of_cell_configurations_to_be_reported_for_adf,json=listOfCellConfigurationsToBeReportedForADF,proto3" json:"list_of_cell_configurations_to_be_reported_for_adf,omitempty"`
}

func (x *E2SmCCcActionDefinitionFormat2) Reset() {
	*x = E2SmCCcActionDefinitionFormat2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmCCcActionDefinitionFormat2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmCCcActionDefinitionFormat2) ProtoMessage() {}

func (x *E2SmCCcActionDefinitionFormat2) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmCCcActionDefinitionFormat2.ProtoReflect.Descriptor instead.
func (*E2SmCCcActionDefinitionFormat2) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{115}
}

func (x *E2SmCCcActionDefinitionFormat2) GetListOfCellConfigurationsToBeReportedForAdf() *ListOfCellConfigurationsToBeReportedForAdf {
	if x != nil {
		return x.ListOfCellConfigurationsToBeReportedForAdf
	}
	return nil
}

// sequence from e2sm_ccc.asn1:549
// {ListOfCellConfigurationsToBeReportedForADF}
type ListOfCellConfigurationsToBeReportedForAdf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:1024,"
	Value []*CellConfigurationToBeReportedForAdf `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:1024,"`
}

func (x *ListOfCellConfigurationsToBeReportedForAdf) Reset() {
	*x = ListOfCellConfigurationsToBeReportedForAdf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOfCellConfigurationsToBeReportedForAdf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfCellConfigurationsToBeReportedForAdf) ProtoMessage() {}

func (x *ListOfCellConfigurationsToBeReportedForAdf) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOfCellConfigurationsToBeReportedForAdf.ProtoReflect.Descriptor instead.
func (*ListOfCellConfigurationsToBeReportedForAdf) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{116}
}

func (x *ListOfCellConfigurationsToBeReportedForAdf) GetValue() []*CellConfigurationToBeReportedForAdf {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_ccc.asn1:550
// {CellConfigurationToBeReportedForADF}
type CellConfigurationToBeReportedForAdf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,"
	CellGlobalId *CellGlobalId `protobuf:"bytes,1,opt,name=cell_global_id,json=cellGlobalId,proto3,oneof" json:"cell_global_id,omitempty" aper:"optional,"`
	// @inject_tag: aper:"optional,"
	ListOfCellLevelRanconfigurationStructuresForAdf *ListOfRanconfigurationStructuresForAdf `protobuf:"bytes,2,opt,name=list_of_cell_level_ranconfiguration_structures_for_adf,json=listOfCellLevelRANConfigurationStructuresForADF,proto3,oneof" json:"list_of_cell_level_ranconfiguration_structures_for_adf,omitempty" aper:"optional,"`
}

func (x *CellConfigurationToBeReportedForAdf) Reset() {
	*x = CellConfigurationToBeReportedForAdf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellConfigurationToBeReportedForAdf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellConfigurationToBeReportedForAdf) ProtoMessage() {}

func (x *CellConfigurationToBeReportedForAdf) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellConfigurationToBeReportedForAdf.ProtoReflect.Descriptor instead.
func (*CellConfigurationToBeReportedForAdf) Descriptor() ([]byte, []int) {
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP(), []int{117}
}

func (x *CellConfigurationToBeReportedForAdf) GetCellGlobalId() *CellGlobalId {
	if x != nil {
		return x.CellGlobalId
	}
	return nil
}

func (x *CellConfigurationToBeReportedForAdf) GetListOfCellLevelRanconfigurationStructuresForAdf() *ListOfRanconfigurationStructuresForAdf {
	if x != nil {
		return x.ListOfCellLevelRanconfigurationStructuresForAdf
	}
	return nil
}

var File_e2sm_ccc_v1_e2sm_ccc_proto protoreflect.FileDescriptor

var file_e2sm_ccc_v1_e2sm_ccc_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x1a, 0x21, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x63, 0x63, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5f, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x32, 0x0a, 0x0f, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66,
	0x50, 0x6c, 0x6d, 0x6e, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x08, 0x80,
	0x80, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x16, 0x4d, 0x61, 0x78,
	0x6e, 0x6f, 0x6f, 0x66, 0x52, 0x72, 0x6d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x08, 0x80, 0x80, 0x04, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x40, 0x0a, 0x1d, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x08, 0xff, 0xff, 0x03, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x14, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f,
	0x66, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x1f,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x1a, 0x04, 0x08, 0xff, 0xff, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x2f, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x12,
	0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09,
	0xfa, 0x42, 0x06, 0x1a, 0x04, 0x08, 0xff, 0xff, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x43, 0x0a, 0x21, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66, 0x43, 0x65, 0x6c, 0x6c, 0x73,
	0x52, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x08, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x15, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x34,
	0x0a, 0x11, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x08, 0xff, 0xff, 0x03, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x10, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66, 0x52,
	0x69, 0x63, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x19, 0x4d, 0x61, 0x78, 0x6e, 0x6f,
	0x6f, 0x66, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x42, 0x0a, 0x20, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66, 0x4e, 0x6f,
	0x64, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x02,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x19, 0x4d, 0x61, 0x78, 0x6e, 0x6f,
	0x6f, 0x66, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x54, 0x6f, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x08, 0xff, 0xff, 0x03, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x46, 0x0a, 0x24, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x6f,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x12, 0x1e, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x1a, 0x03, 0x08, 0x80, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x46, 0x0a,
	0x24, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x32, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x08, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a, 0x0a, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66,
	0x42, 0x77, 0x70, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0x80, 0x02, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x3f, 0x0a, 0x1d, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x6f, 0x66, 0x50, 0x68,
	0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0xa6, 0x04, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x11, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66, 0x53,
	0x6c, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08,
	0x80, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x0d, 0x4d, 0x69, 0x6e,
	0x53, 0x69, 0x7a, 0x65, 0x47, 0x67, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x1e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x0d, 0x4d, 0x61, 0x78,
	0x53, 0x69, 0x7a, 0x65, 0x47, 0x67, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x2c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0d, 0x4d, 0x61, 0x78,
	0x6e, 0x6f, 0x6f, 0x66, 0x47, 0x67, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03,
	0x08, 0x80, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x0d, 0x4d, 0x69,
	0x6e, 0x53, 0x69, 0x7a, 0x65, 0x47, 0x65, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x1a, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x0d, 0x4d, 0x61,
	0x78, 0x53, 0x69, 0x7a, 0x65, 0x47, 0x65, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x25, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0d, 0x4d, 0x61,
	0x78, 0x6e, 0x6f, 0x6f, 0x66, 0x47, 0x65, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a,
	0x03, 0x08, 0x80, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2d, 0x0a, 0x0c, 0x4d,
	0x69, 0x6e, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x0c, 0x4d, 0x61,
	0x78, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03,
	0x08, 0x90, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a, 0x05, 0x47, 0x6e,
	0x62, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x22, 0x08, 0x18, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x28,
	0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x0b, 0x47, 0x6e, 0x62, 0x49,
	0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x20, 0x28,
	0x16, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2b, 0x0a, 0x07, 0x47, 0x6e, 0x62, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0x96, 0x01, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x07, 0x47, 0x6e, 0x62, 0x44, 0x75, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x0e, 0xfa, 0x42, 0x0b, 0x22, 0x09, 0x18, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x28, 0x00, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x09, 0x47, 0x6e, 0x62, 0x43, 0x75, 0x55,
	0x70, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x22, 0x09, 0x18, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01,
	0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x44, 0x0a, 0x0a, 0x53, 0x6e, 0x73,
	0x73, 0x61, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x4e, 0x53, 0x73, 0x61, 0x69, 0x42, 0x0b, 0xfa, 0x42, 0x08,
	0x92, 0x01, 0x05, 0x08, 0x01, 0x10, 0x80, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x4b, 0x0a, 0x0a, 0x50, 0x6c, 0x6d, 0x6e, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x92, 0x01, 0x06, 0x08,
	0x01, 0x10, 0x80, 0x80, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x7b, 0x0a, 0x08,
	0x50, 0x6c, 0x6d, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x07, 0x70, 0x6c, 0x6d, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x70, 0x6c, 0x6d, 0x6e, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x06,
	0x73, 0x6e, 0x73, 0x73, 0x61, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x4e, 0x53, 0x73, 0x61,
	0x69, 0x48, 0x00, 0x52, 0x06, 0x73, 0x6e, 0x73, 0x73, 0x61, 0x69, 0x88, 0x01, 0x01, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x73, 0x6e, 0x73, 0x73, 0x61, 0x69, 0x22, 0x49, 0x0a, 0x0c, 0x50, 0x6c, 0x6d,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x0c, 0xfa, 0x42, 0x09, 0x92, 0x01, 0x06, 0x08, 0x01, 0x10, 0x80, 0x80, 0x04, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x29, 0x0a, 0x06, 0x47, 0x67, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x7a, 0x04, 0x10, 0x1e, 0x18, 0x2c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x29, 0x0a, 0x06, 0x47, 0x65, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x7a, 0x04, 0x10,
	0x1a, 0x18, 0x25, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x44, 0x0a, 0x0a, 0x47, 0x67,
	0x6e, 0x62, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63,
	0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x67, 0x6e, 0x62, 0x49, 0x64, 0x42, 0x0b, 0xfa, 0x42,
	0x08, 0x92, 0x01, 0x05, 0x08, 0x01, 0x10, 0x80, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x44, 0x0a, 0x0a, 0x47, 0x65, 0x6e, 0x62, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x36,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x62,
	0x49, 0x64, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x92, 0x01, 0x05, 0x08, 0x01, 0x10, 0x80, 0x08, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x29, 0x0a, 0x05, 0x4e, 0x72, 0x50, 0x63, 0x69, 0x12,
	0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0xf7, 0x03, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x2b, 0x0a, 0x05, 0x4e, 0x72, 0x54, 0x61, 0x63, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x1a, 0x07,
	0x18, 0xff, 0xff, 0xff, 0x07, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x64,
	0x0a, 0x03, 0x54, 0x61, 0x69, 0x12, 0x32, 0x0a, 0x07, 0x70, 0x6c, 0x6d, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x06, 0x70, 0x6c, 0x6d, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x6e, 0x72, 0x5f,
	0x74, 0x61, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x72, 0x54, 0x61, 0x63, 0x52, 0x05, 0x6e,
	0x72, 0x54, 0x61, 0x63, 0x22, 0x72, 0x0a, 0x0f, 0x52, 0x72, 0x6d, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x07, 0x70, 0x6c, 0x6d, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x06, 0x70, 0x6c, 0x6d, 0x6e, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x73,
	0x6e, 0x73, 0x73, 0x61, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x4e, 0x53, 0x73, 0x61, 0x69,
	0x52, 0x06, 0x73, 0x6e, 0x73, 0x73, 0x61, 0x69, 0x22, 0x57, 0x0a, 0x13, 0x52, 0x72, 0x6d, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x40, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x72, 0x6d,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x0c, 0xfa, 0x42,
	0x09, 0x92, 0x01, 0x06, 0x08, 0x01, 0x10, 0x80, 0x80, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0xb3, 0x04, 0x0a, 0x10, 0x4f, 0x47, 0x6e, 0x62, 0x43, 0x75, 0x43, 0x70, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x06, 0x67, 0x6e, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6e, 0x62, 0x49, 0x64, 0x52, 0x05, 0x67, 0x6e, 0x62, 0x49,
	0x64, 0x12, 0x3c, 0x0a, 0x0d, 0x67, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6e, 0x62, 0x49, 0x64, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x52, 0x0b, 0x67, 0x6e, 0x62, 0x49, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12,
	0x34, 0x0a, 0x0b, 0x67, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6e, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x67, 0x6e, 0x62, 0x43,
	0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x70, 0x6c, 0x6d, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x06, 0x70, 0x6c, 0x6d, 0x6e, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0f, 0x78, 0x32, 0x5f,
	0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x6e, 0x62, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0d, 0x78, 0x32, 0x45,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0f, 0x78, 0x6e,
	0x5f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x67, 0x6e, 0x62, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0d, 0x78, 0x6e,
	0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0f, 0x78,
	0x32, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x62, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0d, 0x78,
	0x32, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0f,
	0x78, 0x6e, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x67, 0x6e, 0x62, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0d,
	0x78, 0x6e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x48, 0x0a,
	0x14, 0x78, 0x32, 0x5f, 0x78, 0x6e, 0x5f, 0x68, 0x6f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x62, 0x49, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x11, 0x78, 0x32, 0x58, 0x6e, 0x48, 0x4f, 0x45, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xf5, 0x01, 0x0a, 0x10, 0x4f, 0x47, 0x6e, 0x62,
	0x43, 0x75, 0x55, 0x70, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x06,
	0x67, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6e, 0x62, 0x49, 0x64,
	0x52, 0x05, 0x67, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0d, 0x67, 0x6e, 0x62, 0x5f, 0x69,
	0x64, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6e, 0x62,
	0x49, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x0b, 0x67, 0x6e, 0x62, 0x49, 0x64, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x37, 0x0a, 0x0c, 0x67, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6e, 0x62, 0x43, 0x75, 0x55,
	0x70, 0x49, 0x64, 0x52, 0x09, 0x67, 0x6e, 0x62, 0x43, 0x75, 0x55, 0x70, 0x49, 0x64, 0x12, 0x3f,
	0x0a, 0x0e, 0x70, 0x6c, 0x6d, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x0c, 0x70, 0x6c, 0x6d, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0xe1, 0x01, 0x0a, 0x0e, 0x4f, 0x47, 0x6e, 0x62, 0x44, 0x75, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x09, 0x67, 0x6e, 0x62, 0x5f, 0x64, 0x75, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6e, 0x62, 0x44, 0x75, 0x49, 0x64, 0x52, 0x07, 0x67, 0x6e, 0x62,
	0x44, 0x75, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0b, 0x67, 0x6e, 0x62, 0x5f, 0x64, 0x75, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6e, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x09, 0x67, 0x6e, 0x62, 0x44, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x67, 0x6e,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6e, 0x62, 0x49, 0x64, 0x52, 0x05,
	0x67, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0d, 0x67, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x5f,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6e, 0x62, 0x49, 0x64,
	0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x0b, 0x67, 0x6e, 0x62, 0x49, 0x64, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x22, 0x2f, 0x0a, 0x0b, 0x43, 0x65, 0x6c, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0xff, 0x7f, 0x28, 0x00, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x09, 0x4f, 0x4e, 0x72, 0x43, 0x65, 0x6c, 0x6c,
	0x43, 0x75, 0x12, 0x3c, 0x0a, 0x0d, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x49, 0x64, 0x52, 0x0b, 0x63, 0x65, 0x6c, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x64,
	0x12, 0x3f, 0x0a, 0x0e, 0x70, 0x6c, 0x6d, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x0c, 0x70, 0x6c, 0x6d, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x3f, 0x0a, 0x07, 0x42, 0x77, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x42, 0x77, 0x70, 0x42, 0x0b,
	0xfa, 0x42, 0x08, 0x92, 0x01, 0x05, 0x08, 0x01, 0x10, 0x80, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xb9, 0x06, 0x0a, 0x09, 0x4f, 0x4e, 0x72, 0x43, 0x65, 0x6c, 0x6c, 0x44, 0x75,
	0x12, 0x3c, 0x0a, 0x0d, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63,
	0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49,
	0x64, 0x52, 0x0b, 0x63, 0x65, 0x6c, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x35,
	0x0a, 0x0a, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x63, 0x65, 0x6c, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x70, 0x6c, 0x6d, 0x6e, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x6d, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0c, 0x70, 0x6c, 0x6d, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x6e, 0x72, 0x5f, 0x70, 0x63, 0x69,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x72, 0x50, 0x63, 0x69, 0x52, 0x05, 0x6e, 0x72, 0x50, 0x63,
	0x69, 0x12, 0x29, 0x0a, 0x06, 0x6e, 0x72, 0x5f, 0x74, 0x61, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x72, 0x54, 0x61, 0x63, 0x52, 0x05, 0x6e, 0x72, 0x54, 0x61, 0x63, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x72, 0x66, 0x63, 0x6e, 0x5f, 0x64, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x61, 0x72, 0x66, 0x63, 0x6e, 0x44, 0x4c, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x72, 0x66, 0x63, 0x6e,
	0x5f, 0x75, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x72, 0x66, 0x63, 0x6e,
	0x55, 0x4c, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x72, 0x66, 0x63, 0x6e, 0x5f, 0x73, 0x75, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x72, 0x66, 0x63, 0x6e, 0x53, 0x55, 0x4c, 0x12,
	0x27, 0x0a, 0x10, 0x62, 0x5f, 0x73, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x62, 0x77,
	0x5f, 0x64, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x62, 0x53, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x77, 0x44, 0x4c, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x73, 0x62, 0x5f,
	0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x73, 0x73, 0x62, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x44, 0x0a,
	0x0f, 0x73, 0x73, 0x62, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x73, 0x62, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63,
	0x69, 0x74, 0x79, 0x52, 0x0e, 0x73, 0x73, 0x62, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x58, 0x0a, 0x17, 0x73, 0x73, 0x62, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x63,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x73, 0x62, 0x53, 0x75, 0x62, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72,
	0x53, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x14, 0x73, 0x73, 0x62, 0x53, 0x75, 0x62, 0x43,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x53, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x73, 0x62, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x73, 0x73, 0x62, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x3b, 0x0a, 0x0c,
	0x73, 0x73, 0x62, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x73, 0x62, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x73, 0x73,
	0x62, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x10, 0x62, 0x5f, 0x73,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x62, 0x77, 0x5f, 0x75, 0x6c, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x62, 0x53, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x77,
	0x55, 0x4c, 0x12, 0x29, 0x0a, 0x11, 0x62, 0x5f, 0x73, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x62, 0x77, 0x5f, 0x73, 0x75, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x62,
	0x53, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x77, 0x53, 0x55, 0x4c, 0x12, 0x2f, 0x0a,
	0x08, 0x62, 0x77, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x77,
	0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x07, 0x62, 0x77, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x8a,
	0x03, 0x0a, 0x0f, 0x4f, 0x52, 0x52, 0x6d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x61, 0x74,
	0x69, 0x6f, 0x12, 0x3e, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x55, 0x0a, 0x16, 0x72, 0x5f, 0x72, 0x6d, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x72, 0x6d, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x13, 0x72, 0x52, 0x4d, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x14,
	0x72, 0x5f, 0x72, 0x6d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x72, 0x52, 0x4d, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x78, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x2f, 0x0a,
	0x14, 0x72, 0x5f, 0x72, 0x6d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x6d, 0x69, 0x6e, 0x5f,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x72, 0x52, 0x4d,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x69, 0x6e, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x3b,
	0x0a, 0x1a, 0x72, 0x5f, 0x72, 0x6d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x64, 0x65, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x17, 0x72, 0x52, 0x4d, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x44, 0x65, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x22, 0xd0, 0x02, 0x0a, 0x04,
	0x4f, 0x42, 0x77, 0x70, 0x12, 0x38, 0x0a, 0x0b, 0x62, 0x77, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x77, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x52, 0x0a, 0x62, 0x77, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x3f,
	0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x62, 0x77, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x77,
	0x70, 0x52, 0x0c, 0x69, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x77, 0x70, 0x12,
	0x4e, 0x0a, 0x13, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x73,
	0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x43, 0x61,
	0x72, 0x72, 0x69, 0x65, 0x72, 0x53, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x11, 0x73, 0x75,
	0x62, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x53, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x12,
	0x3e, 0x0a, 0x0d, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x63, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x79, 0x63, 0x6c, 0x69, 0x63, 0x50, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x52, 0x0c, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x63, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x42, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x62, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x52, 0x42, 0x73, 0x22, 0x99,
	0x04, 0x0a, 0x19, 0x52, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x50, 0x0a, 0x14,
	0x6f, 0x5f, 0x67, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x63, 0x70, 0x5f, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x47, 0x6e, 0x62, 0x43, 0x75, 0x43,
	0x70, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x11, 0x6f, 0x2d, 0x47,
	0x6e, 0x62, 0x43, 0x75, 0x43, 0x70, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x50,
	0x0a, 0x14, 0x6f, 0x5f, 0x67, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x75, 0x70, 0x5f, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x47, 0x6e, 0x62, 0x43,
	0x75, 0x55, 0x70, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x11, 0x6f,
	0x2d, 0x47, 0x6e, 0x62, 0x43, 0x75, 0x55, 0x70, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x49, 0x0a, 0x11, 0x6f, 0x5f, 0x67, 0x6e, 0x62, 0x5f, 0x64, 0x75, 0x5f, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x47, 0x6e, 0x62, 0x44, 0x75,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x6f, 0x2d, 0x47, 0x6e,
	0x62, 0x44, 0x75, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x0c, 0x6f,
	0x5f, 0x6e, 0x72, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x63, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x4e, 0x72, 0x43, 0x65, 0x6c, 0x6c, 0x43, 0x75, 0x48, 0x00, 0x52, 0x0a, 0x6f, 0x2d, 0x4e,
	0x72, 0x43, 0x65, 0x6c, 0x6c, 0x43, 0x75, 0x12, 0x3a, 0x0a, 0x0c, 0x6f, 0x5f, 0x6e, 0x72, 0x5f,
	0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x64, 0x75, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x4e, 0x72, 0x43,
	0x65, 0x6c, 0x6c, 0x44, 0x75, 0x48, 0x00, 0x52, 0x0a, 0x6f, 0x2d, 0x4e, 0x72, 0x43, 0x65, 0x6c,
	0x6c, 0x44, 0x75, 0x12, 0x4b, 0x0a, 0x11, 0x6f, 0x5f, 0x72, 0x72, 0x6d, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x52, 0x52,
	0x6d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x48, 0x00, 0x52, 0x10,
	0x6f, 0x2d, 0x52, 0x52, 0x4d, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x61, 0x74, 0x69, 0x6f,
	0x12, 0x29, 0x0a, 0x05, 0x6f, 0x5f, 0x62, 0x77, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x42,
	0x77, 0x70, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x2d, 0x42, 0x77, 0x70, 0x42, 0x1d, 0x0a, 0x1b, 0x72,
	0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x22, 0x7b, 0x0a, 0x1a, 0x45, 0x32,
	0x53, 0x6d, 0x43, 0x43, 0x63, 0x52, 0x49, 0x63, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x5d, 0x0a, 0x18, 0x69, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52,
	0x16, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0xb2, 0x01, 0x0a, 0x16, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x12, 0x7c, 0x0a, 0x23, 0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x5f,
	0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32,
	0x53, 0x6d, 0x43, 0x43, 0x63, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x48, 0x00, 0x52, 0x20,
	0x65, 0x32, 0x53, 0x4d, 0x2d, 0x43, 0x43, 0x43, 0x2d, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31,
	0x42, 0x1a, 0x0a, 0x18, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x96, 0x01, 0x0a,
	0x1e, 0x45, 0x32, 0x53, 0x6d, 0x43, 0x43, 0x63, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x12,
	0x4a, 0x0a, 0x11, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x10, 0x69, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0a, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42,
	0x09, 0xfa, 0x42, 0x06, 0x7a, 0x04, 0x10, 0x08, 0x18, 0x08, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x7f, 0x0a, 0x1b, 0x45, 0x32, 0x53, 0x6d, 0x43, 0x43, 0x63,
	0x52, 0x49, 0x63, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x60, 0x0a, 0x19, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63,
	0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x17, 0x69,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0xb8, 0x02, 0x0a, 0x17, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x12, 0x7f, 0x0a, 0x24, 0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x5f,
	0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x32, 0x53, 0x6d, 0x43, 0x43, 0x63, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x48, 0x00,
	0x52, 0x21, 0x65, 0x32, 0x53, 0x4d, 0x2d, 0x43, 0x43, 0x43, 0x2d, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x31, 0x12, 0x7f, 0x0a, 0x24, 0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63,
	0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x32, 0x53, 0x6d, 0x43, 0x43, 0x63, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x32, 0x48,
	0x00, 0x52, 0x21, 0x65, 0x32, 0x53, 0x4d, 0x2d, 0x43, 0x43, 0x43, 0x2d, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x32, 0x42, 0x1b, 0x0a, 0x19, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x22, 0xa7, 0x01, 0x0a, 0x1f, 0x45, 0x32, 0x53, 0x6d, 0x43, 0x43, 0x63, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x31, 0x12, 0x83, 0x01, 0x0a, 0x29, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f,
	0x66, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x52, 0x25, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x22, 0x67, 0x0a, 0x1c, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x47, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x42,
	0x0c, 0xfa, 0x42, 0x09, 0x92, 0x01, 0x06, 0x08, 0x01, 0x10, 0xff, 0xff, 0x03, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x96, 0x03, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x38, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x73, 0x0a, 0x20, 0x72, 0x61, 0x6e,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x1d, 0x72, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x51,
	0x0a, 0x14, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x5f, 0x6f, 0x66, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x4f, 0x66, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x12, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x4f, 0x66, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x5d, 0x0a, 0x18, 0x6f, 0x6c, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x5f,
	0x6f, 0x66, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x4f, 0x66, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x48, 0x00, 0x52, 0x15, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x4f, 0x66, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x88, 0x01, 0x01,
	0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x6f, 0x6c, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x5f,
	0x6f, 0x66, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x40, 0x0a,
	0x1d, 0x52, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x7a, 0x04, 0x10, 0x05, 0x18, 0x11, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x7c, 0x0a, 0x12, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x4f, 0x66, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x66, 0x0a, 0x1b, 0x72, 0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x19, 0x72, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x22, 0x78, 0x0a,
	0x1f, 0x45, 0x32, 0x53, 0x6d, 0x43, 0x43, 0x63, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x32,
	0x12, 0x55, 0x0a, 0x16, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x65, 0x6c, 0x6c,
	0x73, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x52, 0x13, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x22, 0x54, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x66, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x3d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x65, 0x6c, 0x6c,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x92, 0x01, 0x06,
	0x08, 0x01, 0x10, 0xff, 0xff, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xd5, 0x01,
	0x0a, 0x0c, 0x43, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x3f,
	0x0a, 0x0e, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49,
	0x64, 0x52, 0x0c, 0x63, 0x65, 0x6c, 0x6c, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x64, 0x12,
	0x83, 0x01, 0x0a, 0x29, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x52, 0x25,
	0x6c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x0c, 0x43, 0x65, 0x6c, 0x6c, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x07, 0x6e, 0x5f, 0x72, 0x5f, 0x63, 0x67,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63,
	0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x72, 0x43, 0x47, 0x69, 0x48, 0x00, 0x52, 0x06, 0x6e,
	0x52, 0x2d, 0x43, 0x47, 0x49, 0x12, 0x36, 0x0a, 0x0a, 0x65, 0x5f, 0x75, 0x74, 0x72, 0x61, 0x5f,
	0x63, 0x67, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x75, 0x74, 0x72, 0x61, 0x43, 0x47, 0x69,
	0x48, 0x00, 0x52, 0x09, 0x65, 0x55, 0x54, 0x52, 0x41, 0x2d, 0x43, 0x47, 0x49, 0x42, 0x10, 0x0a,
	0x0e, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x22,
	0x6f, 0x0a, 0x17, 0x45, 0x32, 0x53, 0x6d, 0x43, 0x43, 0x63, 0x52, 0x49, 0x63, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x54, 0x0a, 0x15, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x13, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x22, 0xa3, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x73, 0x0a, 0x20, 0x65, 0x32, 0x5f, 0x73,
	0x6d, 0x5f, 0x63, 0x63, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x32, 0x53, 0x6d, 0x43, 0x43, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x48, 0x00, 0x52, 0x1d,
	0x65, 0x32, 0x53, 0x4d, 0x2d, 0x43, 0x43, 0x43, 0x2d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x42, 0x17, 0x0a,
	0x15, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x5e, 0x0a, 0x1b, 0x45, 0x32, 0x53, 0x6d, 0x43, 0x43,
	0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x31, 0x12, 0x3f, 0x0a, 0x0e, 0x72, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x69, 0x63, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x73, 0x0a, 0x18, 0x45, 0x32, 0x53, 0x6d, 0x43, 0x43,
	0x63, 0x52, 0x49, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x57, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0xa0, 0x02, 0x0a, 0x14,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x12, 0x76, 0x0a, 0x21, 0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x63, 0x63,
	0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32,
	0x53, 0x6d, 0x43, 0x43, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x48, 0x00, 0x52, 0x1e, 0x65, 0x32,
	0x53, 0x4d, 0x2d, 0x43, 0x43, 0x43, 0x2d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x12, 0x76, 0x0a, 0x21,
	0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63,
	0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32, 0x53, 0x6d, 0x43, 0x43, 0x63, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x32, 0x48, 0x00, 0x52, 0x1e, 0x65, 0x32, 0x53, 0x4d, 0x2d, 0x43, 0x43, 0x43, 0x2d, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x32, 0x42, 0x18, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x93,
	0x01, 0x0a, 0x1c, 0x45, 0x32, 0x53, 0x6d, 0x43, 0x43, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x12,
	0x73, 0x0a, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x1d, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x22, 0x6d, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x42, 0x0c,
	0xfa, 0x42, 0x09, 0x92, 0x01, 0x06, 0x08, 0x01, 0x10, 0xff, 0xff, 0x03, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0xc6, 0x02, 0x0a, 0x1b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x12, 0x73, 0x0a, 0x20, 0x72, 0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x1d, 0x72, 0x61, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x58, 0x0a, 0x18, 0x6f, 0x6c, 0x64, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x5f, 0x6f, 0x66, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x4f,
	0x66, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x15, 0x6f, 0x6c, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x4f, 0x66, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x58, 0x0a, 0x18, 0x6e, 0x65, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x5f, 0x6f, 0x66, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x4f, 0x66, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x15, 0x6e, 0x65, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x4f, 0x66, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x6d, 0x0a, 0x1c,
	0x45, 0x32, 0x53, 0x6d, 0x43, 0x43, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x32, 0x12, 0x4d, 0x0a, 0x16,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x5f, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x66, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x52, 0x13, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x65,
	0x6c, 0x6c, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x22, 0x4e, 0x0a, 0x0b, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x3f, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x92, 0x01, 0x06, 0x08, 0x01,
	0x10, 0xff, 0xff, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc6, 0x01, 0x0a, 0x0e,
	0x43, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x3f,
	0x0a, 0x0e, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49,
	0x64, 0x52, 0x0c, 0x63, 0x65, 0x6c, 0x6c, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x64, 0x12,
	0x73, 0x0a, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x1d, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x22, 0x8c, 0x04, 0x0a, 0x1c, 0x45, 0x32, 0x53, 0x6d, 0x43, 0x43, 0x63,
	0x52, 0x41, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x11, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0f,
	0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0xab, 0x01, 0x0a, 0x35, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x66, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x52, 0x61, 0x6e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x48, 0x00, 0x52, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x4f,
	0x66, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x8c, 0x01,
	0x0a, 0x28, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x5f,
	0x66, 0x6f, 0x72, 0x5f, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x46, 0x6f, 0x72, 0x52, 0x61, 0x6e,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x01, 0x52, 0x23, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x65, 0x6c, 0x6c,
	0x73, 0x46, 0x6f, 0x72, 0x52, 0x41, 0x4e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x38, 0x0a, 0x36,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x42, 0x2b, 0x0a, 0x29, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x6f, 0x66, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x72, 0x61, 0x6e,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x76, 0x0a, 0x29, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x52, 0x61, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x12, 0x49, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61,
	0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x92, 0x01, 0x05, 0x08,
	0x00, 0x10, 0x80, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x9f, 0x02, 0x0a, 0x19,
	0x52, 0x61, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x73, 0x0a, 0x20, 0x72, 0x61, 0x6e,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x1d, 0x72, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x6c,
	0x0a, 0x1c, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x48, 0x00, 0x52, 0x19,
	0x6c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x88, 0x01, 0x01, 0x42, 0x1f, 0x0a, 0x1d,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x57, 0x0a,
	0x19, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x92, 0x01, 0x06, 0x08, 0x00, 0x10, 0xff, 0xff, 0x03, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x09, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x12, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x69, 0x63, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x11, 0x73,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x22, 0xd4, 0x03, 0x0a, 0x0b, 0x52, 0x69, 0x63, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x12, 0x43, 0x0a, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63,
	0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x01, 0x52, 0x0d, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a,
	0x0e, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x48, 0x02, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x49, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x03, 0x52, 0x0e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x46, 0x0a, 0x0e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x48, 0x04, 0x52, 0x0d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x42, 0x12, 0x0a, 0x10, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x0c, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x81, 0x01, 0x0a, 0x26, 0x6c, 0x69, 0x73,
	0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x52, 0x21, 0x6c, 0x69, 0x73, 0x74, 0x4f,
	0x66, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x22, 0x65, 0x0a, 0x21,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x73, 0x12, 0x40, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x3f, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x92, 0x02, 0x0a, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x52, 0x0a, 0x18, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x15, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x52, 0x0a,
	0x18, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69,
	0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x15, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x55, 0x0a, 0x19, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x16, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x7f, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6e, 0x0a, 0x1f, 0x6c, 0x69, 0x73,
	0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x52, 0x1b, 0x6c, 0x69,
	0x73, 0x74, 0x4f, 0x66, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x22, 0x59, 0x0a, 0x1b, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x66, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63,
	0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x3f, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xdd, 0x05, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x12, 0x54, 0x0a, 0x19, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63,
	0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x16, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x54, 0x0a, 0x19, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x16, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0xae, 0x01, 0x0a, 0x37, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x73, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x52, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x12, 0x79, 0x0a, 0x2c, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63,
	0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x27, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x79, 0x0a, 0x2c,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x27,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x7b, 0x0a, 0x2d, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x63,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x28, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x77, 0x0a, 0x2f, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92,
	0x01, 0x04, 0x08, 0x01, 0x10, 0x3f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x6b, 0x0a,
	0x15, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x52, 0x0a, 0x18, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x15, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3d, 0x0a, 0x0d, 0x49, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x0e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x71, 0x0a, 0x20,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x73, 0x52, 0x1c, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x22,
	0x5b, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x12,
	0x3b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01,
	0x04, 0x08, 0x01, 0x10, 0x3f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x91, 0x05, 0x0a,
	0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x56, 0x0a,
	0x1a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x17, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x56, 0x0a, 0x1a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x17, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x66, 0x0a,
	0x22, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x1e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x68, 0x0a, 0x23, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x1f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x63, 0x0a, 0x1e, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63,
	0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x1a, 0x72, 0x69, 0x63, 0x43, 0x61, 0x6c, 0x6c, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x44, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x77, 0x0a, 0x2b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f,
	0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x26, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4f, 0x75, 0x74, 0x63,
	0x6f, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x21, 0x0a,
	0x1f, 0x5f, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x69, 0x64, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x3d, 0x0a, 0x0d, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x73, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x46, 0x6f,
	0x72, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x46, 0x6f, 0x72, 0x52, 0x61, 0x6e, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x0b, 0xfa, 0x42, 0x08, 0x92, 0x01, 0x05, 0x08, 0x00, 0x10, 0x80, 0x08, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xd0, 0x02, 0x0a, 0x1c, 0x43, 0x65, 0x6c, 0x6c, 0x46, 0x6f, 0x72,
	0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0e, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x65, 0x6c, 0x6c,
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x0c, 0x63, 0x65, 0x6c, 0x6c, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x49, 0x44, 0x12, 0xb1, 0x01, 0x0a, 0x38, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x6f, 0x66, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x65, 0x6c,
	0x6c, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x72, 0x61, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x52, 0x61, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x48, 0x00, 0x52, 0x32, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x43, 0x65, 0x6c, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x41, 0x4e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x88, 0x01, 0x01, 0x42, 0x3b, 0x0a, 0x39, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x72, 0x61, 0x6e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x20, 0x45, 0x32, 0x53, 0x6d,
	0x43, 0x43, 0x63, 0x52, 0x49, 0x63, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x70, 0x0a, 0x1f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x52, 0x1c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0xfa,
	0x03, 0x0a, 0x1c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12,
	0x90, 0x01, 0x0a, 0x2a, 0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x5f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x32, 0x53, 0x6d, 0x43, 0x43, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x48, 0x00, 0x52, 0x27, 0x65, 0x32, 0x53, 0x4d, 0x2d,
	0x43, 0x43, 0x43, 0x2d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x31, 0x12, 0x90, 0x01, 0x0a, 0x2a, 0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63,
	0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32, 0x53, 0x6d, 0x43, 0x43, 0x63, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x32, 0x48, 0x00, 0x52, 0x27, 0x65, 0x32,
	0x53, 0x4d, 0x2d, 0x43, 0x43, 0x43, 0x2d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x32, 0x12, 0x90, 0x01, 0x0a, 0x2a, 0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f,
	0x63, 0x63, 0x63, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32, 0x53, 0x6d, 0x43, 0x43, 0x63,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x33, 0x48, 0x00, 0x52,
	0x27, 0x65, 0x32, 0x53, 0x4d, 0x2d, 0x43, 0x43, 0x43, 0x2d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x2d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x33, 0x42, 0x21, 0x0a, 0x1f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0xe3, 0x01, 0x0a, 0x24,
	0x45, 0x32, 0x53, 0x6d, 0x43, 0x43, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x31, 0x12, 0xba, 0x01, 0x0a, 0x3d, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x66,
	0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x66, 0x52, 0x61, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x35, 0x6c, 0x69, 0x73, 0x74,
	0x4f, 0x66, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x46, 0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x22, 0x8b, 0x01, 0x0a, 0x2f, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x52, 0x61, 0x6e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x58, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x46, 0x6f, 0x72, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x42, 0x0b, 0xfa, 0x42, 0x08,
	0x92, 0x01, 0x05, 0x08, 0x01, 0x10, 0x80, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x88, 0x02, 0x0a, 0x28, 0x52, 0x61, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x46, 0x6f, 0x72,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x73, 0x0a, 0x20,
	0x72, 0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x1d, 0x72, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x50, 0x0a, 0x12, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x66, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x48, 0x00, 0x52, 0x10,
	0x6c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x88, 0x01, 0x01, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x5f,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x52, 0x0a, 0x10, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x66, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x3e,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x92, 0x01,
	0x06, 0x08, 0x00, 0x10, 0xff, 0xff, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xe9,
	0x01, 0x0a, 0x24, 0x45, 0x32, 0x53, 0x6d, 0x43, 0x43, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x32, 0x12, 0xc0, 0x01, 0x0a, 0x3d, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x42, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x66, 0x43, 0x65, 0x6c, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x52, 0x35, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x65, 0x6c, 0x6c, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x22, 0x97, 0x01, 0x0a, 0x35, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x65, 0x6c, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x12, 0x5e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x46, 0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x42, 0x0b, 0xfa, 0x42, 0x08, 0x92, 0x01, 0x05, 0x08, 0x01, 0x10, 0x80, 0x08, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xa0, 0x02, 0x0a, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x46, 0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x0e, 0x63, 0x65, 0x6c, 0x6c, 0x5f,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x65,
	0x6c, 0x6c, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x0c, 0x63, 0x65, 0x6c, 0x6c,
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x64, 0x12, 0xac, 0x01, 0x0a, 0x35, 0x6c, 0x69, 0x73,
	0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x61, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x52, 0x61, 0x6e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x52, 0x41,
	0x4e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x22, 0x30, 0x0a, 0x0d, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x7a, 0x04, 0x10, 0x0f,
	0x18, 0x11, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3e, 0x0a, 0x24, 0x45, 0x32, 0x53,
	0x6d, 0x43, 0x43, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x33, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0xbc, 0x01, 0x0a, 0x1a, 0x45, 0x32,
	0x53, 0x6d, 0x43, 0x43, 0x63, 0x52, 0x49, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0e, 0x72, 0x69, 0x63, 0x5f,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x69, 0x63,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x5d, 0x0a, 0x18, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x52, 0x16, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0xb0, 0x02, 0x0a, 0x16, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x12, 0x7c, 0x0a, 0x23, 0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x32, 0x53, 0x6d, 0x43, 0x43, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x48, 0x00, 0x52,
	0x20, 0x65, 0x32, 0x53, 0x4d, 0x2d, 0x43, 0x43, 0x43, 0x2d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x31, 0x12, 0x7c, 0x0a, 0x23, 0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32, 0x53,
	0x6d, 0x43, 0x43, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x32, 0x48, 0x00, 0x52, 0x20, 0x65,
	0x32, 0x53, 0x4d, 0x2d, 0x43, 0x43, 0x43, 0x2d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x32, 0x42,
	0x1a, 0x0a, 0x18, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0xc7, 0x01, 0x0a, 0x1e,
	0x45, 0x32, 0x53, 0x6d, 0x43, 0x43, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x12, 0xa4,
	0x01, 0x0a, 0x36, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x72, 0x61, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x66, 0x52, 0x61, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x46, 0x6f,
	0x72, 0x41, 0x64, 0x66, 0x52, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x4e, 0x6f, 0x64, 0x65,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x41, 0x4e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x46,
	0x6f, 0x72, 0x41, 0x44, 0x46, 0x22, 0x79, 0x0a, 0x26, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x52,
	0x61, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x64, 0x66, 0x12,
	0x4f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x46, 0x6f, 0x72, 0x41, 0x64, 0x66, 0x42, 0x0b, 0xfa, 0x42,
	0x08, 0x92, 0x01, 0x05, 0x08, 0x01, 0x10, 0x80, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xb9, 0x02, 0x0a, 0x1f, 0x52, 0x61, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x46, 0x6f,
	0x72, 0x41, 0x64, 0x66, 0x12, 0x38, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x73,
	0x0a, 0x20, 0x72, 0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x1d, 0x72, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x12, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x66, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x48, 0x00,
	0x52, 0x10, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x88, 0x01, 0x01, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f,
	0x66, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0xc2, 0x01, 0x0a,
	0x1e, 0x45, 0x32, 0x53, 0x6d, 0x43, 0x43, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x32, 0x12,
	0x9f, 0x01, 0x0a, 0x32, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x65, 0x6c, 0x6c,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x74, 0x6f, 0x5f, 0x62, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x66,
	0x6f, 0x72, 0x5f, 0x61, 0x64, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x66, 0x43, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x54, 0x6f, 0x42, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46,
	0x6f, 0x72, 0x41, 0x64, 0x66, 0x52, 0x2a, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x65, 0x6c,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54,
	0x6f, 0x42, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x41, 0x44,
	0x46, 0x22, 0x81, 0x01, 0x0a, 0x2a, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x65, 0x6c, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x6f,
	0x42, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x41, 0x64, 0x66,
	0x12, 0x53, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x65,
	0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x6f, 0x42, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x41, 0x64,
	0x66, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x92, 0x01, 0x05, 0x08, 0x01, 0x10, 0x80, 0x08, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xe5, 0x02, 0x0a, 0x23, 0x43, 0x65, 0x6c, 0x6c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x42, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x41, 0x64, 0x66, 0x12, 0x44, 0x0a,
	0x0e, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x64,
	0x48, 0x00, 0x52, 0x0c, 0x63, 0x65, 0x6c, 0x6c, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0xa9, 0x01, 0x0a, 0x36, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x5f,
	0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x72, 0x61, 0x6e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x66, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x52, 0x61, 0x6e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x64, 0x66, 0x48, 0x01, 0x52, 0x2f, 0x6c, 0x69, 0x73,
	0x74, 0x4f, 0x66, 0x43, 0x65, 0x6c, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x41, 0x4e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x44, 0x46, 0x88, 0x01, 0x01, 0x42,
	0x11, 0x0a, 0x0f, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f,
	0x69, 0x64, 0x42, 0x39, 0x0a, 0x37, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x63,
	0x65, 0x6c, 0x6c, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x72, 0x61, 0x6e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x66, 0x2a, 0x50, 0x0a,
	0x09, 0x43, 0x65, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x45,
	0x4c, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x44, 0x4c, 0x45, 0x10, 0x00, 0x12,
	0x17, 0x0a, 0x13, 0x43, 0x45, 0x4c, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x45, 0x4c, 0x4c,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x2a,
	0x44, 0x0a, 0x0c, 0x43, 0x79, 0x63, 0x6c, 0x69, 0x63, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12,
	0x18, 0x0a, 0x14, 0x43, 0x59, 0x43, 0x4c, 0x49, 0x43, 0x5f, 0x50, 0x52, 0x45, 0x46, 0x49, 0x58,
	0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x59, 0x43,
	0x4c, 0x49, 0x43, 0x5f, 0x50, 0x52, 0x45, 0x46, 0x49, 0x58, 0x5f, 0x45, 0x58, 0x54, 0x45, 0x4e,
	0x44, 0x45, 0x44, 0x10, 0x01, 0x2a, 0x49, 0x0a, 0x0a, 0x42, 0x77, 0x70, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x57, 0x50, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45,
	0x58, 0x54, 0x5f, 0x44, 0x4c, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x57, 0x50, 0x5f, 0x43,
	0x4f, 0x4e, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x55, 0x4c, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x42,
	0x57, 0x50, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x53, 0x55, 0x4c, 0x10, 0x02,
	0x2a, 0x44, 0x0a, 0x0c, 0x49, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x77, 0x70,
	0x12, 0x1a, 0x0a, 0x16, 0x49, 0x53, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x5f, 0x42,
	0x57, 0x50, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14,
	0x49, 0x53, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x5f, 0x42, 0x57, 0x50, 0x5f, 0x4f,
	0x54, 0x48, 0x45, 0x52, 0x10, 0x01, 0x2a, 0x7e, 0x0a, 0x10, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x23, 0x49, 0x4e,
	0x44, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f,
	0x55, 0x50, 0x4f, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x49, 0x4e, 0x44, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x55, 0x50, 0x4f, 0x4e, 0x5f, 0x43, 0x48,
	0x41, 0x4e, 0x47, 0x45, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x49, 0x4e, 0x44, 0x49, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x50, 0x45, 0x52, 0x49,
	0x4f, 0x44, 0x49, 0x43, 0x10, 0x02, 0x2a, 0x74, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x48,
	0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x49,
	0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x48, 0x41, 0x4e,
	0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x44, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x2a, 0x39, 0x0a, 0x0a,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x45,
	0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12,
	0x16, 0x0a, 0x12, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x01, 0x2a, 0x70, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x42, 0x5f, 0x55, 0x4c, 0x10,
	0x00, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x50, 0x52, 0x42, 0x5f, 0x44, 0x4c, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x52,
	0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x52, 0x42,
	0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x52, 0x52, 0x43, 0x10, 0x03, 0x2a, 0x75, 0x0a, 0x0d, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x43,
	0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x4f, 0x55,
	0x4e, 0x44, 0x5f, 0x52, 0x4f, 0x42, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x26, 0x0a, 0x22, 0x53, 0x43,
	0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x4f,
	0x50, 0x4f, 0x52, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x4c, 0x59, 0x5f, 0x46, 0x41, 0x49, 0x52,
	0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x51, 0x4f, 0x53, 0x5f, 0x42, 0x41, 0x53, 0x45, 0x44, 0x10, 0x02,
	0x2a, 0xa6, 0x01, 0x0a, 0x0e, 0x53, 0x73, 0x62, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x53, 0x42, 0x5f, 0x50, 0x45, 0x52, 0x49, 0x4f,
	0x44, 0x49, 0x43, 0x49, 0x54, 0x59, 0x5f, 0x4e, 0x35, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x53,
	0x53, 0x42, 0x5f, 0x50, 0x45, 0x52, 0x49, 0x4f, 0x44, 0x49, 0x43, 0x49, 0x54, 0x59, 0x5f, 0x4e,
	0x31, 0x30, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x53, 0x42, 0x5f, 0x50, 0x45, 0x52, 0x49,
	0x4f, 0x44, 0x49, 0x43, 0x49, 0x54, 0x59, 0x5f, 0x4e, 0x32, 0x30, 0x10, 0x02, 0x12, 0x17, 0x0a,
	0x13, 0x53, 0x53, 0x42, 0x5f, 0x50, 0x45, 0x52, 0x49, 0x4f, 0x44, 0x49, 0x43, 0x49, 0x54, 0x59,
	0x5f, 0x4e, 0x34, 0x30, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x53, 0x42, 0x5f, 0x50, 0x45,
	0x52, 0x49, 0x4f, 0x44, 0x49, 0x43, 0x49, 0x54, 0x59, 0x5f, 0x4e, 0x38, 0x30, 0x10, 0x04, 0x12,
	0x18, 0x0a, 0x14, 0x53, 0x53, 0x42, 0x5f, 0x50, 0x45, 0x52, 0x49, 0x4f, 0x44, 0x49, 0x43, 0x49,
	0x54, 0x59, 0x5f, 0x4e, 0x31, 0x36, 0x30, 0x10, 0x05, 0x2a, 0x76, 0x0a, 0x0b, 0x53, 0x73, 0x62,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x53, 0x42, 0x5f,
	0x44, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x31, 0x10, 0x00, 0x12, 0x13, 0x0a,
	0x0f, 0x53, 0x53, 0x42, 0x5f, 0x44, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x32,
	0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x53, 0x42, 0x5f, 0x44, 0x55, 0x52, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x4e, 0x33, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x53, 0x42, 0x5f, 0x44,
	0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x34, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f,
	0x53, 0x53, 0x42, 0x5f, 0x44, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x35, 0x10,
	0x04, 0x2a, 0x9c, 0x01, 0x0a, 0x14, 0x53, 0x73, 0x62, 0x53, 0x75, 0x62, 0x43, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x53, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x53,
	0x42, 0x5f, 0x53, 0x55, 0x42, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x53, 0x50,
	0x41, 0x43, 0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x31, 0x35, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x53,
	0x53, 0x42, 0x5f, 0x53, 0x55, 0x42, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x53,
	0x50, 0x41, 0x43, 0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x33, 0x30, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c,
	0x53, 0x53, 0x42, 0x5f, 0x53, 0x55, 0x42, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f,
	0x53, 0x50, 0x41, 0x43, 0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x31, 0x32, 0x30, 0x10, 0x02, 0x12, 0x20,
	0x0a, 0x1c, 0x53, 0x53, 0x42, 0x5f, 0x53, 0x55, 0x42, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45,
	0x52, 0x5f, 0x53, 0x50, 0x41, 0x43, 0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x32, 0x34, 0x30, 0x10, 0x03,
	0x2a, 0x88, 0x01, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x53,
	0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x55, 0x42, 0x5f, 0x43, 0x41,
	0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x53, 0x50, 0x41, 0x43, 0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x31,
	0x35, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x55, 0x42, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49,
	0x45, 0x52, 0x5f, 0x53, 0x50, 0x41, 0x43, 0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x33, 0x30, 0x10, 0x01,
	0x12, 0x1b, 0x0a, 0x17, 0x53, 0x55, 0x42, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f,
	0x53, 0x50, 0x41, 0x43, 0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x36, 0x30, 0x10, 0x02, 0x12, 0x1c, 0x0a,
	0x18, 0x53, 0x55, 0x42, 0x5f, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x53, 0x50, 0x41,
	0x43, 0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x31, 0x32, 0x30, 0x10, 0x03, 0x42, 0x4a, 0x5a, 0x48, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6e, 0x6f, 0x73, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x6f, 0x6e, 0x6f, 0x73, 0x2d, 0x65, 0x32, 0x2d, 0x73, 0x6d,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x63, 0x63, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x32, 0x73, 0x6d, 0x2d,
	0x63, 0x63, 0x63, 0x2d, 0x69, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescOnce sync.Once
	file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescData = file_e2sm_ccc_v1_e2sm_ccc_proto_rawDesc
)

func file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescGZIP() []byte {
	file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescOnce.Do(func() {
		file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescData = protoimpl.X.CompressGZIP(file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescData)
	})
	return file_e2sm_ccc_v1_e2sm_ccc_proto_rawDescData
}

var file_e2sm_ccc_v1_e2sm_ccc_proto_enumTypes = make([]protoimpl.EnumInfo, 13)
var file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes = make([]protoimpl.MessageInfo, 118)
var file_e2sm_ccc_v1_e2sm_ccc_proto_goTypes = []interface{}{
	(CellState)(0),                                                // 0: e2sm_ccc.v1.CellState
	(CyclicPrefix)(0),                                             // 1: e2sm_ccc.v1.CyclicPrefix
	(BwpContext)(0),                                               // 2: e2sm_ccc.v1.BwpContext
	(IsInitialBwp)(0),                                             // 3: e2sm_ccc.v1.IsInitialBwp
	(IndicationReason)(0),                                         // 4: e2sm_ccc.v1.IndicationReason
	(ChangeType)(0),                                               // 5: e2sm_ccc.v1.ChangeType
	(ReportType)(0),                                               // 6: e2sm_ccc.v1.ReportType
	(ResourceType)(0),                                             // 7: e2sm_ccc.v1.ResourceType
	(SchedulerType)(0),                                            // 8: e2sm_ccc.v1.SchedulerType
	(SsbPeriodicity)(0),                                           // 9: e2sm_ccc.v1.SsbPeriodicity
	(SsbDuration)(0),                                              // 10: e2sm_ccc.v1.SsbDuration
	(SsbSubCarrierSpacing)(0),                                     // 11: e2sm_ccc.v1.SsbSubCarrierSpacing
	(SubCarrierSpacing)(0),                                        // 12: e2sm_ccc.v1.SubCarrierSpacing
	(*MaxnoofPlmninfo)(nil),                                       // 13: e2sm_ccc.v1.MaxnoofPlmninfo
	(*MaxnoofRrmpolicyMember)(nil),                                // 14: e2sm_ccc.v1.MaxnoofRrmpolicyMember
	(*MaxnoofConfigurationsReported)(nil),                         // 15: e2sm_ccc.v1.MaxnoofConfigurationsReported
	(*MaxnoofCellsReported)(nil),                                  // 16: e2sm_ccc.v1.MaxnoofCellsReported
	(*MaxnoofCells)(nil),                                          // 17: e2sm_ccc.v1.MaxnoofCells
	(*MaxnoofCellsRanFunctionDefinition)(nil),                     // 18: e2sm_ccc.v1.MaxnoofCellsRanFunctionDefinition
	(*MaxnoofConfigurations)(nil),                                 // 19: e2sm_ccc.v1.MaxnoofConfigurations
	(*MaxnoofAttributes)(nil),                                     // 20: e2sm_ccc.v1.MaxnoofAttributes
	(*MaxnoofRicstyles)(nil),                                      // 21: e2sm_ccc.v1.MaxnoofRicstyles
	(*MaxnoofEventTriggerStyles)(nil),                             // 22: e2sm_ccc.v1.MaxnoofEventTriggerStyles
	(*MaxnoofNodeLevelConfigStructures)(nil),                      // 23: e2sm_ccc.v1.MaxnoofNodeLevelConfigStructures
	(*MaxnoofAttributesToReport)(nil),                             // 24: e2sm_ccc.v1.MaxnoofAttributesToReport
	(*MaxnoofConfigurationsToReportFormat1)(nil),                  // 25: e2sm_ccc.v1.MaxnoofConfigurationsToReportFormat1
	(*MaxnoofConfigurationsToReportFormat2)(nil),                  // 26: e2sm_ccc.v1.MaxnoofConfigurationsToReportFormat2
	(*MaxnoofBwp)(nil),                                            // 27: e2sm_ccc.v1.MaxnoofBwp
	(*MaxNrofPhysicalResourceBlocks)(nil),                         // 28: e2sm_ccc.v1.MaxNrofPhysicalResourceBlocks
	(*MaxnoofSliceItems)(nil),                                     // 29: e2sm_ccc.v1.MaxnoofSliceItems
	(*MinSizeGgnbId)(nil),                                         // 30: e2sm_ccc.v1.MinSizeGgnbId
	(*MaxSizeGgnbId)(nil),                                         // 31: e2sm_ccc.v1.MaxSizeGgnbId
	(*MaxnoofGgnbId)(nil),                                         // 32: e2sm_ccc.v1.MaxnoofGgnbId
	(*MinSizeGenbId)(nil),                                         // 33: e2sm_ccc.v1.MinSizeGenbId
	(*MaxSizeGenbId)(nil),                                         // 34: e2sm_ccc.v1.MaxSizeGenbId
	(*MaxnoofGenbId)(nil),                                         // 35: e2sm_ccc.v1.MaxnoofGenbId
	(*MinBandwidth)(nil),                                          // 36: e2sm_ccc.v1.MinBandwidth
	(*MaxBandwidth)(nil),                                          // 37: e2sm_ccc.v1.MaxBandwidth
	(*GnbId)(nil),                                                 // 38: e2sm_ccc.v1.GnbId
	(*GnbIdLength)(nil),                                           // 39: e2sm_ccc.v1.GnbIdLength
	(*GnbName)(nil),                                               // 40: e2sm_ccc.v1.GnbName
	(*GnbDuId)(nil),                                               // 41: e2sm_ccc.v1.GnbDuId
	(*GnbCuUpId)(nil),                                             // 42: e2sm_ccc.v1.GnbCuUpId
	(*SnssaiList)(nil),                                            // 43: e2sm_ccc.v1.SnssaiList
	(*PlmnIdList)(nil),                                            // 44: e2sm_ccc.v1.PlmnIdList
	(*PlmnInfo)(nil),                                              // 45: e2sm_ccc.v1.PlmnInfo
	(*PlmnInfoList)(nil),                                          // 46: e2sm_ccc.v1.PlmnInfoList
	(*GgnbId)(nil),                                                // 47: e2sm_ccc.v1.GgnbId
	(*GenbId)(nil),                                                // 48: e2sm_ccc.v1.GenbId
	(*GgnbIdList)(nil),                                            // 49: e2sm_ccc.v1.GgnbIdList
	(*GenbIdList)(nil),                                            // 50: e2sm_ccc.v1.GenbIdList
	(*NrPci)(nil),                                                 // 51: e2sm_ccc.v1.NrPci
	(*NrTac)(nil),                                                 // 52: e2sm_ccc.v1.NrTac
	(*Tai)(nil),                                                   // 53: e2sm_ccc.v1.Tai
	(*RrmPolicyMember)(nil),                                       // 54: e2sm_ccc.v1.RrmPolicyMember
	(*RrmPolicyMemberList)(nil),                                   // 55: e2sm_ccc.v1.RrmPolicyMemberList
	(*OGnbCuCpFunction)(nil),                                      // 56: e2sm_ccc.v1.OGnbCuCpFunction
	(*OGnbCuUpFunction)(nil),                                      // 57: e2sm_ccc.v1.OGnbCuUpFunction
	(*OGnbDuFunction)(nil),                                        // 58: e2sm_ccc.v1.OGnbDuFunction
	(*CellLocalId)(nil),                                           // 59: e2sm_ccc.v1.CellLocalId
	(*ONrCellCu)(nil),                                             // 60: e2sm_ccc.v1.ONrCellCu
	(*BwpList)(nil),                                               // 61: e2sm_ccc.v1.BwpList
	(*ONrCellDu)(nil),                                             // 62: e2sm_ccc.v1.ONrCellDu
	(*ORRmpolicyRatio)(nil),                                       // 63: e2sm_ccc.v1.ORRmpolicyRatio
	(*OBwp)(nil),                                                  // 64: e2sm_ccc.v1.OBwp
	(*RanConfigurationStructure)(nil),                             // 65: e2sm_ccc.v1.RanConfigurationStructure
	(*E2SmCCcRIcIndicationHeader)(nil),                            // 66: e2sm_ccc.v1.E2SmCCcRIcIndicationHeader
	(*IndicationHeaderFormat)(nil),                                // 67: e2sm_ccc.v1.IndicationHeaderFormat
	(*E2SmCCcIndicationHeaderFormat1)(nil),                        // 68: e2sm_ccc.v1.E2SmCCcIndicationHeaderFormat1
	(*E2SmCCcRIcIndicationMessage)(nil),                           // 69: e2sm_ccc.v1.E2SmCCcRIcIndicationMessage
	(*IndicationMessageFormat)(nil),                               // 70: e2sm_ccc.v1.IndicationMessageFormat
	(*E2SmCCcIndicationMessageFormat1)(nil),                       // 71: e2sm_ccc.v1.E2SmCCcIndicationMessageFormat1
	(*ListOfConfigurationsReported)(nil),                          // 72: e2sm_ccc.v1.ListOfConfigurationsReported
	(*ConfigurationStructure)(nil),                                // 73: e2sm_ccc.v1.ConfigurationStructure
	(*RanConfigurationStructureName)(nil),                         // 74: e2sm_ccc.v1.RanConfigurationStructureName
	(*ValuesOfAttributes)(nil),                                    // 75: e2sm_ccc.v1.ValuesOfAttributes
	(*E2SmCCcIndicationMessageFormat2)(nil),                       // 76: e2sm_ccc.v1.E2SmCCcIndicationMessageFormat2
	(*ListOfCellsReported)(nil),                                   // 77: e2sm_ccc.v1.ListOfCellsReported
	(*CellReported)(nil),                                          // 78: e2sm_ccc.v1.CellReported
	(*CellGlobalId)(nil),                                          // 79: e2sm_ccc.v1.CellGlobalId
	(*E2SmCCcRIcControlHeader)(nil),                               // 80: e2sm_ccc.v1.E2SmCCcRIcControlHeader
	(*ControlHeaderFormat)(nil),                                   // 81: e2sm_ccc.v1.ControlHeaderFormat
	(*E2SmCCcControlHeaderFormat1)(nil),                           // 82: e2sm_ccc.v1.E2SmCCcControlHeaderFormat1
	(*E2SmCCcRIcControlMessage)(nil),                              // 83: e2sm_ccc.v1.E2SmCCcRIcControlMessage
	(*ControlMessageFormat)(nil),                                  // 84: e2sm_ccc.v1.ControlMessageFormat
	(*E2SmCCcControlMessageFormat1)(nil),                          // 85: e2sm_ccc.v1.E2SmCCcControlMessageFormat1
	(*ListOfConfigurationStructures)(nil),                         // 86: e2sm_ccc.v1.ListOfConfigurationStructures
	(*ConfigurationStructureWrite)(nil),                           // 87: e2sm_ccc.v1.ConfigurationStructureWrite
	(*E2SmCCcControlMessageFormat2)(nil),                          // 88: e2sm_ccc.v1.E2SmCCcControlMessageFormat2
	(*ListOfCells)(nil),                                           // 89: e2sm_ccc.v1.ListOfCells
	(*CellControlled)(nil),                                        // 90: e2sm_ccc.v1.CellControlled
	(*E2SmCCcRAnfunctionDefinition)(nil),                          // 91: e2sm_ccc.v1.E2SmCCcRAnfunctionDefinition
	(*ListOfSupportedRanconfigurationStructures)(nil),             // 92: e2sm_ccc.v1.ListOfSupportedRanconfigurationStructures
	(*RanconfigurationStructure)(nil),                             // 93: e2sm_ccc.v1.RanconfigurationStructure
	(*ListOfSupportedAttributes)(nil),                             // 94: e2sm_ccc.v1.ListOfSupportedAttributes
	(*Attribute)(nil),                                             // 95: e2sm_ccc.v1.Attribute
	(*Ricservices)(nil),                                           // 96: e2sm_ccc.v1.Ricservices
	(*EventTrigger)(nil),                                          // 97: e2sm_ccc.v1.EventTrigger
	(*ListOfSupportedEventTriggerStyles)(nil),                     // 98: e2sm_ccc.v1.ListOfSupportedEventTriggerStyles
	(*EventTriggerStyle)(nil),                                     // 99: e2sm_ccc.v1.EventTriggerStyle
	(*ReportService)(nil),                                         // 100: e2sm_ccc.v1.ReportService
	(*ListOfSupportedReportStyles)(nil),                           // 101: e2sm_ccc.v1.ListOfSupportedReportStyles
	(*ReportStyle)(nil),                                           // 102: e2sm_ccc.v1.ReportStyle
	(*ListOfSupportedEventTriggerStylesForReportStyle)(nil),       // 103: e2sm_ccc.v1.ListOfSupportedEventTriggerStylesForReportStyle
	(*EventTriggerStyleType)(nil),                                 // 104: e2sm_ccc.v1.EventTriggerStyleType
	(*InsertService)(nil),                                         // 105: e2sm_ccc.v1.InsertService
	(*ControlService)(nil),                                        // 106: e2sm_ccc.v1.ControlService
	(*ListOfSupportedControlStyles)(nil),                          // 107: e2sm_ccc.v1.ListOfSupportedControlStyles
	(*ControlStyle)(nil),                                          // 108: e2sm_ccc.v1.ControlStyle
	(*PolicyService)(nil),                                         // 109: e2sm_ccc.v1.PolicyService
	(*ListOfCellsForRanfunctionDefinition)(nil),                   // 110: e2sm_ccc.v1.ListOfCellsForRanfunctionDefinition
	(*CellForRanfunctionDefinition)(nil),                          // 111: e2sm_ccc.v1.CellForRanfunctionDefinition
	(*E2SmCCcRIceventTriggerDefinition)(nil),                      // 112: e2sm_ccc.v1.E2SmCCcRIceventTriggerDefinition
	(*EventTriggerDefinitionFormat)(nil),                          // 113: e2sm_ccc.v1.EventTriggerDefinitionFormat
	(*E2SmCCcEventTriggerDefinitionFormat1)(nil),                  // 114: e2sm_ccc.v1.E2SmCCcEventTriggerDefinitionFormat1
	(*ListOfRanconfigurationStructuresForEventTrigger)(nil),       // 115: e2sm_ccc.v1.ListOfRanconfigurationStructuresForEventTrigger
	(*RanconfigurationStructureForEventTrigger)(nil),              // 116: e2sm_ccc.v1.RanconfigurationStructureForEventTrigger
	(*ListOfAttributes)(nil),                                      // 117: e2sm_ccc.v1.ListOfAttributes
	(*E2SmCCcEventTriggerDefinitionFormat2)(nil),                  // 118: e2sm_ccc.v1.E2SmCCcEventTriggerDefinitionFormat2
	(*ListOfCellLevelConfigurationStructuresForEventTrigger)(nil), // 119: e2sm_ccc.v1.ListOfCellLevelConfigurationStructuresForEventTrigger
	(*CellLevelConfigurationStructureForEventTrigger)(nil),        // 120: e2sm_ccc.v1.CellLevelConfigurationStructureForEventTrigger
	(*AttributeName)(nil),                                         // 121: e2sm_ccc.v1.AttributeName
	(*E2SmCCcEventTriggerDefinitionFormat3)(nil),                  // 122: e2sm_ccc.v1.E2SmCCcEventTriggerDefinitionFormat3
	(*E2SmCCcRIcactionDefinition)(nil),                            // 123: e2sm_ccc.v1.E2SmCCcRIcactionDefinition
	(*ActionDefinitionFormat)(nil),                                // 124: e2sm_ccc.v1.ActionDefinitionFormat
	(*E2SmCCcActionDefinitionFormat1)(nil),                        // 125: e2sm_ccc.v1.E2SmCCcActionDefinitionFormat1
	(*ListOfRanconfigurationStructuresForAdf)(nil),                // 126: e2sm_ccc.v1.ListOfRanconfigurationStructuresForAdf
	(*RanconfigurationStructureForAdf)(nil),                       // 127: e2sm_ccc.v1.RanconfigurationStructureForAdf
	(*E2SmCCcActionDefinitionFormat2)(nil),                        // 128: e2sm_ccc.v1.E2SmCCcActionDefinitionFormat2
	(*ListOfCellConfigurationsToBeReportedForAdf)(nil),            // 129: e2sm_ccc.v1.ListOfCellConfigurationsToBeReportedForAdf
	(*CellConfigurationToBeReportedForAdf)(nil),                   // 130: e2sm_ccc.v1.CellConfigurationToBeReportedForAdf
	(*e2sm_common_ies.SNSsai)(nil),                                // 131: e2sm_ccc.v1.SNSsai
	(*e2sm_common_ies.Plmnidentity)(nil),                          // 132: e2sm_ccc.v1.Plmnidentity
	(*e2sm_common_ies.NrCGi)(nil),                                 // 133: e2sm_ccc.v1.NrCGi
	(*e2sm_common_ies.EutraCGi)(nil),                              // 134: e2sm_ccc.v1.EutraCGi
	(*e2sm_common_ies.RicStyleType)(nil),                          // 135: e2sm_ccc.v1.RicStyleType
	(*e2sm_common_ies.RanfunctionName)(nil),                       // 136: e2sm_ccc.v1.RanfunctionName
	(*e2sm_common_ies.RicStyleName)(nil),                          // 137: e2sm_ccc.v1.RicStyleName
	(*e2sm_common_ies.RicFormatType)(nil),                         // 138: e2sm_ccc.v1.RicFormatType
	(*emptypb.Empty)(nil),                                         // 139: google.protobuf.Empty
}
var file_e2sm_ccc_v1_e2sm_ccc_proto_depIdxs = []int32{
	131, // 0: e2sm_ccc.v1.SnssaiList.value:type_name -> e2sm_ccc.v1.SNSsai
	132, // 1: e2sm_ccc.v1.PlmnIdList.value:type_name -> e2sm_ccc.v1.Plmnidentity
	132, // 2: e2sm_ccc.v1.PlmnInfo.plmn_id:type_name -> e2sm_ccc.v1.Plmnidentity
	131, // 3: e2sm_ccc.v1.PlmnInfo.snssai:type_name -> e2sm_ccc.v1.SNSsai
	45,  // 4: e2sm_ccc.v1.PlmnInfoList.value:type_name -> e2sm_ccc.v1.PlmnInfo
	47,  // 5: e2sm_ccc.v1.GgnbIdList.value:type_name -> e2sm_ccc.v1.GgnbId
	48,  // 6: e2sm_ccc.v1.GenbIdList.value:type_name -> e2sm_ccc.v1.GenbId
	132, // 7: e2sm_ccc.v1.Tai.plmn_id:type_name -> e2sm_ccc.v1.Plmnidentity
	52,  // 8: e2sm_ccc.v1.Tai.nr_tac:type_name -> e2sm_ccc.v1.NrTac
	132, // 9: e2sm_ccc.v1.RrmPolicyMember.plmn_id:type_name -> e2sm_ccc.v1.Plmnidentity
	131, // 10: e2sm_ccc.v1.RrmPolicyMember.snssai:type_name -> e2sm_ccc.v1.SNSsai
	54,  // 11: e2sm_ccc.v1.RrmPolicyMemberList.value:type_name -> e2sm_ccc.v1.RrmPolicyMember
	38,  // 12: e2sm_ccc.v1.OGnbCuCpFunction.gnb_id:type_name -> e2sm_ccc.v1.GnbId
	39,  // 13: e2sm_ccc.v1.OGnbCuCpFunction.gnb_id_length:type_name -> e2sm_ccc.v1.GnbIdLength
	40,  // 14: e2sm_ccc.v1.OGnbCuCpFunction.gnb_cu_name:type_name -> e2sm_ccc.v1.GnbName
	132, // 15: e2sm_ccc.v1.OGnbCuCpFunction.plmn_id:type_name -> e2sm_ccc.v1.Plmnidentity
	50,  // 16: e2sm_ccc.v1.OGnbCuCpFunction.x2_exclude_list:type_name -> e2sm_ccc.v1.GenbIdList
	49,  // 17: e2sm_ccc.v1.OGnbCuCpFunction.xn_exclude_list:type_name -> e2sm_ccc.v1.GgnbIdList
	50,  // 18: e2sm_ccc.v1.OGnbCuCpFunction.x2_include_list:type_name -> e2sm_ccc.v1.GenbIdList
	49,  // 19: e2sm_ccc.v1.OGnbCuCpFunction.xn_include_list:type_name -> e2sm_ccc.v1.GgnbIdList
	50,  // 20: e2sm_ccc.v1.OGnbCuCpFunction.x2_xn_hoexclude_list:type_name -> e2sm_ccc.v1.GenbIdList
	38,  // 21: e2sm_ccc.v1.OGnbCuUpFunction.gnb_id:type_name -> e2sm_ccc.v1.GnbId
	39,  // 22: e2sm_ccc.v1.OGnbCuUpFunction.gnb_id_length:type_name -> e2sm_ccc.v1.GnbIdLength
	42,  // 23: e2sm_ccc.v1.OGnbCuUpFunction.gnb_cu_up_id:type_name -> e2sm_ccc.v1.GnbCuUpId
	46,  // 24: e2sm_ccc.v1.OGnbCuUpFunction.plmn_info_list:type_name -> e2sm_ccc.v1.PlmnInfoList
	41,  // 25: e2sm_ccc.v1.OGnbDuFunction.gnb_du_id:type_name -> e2sm_ccc.v1.GnbDuId
	40,  // 26: e2sm_ccc.v1.OGnbDuFunction.gnb_du_name:type_name -> e2sm_ccc.v1.GnbName
	38,  // 27: e2sm_ccc.v1.OGnbDuFunction.gnb_id:type_name -> e2sm_ccc.v1.GnbId
	39,  // 28: e2sm_ccc.v1.OGnbDuFunction.gnb_id_length:type_name -> e2sm_ccc.v1.GnbIdLength
	59,  // 29: e2sm_ccc.v1.ONrCellCu.cell_local_id:type_name -> e2sm_ccc.v1.CellLocalId
	46,  // 30: e2sm_ccc.v1.ONrCellCu.plmn_info_list:type_name -> e2sm_ccc.v1.PlmnInfoList
	64,  // 31: e2sm_ccc.v1.BwpList.value:type_name -> e2sm_ccc.v1.OBwp
	59,  // 32: e2sm_ccc.v1.ONrCellDu.cell_local_id:type_name -> e2sm_ccc.v1.CellLocalId
	0,   // 33: e2sm_ccc.v1.ONrCellDu.cell_state:type_name -> e2sm_ccc.v1.CellState
	46,  // 34: e2sm_ccc.v1.ONrCellDu.plmn_info_list:type_name -> e2sm_ccc.v1.PlmnInfoList
	51,  // 35: e2sm_ccc.v1.ONrCellDu.nr_pci:type_name -> e2sm_ccc.v1.NrPci
	52,  // 36: e2sm_ccc.v1.ONrCellDu.nr_tac:type_name -> e2sm_ccc.v1.NrTac
	9,   // 37: e2sm_ccc.v1.ONrCellDu.ssb_periodicity:type_name -> e2sm_ccc.v1.SsbPeriodicity
	11,  // 38: e2sm_ccc.v1.ONrCellDu.ssb_sub_carrier_spacing:type_name -> e2sm_ccc.v1.SsbSubCarrierSpacing
	10,  // 39: e2sm_ccc.v1.ONrCellDu.ssb_duration:type_name -> e2sm_ccc.v1.SsbDuration
	61,  // 40: e2sm_ccc.v1.ONrCellDu.bwp_list:type_name -> e2sm_ccc.v1.BwpList
	7,   // 41: e2sm_ccc.v1.ORRmpolicyRatio.resource_type:type_name -> e2sm_ccc.v1.ResourceType
	8,   // 42: e2sm_ccc.v1.ORRmpolicyRatio.scheduler_type:type_name -> e2sm_ccc.v1.SchedulerType
	55,  // 43: e2sm_ccc.v1.ORRmpolicyRatio.r_rmpolicy_member_list:type_name -> e2sm_ccc.v1.RrmPolicyMemberList
	2,   // 44: e2sm_ccc.v1.OBwp.bwp_context:type_name -> e2sm_ccc.v1.BwpContext
	3,   // 45: e2sm_ccc.v1.OBwp.is_initial_bwp:type_name -> e2sm_ccc.v1.IsInitialBwp
	12,  // 46: e2sm_ccc.v1.OBwp.sub_carrier_spacing:type_name -> e2sm_ccc.v1.SubCarrierSpacing
	1,   // 47: e2sm_ccc.v1.OBwp.cyclic_prefix:type_name -> e2sm_ccc.v1.CyclicPrefix
	56,  // 48: e2sm_ccc.v1.RanConfigurationStructure.o_gnb_cu_cp_function:type_name -> e2sm_ccc.v1.OGnbCuCpFunction
	57,  // 49: e2sm_ccc.v1.RanConfigurationStructure.o_gnb_cu_up_function:type_name -> e2sm_ccc.v1.OGnbCuUpFunction
	58,  // 50: e2sm_ccc.v1.RanConfigurationStructure.o_gnb_du_function:type_name -> e2sm_ccc.v1.OGnbDuFunction
	60,  // 51: e2sm_ccc.v1.RanConfigurationStructure.o_nr_cell_cu:type_name -> e2sm_ccc.v1.ONrCellCu
	62,  // 52: e2sm_ccc.v1.RanConfigurationStructure.o_nr_cell_du:type_name -> e2sm_ccc.v1.ONrCellDu
	63,  // 53: e2sm_ccc.v1.RanConfigurationStructure.o_rrmpolicy_ratio:type_name -> e2sm_ccc.v1.ORRmpolicyRatio
	64,  // 54: e2sm_ccc.v1.RanConfigurationStructure.o_bwp:type_name -> e2sm_ccc.v1.OBwp
	67,  // 55: e2sm_ccc.v1.E2SmCCcRIcIndicationHeader.indication_header_format:type_name -> e2sm_ccc.v1.IndicationHeaderFormat
	68,  // 56: e2sm_ccc.v1.IndicationHeaderFormat.e2_sm_ccc_indication_header_format1:type_name -> e2sm_ccc.v1.E2SmCCcIndicationHeaderFormat1
	4,   // 57: e2sm_ccc.v1.E2SmCCcIndicationHeaderFormat1.indication_reason:type_name -> e2sm_ccc.v1.IndicationReason
	70,  // 58: e2sm_ccc.v1.E2SmCCcRIcIndicationMessage.indication_message_format:type_name -> e2sm_ccc.v1.IndicationMessageFormat
	71,  // 59: e2sm_ccc.v1.IndicationMessageFormat.e2_sm_ccc_indication_message_format1:type_name -> e2sm_ccc.v1.E2SmCCcIndicationMessageFormat1
	76,  // 60: e2sm_ccc.v1.IndicationMessageFormat.e2_sm_ccc_indication_message_format2:type_name -> e2sm_ccc.v1.E2SmCCcIndicationMessageFormat2
	72,  // 61: e2sm_ccc.v1.E2SmCCcIndicationMessageFormat1.list_of_configuration_structures_reported:type_name -> e2sm_ccc.v1.ListOfConfigurationsReported
	73,  // 62: e2sm_ccc.v1.ListOfConfigurationsReported.value:type_name -> e2sm_ccc.v1.ConfigurationStructure
	5,   // 63: e2sm_ccc.v1.ConfigurationStructure.change_type:type_name -> e2sm_ccc.v1.ChangeType
	74,  // 64: e2sm_ccc.v1.ConfigurationStructure.ran_configuration_structure_name:type_name -> e2sm_ccc.v1.RanConfigurationStructureName
	75,  // 65: e2sm_ccc.v1.ConfigurationStructure.values_of_attributes:type_name -> e2sm_ccc.v1.ValuesOfAttributes
	75,  // 66: e2sm_ccc.v1.ConfigurationStructure.old_values_of_attributes:type_name -> e2sm_ccc.v1.ValuesOfAttributes
	65,  // 67: e2sm_ccc.v1.ValuesOfAttributes.ran_configuration_structure:type_name -> e2sm_ccc.v1.RanConfigurationStructure
	77,  // 68: e2sm_ccc.v1.E2SmCCcIndicationMessageFormat2.list_of_cells_reported:type_name -> e2sm_ccc.v1.ListOfCellsReported
	78,  // 69: e2sm_ccc.v1.ListOfCellsReported.value:type_name -> e2sm_ccc.v1.CellReported
	79,  // 70: e2sm_ccc.v1.CellReported.cell_global_id:type_name -> e2sm_ccc.v1.CellGlobalId
	72,  // 71: e2sm_ccc.v1.CellReported.list_of_configuration_structures_reported:type_name -> e2sm_ccc.v1.ListOfConfigurationsReported
	133, // 72: e2sm_ccc.v1.CellGlobalId.n_r_cgi:type_name -> e2sm_ccc.v1.NrCGi
	134, // 73: e2sm_ccc.v1.CellGlobalId.e_utra_cgi:type_name -> e2sm_ccc.v1.EutraCGi
	81,  // 74: e2sm_ccc.v1.E2SmCCcRIcControlHeader.control_header_format:type_name -> e2sm_ccc.v1.ControlHeaderFormat
	82,  // 75: e2sm_ccc.v1.ControlHeaderFormat.e2_sm_ccc_control_header_format1:type_name -> e2sm_ccc.v1.E2SmCCcControlHeaderFormat1
	135, // 76: e2sm_ccc.v1.E2SmCCcControlHeaderFormat1.ric_style_type:type_name -> e2sm_ccc.v1.RicStyleType
	84,  // 77: e2sm_ccc.v1.E2SmCCcRIcControlMessage.control_message_format:type_name -> e2sm_ccc.v1.ControlMessageFormat
	85,  // 78: e2sm_ccc.v1.ControlMessageFormat.e2_sm_ccc_control_message_format1:type_name -> e2sm_ccc.v1.E2SmCCcControlMessageFormat1
	88,  // 79: e2sm_ccc.v1.ControlMessageFormat.e2_sm_ccc_control_message_format2:type_name -> e2sm_ccc.v1.E2SmCCcControlMessageFormat2
	86,  // 80: e2sm_ccc.v1.E2SmCCcControlMessageFormat1.list_of_configuration_structures:type_name -> e2sm_ccc.v1.ListOfConfigurationStructures
	87,  // 81: e2sm_ccc.v1.ListOfConfigurationStructures.value:type_name -> e2sm_ccc.v1.ConfigurationStructureWrite
	74,  // 82: e2sm_ccc.v1.ConfigurationStructureWrite.ran_configuration_structure_name:type_name -> e2sm_ccc.v1.RanConfigurationStructureName
	75,  // 83: e2sm_ccc.v1.ConfigurationStructureWrite.old_values_of_attributes:type_name -> e2sm_ccc.v1.ValuesOfAttributes
	75,  // 84: e2sm_ccc.v1.ConfigurationStructureWrite.new_values_of_attributes:type_name -> e2sm_ccc.v1.ValuesOfAttributes
	89,  // 85: e2sm_ccc.v1.E2SmCCcControlMessageFormat2.list_of_cells_reported:type_name -> e2sm_ccc.v1.ListOfCells
	90,  // 86: e2sm_ccc.v1.ListOfCells.value:type_name -> e2sm_ccc.v1.CellControlled
	79,  // 87: e2sm_ccc.v1.CellControlled.cell_global_id:type_name -> e2sm_ccc.v1.CellGlobalId
	86,  // 88: e2sm_ccc.v1.CellControlled.list_of_configuration_structures:type_name -> e2sm_ccc.v1.ListOfConfigurationStructures
	136, // 89: e2sm_ccc.v1.E2SmCCcRAnfunctionDefinition.ran_function_name:type_name -> e2sm_ccc.v1.RanfunctionName
	92,  // 90: e2sm_ccc.v1.E2SmCCcRAnfunctionDefinition.list_of_supported_node_level_configuration_structures:type_name -> e2sm_ccc.v1.ListOfSupportedRanconfigurationStructures
	110, // 91: e2sm_ccc.v1.E2SmCCcRAnfunctionDefinition.list_of_cells_for_ranfunction_definition:type_name -> e2sm_ccc.v1.ListOfCellsForRanfunctionDefinition
	93,  // 92: e2sm_ccc.v1.ListOfSupportedRanconfigurationStructures.value:type_name -> e2sm_ccc.v1.RanconfigurationStructure
	74,  // 93: e2sm_ccc.v1.RanconfigurationStructure.ran_configuration_structure_name:type_name -> e2sm_ccc.v1.RanConfigurationStructureName
	94,  // 94: e2sm_ccc.v1.RanconfigurationStructure.list_of_supported_attributes:type_name -> e2sm_ccc.v1.ListOfSupportedAttributes
	95,  // 95: e2sm_ccc.v1.ListOfSupportedAttributes.value:type_name -> e2sm_ccc.v1.Attribute
	121, // 96: e2sm_ccc.v1.Attribute.attribute_name:type_name -> e2sm_ccc.v1.AttributeName
	96,  // 97: e2sm_ccc.v1.Attribute.supported_services:type_name -> e2sm_ccc.v1.Ricservices
	97,  // 98: e2sm_ccc.v1.Ricservices.event_trigger:type_name -> e2sm_ccc.v1.EventTrigger
	100, // 99: e2sm_ccc.v1.Ricservices.report_service:type_name -> e2sm_ccc.v1.ReportService
	105, // 100: e2sm_ccc.v1.Ricservices.insert_service:type_name -> e2sm_ccc.v1.InsertService
	106, // 101: e2sm_ccc.v1.Ricservices.control_service:type_name -> e2sm_ccc.v1.ControlService
	109, // 102: e2sm_ccc.v1.Ricservices.policy_service:type_name -> e2sm_ccc.v1.PolicyService
	98,  // 103: e2sm_ccc.v1.EventTrigger.list_of_supported_event_trigger_styles:type_name -> e2sm_ccc.v1.ListOfSupportedEventTriggerStyles
	99,  // 104: e2sm_ccc.v1.ListOfSupportedEventTriggerStyles.value:type_name -> e2sm_ccc.v1.EventTriggerStyle
	135, // 105: e2sm_ccc.v1.EventTriggerStyle.event_trigger_style_type:type_name -> e2sm_ccc.v1.RicStyleType
	137, // 106: e2sm_ccc.v1.EventTriggerStyle.event_trigger_style_name:type_name -> e2sm_ccc.v1.RicStyleName
	138, // 107: e2sm_ccc.v1.EventTriggerStyle.event_trigger_format_type:type_name -> e2sm_ccc.v1.RicFormatType
	101, // 108: e2sm_ccc.v1.ReportService.list_of_supported_report_styles:type_name -> e2sm_ccc.v1.ListOfSupportedReportStyles
	102, // 109: e2sm_ccc.v1.ListOfSupportedReportStyles.value:type_name -> e2sm_ccc.v1.ReportStyle
	135, // 110: e2sm_ccc.v1.ReportStyle.report_service_style_type:type_name -> e2sm_ccc.v1.RicStyleType
	137, // 111: e2sm_ccc.v1.ReportStyle.report_service_style_name:type_name -> e2sm_ccc.v1.RicStyleName
	103, // 112: e2sm_ccc.v1.ReportStyle.list_of_supported_event_trigger_styles_for_report_style:type_name -> e2sm_ccc.v1.ListOfSupportedEventTriggerStylesForReportStyle
	138, // 113: e2sm_ccc.v1.ReportStyle.report_service_action_definition_format_type:type_name -> e2sm_ccc.v1.RicFormatType
	138, // 114: e2sm_ccc.v1.ReportStyle.report_service_indication_header_format_type:type_name -> e2sm_ccc.v1.RicFormatType
	138, // 115: e2sm_ccc.v1.ReportStyle.report_service_indication_message_format_type:type_name -> e2sm_ccc.v1.RicFormatType
	104, // 116: e2sm_ccc.v1.ListOfSupportedEventTriggerStylesForReportStyle.value:type_name -> e2sm_ccc.v1.EventTriggerStyleType
	135, // 117: e2sm_ccc.v1.EventTriggerStyleType.event_trigger_style_type:type_name -> e2sm_ccc.v1.RicStyleType
	139, // 118: e2sm_ccc.v1.InsertService.value:type_name -> google.protobuf.Empty
	107, // 119: e2sm_ccc.v1.ControlService.list_of_supported_control_styles:type_name -> e2sm_ccc.v1.ListOfSupportedControlStyles
	108, // 120: e2sm_ccc.v1.ListOfSupportedControlStyles.value:type_name -> e2sm_ccc.v1.ControlStyle
	135, // 121: e2sm_ccc.v1.ControlStyle.control_service_style_type:type_name -> e2sm_ccc.v1.RicStyleType
	137, // 122: e2sm_ccc.v1.ControlStyle.control_service_style_name:type_name -> e2sm_ccc.v1.RicStyleName
	138, // 123: e2sm_ccc.v1.ControlStyle.control_service_header_format_type:type_name -> e2sm_ccc.v1.RicFormatType
	138, // 124: e2sm_ccc.v1.ControlStyle.control_service_message_format_type:type_name -> e2sm_ccc.v1.RicFormatType
	138, // 125: e2sm_ccc.v1.ControlStyle.ric_call_process_idformat_type:type_name -> e2sm_ccc.v1.RicFormatType
	138, // 126: e2sm_ccc.v1.ControlStyle.control_service_control_outcome_format_type:type_name -> e2sm_ccc.v1.RicFormatType
	139, // 127: e2sm_ccc.v1.PolicyService.value:type_name -> google.protobuf.Empty
	111, // 128: e2sm_ccc.v1.ListOfCellsForRanfunctionDefinition.value:type_name -> e2sm_ccc.v1.CellForRanfunctionDefinition
	79,  // 129: e2sm_ccc.v1.CellForRanfunctionDefinition.cell_global_id:type_name -> e2sm_ccc.v1.CellGlobalId
	92,  // 130: e2sm_ccc.v1.CellForRanfunctionDefinition.list_of_supported_cell_level_ranconfiguration_structures:type_name -> e2sm_ccc.v1.ListOfSupportedRanconfigurationStructures
	113, // 131: e2sm_ccc.v1.E2SmCCcRIceventTriggerDefinition.event_trigger_definition_format:type_name -> e2sm_ccc.v1.EventTriggerDefinitionFormat
	114, // 132: e2sm_ccc.v1.EventTriggerDefinitionFormat.e2_sm_ccc_event_trigger_definition_format1:type_name -> e2sm_ccc.v1.E2SmCCcEventTriggerDefinitionFormat1
	118, // 133: e2sm_ccc.v1.EventTriggerDefinitionFormat.e2_sm_ccc_event_trigger_definition_format2:type_name -> e2sm_ccc.v1.E2SmCCcEventTriggerDefinitionFormat2
	122, // 134: e2sm_ccc.v1.EventTriggerDefinitionFormat.e2_sm_ccc_event_trigger_definition_format3:type_name -> e2sm_ccc.v1.E2SmCCcEventTriggerDefinitionFormat3
	115, // 135: e2sm_ccc.v1.E2SmCCcEventTriggerDefinitionFormat1.list_of_node_level_configuration_structures_for_event_trigger:type_name -> e2sm_ccc.v1.ListOfRanconfigurationStructuresForEventTrigger
	116, // 136: e2sm_ccc.v1.ListOfRanconfigurationStructuresForEventTrigger.value:type_name -> e2sm_ccc.v1.RanconfigurationStructureForEventTrigger
	74,  // 137: e2sm_ccc.v1.RanconfigurationStructureForEventTrigger.ran_configuration_structure_name:type_name -> e2sm_ccc.v1.RanConfigurationStructureName
	117, // 138: e2sm_ccc.v1.RanconfigurationStructureForEventTrigger.list_of_attributes:type_name -> e2sm_ccc.v1.ListOfAttributes
	121, // 139: e2sm_ccc.v1.ListOfAttributes.value:type_name -> e2sm_ccc.v1.AttributeName
	119, // 140: e2sm_ccc.v1.E2SmCCcEventTriggerDefinitionFormat2.list_of_cell_level_configuration_structures_for_event_trigger:type_name -> e2sm_ccc.v1.ListOfCellLevelConfigurationStructuresForEventTrigger
	120, // 141: e2sm_ccc.v1.ListOfCellLevelConfigurationStructuresForEventTrigger.value:type_name -> e2sm_ccc.v1.CellLevelConfigurationStructureForEventTrigger
	79,  // 142: e2sm_ccc.v1.CellLevelConfigurationStructureForEventTrigger.cell_global_id:type_name -> e2sm_ccc.v1.CellGlobalId
	115, // 143: e2sm_ccc.v1.CellLevelConfigurationStructureForEventTrigger.list_of_ranconfiguration_structures_for_event_trigger:type_name -> e2sm_ccc.v1.ListOfRanconfigurationStructuresForEventTrigger
	135, // 144: e2sm_ccc.v1.E2SmCCcRIcactionDefinition.ric_style_type:type_name -> e2sm_ccc.v1.RicStyleType
	124, // 145: e2sm_ccc.v1.E2SmCCcRIcactionDefinition.action_definition_format:type_name -> e2sm_ccc.v1.ActionDefinitionFormat
	125, // 146: e2sm_ccc.v1.ActionDefinitionFormat.e2_sm_ccc_action_definition_format1:type_name -> e2sm_ccc.v1.E2SmCCcActionDefinitionFormat1
	128, // 147: e2sm_ccc.v1.ActionDefinitionFormat.e2_sm_ccc_action_definition_format2:type_name -> e2sm_ccc.v1.E2SmCCcActionDefinitionFormat2
	126, // 148: e2sm_ccc.v1.E2SmCCcActionDefinitionFormat1.list_of_node_level_ranconfiguration_structures_for_adf:type_name -> e2sm_ccc.v1.ListOfRanconfigurationStructuresForAdf
	127, // 149: e2sm_ccc.v1.ListOfRanconfigurationStructuresForAdf.value:type_name -> e2sm_ccc.v1.RanconfigurationStructureForAdf
	6,   // 150: e2sm_ccc.v1.RanconfigurationStructureForAdf.report_type:type_name -> e2sm_ccc.v1.ReportType
	74,  // 151: e2sm_ccc.v1.RanconfigurationStructureForAdf.ran_configuration_structure_name:type_name -> e2sm_ccc.v1.RanConfigurationStructureName
	117, // 152: e2sm_ccc.v1.RanconfigurationStructureForAdf.list_of_attributes:type_name -> e2sm_ccc.v1.ListOfAttributes
	129, // 153: e2sm_ccc.v1.E2SmCCcActionDefinitionFormat2.list_of_cell_configurations_to_be_reported_for_adf:type_name -> e2sm_ccc.v1.ListOfCellConfigurationsToBeReportedForAdf
	130, // 154: e2sm_ccc.v1.ListOfCellConfigurationsToBeReportedForAdf.value:type_name -> e2sm_ccc.v1.CellConfigurationToBeReportedForAdf
	79,  // 155: e2sm_ccc.v1.CellConfigurationToBeReportedForAdf.cell_global_id:type_name -> e2sm_ccc.v1.CellGlobalId
	126, // 156: e2sm_ccc.v1.CellConfigurationToBeReportedForAdf.list_of_cell_level_ranconfiguration_structures_for_adf:type_name -> e2sm_ccc.v1.ListOfRanconfigurationStructuresForAdf
	157, // [157:157] is the sub-list for method output_type
	157, // [157:157] is the sub-list for method input_type
	157, // [157:157] is the sub-list for extension type_name
	157, // [157:157] is the sub-list for extension extendee
	0,   // [0:157] is the sub-list for field type_name
}

func init() { file_e2sm_ccc_v1_e2sm_ccc_proto_init() }
func file_e2sm_ccc_v1_e2sm_ccc_proto_init() {
	if File_e2sm_ccc_v1_e2sm_ccc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofPlmninfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofRrmpolicyMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofConfigurationsReported); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofCellsReported); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofCells); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofCellsRanFunctionDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofConfigurations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofRicstyles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofEventTriggerStyles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofNodeLevelConfigStructures); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofAttributesToReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofConfigurationsToReportFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofConfigurationsToReportFormat2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofBwp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrofPhysicalResourceBlocks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofSliceItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinSizeGgnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxSizeGgnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofGgnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinSizeGenbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxSizeGenbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofGenbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinBandwidth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxBandwidth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnbIdLength); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnbName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnbDuId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnbCuUpId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnssaiList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlmnIdList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlmnInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlmnInfoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GgnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GgnbIdList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenbIdList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NrPci); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NrTac); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tai); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RrmPolicyMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RrmPolicyMemberList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OGnbCuCpFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OGnbCuUpFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OGnbDuFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellLocalId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ONrCellCu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BwpList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ONrCellDu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ORRmpolicyRatio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OBwp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanConfigurationStructure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmCCcRIcIndicationHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndicationHeaderFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmCCcIndicationHeaderFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmCCcRIcIndicationMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndicationMessageFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmCCcIndicationMessageFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOfConfigurationsReported); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationStructure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanConfigurationStructureName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValuesOfAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmCCcIndicationMessageFormat2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOfCellsReported); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellReported); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellGlobalId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmCCcRIcControlHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlHeaderFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmCCcControlHeaderFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmCCcRIcControlMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlMessageFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmCCcControlMessageFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOfConfigurationStructures); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationStructureWrite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmCCcControlMessageFormat2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOfCells); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellControlled); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmCCcRAnfunctionDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOfSupportedRanconfigurationStructures); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanconfigurationStructure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOfSupportedAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ricservices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOfSupportedEventTriggerStyles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventTriggerStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOfSupportedReportStyles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOfSupportedEventTriggerStylesForReportStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventTriggerStyleType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOfSupportedControlStyles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolicyService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOfCellsForRanfunctionDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellForRanfunctionDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmCCcRIceventTriggerDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventTriggerDefinitionFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmCCcEventTriggerDefinitionFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOfRanconfigurationStructuresForEventTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanconfigurationStructureForEventTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOfAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmCCcEventTriggerDefinitionFormat2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOfCellLevelConfigurationStructuresForEventTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellLevelConfigurationStructureForEventTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttributeName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmCCcEventTriggerDefinitionFormat3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmCCcRIcactionDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionDefinitionFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmCCcActionDefinitionFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOfRanconfigurationStructuresForAdf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanconfigurationStructureForAdf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmCCcActionDefinitionFormat2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOfCellConfigurationsToBeReportedForAdf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellConfigurationToBeReportedForAdf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[32].OneofWrappers = []interface{}{}
	file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[52].OneofWrappers = []interface{}{
		(*RanConfigurationStructure_OGnbCuCpFunction)(nil),
		(*RanConfigurationStructure_OGnbCuUpFunction)(nil),
		(*RanConfigurationStructure_OGnbDuFunction)(nil),
		(*RanConfigurationStructure_ONrCellCu)(nil),
		(*RanConfigurationStructure_ONrCellDu)(nil),
		(*RanConfigurationStructure_ORrmpolicyRatio)(nil),
		(*RanConfigurationStructure_OBwp)(nil),
	}
	file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[54].OneofWrappers = []interface{}{
		(*IndicationHeaderFormat_E2SmCccIndicationHeaderFormat1)(nil),
	}
	file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[57].OneofWrappers = []interface{}{
		(*IndicationMessageFormat_E2SmCccIndicationMessageFormat1)(nil),
		(*IndicationMessageFormat_E2SmCccIndicationMessageFormat2)(nil),
	}
	file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[60].OneofWrappers = []interface{}{}
	file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[66].OneofWrappers = []interface{}{
		(*CellGlobalId_NRCgi)(nil),
		(*CellGlobalId_EUtraCgi)(nil),
	}
	file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[68].OneofWrappers = []interface{}{
		(*ControlHeaderFormat_E2SmCccControlHeaderFormat1)(nil),
	}
	file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[71].OneofWrappers = []interface{}{
		(*ControlMessageFormat_E2SmCccControlMessageFormat1)(nil),
		(*ControlMessageFormat_E2SmCccControlMessageFormat2)(nil),
	}
	file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[78].OneofWrappers = []interface{}{}
	file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[80].OneofWrappers = []interface{}{}
	file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[83].OneofWrappers = []interface{}{}
	file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[95].OneofWrappers = []interface{}{}
	file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[98].OneofWrappers = []interface{}{}
	file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[100].OneofWrappers = []interface{}{
		(*EventTriggerDefinitionFormat_E2SmCccEventTriggerDefinitionFormat1)(nil),
		(*EventTriggerDefinitionFormat_E2SmCccEventTriggerDefinitionFormat2)(nil),
		(*EventTriggerDefinitionFormat_E2SmCccEventTriggerDefinitionFormat3)(nil),
	}
	file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[103].OneofWrappers = []interface{}{}
	file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[111].OneofWrappers = []interface{}{
		(*ActionDefinitionFormat_E2SmCccActionDefinitionFormat1)(nil),
		(*ActionDefinitionFormat_E2SmCccActionDefinitionFormat2)(nil),
	}
	file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[114].OneofWrappers = []interface{}{}
	file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes[117].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_e2sm_ccc_v1_e2sm_ccc_proto_rawDesc,
			NumEnums:      13,
			NumMessages:   118,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_e2sm_ccc_v1_e2sm_ccc_proto_goTypes,
		DependencyIndexes: file_e2sm_ccc_v1_e2sm_ccc_proto_depIdxs,
		EnumInfos:         file_e2sm_ccc_v1_e2sm_ccc_proto_enumTypes,
		MessageInfos:      file_e2sm_ccc_v1_e2sm_ccc_proto_msgTypes,
	}.Build()
	File_e2sm_ccc_v1_e2sm_ccc_proto = out.File
	file_e2sm_ccc_v1_e2sm_ccc_proto_rawDesc = nil
	file_e2sm_ccc_v1_e2sm_ccc_proto_goTypes = nil
	file_e2sm_ccc_v1_e2sm_ccc_proto_depIdxs = nil
}
