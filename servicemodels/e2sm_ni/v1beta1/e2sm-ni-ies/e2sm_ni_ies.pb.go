// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: e2sm_ni/v1beta1/e2sm_ni_ies.proto

package e2smniies

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// enumerated from e2sm-ni-v01.00.asn1:106
type Criticality int32

const (
	Criticality_CRITICALITY_REJECT Criticality = 0
	Criticality_CRITICALITY_IGNORE Criticality = 1
	Criticality_CRITICALITY_NOTIFY Criticality = 2
)

// Enum value maps for Criticality.
var (
	Criticality_name = map[int32]string{
		0: "CRITICALITY_REJECT",
		1: "CRITICALITY_IGNORE",
		2: "CRITICALITY_NOTIFY",
	}
	Criticality_value = map[string]int32{
		"CRITICALITY_REJECT": 0,
		"CRITICALITY_IGNORE": 1,
		"CRITICALITY_NOTIFY": 2,
	}
)

func (x Criticality) Enum() *Criticality {
	p := new(Criticality)
	*p = x
	return p
}

func (x Criticality) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Criticality) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_enumTypes[0].Descriptor()
}

func (Criticality) Type() protoreflect.EnumType {
	return &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_enumTypes[0]
}

func (x Criticality) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Criticality.Descriptor instead.
func (Criticality) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{0}
}

// enumerated from e2sm-ni-v01.00.asn1:108
type Presence int32

const (
	Presence_PRESENCE_OPTIONAL    Presence = 0
	Presence_PRESENCE_CONDITIONAL Presence = 1
	Presence_PRESENCE_MANDATORY   Presence = 2
)

// Enum value maps for Presence.
var (
	Presence_name = map[int32]string{
		0: "PRESENCE_OPTIONAL",
		1: "PRESENCE_CONDITIONAL",
		2: "PRESENCE_MANDATORY",
	}
	Presence_value = map[string]int32{
		"PRESENCE_OPTIONAL":    0,
		"PRESENCE_CONDITIONAL": 1,
		"PRESENCE_MANDATORY":   2,
	}
)

func (x Presence) Enum() *Presence {
	p := new(Presence)
	*p = x
	return p
}

func (x Presence) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Presence) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_enumTypes[1].Descriptor()
}

func (Presence) Type() protoreflect.EnumType {
	return &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_enumTypes[1]
}

func (x Presence) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Presence.Descriptor instead.
func (Presence) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{1}
}

// enumerated from e2sm-ni-v01.00.asn1:362
type NiDirection int32

const (
	NiDirection_NI_DIRECTION_INCOMING NiDirection = 0
	NiDirection_NI_DIRECTION_OUTGOING NiDirection = 1
	NiDirection_NI_DIRECTION_BOTH     NiDirection = 2
)

// Enum value maps for NiDirection.
var (
	NiDirection_name = map[int32]string{
		0: "NI_DIRECTION_INCOMING",
		1: "NI_DIRECTION_OUTGOING",
		2: "NI_DIRECTION_BOTH",
	}
	NiDirection_value = map[string]int32{
		"NI_DIRECTION_INCOMING": 0,
		"NI_DIRECTION_OUTGOING": 1,
		"NI_DIRECTION_BOTH":     2,
	}
)

func (x NiDirection) Enum() *NiDirection {
	p := new(NiDirection)
	*p = x
	return p
}

func (x NiDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NiDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_enumTypes[2].Descriptor()
}

func (NiDirection) Type() protoreflect.EnumType {
	return &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_enumTypes[2]
}

func (x NiDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NiDirection.Descriptor instead.
func (NiDirection) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{2}
}

// enumerated from e2sm-ni-v01.00.asn1:406
type TypeOfMessage int32

const (
	TypeOfMessage_TYPE_OF_MESSAGE_NOTHING              TypeOfMessage = 0
	TypeOfMessage_TYPE_OF_MESSAGE_INITIATING_MESSAGE   TypeOfMessage = 1
	TypeOfMessage_TYPE_OF_MESSAGE_SUCCESSFUL_OUTCOME   TypeOfMessage = 2
	TypeOfMessage_TYPE_OF_MESSAGE_UNSUCCESSFUL_OUTCOME TypeOfMessage = 3
)

// Enum value maps for TypeOfMessage.
var (
	TypeOfMessage_name = map[int32]string{
		0: "TYPE_OF_MESSAGE_NOTHING",
		1: "TYPE_OF_MESSAGE_INITIATING_MESSAGE",
		2: "TYPE_OF_MESSAGE_SUCCESSFUL_OUTCOME",
		3: "TYPE_OF_MESSAGE_UNSUCCESSFUL_OUTCOME",
	}
	TypeOfMessage_value = map[string]int32{
		"TYPE_OF_MESSAGE_NOTHING":              0,
		"TYPE_OF_MESSAGE_INITIATING_MESSAGE":   1,
		"TYPE_OF_MESSAGE_SUCCESSFUL_OUTCOME":   2,
		"TYPE_OF_MESSAGE_UNSUCCESSFUL_OUTCOME": 3,
	}
)

func (x TypeOfMessage) Enum() *TypeOfMessage {
	p := new(TypeOfMessage)
	*p = x
	return p
}

func (x TypeOfMessage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TypeOfMessage) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_enumTypes[3].Descriptor()
}

func (TypeOfMessage) Type() protoreflect.EnumType {
	return &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_enumTypes[3]
}

func (x TypeOfMessage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TypeOfMessage.Descriptor instead.
func (TypeOfMessage) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{3}
}

// enumerated from e2sm-ni-v01.00.asn1:419
type NiProtocolIeTest int32

const (
	NiProtocolIeTest_NI_PROTOCOL_IE_TEST_EQUAL       NiProtocolIeTest = 0
	NiProtocolIeTest_NI_PROTOCOL_IE_TEST_GREATERTHAN NiProtocolIeTest = 1
	NiProtocolIeTest_NI_PROTOCOL_IE_TEST_LESSTHAN    NiProtocolIeTest = 2
	NiProtocolIeTest_NI_PROTOCOL_IE_TEST_CONTAINS    NiProtocolIeTest = 3
	NiProtocolIeTest_NI_PROTOCOL_IE_TEST_PRESENT     NiProtocolIeTest = 4
)

// Enum value maps for NiProtocolIeTest.
var (
	NiProtocolIeTest_name = map[int32]string{
		0: "NI_PROTOCOL_IE_TEST_EQUAL",
		1: "NI_PROTOCOL_IE_TEST_GREATERTHAN",
		2: "NI_PROTOCOL_IE_TEST_LESSTHAN",
		3: "NI_PROTOCOL_IE_TEST_CONTAINS",
		4: "NI_PROTOCOL_IE_TEST_PRESENT",
	}
	NiProtocolIeTest_value = map[string]int32{
		"NI_PROTOCOL_IE_TEST_EQUAL":       0,
		"NI_PROTOCOL_IE_TEST_GREATERTHAN": 1,
		"NI_PROTOCOL_IE_TEST_LESSTHAN":    2,
		"NI_PROTOCOL_IE_TEST_CONTAINS":    3,
		"NI_PROTOCOL_IE_TEST_PRESENT":     4,
	}
)

func (x NiProtocolIeTest) Enum() *NiProtocolIeTest {
	p := new(NiProtocolIeTest)
	*p = x
	return p
}

func (x NiProtocolIeTest) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NiProtocolIeTest) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_enumTypes[4].Descriptor()
}

func (NiProtocolIeTest) Type() protoreflect.EnumType {
	return &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_enumTypes[4]
}

func (x NiProtocolIeTest) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NiProtocolIeTest.Descriptor instead.
func (NiProtocolIeTest) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{4}
}

// enumerated from e2sm-ni-v01.00.asn1:440
type NiType int32

const (
	NiType_NI_TYPE_S1 NiType = 0
	NiType_NI_TYPE_X2 NiType = 1
	NiType_NI_TYPE_NG NiType = 2
	NiType_NI_TYPE_XN NiType = 3
	NiType_NI_TYPE_F1 NiType = 4
	NiType_NI_TYPE_E1 NiType = 5
)

// Enum value maps for NiType.
var (
	NiType_name = map[int32]string{
		0: "NI_TYPE_S1",
		1: "NI_TYPE_X2",
		2: "NI_TYPE_NG",
		3: "NI_TYPE_XN",
		4: "NI_TYPE_F1",
		5: "NI_TYPE_E1",
	}
	NiType_value = map[string]int32{
		"NI_TYPE_S1": 0,
		"NI_TYPE_X2": 1,
		"NI_TYPE_NG": 2,
		"NI_TYPE_XN": 3,
		"NI_TYPE_F1": 4,
		"NI_TYPE_E1": 5,
	}
)

func (x NiType) Enum() *NiType {
	p := new(NiType)
	*p = x
	return p
}

func (x NiType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NiType) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_enumTypes[5].Descriptor()
}

func (NiType) Type() protoreflect.EnumType {
	return &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_enumTypes[5]
}

func (x NiType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NiType.Descriptor instead.
func (NiType) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{5}
}

// enumerated from e2sm-ni-v01.00.asn1:490
type RanparameterTestCondition int32

const (
	RanparameterTestCondition_RANPARAMETER_TEST_CONDITION_EQUAL       RanparameterTestCondition = 0
	RanparameterTestCondition_RANPARAMETER_TEST_CONDITION_GREATERTHAN RanparameterTestCondition = 1
	RanparameterTestCondition_RANPARAMETER_TEST_CONDITION_LESSTHAN    RanparameterTestCondition = 2
	RanparameterTestCondition_RANPARAMETER_TEST_CONDITION_CONTAINS    RanparameterTestCondition = 3
	RanparameterTestCondition_RANPARAMETER_TEST_CONDITION_PRESENT     RanparameterTestCondition = 4
)

// Enum value maps for RanparameterTestCondition.
var (
	RanparameterTestCondition_name = map[int32]string{
		0: "RANPARAMETER_TEST_CONDITION_EQUAL",
		1: "RANPARAMETER_TEST_CONDITION_GREATERTHAN",
		2: "RANPARAMETER_TEST_CONDITION_LESSTHAN",
		3: "RANPARAMETER_TEST_CONDITION_CONTAINS",
		4: "RANPARAMETER_TEST_CONDITION_PRESENT",
	}
	RanparameterTestCondition_value = map[string]int32{
		"RANPARAMETER_TEST_CONDITION_EQUAL":       0,
		"RANPARAMETER_TEST_CONDITION_GREATERTHAN": 1,
		"RANPARAMETER_TEST_CONDITION_LESSTHAN":    2,
		"RANPARAMETER_TEST_CONDITION_CONTAINS":    3,
		"RANPARAMETER_TEST_CONDITION_PRESENT":     4,
	}
)

func (x RanparameterTestCondition) Enum() *RanparameterTestCondition {
	p := new(RanparameterTestCondition)
	*p = x
	return p
}

func (x RanparameterTestCondition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RanparameterTestCondition) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_enumTypes[6].Descriptor()
}

func (RanparameterTestCondition) Type() protoreflect.EnumType {
	return &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_enumTypes[6]
}

func (x RanparameterTestCondition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RanparameterTestCondition.Descriptor instead.
func (RanparameterTestCondition) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{6}
}

// enumerated from e2sm-ni-v01.00.asn1:499
type RanparameterType int32

const (
	RanparameterType_RANPARAMETER_TYPE_INTEGER          RanparameterType = 0
	RanparameterType_RANPARAMETER_TYPE_ENUMERATED       RanparameterType = 1
	RanparameterType_RANPARAMETER_TYPE_BOOLEAN          RanparameterType = 2
	RanparameterType_RANPARAMETER_TYPE_BIT_STRING       RanparameterType = 3
	RanparameterType_RANPARAMETER_TYPE_OCTET_STRING     RanparameterType = 4
	RanparameterType_RANPARAMETER_TYPE_PRINTABLE_STRING RanparameterType = 5
)

// Enum value maps for RanparameterType.
var (
	RanparameterType_name = map[int32]string{
		0: "RANPARAMETER_TYPE_INTEGER",
		1: "RANPARAMETER_TYPE_ENUMERATED",
		2: "RANPARAMETER_TYPE_BOOLEAN",
		3: "RANPARAMETER_TYPE_BIT_STRING",
		4: "RANPARAMETER_TYPE_OCTET_STRING",
		5: "RANPARAMETER_TYPE_PRINTABLE_STRING",
	}
	RanparameterType_value = map[string]int32{
		"RANPARAMETER_TYPE_INTEGER":          0,
		"RANPARAMETER_TYPE_ENUMERATED":       1,
		"RANPARAMETER_TYPE_BOOLEAN":          2,
		"RANPARAMETER_TYPE_BIT_STRING":       3,
		"RANPARAMETER_TYPE_OCTET_STRING":     4,
		"RANPARAMETER_TYPE_PRINTABLE_STRING": 5,
	}
)

func (x RanparameterType) Enum() *RanparameterType {
	p := new(RanparameterType)
	*p = x
	return p
}

func (x RanparameterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RanparameterType) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_enumTypes[7].Descriptor()
}

func (RanparameterType) Type() protoreflect.EnumType {
	return &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_enumTypes[7]
}

func (x RanparameterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RanparameterType.Descriptor instead.
func (RanparameterType) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{7}
}

// sequence from e2sm-ni-v01.00.asn1:25
type GlobalEnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnIdentity *PlmnIdentity `protobuf:"bytes,1,opt,name=p_lmn_identity,json=pLmnIdentity,proto3" json:"p_lmn_identity,omitempty"`
	ENbId        *EnbId        `protobuf:"bytes,2,opt,name=e_nb_id,json=eNbId,proto3" json:"e_nb_id,omitempty"`
}

func (x *GlobalEnbId) Reset() {
	*x = GlobalEnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalEnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalEnbId) ProtoMessage() {}

func (x *GlobalEnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalEnbId.ProtoReflect.Descriptor instead.
func (*GlobalEnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{0}
}

func (x *GlobalEnbId) GetPLmnIdentity() *PlmnIdentity {
	if x != nil {
		return x.PLmnIdentity
	}
	return nil
}

func (x *GlobalEnbId) GetENbId() *EnbId {
	if x != nil {
		return x.ENbId
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:31
type EnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-ni-v01.00.asn1:31
	//
	// Types that are assignable to EnbId:
	//	*EnbId_MacroENbId
	//	*EnbId_HomeENbId
	//	*EnbId_ShortMacroENbId
	//	*EnbId_LongMacroENbId
	EnbId isEnbId_EnbId `protobuf_oneof:"enb_id"`
}

func (x *EnbId) Reset() {
	*x = EnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnbId) ProtoMessage() {}

func (x *EnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnbId.ProtoReflect.Descriptor instead.
func (*EnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{1}
}

func (m *EnbId) GetEnbId() isEnbId_EnbId {
	if m != nil {
		return m.EnbId
	}
	return nil
}

func (x *EnbId) GetMacroENbId() []byte {
	if x, ok := x.GetEnbId().(*EnbId_MacroENbId); ok {
		return x.MacroENbId
	}
	return nil
}

func (x *EnbId) GetHomeENbId() []byte {
	if x, ok := x.GetEnbId().(*EnbId_HomeENbId); ok {
		return x.HomeENbId
	}
	return nil
}

func (x *EnbId) GetShortMacroENbId() []byte {
	if x, ok := x.GetEnbId().(*EnbId_ShortMacroENbId); ok {
		return x.ShortMacroENbId
	}
	return nil
}

func (x *EnbId) GetLongMacroENbId() []byte {
	if x, ok := x.GetEnbId().(*EnbId_LongMacroENbId); ok {
		return x.LongMacroENbId
	}
	return nil
}

type isEnbId_EnbId interface {
	isEnbId_EnbId()
}

type EnbId_MacroENbId struct {
	MacroENbId []byte `protobuf:"bytes,1,opt,name=macro_e_nb_id,json=macroENbId,proto3,oneof"` //20
}

type EnbId_HomeENbId struct {
	HomeENbId []byte `protobuf:"bytes,2,opt,name=home_e_nb_id,json=homeENbId,proto3,oneof"` //28
}

type EnbId_ShortMacroENbId struct {
	ShortMacroENbId []byte `protobuf:"bytes,3,opt,name=short_macro_e_nb_id,json=shortMacroENbId,proto3,oneof"` //18
}

type EnbId_LongMacroENbId struct {
	LongMacroENbId []byte `protobuf:"bytes,4,opt,name=long_macro_e_nb_id,json=longMacroENbId,proto3,oneof"` //21
}

func (*EnbId_MacroENbId) isEnbId_EnbId() {}

func (*EnbId_HomeENbId) isEnbId_EnbId() {}

func (*EnbId_ShortMacroENbId) isEnbId_EnbId() {}

func (*EnbId_LongMacroENbId) isEnbId_EnbId() {}

// sequence from e2sm-ni-v01.00.asn1:39
type GlobalenGnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnIdentity *PlmnIdentity `protobuf:"bytes,1,opt,name=p_lmn_identity,json=pLmnIdentity,proto3" json:"p_lmn_identity,omitempty"`
	GNbId        *EngnbId      `protobuf:"bytes,2,opt,name=g_nb_id,json=gNbId,proto3" json:"g_nb_id,omitempty"`
}

func (x *GlobalenGnbId) Reset() {
	*x = GlobalenGnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalenGnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalenGnbId) ProtoMessage() {}

func (x *GlobalenGnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalenGnbId.ProtoReflect.Descriptor instead.
func (*GlobalenGnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{2}
}

func (x *GlobalenGnbId) GetPLmnIdentity() *PlmnIdentity {
	if x != nil {
		return x.PLmnIdentity
	}
	return nil
}

func (x *GlobalenGnbId) GetGNbId() *EngnbId {
	if x != nil {
		return x.GNbId
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:45
type EngnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-ni-v01.00.asn1:45
	//
	// Types that are assignable to EngnbId:
	//	*EngnbId_GNbId
	EngnbId isEngnbId_EngnbId `protobuf_oneof:"engnb_id"`
}

func (x *EngnbId) Reset() {
	*x = EngnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EngnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EngnbId) ProtoMessage() {}

func (x *EngnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EngnbId.ProtoReflect.Descriptor instead.
func (*EngnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{3}
}

func (m *EngnbId) GetEngnbId() isEngnbId_EngnbId {
	if m != nil {
		return m.EngnbId
	}
	return nil
}

func (x *EngnbId) GetGNbId() []byte {
	if x, ok := x.GetEngnbId().(*EngnbId_GNbId); ok {
		return x.GNbId
	}
	return nil
}

type isEngnbId_EngnbId interface {
	isEngnbId_EngnbId()
}

type EngnbId_GNbId struct {
	GNbId []byte `protobuf:"bytes,1,opt,name=g_nb_id,json=gNbId,proto3,oneof"` //22-32;
}

func (*EngnbId_GNbId) isEngnbId_EngnbId() {}

// range of Integer from e2sm-ni-v01.00.asn1:54
type GnbCuUpId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GnbCuUpId) Reset() {
	*x = GnbCuUpId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnbCuUpId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnbCuUpId) ProtoMessage() {}

func (x *GnbCuUpId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnbCuUpId.ProtoReflect.Descriptor instead.
func (*GnbCuUpId) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{4}
}

func (x *GnbCuUpId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm-ni-v01.00.asn1:59
type GnbDuId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GnbDuId) Reset() {
	*x = GnbDuId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnbDuId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnbDuId) ProtoMessage() {}

func (x *GnbDuId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnbDuId.ProtoReflect.Descriptor instead.
func (*GnbDuId) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{5}
}

func (x *GnbDuId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm-ni-v01.00.asn1:67
type GlobalgNbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlmnId *PlmnIdentity `protobuf:"bytes,1,opt,name=plmn_id,json=plmnId,proto3" json:"plmn_id,omitempty"`
	GnbId  *GnbIdChoice  `protobuf:"bytes,2,opt,name=gnb_id,json=gnbId,proto3" json:"gnb_id,omitempty"`
}

func (x *GlobalgNbId) Reset() {
	*x = GlobalgNbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalgNbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalgNbId) ProtoMessage() {}

func (x *GlobalgNbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalgNbId.ProtoReflect.Descriptor instead.
func (*GlobalgNbId) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{6}
}

func (x *GlobalgNbId) GetPlmnId() *PlmnIdentity {
	if x != nil {
		return x.PlmnId
	}
	return nil
}

func (x *GlobalgNbId) GetGnbId() *GnbIdChoice {
	if x != nil {
		return x.GnbId
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:72
type GnbIdChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-ni-v01.00.asn1:72
	//
	// Types that are assignable to GnbIdChoice:
	//	*GnbIdChoice_GnbId
	GnbIdChoice isGnbIdChoice_GnbIdChoice `protobuf_oneof:"gnb_id_choice"`
}

func (x *GnbIdChoice) Reset() {
	*x = GnbIdChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnbIdChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnbIdChoice) ProtoMessage() {}

func (x *GnbIdChoice) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnbIdChoice.ProtoReflect.Descriptor instead.
func (*GnbIdChoice) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{7}
}

func (m *GnbIdChoice) GetGnbIdChoice() isGnbIdChoice_GnbIdChoice {
	if m != nil {
		return m.GnbIdChoice
	}
	return nil
}

func (x *GnbIdChoice) GetGnbId() []byte {
	if x, ok := x.GetGnbIdChoice().(*GnbIdChoice_GnbId); ok {
		return x.GnbId
	}
	return nil
}

type isGnbIdChoice_GnbIdChoice interface {
	isGnbIdChoice_GnbIdChoice()
}

type GnbIdChoice_GnbId struct {
	GnbId []byte `protobuf:"bytes,1,opt,name=gnb_id,json=gnbId,proto3,oneof"` //22-32;
}

func (*GnbIdChoice_GnbId) isGnbIdChoice_GnbIdChoice() {}

// sequence from e2sm-ni-v01.00.asn1:78
type GlobalngeNbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlmnId *PlmnIdentity `protobuf:"bytes,1,opt,name=plmn_id,json=plmnId,proto3" json:"plmn_id,omitempty"`
	EnbId  *EnbIdChoice  `protobuf:"bytes,2,opt,name=enb_id,json=enbId,proto3" json:"enb_id,omitempty"`
}

func (x *GlobalngeNbId) Reset() {
	*x = GlobalngeNbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalngeNbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalngeNbId) ProtoMessage() {}

func (x *GlobalngeNbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalngeNbId.ProtoReflect.Descriptor instead.
func (*GlobalngeNbId) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{8}
}

func (x *GlobalngeNbId) GetPlmnId() *PlmnIdentity {
	if x != nil {
		return x.PlmnId
	}
	return nil
}

func (x *GlobalngeNbId) GetEnbId() *EnbIdChoice {
	if x != nil {
		return x.EnbId
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:84
type EnbIdChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-ni-v01.00.asn1:84
	//
	// Types that are assignable to EnbIdChoice:
	//	*EnbIdChoice_EnbIdMacro
	//	*EnbIdChoice_EnbIdShortmacro
	//	*EnbIdChoice_EnbIdLongmacro
	EnbIdChoice isEnbIdChoice_EnbIdChoice `protobuf_oneof:"enb_id_choice"`
}

func (x *EnbIdChoice) Reset() {
	*x = EnbIdChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnbIdChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnbIdChoice) ProtoMessage() {}

func (x *EnbIdChoice) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnbIdChoice.ProtoReflect.Descriptor instead.
func (*EnbIdChoice) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{9}
}

func (m *EnbIdChoice) GetEnbIdChoice() isEnbIdChoice_EnbIdChoice {
	if m != nil {
		return m.EnbIdChoice
	}
	return nil
}

func (x *EnbIdChoice) GetEnbIdMacro() []byte {
	if x, ok := x.GetEnbIdChoice().(*EnbIdChoice_EnbIdMacro); ok {
		return x.EnbIdMacro
	}
	return nil
}

func (x *EnbIdChoice) GetEnbIdShortmacro() []byte {
	if x, ok := x.GetEnbIdChoice().(*EnbIdChoice_EnbIdShortmacro); ok {
		return x.EnbIdShortmacro
	}
	return nil
}

func (x *EnbIdChoice) GetEnbIdLongmacro() []byte {
	if x, ok := x.GetEnbIdChoice().(*EnbIdChoice_EnbIdLongmacro); ok {
		return x.EnbIdLongmacro
	}
	return nil
}

type isEnbIdChoice_EnbIdChoice interface {
	isEnbIdChoice_EnbIdChoice()
}

type EnbIdChoice_EnbIdMacro struct {
	EnbIdMacro []byte `protobuf:"bytes,1,opt,name=enb_id_macro,json=enbIdMacro,proto3,oneof"` //20
}

type EnbIdChoice_EnbIdShortmacro struct {
	EnbIdShortmacro []byte `protobuf:"bytes,2,opt,name=enb_id_shortmacro,json=enbIdShortmacro,proto3,oneof"` //18
}

type EnbIdChoice_EnbIdLongmacro struct {
	EnbIdLongmacro []byte `protobuf:"bytes,3,opt,name=enb_id_longmacro,json=enbIdLongmacro,proto3,oneof"` //21;
}

func (*EnbIdChoice_EnbIdMacro) isEnbIdChoice_EnbIdChoice() {}

func (*EnbIdChoice_EnbIdShortmacro) isEnbIdChoice_EnbIdChoice() {}

func (*EnbIdChoice_EnbIdLongmacro) isEnbIdChoice_EnbIdChoice() {}

// sequence from e2sm-ni-v01.00.asn1:91
type GlobalNgRannodeId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-ni-v01.00.asn1:91
	//
	// Types that are assignable to GlobalNgRannodeId:
	//	*GlobalNgRannodeId_GNb
	//	*GlobalNgRannodeId_NgENb
	GlobalNgRannodeId isGlobalNgRannodeId_GlobalNgRannodeId `protobuf_oneof:"global_ng_rannode_id"`
}

func (x *GlobalNgRannodeId) Reset() {
	*x = GlobalNgRannodeId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalNgRannodeId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalNgRannodeId) ProtoMessage() {}

func (x *GlobalNgRannodeId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalNgRannodeId.ProtoReflect.Descriptor instead.
func (*GlobalNgRannodeId) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{10}
}

func (m *GlobalNgRannodeId) GetGlobalNgRannodeId() isGlobalNgRannodeId_GlobalNgRannodeId {
	if m != nil {
		return m.GlobalNgRannodeId
	}
	return nil
}

func (x *GlobalNgRannodeId) GetGNb() *GlobalgNbId {
	if x, ok := x.GetGlobalNgRannodeId().(*GlobalNgRannodeId_GNb); ok {
		return x.GNb
	}
	return nil
}

func (x *GlobalNgRannodeId) GetNgENb() *GlobalngeNbId {
	if x, ok := x.GetGlobalNgRannodeId().(*GlobalNgRannodeId_NgENb); ok {
		return x.NgENb
	}
	return nil
}

type isGlobalNgRannodeId_GlobalNgRannodeId interface {
	isGlobalNgRannodeId_GlobalNgRannodeId()
}

type GlobalNgRannodeId_GNb struct {
	GNb *GlobalgNbId `protobuf:"bytes,1,opt,name=g_nb,json=gNb,proto3,oneof"`
}

type GlobalNgRannodeId_NgENb struct {
	NgENb *GlobalngeNbId `protobuf:"bytes,2,opt,name=ng_e_nb,json=ngENb,proto3,oneof"`
}

func (*GlobalNgRannodeId_GNb) isGlobalNgRannodeId_GlobalNgRannodeId() {}

func (*GlobalNgRannodeId_NgENb) isGlobalNgRannodeId_GlobalNgRannodeId() {}

// constant Integer from e2sm-ni-v01.00.asn1:104
type MaxProtocolIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MaxProtocolIes) Reset() {
	*x = MaxProtocolIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxProtocolIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxProtocolIes) ProtoMessage() {}

func (x *MaxProtocolIes) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxProtocolIes.ProtoReflect.Descriptor instead.
func (*MaxProtocolIes) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{11}
}

func (x *MaxProtocolIes) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm-ni-v01.00.asn1:110
type ProcedureCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ProcedureCode) Reset() {
	*x = ProcedureCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcedureCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcedureCode) ProtoMessage() {}

func (x *ProcedureCode) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcedureCode.ProtoReflect.Descriptor instead.
func (*ProcedureCode) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{12}
}

func (x *ProcedureCode) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm-ni-v01.00.asn1:112
type ProtocolIeId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ProtocolIeId) Reset() {
	*x = ProtocolIeId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtocolIeId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtocolIeId) ProtoMessage() {}

func (x *ProtocolIeId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtocolIeId.ProtoReflect.Descriptor instead.
func (*ProtocolIeId) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{13}
}

func (x *ProtocolIeId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm-ni-v01.00.asn1:122
type MaxofInterfaceProtocolTests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MaxofInterfaceProtocolTests) Reset() {
	*x = MaxofInterfaceProtocolTests{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxofInterfaceProtocolTests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxofInterfaceProtocolTests) ProtoMessage() {}

func (x *MaxofInterfaceProtocolTests) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxofInterfaceProtocolTests.ProtoReflect.Descriptor instead.
func (*MaxofInterfaceProtocolTests) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{14}
}

func (x *MaxofInterfaceProtocolTests) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm-ni-v01.00.asn1:123
type MaxofRanueGroups struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MaxofRanueGroups) Reset() {
	*x = MaxofRanueGroups{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxofRanueGroups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxofRanueGroups) ProtoMessage() {}

func (x *MaxofRanueGroups) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxofRanueGroups.ProtoReflect.Descriptor instead.
func (*MaxofRanueGroups) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{15}
}

func (x *MaxofRanueGroups) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm-ni-v01.00.asn1:124
type MaxofActionParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MaxofActionParameters) Reset() {
	*x = MaxofActionParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxofActionParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxofActionParameters) ProtoMessage() {}

func (x *MaxofActionParameters) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxofActionParameters.ProtoReflect.Descriptor instead.
func (*MaxofActionParameters) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{16}
}

func (x *MaxofActionParameters) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm-ni-v01.00.asn1:125
type MaxofRanparameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MaxofRanparameters) Reset() {
	*x = MaxofRanparameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxofRanparameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxofRanparameters) ProtoMessage() {}

func (x *MaxofRanparameters) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxofRanparameters.ProtoReflect.Descriptor instead.
func (*MaxofRanparameters) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{17}
}

func (x *MaxofRanparameters) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm-ni-v01.00.asn1:126
type MaxofNitypes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MaxofNitypes) Reset() {
	*x = MaxofNitypes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxofNitypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxofNitypes) ProtoMessage() {}

func (x *MaxofNitypes) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxofNitypes.ProtoReflect.Descriptor instead.
func (*MaxofNitypes) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{18}
}

func (x *MaxofNitypes) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm-ni-v01.00.asn1:127
type MaxofRicstyles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MaxofRicstyles) Reset() {
	*x = MaxofRicstyles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxofRicstyles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxofRicstyles) ProtoMessage() {}

func (x *MaxofRicstyles) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxofRicstyles.ProtoReflect.Descriptor instead.
func (*MaxofRicstyles) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{19}
}

func (x *MaxofRicstyles) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm-ni-v01.00.asn1:141
type E2SmNiEventTriggerDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-ni-v01.00.asn1:141
	//
	// Types that are assignable to E2SmNiEventTriggerDefinition:
	//	*E2SmNiEventTriggerDefinition_EventDefinitionFormat1
	E2SmNiEventTriggerDefinition isE2SmNiEventTriggerDefinition_E2SmNiEventTriggerDefinition `protobuf_oneof:"e2_sm_ni_event_trigger_definition"`
}

func (x *E2SmNiEventTriggerDefinition) Reset() {
	*x = E2SmNiEventTriggerDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmNiEventTriggerDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmNiEventTriggerDefinition) ProtoMessage() {}

func (x *E2SmNiEventTriggerDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmNiEventTriggerDefinition.ProtoReflect.Descriptor instead.
func (*E2SmNiEventTriggerDefinition) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{20}
}

func (m *E2SmNiEventTriggerDefinition) GetE2SmNiEventTriggerDefinition() isE2SmNiEventTriggerDefinition_E2SmNiEventTriggerDefinition {
	if m != nil {
		return m.E2SmNiEventTriggerDefinition
	}
	return nil
}

func (x *E2SmNiEventTriggerDefinition) GetEventDefinitionFormat1() *E2SmNiEventTriggerDefinitionFormat1 {
	if x, ok := x.GetE2SmNiEventTriggerDefinition().(*E2SmNiEventTriggerDefinition_EventDefinitionFormat1); ok {
		return x.EventDefinitionFormat1
	}
	return nil
}

type isE2SmNiEventTriggerDefinition_E2SmNiEventTriggerDefinition interface {
	isE2SmNiEventTriggerDefinition_E2SmNiEventTriggerDefinition()
}

type E2SmNiEventTriggerDefinition_EventDefinitionFormat1 struct {
	EventDefinitionFormat1 *E2SmNiEventTriggerDefinitionFormat1 `protobuf:"bytes,1,opt,name=event_definition_format1,json=eventDefinitionFormat1,proto3,oneof"`
}

func (*E2SmNiEventTriggerDefinition_EventDefinitionFormat1) isE2SmNiEventTriggerDefinition_E2SmNiEventTriggerDefinition() {
}

// sequence from e2sm-ni-v01.00.asn1:147
type E2SmNiEventTriggerDefinitionFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterfaceType           NiType              `protobuf:"varint,1,opt,name=interface_type,json=interfaceType,proto3,enum=e2sm_ni.v1beta1.NiType" json:"interface_type,omitempty"`
	InterfaceId             *NiIdentifier       `protobuf:"bytes,2,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	InterfaceDirection      NiDirection         `protobuf:"varint,3,opt,name=interface_direction,json=interfaceDirection,proto3,enum=e2sm_ni.v1beta1.NiDirection" json:"interface_direction,omitempty"`
	InterfaceMessageType    *NiMessageType      `protobuf:"bytes,4,opt,name=interface_message_type,json=interfaceMessageType,proto3" json:"interface_message_type,omitempty"`
	InterfaceProtocolIeList []*NiProtocolIeItem `protobuf:"bytes,5,rep,name=interface_protocol_ie_list,json=interfaceProtocolIeList,proto3" json:"interface_protocol_ie_list,omitempty"`
}

func (x *E2SmNiEventTriggerDefinitionFormat1) Reset() {
	*x = E2SmNiEventTriggerDefinitionFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmNiEventTriggerDefinitionFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmNiEventTriggerDefinitionFormat1) ProtoMessage() {}

func (x *E2SmNiEventTriggerDefinitionFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmNiEventTriggerDefinitionFormat1.ProtoReflect.Descriptor instead.
func (*E2SmNiEventTriggerDefinitionFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{21}
}

func (x *E2SmNiEventTriggerDefinitionFormat1) GetInterfaceType() NiType {
	if x != nil {
		return x.InterfaceType
	}
	return NiType_NI_TYPE_S1
}

func (x *E2SmNiEventTriggerDefinitionFormat1) GetInterfaceId() *NiIdentifier {
	if x != nil {
		return x.InterfaceId
	}
	return nil
}

func (x *E2SmNiEventTriggerDefinitionFormat1) GetInterfaceDirection() NiDirection {
	if x != nil {
		return x.InterfaceDirection
	}
	return NiDirection_NI_DIRECTION_INCOMING
}

func (x *E2SmNiEventTriggerDefinitionFormat1) GetInterfaceMessageType() *NiMessageType {
	if x != nil {
		return x.InterfaceMessageType
	}
	return nil
}

func (x *E2SmNiEventTriggerDefinitionFormat1) GetInterfaceProtocolIeList() []*NiProtocolIeItem {
	if x != nil {
		return x.InterfaceProtocolIeList
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:162
type E2SmNiActionDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicStyleType           *RicStyleType                 `protobuf:"bytes,1,opt,name=ric_style_type,json=ricStyleType,proto3" json:"ric_style_type,omitempty"`
	ActionDefinitionFormat *E2SmNiActionDefinitionFormat `protobuf:"bytes,2,opt,name=action_definition_format,json=actionDefinitionFormat,proto3" json:"action_definition_format,omitempty"`
}

func (x *E2SmNiActionDefinition) Reset() {
	*x = E2SmNiActionDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmNiActionDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmNiActionDefinition) ProtoMessage() {}

func (x *E2SmNiActionDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmNiActionDefinition.ProtoReflect.Descriptor instead.
func (*E2SmNiActionDefinition) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{22}
}

func (x *E2SmNiActionDefinition) GetRicStyleType() *RicStyleType {
	if x != nil {
		return x.RicStyleType
	}
	return nil
}

func (x *E2SmNiActionDefinition) GetActionDefinitionFormat() *E2SmNiActionDefinitionFormat {
	if x != nil {
		return x.ActionDefinitionFormat
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:168
type E2SmNiActionDefinitionFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-ni-v01.00.asn1:168
	//
	// Types that are assignable to E2SmNiActionDefinitionFormat:
	//	*E2SmNiActionDefinitionFormat_ActionDefinitionFormat1
	//	*E2SmNiActionDefinitionFormat_ActionDefinitionFormat2
	E2SmNiActionDefinitionFormat isE2SmNiActionDefinitionFormat_E2SmNiActionDefinitionFormat `protobuf_oneof:"e2_sm_ni_action_definition_format"`
}

func (x *E2SmNiActionDefinitionFormat) Reset() {
	*x = E2SmNiActionDefinitionFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmNiActionDefinitionFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmNiActionDefinitionFormat) ProtoMessage() {}

func (x *E2SmNiActionDefinitionFormat) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmNiActionDefinitionFormat.ProtoReflect.Descriptor instead.
func (*E2SmNiActionDefinitionFormat) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{23}
}

func (m *E2SmNiActionDefinitionFormat) GetE2SmNiActionDefinitionFormat() isE2SmNiActionDefinitionFormat_E2SmNiActionDefinitionFormat {
	if m != nil {
		return m.E2SmNiActionDefinitionFormat
	}
	return nil
}

func (x *E2SmNiActionDefinitionFormat) GetActionDefinitionFormat1() *E2SmNiActionDefinitionFormat1 {
	if x, ok := x.GetE2SmNiActionDefinitionFormat().(*E2SmNiActionDefinitionFormat_ActionDefinitionFormat1); ok {
		return x.ActionDefinitionFormat1
	}
	return nil
}

func (x *E2SmNiActionDefinitionFormat) GetActionDefinitionFormat2() *E2SmNiActionDefinitionFormat2 {
	if x, ok := x.GetE2SmNiActionDefinitionFormat().(*E2SmNiActionDefinitionFormat_ActionDefinitionFormat2); ok {
		return x.ActionDefinitionFormat2
	}
	return nil
}

type isE2SmNiActionDefinitionFormat_E2SmNiActionDefinitionFormat interface {
	isE2SmNiActionDefinitionFormat_E2SmNiActionDefinitionFormat()
}

type E2SmNiActionDefinitionFormat_ActionDefinitionFormat1 struct {
	ActionDefinitionFormat1 *E2SmNiActionDefinitionFormat1 `protobuf:"bytes,1,opt,name=action_definition_format1,json=actionDefinitionFormat1,proto3,oneof"`
}

type E2SmNiActionDefinitionFormat_ActionDefinitionFormat2 struct {
	ActionDefinitionFormat2 *E2SmNiActionDefinitionFormat2 `protobuf:"bytes,2,opt,name=action_definition_format2,json=actionDefinitionFormat2,proto3,oneof"`
}

func (*E2SmNiActionDefinitionFormat_ActionDefinitionFormat1) isE2SmNiActionDefinitionFormat_E2SmNiActionDefinitionFormat() {
}

func (*E2SmNiActionDefinitionFormat_ActionDefinitionFormat2) isE2SmNiActionDefinitionFormat_E2SmNiActionDefinitionFormat() {
}

// sequence from e2sm-ni-v01.00.asn1:175
type E2SmNiActionDefinitionFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionParameterList []*RanparameterItem `protobuf:"bytes,1,rep,name=action_parameter_list,json=actionParameterList,proto3" json:"action_parameter_list,omitempty"`
}

func (x *E2SmNiActionDefinitionFormat1) Reset() {
	*x = E2SmNiActionDefinitionFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmNiActionDefinitionFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmNiActionDefinitionFormat1) ProtoMessage() {}

func (x *E2SmNiActionDefinitionFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmNiActionDefinitionFormat1.ProtoReflect.Descriptor instead.
func (*E2SmNiActionDefinitionFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{24}
}

func (x *E2SmNiActionDefinitionFormat1) GetActionParameterList() []*RanparameterItem {
	if x != nil {
		return x.ActionParameterList
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:182
type E2SmNiActionDefinitionFormat2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RanUegroupList []*RanueGroupItem `protobuf:"bytes,1,rep,name=ran_uegroup_list,json=ranUegroupList,proto3" json:"ran_uegroup_list,omitempty"`
}

func (x *E2SmNiActionDefinitionFormat2) Reset() {
	*x = E2SmNiActionDefinitionFormat2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmNiActionDefinitionFormat2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmNiActionDefinitionFormat2) ProtoMessage() {}

func (x *E2SmNiActionDefinitionFormat2) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmNiActionDefinitionFormat2.ProtoReflect.Descriptor instead.
func (*E2SmNiActionDefinitionFormat2) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{25}
}

func (x *E2SmNiActionDefinitionFormat2) GetRanUegroupList() []*RanueGroupItem {
	if x != nil {
		return x.RanUegroupList
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:194
type E2SmNiIndicationHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-ni-v01.00.asn1:194
	//
	// Types that are assignable to E2SmNiIndicationHeader:
	//	*E2SmNiIndicationHeader_IndicationHeaderFormat1
	E2SmNiIndicationHeader isE2SmNiIndicationHeader_E2SmNiIndicationHeader `protobuf_oneof:"e2_sm_ni_indication_header"`
}

func (x *E2SmNiIndicationHeader) Reset() {
	*x = E2SmNiIndicationHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmNiIndicationHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmNiIndicationHeader) ProtoMessage() {}

func (x *E2SmNiIndicationHeader) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmNiIndicationHeader.ProtoReflect.Descriptor instead.
func (*E2SmNiIndicationHeader) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{26}
}

func (m *E2SmNiIndicationHeader) GetE2SmNiIndicationHeader() isE2SmNiIndicationHeader_E2SmNiIndicationHeader {
	if m != nil {
		return m.E2SmNiIndicationHeader
	}
	return nil
}

func (x *E2SmNiIndicationHeader) GetIndicationHeaderFormat1() *E2SmNiIndicationHeaderFormat1 {
	if x, ok := x.GetE2SmNiIndicationHeader().(*E2SmNiIndicationHeader_IndicationHeaderFormat1); ok {
		return x.IndicationHeaderFormat1
	}
	return nil
}

type isE2SmNiIndicationHeader_E2SmNiIndicationHeader interface {
	isE2SmNiIndicationHeader_E2SmNiIndicationHeader()
}

type E2SmNiIndicationHeader_IndicationHeaderFormat1 struct {
	IndicationHeaderFormat1 *E2SmNiIndicationHeaderFormat1 `protobuf:"bytes,1,opt,name=indication_header_format1,json=indicationHeaderFormat1,proto3,oneof"`
}

func (*E2SmNiIndicationHeader_IndicationHeaderFormat1) isE2SmNiIndicationHeader_E2SmNiIndicationHeader() {
}

// sequence from e2sm-ni-v01.00.asn1:200
type E2SmNiIndicationHeaderFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterfaceType      NiType        `protobuf:"varint,1,opt,name=interface_type,json=interfaceType,proto3,enum=e2sm_ni.v1beta1.NiType" json:"interface_type,omitempty"`
	InterfaceId        *NiIdentifier `protobuf:"bytes,2,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	InterfaceDirection NiDirection   `protobuf:"varint,3,opt,name=interface_direction,json=interfaceDirection,proto3,enum=e2sm_ni.v1beta1.NiDirection" json:"interface_direction,omitempty"`
	Timestamp          *NiTimeStamp  `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *E2SmNiIndicationHeaderFormat1) Reset() {
	*x = E2SmNiIndicationHeaderFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmNiIndicationHeaderFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmNiIndicationHeaderFormat1) ProtoMessage() {}

func (x *E2SmNiIndicationHeaderFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmNiIndicationHeaderFormat1.ProtoReflect.Descriptor instead.
func (*E2SmNiIndicationHeaderFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{27}
}

func (x *E2SmNiIndicationHeaderFormat1) GetInterfaceType() NiType {
	if x != nil {
		return x.InterfaceType
	}
	return NiType_NI_TYPE_S1
}

func (x *E2SmNiIndicationHeaderFormat1) GetInterfaceId() *NiIdentifier {
	if x != nil {
		return x.InterfaceId
	}
	return nil
}

func (x *E2SmNiIndicationHeaderFormat1) GetInterfaceDirection() NiDirection {
	if x != nil {
		return x.InterfaceDirection
	}
	return NiDirection_NI_DIRECTION_INCOMING
}

func (x *E2SmNiIndicationHeaderFormat1) GetTimestamp() *NiTimeStamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:215
type E2SmNiIndicationMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-ni-v01.00.asn1:215
	//
	// Types that are assignable to E2SmNiIndicationMessage:
	//	*E2SmNiIndicationMessage_IndicationMessageFormat1
	E2SmNiIndicationMessage isE2SmNiIndicationMessage_E2SmNiIndicationMessage `protobuf_oneof:"e2_sm_ni_indication_message"`
}

func (x *E2SmNiIndicationMessage) Reset() {
	*x = E2SmNiIndicationMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmNiIndicationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmNiIndicationMessage) ProtoMessage() {}

func (x *E2SmNiIndicationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmNiIndicationMessage.ProtoReflect.Descriptor instead.
func (*E2SmNiIndicationMessage) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{28}
}

func (m *E2SmNiIndicationMessage) GetE2SmNiIndicationMessage() isE2SmNiIndicationMessage_E2SmNiIndicationMessage {
	if m != nil {
		return m.E2SmNiIndicationMessage
	}
	return nil
}

func (x *E2SmNiIndicationMessage) GetIndicationMessageFormat1() *E2SmNiIndicationMessageFormat1 {
	if x, ok := x.GetE2SmNiIndicationMessage().(*E2SmNiIndicationMessage_IndicationMessageFormat1); ok {
		return x.IndicationMessageFormat1
	}
	return nil
}

type isE2SmNiIndicationMessage_E2SmNiIndicationMessage interface {
	isE2SmNiIndicationMessage_E2SmNiIndicationMessage()
}

type E2SmNiIndicationMessage_IndicationMessageFormat1 struct {
	IndicationMessageFormat1 *E2SmNiIndicationMessageFormat1 `protobuf:"bytes,1,opt,name=indication_message_format1,json=indicationMessageFormat1,proto3,oneof"`
}

func (*E2SmNiIndicationMessage_IndicationMessageFormat1) isE2SmNiIndicationMessage_E2SmNiIndicationMessage() {
}

// sequence from e2sm-ni-v01.00.asn1:221
type E2SmNiIndicationMessageFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterfaceMessage *NiMessage `protobuf:"bytes,1,opt,name=interface_message,json=interfaceMessage,proto3" json:"interface_message,omitempty"`
}

func (x *E2SmNiIndicationMessageFormat1) Reset() {
	*x = E2SmNiIndicationMessageFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmNiIndicationMessageFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmNiIndicationMessageFormat1) ProtoMessage() {}

func (x *E2SmNiIndicationMessageFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmNiIndicationMessageFormat1.ProtoReflect.Descriptor instead.
func (*E2SmNiIndicationMessageFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{29}
}

func (x *E2SmNiIndicationMessageFormat1) GetInterfaceMessage() *NiMessage {
	if x != nil {
		return x.InterfaceMessage
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:232
type E2SmNiCallProcessId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-ni-v01.00.asn1:232
	//
	// Types that are assignable to E2SmNiCallProcessId:
	//	*E2SmNiCallProcessId_CallProcessIdFormat1
	//	*E2SmNiCallProcessId_CallProcessIdFormat2
	E2SmNiCallProcessId isE2SmNiCallProcessId_E2SmNiCallProcessId `protobuf_oneof:"e2_sm_ni_call_process_id"`
}

func (x *E2SmNiCallProcessId) Reset() {
	*x = E2SmNiCallProcessId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmNiCallProcessId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmNiCallProcessId) ProtoMessage() {}

func (x *E2SmNiCallProcessId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmNiCallProcessId.ProtoReflect.Descriptor instead.
func (*E2SmNiCallProcessId) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{30}
}

func (m *E2SmNiCallProcessId) GetE2SmNiCallProcessId() isE2SmNiCallProcessId_E2SmNiCallProcessId {
	if m != nil {
		return m.E2SmNiCallProcessId
	}
	return nil
}

func (x *E2SmNiCallProcessId) GetCallProcessIdFormat1() *E2SmNiCallProcessIdFormat1 {
	if x, ok := x.GetE2SmNiCallProcessId().(*E2SmNiCallProcessId_CallProcessIdFormat1); ok {
		return x.CallProcessIdFormat1
	}
	return nil
}

func (x *E2SmNiCallProcessId) GetCallProcessIdFormat2() *E2SmNiCallProcessIdFormat2 {
	if x, ok := x.GetE2SmNiCallProcessId().(*E2SmNiCallProcessId_CallProcessIdFormat2); ok {
		return x.CallProcessIdFormat2
	}
	return nil
}

type isE2SmNiCallProcessId_E2SmNiCallProcessId interface {
	isE2SmNiCallProcessId_E2SmNiCallProcessId()
}

type E2SmNiCallProcessId_CallProcessIdFormat1 struct {
	CallProcessIdFormat1 *E2SmNiCallProcessIdFormat1 `protobuf:"bytes,1,opt,name=call_process_id_format1,json=callProcessIdFormat1,proto3,oneof"`
}

type E2SmNiCallProcessId_CallProcessIdFormat2 struct {
	CallProcessIdFormat2 *E2SmNiCallProcessIdFormat2 `protobuf:"bytes,2,opt,name=call_process_id_format2,json=callProcessIdFormat2,proto3,oneof"`
}

func (*E2SmNiCallProcessId_CallProcessIdFormat1) isE2SmNiCallProcessId_E2SmNiCallProcessId() {}

func (*E2SmNiCallProcessId_CallProcessIdFormat2) isE2SmNiCallProcessId_E2SmNiCallProcessId() {}

// sequence from e2sm-ni-v01.00.asn1:239
type E2SmNiCallProcessIdFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallProcessId *RancallProcessIdNumber `protobuf:"bytes,1,opt,name=call_process_id,json=callProcessId,proto3" json:"call_process_id,omitempty"`
}

func (x *E2SmNiCallProcessIdFormat1) Reset() {
	*x = E2SmNiCallProcessIdFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmNiCallProcessIdFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmNiCallProcessIdFormat1) ProtoMessage() {}

func (x *E2SmNiCallProcessIdFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmNiCallProcessIdFormat1.ProtoReflect.Descriptor instead.
func (*E2SmNiCallProcessIdFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{31}
}

func (x *E2SmNiCallProcessIdFormat1) GetCallProcessId() *RancallProcessIdNumber {
	if x != nil {
		return x.CallProcessId
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:244
type E2SmNiCallProcessIdFormat2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallProcessId *RancallProcessIdString `protobuf:"bytes,1,opt,name=call_process_id,json=callProcessId,proto3" json:"call_process_id,omitempty"`
}

func (x *E2SmNiCallProcessIdFormat2) Reset() {
	*x = E2SmNiCallProcessIdFormat2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmNiCallProcessIdFormat2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmNiCallProcessIdFormat2) ProtoMessage() {}

func (x *E2SmNiCallProcessIdFormat2) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmNiCallProcessIdFormat2.ProtoReflect.Descriptor instead.
func (*E2SmNiCallProcessIdFormat2) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{32}
}

func (x *E2SmNiCallProcessIdFormat2) GetCallProcessId() *RancallProcessIdString {
	if x != nil {
		return x.CallProcessId
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:256
type E2SmNiControlHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-ni-v01.00.asn1:256
	//
	// Types that are assignable to E2SmNiControlHeader:
	//	*E2SmNiControlHeader_ControlHeaderFormat1
	E2SmNiControlHeader isE2SmNiControlHeader_E2SmNiControlHeader `protobuf_oneof:"e2_sm_ni_control_header"`
}

func (x *E2SmNiControlHeader) Reset() {
	*x = E2SmNiControlHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmNiControlHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmNiControlHeader) ProtoMessage() {}

func (x *E2SmNiControlHeader) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmNiControlHeader.ProtoReflect.Descriptor instead.
func (*E2SmNiControlHeader) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{33}
}

func (m *E2SmNiControlHeader) GetE2SmNiControlHeader() isE2SmNiControlHeader_E2SmNiControlHeader {
	if m != nil {
		return m.E2SmNiControlHeader
	}
	return nil
}

func (x *E2SmNiControlHeader) GetControlHeaderFormat1() *E2SmNiControlHeaderFormat1 {
	if x, ok := x.GetE2SmNiControlHeader().(*E2SmNiControlHeader_ControlHeaderFormat1); ok {
		return x.ControlHeaderFormat1
	}
	return nil
}

type isE2SmNiControlHeader_E2SmNiControlHeader interface {
	isE2SmNiControlHeader_E2SmNiControlHeader()
}

type E2SmNiControlHeader_ControlHeaderFormat1 struct {
	ControlHeaderFormat1 *E2SmNiControlHeaderFormat1 `protobuf:"bytes,1,opt,name=control_header_format1,json=controlHeaderFormat1,proto3,oneof"`
}

func (*E2SmNiControlHeader_ControlHeaderFormat1) isE2SmNiControlHeader_E2SmNiControlHeader() {}

// sequence from e2sm-ni-v01.00.asn1:261
type E2SmNiControlHeaderFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterfaceType             NiType                     `protobuf:"varint,1,opt,name=interface_type,json=interfaceType,proto3,enum=e2sm_ni.v1beta1.NiType" json:"interface_type,omitempty"`
	InterfaceId               *NiIdentifier              `protobuf:"bytes,2,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	InterfaceDirection        NiDirection                `protobuf:"varint,3,opt,name=interface_direction,json=interfaceDirection,proto3,enum=e2sm_ni.v1beta1.NiDirection" json:"interface_direction,omitempty"`
	RicControlMessagePriority *RicControlMessagePriority `protobuf:"bytes,4,opt,name=ric_control_message_priority,json=ricControlMessagePriority,proto3" json:"ric_control_message_priority,omitempty"`
}

func (x *E2SmNiControlHeaderFormat1) Reset() {
	*x = E2SmNiControlHeaderFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmNiControlHeaderFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmNiControlHeaderFormat1) ProtoMessage() {}

func (x *E2SmNiControlHeaderFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmNiControlHeaderFormat1.ProtoReflect.Descriptor instead.
func (*E2SmNiControlHeaderFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{34}
}

func (x *E2SmNiControlHeaderFormat1) GetInterfaceType() NiType {
	if x != nil {
		return x.InterfaceType
	}
	return NiType_NI_TYPE_S1
}

func (x *E2SmNiControlHeaderFormat1) GetInterfaceId() *NiIdentifier {
	if x != nil {
		return x.InterfaceId
	}
	return nil
}

func (x *E2SmNiControlHeaderFormat1) GetInterfaceDirection() NiDirection {
	if x != nil {
		return x.InterfaceDirection
	}
	return NiDirection_NI_DIRECTION_INCOMING
}

func (x *E2SmNiControlHeaderFormat1) GetRicControlMessagePriority() *RicControlMessagePriority {
	if x != nil {
		return x.RicControlMessagePriority
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:277
type E2SmNiControlMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-ni-v01.00.asn1:277
	//
	// Types that are assignable to E2SmNiControlMessage:
	//	*E2SmNiControlMessage_ControlMessageFormat1
	E2SmNiControlMessage isE2SmNiControlMessage_E2SmNiControlMessage `protobuf_oneof:"e2_sm_ni_control_message"`
}

func (x *E2SmNiControlMessage) Reset() {
	*x = E2SmNiControlMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmNiControlMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmNiControlMessage) ProtoMessage() {}

func (x *E2SmNiControlMessage) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmNiControlMessage.ProtoReflect.Descriptor instead.
func (*E2SmNiControlMessage) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{35}
}

func (m *E2SmNiControlMessage) GetE2SmNiControlMessage() isE2SmNiControlMessage_E2SmNiControlMessage {
	if m != nil {
		return m.E2SmNiControlMessage
	}
	return nil
}

func (x *E2SmNiControlMessage) GetControlMessageFormat1() *E2SmNiControlMessageFormat1 {
	if x, ok := x.GetE2SmNiControlMessage().(*E2SmNiControlMessage_ControlMessageFormat1); ok {
		return x.ControlMessageFormat1
	}
	return nil
}

type isE2SmNiControlMessage_E2SmNiControlMessage interface {
	isE2SmNiControlMessage_E2SmNiControlMessage()
}

type E2SmNiControlMessage_ControlMessageFormat1 struct {
	ControlMessageFormat1 *E2SmNiControlMessageFormat1 `protobuf:"bytes,1,opt,name=control_message_format1,json=controlMessageFormat1,proto3,oneof"`
}

func (*E2SmNiControlMessage_ControlMessageFormat1) isE2SmNiControlMessage_E2SmNiControlMessage() {}

// sequence from e2sm-ni-v01.00.asn1:283
type E2SmNiControlMessageFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterfaceMessage *NiMessage `protobuf:"bytes,1,opt,name=interface_message,json=interfaceMessage,proto3" json:"interface_message,omitempty"`
}

func (x *E2SmNiControlMessageFormat1) Reset() {
	*x = E2SmNiControlMessageFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmNiControlMessageFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmNiControlMessageFormat1) ProtoMessage() {}

func (x *E2SmNiControlMessageFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmNiControlMessageFormat1.ProtoReflect.Descriptor instead.
func (*E2SmNiControlMessageFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{36}
}

func (x *E2SmNiControlMessageFormat1) GetInterfaceMessage() *NiMessage {
	if x != nil {
		return x.InterfaceMessage
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:295
type E2SmNiControlOutcome struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-ni-v01.00.asn1:295
	//
	// Types that are assignable to E2SmNiControlOutcome:
	//	*E2SmNiControlOutcome_ControlOutcomeFormat1
	E2SmNiControlOutcome isE2SmNiControlOutcome_E2SmNiControlOutcome `protobuf_oneof:"e2_sm_ni_control_outcome"`
}

func (x *E2SmNiControlOutcome) Reset() {
	*x = E2SmNiControlOutcome{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmNiControlOutcome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmNiControlOutcome) ProtoMessage() {}

func (x *E2SmNiControlOutcome) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmNiControlOutcome.ProtoReflect.Descriptor instead.
func (*E2SmNiControlOutcome) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{37}
}

func (m *E2SmNiControlOutcome) GetE2SmNiControlOutcome() isE2SmNiControlOutcome_E2SmNiControlOutcome {
	if m != nil {
		return m.E2SmNiControlOutcome
	}
	return nil
}

func (x *E2SmNiControlOutcome) GetControlOutcomeFormat1() *E2SmNiControlOutcomeFormat1 {
	if x, ok := x.GetE2SmNiControlOutcome().(*E2SmNiControlOutcome_ControlOutcomeFormat1); ok {
		return x.ControlOutcomeFormat1
	}
	return nil
}

type isE2SmNiControlOutcome_E2SmNiControlOutcome interface {
	isE2SmNiControlOutcome_E2SmNiControlOutcome()
}

type E2SmNiControlOutcome_ControlOutcomeFormat1 struct {
	ControlOutcomeFormat1 *E2SmNiControlOutcomeFormat1 `protobuf:"bytes,1,opt,name=control_outcome_format1,json=controlOutcomeFormat1,proto3,oneof"`
}

func (*E2SmNiControlOutcome_ControlOutcomeFormat1) isE2SmNiControlOutcome_E2SmNiControlOutcome() {}

// sequence from e2sm-ni-v01.00.asn1:301
type E2SmNiControlOutcomeFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutcomeElementList []*RanparameterItem `protobuf:"bytes,1,rep,name=outcome_element_list,json=outcomeElementList,proto3" json:"outcome_element_list,omitempty"`
}

func (x *E2SmNiControlOutcomeFormat1) Reset() {
	*x = E2SmNiControlOutcomeFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmNiControlOutcomeFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmNiControlOutcomeFormat1) ProtoMessage() {}

func (x *E2SmNiControlOutcomeFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmNiControlOutcomeFormat1.ProtoReflect.Descriptor instead.
func (*E2SmNiControlOutcomeFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{38}
}

func (x *E2SmNiControlOutcomeFormat1) GetOutcomeElementList() []*RanparameterItem {
	if x != nil {
		return x.OutcomeElementList
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:313
type E2SmNiRanfunctionDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RanFunctionName *RanfunctionName         `protobuf:"bytes,1,opt,name=ran_function_name,json=ranFunctionName,proto3" json:"ran_function_name,omitempty"`
	NiTypeList      []*E2SmNiRanfunctionItem `protobuf:"bytes,2,rep,name=ni_type_list,json=niTypeList,proto3" json:"ni_type_list,omitempty"`
}

func (x *E2SmNiRanfunctionDescription) Reset() {
	*x = E2SmNiRanfunctionDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmNiRanfunctionDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmNiRanfunctionDescription) ProtoMessage() {}

func (x *E2SmNiRanfunctionDescription) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmNiRanfunctionDescription.ProtoReflect.Descriptor instead.
func (*E2SmNiRanfunctionDescription) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{39}
}

func (x *E2SmNiRanfunctionDescription) GetRanFunctionName() *RanfunctionName {
	if x != nil {
		return x.RanFunctionName
	}
	return nil
}

func (x *E2SmNiRanfunctionDescription) GetNiTypeList() []*E2SmNiRanfunctionItem {
	if x != nil {
		return x.NiTypeList
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:319
type E2SmNiRanfunctionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterfaceType            NiType                      `protobuf:"varint,1,opt,name=interface_type,json=interfaceType,proto3,enum=e2sm_ni.v1beta1.NiType" json:"interface_type,omitempty"`
	RicEventTriggerStyleList []*RicEventTriggerStyleList `protobuf:"bytes,2,rep,name=ric_event_trigger_style_list,json=ricEventTriggerStyleList,proto3" json:"ric_event_trigger_style_list,omitempty"`
	RicReportStyleList       []*RicReportStyleList       `protobuf:"bytes,3,rep,name=ric_report_style_list,json=ricReportStyleList,proto3" json:"ric_report_style_list,omitempty"`
	RicInsertStyleList       []*RicInsertStyleList       `protobuf:"bytes,4,rep,name=ric_insert_style_list,json=ricInsertStyleList,proto3" json:"ric_insert_style_list,omitempty"`
	RicControlStyleList      []*RicControlStyleList      `protobuf:"bytes,5,rep,name=ric_control_style_list,json=ricControlStyleList,proto3" json:"ric_control_style_list,omitempty"`
	RicPolicyStyleList       []*RicPolicyStyleList       `protobuf:"bytes,6,rep,name=ric_policy_style_list,json=ricPolicyStyleList,proto3" json:"ric_policy_style_list,omitempty"`
}

func (x *E2SmNiRanfunctionItem) Reset() {
	*x = E2SmNiRanfunctionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmNiRanfunctionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmNiRanfunctionItem) ProtoMessage() {}

func (x *E2SmNiRanfunctionItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmNiRanfunctionItem.ProtoReflect.Descriptor instead.
func (*E2SmNiRanfunctionItem) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{40}
}

func (x *E2SmNiRanfunctionItem) GetInterfaceType() NiType {
	if x != nil {
		return x.InterfaceType
	}
	return NiType_NI_TYPE_S1
}

func (x *E2SmNiRanfunctionItem) GetRicEventTriggerStyleList() []*RicEventTriggerStyleList {
	if x != nil {
		return x.RicEventTriggerStyleList
	}
	return nil
}

func (x *E2SmNiRanfunctionItem) GetRicReportStyleList() []*RicReportStyleList {
	if x != nil {
		return x.RicReportStyleList
	}
	return nil
}

func (x *E2SmNiRanfunctionItem) GetRicInsertStyleList() []*RicInsertStyleList {
	if x != nil {
		return x.RicInsertStyleList
	}
	return nil
}

func (x *E2SmNiRanfunctionItem) GetRicControlStyleList() []*RicControlStyleList {
	if x != nil {
		return x.RicControlStyleList
	}
	return nil
}

func (x *E2SmNiRanfunctionItem) GetRicPolicyStyleList() []*RicPolicyStyleList {
	if x != nil {
		return x.RicPolicyStyleList
	}
	return nil
}

// reference from e2sm-ni-v01.00.asn1:343
type GlobalEnGnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *GlobalenGnbId `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GlobalEnGnbId) Reset() {
	*x = GlobalEnGnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalEnGnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalEnGnbId) ProtoMessage() {}

func (x *GlobalEnGnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalEnGnbId.ProtoReflect.Descriptor instead.
func (*GlobalEnGnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{41}
}

func (x *GlobalEnGnbId) GetValue() *GlobalenGnbId {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:344
type GlobalGnbDuId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GlobalNgRanId *GlobalNgRanId `protobuf:"bytes,1,opt,name=global_ng_ran_id,json=globalNgRanId,proto3" json:"global_ng_ran_id,omitempty"`
	GNbDuId       *GnbDuId       `protobuf:"bytes,2,opt,name=g_nb_du_id,json=gNbDuId,proto3" json:"g_nb_du_id,omitempty"`
}

func (x *GlobalGnbDuId) Reset() {
	*x = GlobalGnbDuId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalGnbDuId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalGnbDuId) ProtoMessage() {}

func (x *GlobalGnbDuId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalGnbDuId.ProtoReflect.Descriptor instead.
func (*GlobalGnbDuId) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{42}
}

func (x *GlobalGnbDuId) GetGlobalNgRanId() *GlobalNgRanId {
	if x != nil {
		return x.GlobalNgRanId
	}
	return nil
}

func (x *GlobalGnbDuId) GetGNbDuId() *GnbDuId {
	if x != nil {
		return x.GNbDuId
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:349
type GlobalGnbCuUpId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GlobalNgRanId *GlobalNgRanId `protobuf:"bytes,1,opt,name=global_ng_ran_id,json=globalNgRanId,proto3" json:"global_ng_ran_id,omitempty"`
	GNbCuUpId     *GnbCuUpId     `protobuf:"bytes,2,opt,name=g_nb_cu_up_id,json=gNbCuUpId,proto3" json:"g_nb_cu_up_id,omitempty"`
}

func (x *GlobalGnbCuUpId) Reset() {
	*x = GlobalGnbCuUpId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalGnbCuUpId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalGnbCuUpId) ProtoMessage() {}

func (x *GlobalGnbCuUpId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalGnbCuUpId.ProtoReflect.Descriptor instead.
func (*GlobalGnbCuUpId) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{43}
}

func (x *GlobalGnbCuUpId) GetGlobalNgRanId() *GlobalNgRanId {
	if x != nil {
		return x.GlobalNgRanId
	}
	return nil
}

func (x *GlobalGnbCuUpId) GetGNbCuUpId() *GnbCuUpId {
	if x != nil {
		return x.GNbCuUpId
	}
	return nil
}

// reference from e2sm-ni-v01.00.asn1:361
type GlobalNgRanId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *GlobalNgRannodeId `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GlobalNgRanId) Reset() {
	*x = GlobalNgRanId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalNgRanId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalNgRanId) ProtoMessage() {}

func (x *GlobalNgRanId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalNgRanId.ProtoReflect.Descriptor instead.
func (*GlobalNgRanId) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{44}
}

func (x *GlobalNgRanId) GetValue() *GlobalNgRannodeId {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:371
type NiIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-ni-v01.00.asn1:371
	//
	// Types that are assignable to NiIdentifier:
	//	*NiIdentifier_GlobalENbId
	//	*NiIdentifier_GlobalEnGNbId
	//	*NiIdentifier_GlobalNgRanId
	//	*NiIdentifier_GlobalGNbDuId
	//	*NiIdentifier_GlobalGNbCuUpId
	NiIdentifier isNiIdentifier_NiIdentifier `protobuf_oneof:"ni_identifier"`
}

func (x *NiIdentifier) Reset() {
	*x = NiIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiIdentifier) ProtoMessage() {}

func (x *NiIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiIdentifier.ProtoReflect.Descriptor instead.
func (*NiIdentifier) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{45}
}

func (m *NiIdentifier) GetNiIdentifier() isNiIdentifier_NiIdentifier {
	if m != nil {
		return m.NiIdentifier
	}
	return nil
}

func (x *NiIdentifier) GetGlobalENbId() *GlobalEnbId {
	if x, ok := x.GetNiIdentifier().(*NiIdentifier_GlobalENbId); ok {
		return x.GlobalENbId
	}
	return nil
}

func (x *NiIdentifier) GetGlobalEnGNbId() *GlobalEnGnbId {
	if x, ok := x.GetNiIdentifier().(*NiIdentifier_GlobalEnGNbId); ok {
		return x.GlobalEnGNbId
	}
	return nil
}

func (x *NiIdentifier) GetGlobalNgRanId() *GlobalNgRanId {
	if x, ok := x.GetNiIdentifier().(*NiIdentifier_GlobalNgRanId); ok {
		return x.GlobalNgRanId
	}
	return nil
}

func (x *NiIdentifier) GetGlobalGNbDuId() *GlobalGnbDuId {
	if x, ok := x.GetNiIdentifier().(*NiIdentifier_GlobalGNbDuId); ok {
		return x.GlobalGNbDuId
	}
	return nil
}

func (x *NiIdentifier) GetGlobalGNbCuUpId() *GlobalGnbCuUpId {
	if x, ok := x.GetNiIdentifier().(*NiIdentifier_GlobalGNbCuUpId); ok {
		return x.GlobalGNbCuUpId
	}
	return nil
}

type isNiIdentifier_NiIdentifier interface {
	isNiIdentifier_NiIdentifier()
}

type NiIdentifier_GlobalENbId struct {
	GlobalENbId *GlobalEnbId `protobuf:"bytes,1,opt,name=global_e_nb_id,json=globalENbId,proto3,oneof"`
}

type NiIdentifier_GlobalEnGNbId struct {
	GlobalEnGNbId *GlobalEnGnbId `protobuf:"bytes,2,opt,name=global_en_g_nb_id,json=globalEnGNbId,proto3,oneof"`
}

type NiIdentifier_GlobalNgRanId struct {
	GlobalNgRanId *GlobalNgRanId `protobuf:"bytes,3,opt,name=global_ng_ran_id,json=globalNgRanId,proto3,oneof"`
}

type NiIdentifier_GlobalGNbDuId struct {
	GlobalGNbDuId *GlobalGnbDuId `protobuf:"bytes,4,opt,name=global_g_nb_du_id,json=globalGNbDuId,proto3,oneof"`
}

type NiIdentifier_GlobalGNbCuUpId struct {
	GlobalGNbCuUpId *GlobalGnbCuUpId `protobuf:"bytes,5,opt,name=global_g_nb_cu_up_id,json=globalGNbCuUpId,proto3,oneof"`
}

func (*NiIdentifier_GlobalENbId) isNiIdentifier_NiIdentifier() {}

func (*NiIdentifier_GlobalEnGNbId) isNiIdentifier_NiIdentifier() {}

func (*NiIdentifier_GlobalNgRanId) isNiIdentifier_NiIdentifier() {}

func (*NiIdentifier_GlobalGNbDuId) isNiIdentifier_NiIdentifier() {}

func (*NiIdentifier_GlobalGNbCuUpId) isNiIdentifier_NiIdentifier() {}

// sequence from e2sm-ni-v01.00.asn1:384
type NiMessageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-ni-v01.00.asn1:384
	//
	// Types that are assignable to NiMessageType:
	//	*NiMessageType_S1MessageType
	//	*NiMessageType_X2MessageType
	//	*NiMessageType_NgMessageType
	//	*NiMessageType_XnMessageType
	//	*NiMessageType_F1MessageType
	//	*NiMessageType_E1MessageType
	NiMessageType isNiMessageType_NiMessageType `protobuf_oneof:"ni_message_type"`
}

func (x *NiMessageType) Reset() {
	*x = NiMessageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiMessageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiMessageType) ProtoMessage() {}

func (x *NiMessageType) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiMessageType.ProtoReflect.Descriptor instead.
func (*NiMessageType) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{46}
}

func (m *NiMessageType) GetNiMessageType() isNiMessageType_NiMessageType {
	if m != nil {
		return m.NiMessageType
	}
	return nil
}

func (x *NiMessageType) GetS1MessageType() *NiMessageTypeS1 {
	if x, ok := x.GetNiMessageType().(*NiMessageType_S1MessageType); ok {
		return x.S1MessageType
	}
	return nil
}

func (x *NiMessageType) GetX2MessageType() *NiMessageTypeX2 {
	if x, ok := x.GetNiMessageType().(*NiMessageType_X2MessageType); ok {
		return x.X2MessageType
	}
	return nil
}

func (x *NiMessageType) GetNgMessageType() *NiMessageTypeNg {
	if x, ok := x.GetNiMessageType().(*NiMessageType_NgMessageType); ok {
		return x.NgMessageType
	}
	return nil
}

func (x *NiMessageType) GetXnMessageType() *NiMessageTypeXn {
	if x, ok := x.GetNiMessageType().(*NiMessageType_XnMessageType); ok {
		return x.XnMessageType
	}
	return nil
}

func (x *NiMessageType) GetF1MessageType() *NiMessageTypeF1 {
	if x, ok := x.GetNiMessageType().(*NiMessageType_F1MessageType); ok {
		return x.F1MessageType
	}
	return nil
}

func (x *NiMessageType) GetE1MessageType() *NiMessageTypeE1 {
	if x, ok := x.GetNiMessageType().(*NiMessageType_E1MessageType); ok {
		return x.E1MessageType
	}
	return nil
}

type isNiMessageType_NiMessageType interface {
	isNiMessageType_NiMessageType()
}

type NiMessageType_S1MessageType struct {
	S1MessageType *NiMessageTypeS1 `protobuf:"bytes,1,opt,name=s1_message_type,json=s1MessageType,proto3,oneof"`
}

type NiMessageType_X2MessageType struct {
	X2MessageType *NiMessageTypeX2 `protobuf:"bytes,2,opt,name=x2_message_type,json=x2MessageType,proto3,oneof"`
}

type NiMessageType_NgMessageType struct {
	NgMessageType *NiMessageTypeNg `protobuf:"bytes,3,opt,name=ng_message_type,json=ngMessageType,proto3,oneof"`
}

type NiMessageType_XnMessageType struct {
	XnMessageType *NiMessageTypeXn `protobuf:"bytes,4,opt,name=xn_message_type,json=xnMessageType,proto3,oneof"`
}

type NiMessageType_F1MessageType struct {
	F1MessageType *NiMessageTypeF1 `protobuf:"bytes,5,opt,name=f1_message_type,json=f1MessageType,proto3,oneof"`
}

type NiMessageType_E1MessageType struct {
	E1MessageType *NiMessageTypeE1 `protobuf:"bytes,6,opt,name=e1_message_type,json=e1MessageType,proto3,oneof"`
}

func (*NiMessageType_S1MessageType) isNiMessageType_NiMessageType() {}

func (*NiMessageType_X2MessageType) isNiMessageType_NiMessageType() {}

func (*NiMessageType_NgMessageType) isNiMessageType_NiMessageType() {}

func (*NiMessageType_XnMessageType) isNiMessageType_NiMessageType() {}

func (*NiMessageType_F1MessageType) isNiMessageType_NiMessageType() {}

func (*NiMessageType_E1MessageType) isNiMessageType_NiMessageType() {}

// reference from e2sm-ni-v01.00.asn1:394
type NiMessageTypeS1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *NiMessageTypeApproach1 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NiMessageTypeS1) Reset() {
	*x = NiMessageTypeS1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiMessageTypeS1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiMessageTypeS1) ProtoMessage() {}

func (x *NiMessageTypeS1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiMessageTypeS1.ProtoReflect.Descriptor instead.
func (*NiMessageTypeS1) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{47}
}

func (x *NiMessageTypeS1) GetValue() *NiMessageTypeApproach1 {
	if x != nil {
		return x.Value
	}
	return nil
}

// reference from e2sm-ni-v01.00.asn1:395
type NiMessageTypeX2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *NiMessageTypeApproach1 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NiMessageTypeX2) Reset() {
	*x = NiMessageTypeX2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiMessageTypeX2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiMessageTypeX2) ProtoMessage() {}

func (x *NiMessageTypeX2) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiMessageTypeX2.ProtoReflect.Descriptor instead.
func (*NiMessageTypeX2) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{48}
}

func (x *NiMessageTypeX2) GetValue() *NiMessageTypeApproach1 {
	if x != nil {
		return x.Value
	}
	return nil
}

// reference from e2sm-ni-v01.00.asn1:396
type NiMessageTypeNg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *NiMessageTypeApproach1 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NiMessageTypeNg) Reset() {
	*x = NiMessageTypeNg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiMessageTypeNg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiMessageTypeNg) ProtoMessage() {}

func (x *NiMessageTypeNg) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiMessageTypeNg.ProtoReflect.Descriptor instead.
func (*NiMessageTypeNg) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{49}
}

func (x *NiMessageTypeNg) GetValue() *NiMessageTypeApproach1 {
	if x != nil {
		return x.Value
	}
	return nil
}

// reference from e2sm-ni-v01.00.asn1:397
type NiMessageTypeXn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *NiMessageTypeApproach1 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NiMessageTypeXn) Reset() {
	*x = NiMessageTypeXn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiMessageTypeXn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiMessageTypeXn) ProtoMessage() {}

func (x *NiMessageTypeXn) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiMessageTypeXn.ProtoReflect.Descriptor instead.
func (*NiMessageTypeXn) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{50}
}

func (x *NiMessageTypeXn) GetValue() *NiMessageTypeApproach1 {
	if x != nil {
		return x.Value
	}
	return nil
}

// reference from e2sm-ni-v01.00.asn1:398
type NiMessageTypeF1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *NiMessageTypeApproach1 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NiMessageTypeF1) Reset() {
	*x = NiMessageTypeF1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiMessageTypeF1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiMessageTypeF1) ProtoMessage() {}

func (x *NiMessageTypeF1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiMessageTypeF1.ProtoReflect.Descriptor instead.
func (*NiMessageTypeF1) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{51}
}

func (x *NiMessageTypeF1) GetValue() *NiMessageTypeApproach1 {
	if x != nil {
		return x.Value
	}
	return nil
}

// reference from e2sm-ni-v01.00.asn1:400
type NiMessageTypeE1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *NiMessageTypeApproach1 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NiMessageTypeE1) Reset() {
	*x = NiMessageTypeE1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiMessageTypeE1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiMessageTypeE1) ProtoMessage() {}

func (x *NiMessageTypeE1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiMessageTypeE1.ProtoReflect.Descriptor instead.
func (*NiMessageTypeE1) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{52}
}

func (x *NiMessageTypeE1) GetValue() *NiMessageTypeApproach1 {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:401
type NiMessageTypeApproach1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcedureCode *ProcedureCode `protobuf:"bytes,1,opt,name=procedure_code,json=procedureCode,proto3" json:"procedure_code,omitempty"`
	TypeOfMessage TypeOfMessage  `protobuf:"varint,2,opt,name=type_of_message,json=typeOfMessage,proto3,enum=e2sm_ni.v1beta1.TypeOfMessage" json:"type_of_message,omitempty"`
}

func (x *NiMessageTypeApproach1) Reset() {
	*x = NiMessageTypeApproach1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiMessageTypeApproach1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiMessageTypeApproach1) ProtoMessage() {}

func (x *NiMessageTypeApproach1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiMessageTypeApproach1.ProtoReflect.Descriptor instead.
func (*NiMessageTypeApproach1) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{53}
}

func (x *NiMessageTypeApproach1) GetProcedureCode() *ProcedureCode {
	if x != nil {
		return x.ProcedureCode
	}
	return nil
}

func (x *NiMessageTypeApproach1) GetTypeOfMessage() TypeOfMessage {
	if x != nil {
		return x.TypeOfMessage
	}
	return TypeOfMessage_TYPE_OF_MESSAGE_NOTHING
}

// sequence from e2sm-ni-v01.00.asn1:410
type NiProtocolIeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterfaceProtocolIeId    *NiProtocolIeId    `protobuf:"bytes,1,opt,name=interface_protocol_ie_id,json=interfaceProtocolIeId,proto3" json:"interface_protocol_ie_id,omitempty"`
	InterfaceProtocolIeTest  NiProtocolIeTest   `protobuf:"varint,2,opt,name=interface_protocol_ie_test,json=interfaceProtocolIeTest,proto3,enum=e2sm_ni.v1beta1.NiProtocolIeTest" json:"interface_protocol_ie_test,omitempty"`
	InterfaceProtocolIeValue *NiProtocolIeValue `protobuf:"bytes,3,opt,name=interface_protocol_ie_value,json=interfaceProtocolIeValue,proto3" json:"interface_protocol_ie_value,omitempty"`
}

func (x *NiProtocolIeItem) Reset() {
	*x = NiProtocolIeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiProtocolIeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiProtocolIeItem) ProtoMessage() {}

func (x *NiProtocolIeItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiProtocolIeItem.ProtoReflect.Descriptor instead.
func (*NiProtocolIeItem) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{54}
}

func (x *NiProtocolIeItem) GetInterfaceProtocolIeId() *NiProtocolIeId {
	if x != nil {
		return x.InterfaceProtocolIeId
	}
	return nil
}

func (x *NiProtocolIeItem) GetInterfaceProtocolIeTest() NiProtocolIeTest {
	if x != nil {
		return x.InterfaceProtocolIeTest
	}
	return NiProtocolIeTest_NI_PROTOCOL_IE_TEST_EQUAL
}

func (x *NiProtocolIeItem) GetInterfaceProtocolIeValue() *NiProtocolIeValue {
	if x != nil {
		return x.InterfaceProtocolIeValue
	}
	return nil
}

// reference from e2sm-ni-v01.00.asn1:418
type NiProtocolIeId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *ProtocolIeId `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NiProtocolIeId) Reset() {
	*x = NiProtocolIeId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiProtocolIeId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiProtocolIeId) ProtoMessage() {}

func (x *NiProtocolIeId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiProtocolIeId.ProtoReflect.Descriptor instead.
func (*NiProtocolIeId) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{55}
}

func (x *NiProtocolIeId) GetValue() *ProtocolIeId {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:428
type NiProtocolIeValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-ni-v01.00.asn1:428
	//
	// Types that are assignable to NiProtocolIeValue:
	//	*NiProtocolIeValue_ValueInt
	//	*NiProtocolIeValue_ValueEnum
	//	*NiProtocolIeValue_ValueBool
	//	*NiProtocolIeValue_ValueBitS
	//	*NiProtocolIeValue_ValueOctS
	//	*NiProtocolIeValue_ValuePrtS
	NiProtocolIeValue isNiProtocolIeValue_NiProtocolIeValue `protobuf_oneof:"ni_protocol_ie_value"`
}

func (x *NiProtocolIeValue) Reset() {
	*x = NiProtocolIeValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiProtocolIeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiProtocolIeValue) ProtoMessage() {}

func (x *NiProtocolIeValue) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiProtocolIeValue.ProtoReflect.Descriptor instead.
func (*NiProtocolIeValue) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{56}
}

func (m *NiProtocolIeValue) GetNiProtocolIeValue() isNiProtocolIeValue_NiProtocolIeValue {
	if m != nil {
		return m.NiProtocolIeValue
	}
	return nil
}

func (x *NiProtocolIeValue) GetValueInt() int32 {
	if x, ok := x.GetNiProtocolIeValue().(*NiProtocolIeValue_ValueInt); ok {
		return x.ValueInt
	}
	return 0
}

func (x *NiProtocolIeValue) GetValueEnum() int32 {
	if x, ok := x.GetNiProtocolIeValue().(*NiProtocolIeValue_ValueEnum); ok {
		return x.ValueEnum
	}
	return 0
}

func (x *NiProtocolIeValue) GetValueBool() bool {
	if x, ok := x.GetNiProtocolIeValue().(*NiProtocolIeValue_ValueBool); ok {
		return x.ValueBool
	}
	return false
}

func (x *NiProtocolIeValue) GetValueBitS() []byte {
	if x, ok := x.GetNiProtocolIeValue().(*NiProtocolIeValue_ValueBitS); ok {
		return x.ValueBitS
	}
	return nil
}

func (x *NiProtocolIeValue) GetValueOctS() []byte {
	if x, ok := x.GetNiProtocolIeValue().(*NiProtocolIeValue_ValueOctS); ok {
		return x.ValueOctS
	}
	return nil
}

func (x *NiProtocolIeValue) GetValuePrtS() int32 {
	if x, ok := x.GetNiProtocolIeValue().(*NiProtocolIeValue_ValuePrtS); ok {
		return x.ValuePrtS
	}
	return 0
}

type isNiProtocolIeValue_NiProtocolIeValue interface {
	isNiProtocolIeValue_NiProtocolIeValue()
}

type NiProtocolIeValue_ValueInt struct {
	ValueInt int32 `protobuf:"varint,1,opt,name=value_int,json=valueInt,proto3,oneof"`
}

type NiProtocolIeValue_ValueEnum struct {
	ValueEnum int32 `protobuf:"varint,2,opt,name=value_enum,json=valueEnum,proto3,oneof"`
}

type NiProtocolIeValue_ValueBool struct {
	ValueBool bool `protobuf:"varint,3,opt,name=value_bool,json=valueBool,proto3,oneof"`
}

type NiProtocolIeValue_ValueBitS struct {
	ValueBitS []byte `protobuf:"bytes,4,opt,name=value_bit_s,json=valueBitS,proto3,oneof"`
}

type NiProtocolIeValue_ValueOctS struct {
	ValueOctS []byte `protobuf:"bytes,5,opt,name=value_oct_s,json=valueOctS,proto3,oneof"`
}

type NiProtocolIeValue_ValuePrtS struct {
	ValuePrtS int32 `protobuf:"varint,6,opt,name=value_prt_s,json=valuePrtS,proto3,oneof"`
}

func (*NiProtocolIeValue_ValueInt) isNiProtocolIeValue_NiProtocolIeValue() {}

func (*NiProtocolIeValue_ValueEnum) isNiProtocolIeValue_NiProtocolIeValue() {}

func (*NiProtocolIeValue_ValueBool) isNiProtocolIeValue_NiProtocolIeValue() {}

func (*NiProtocolIeValue_ValueBitS) isNiProtocolIeValue_NiProtocolIeValue() {}

func (*NiProtocolIeValue_ValueOctS) isNiProtocolIeValue_NiProtocolIeValue() {}

func (*NiProtocolIeValue_ValuePrtS) isNiProtocolIeValue_NiProtocolIeValue() {}

// range of Integer from e2sm-ni-v01.00.asn1:456
type RancallProcessIdNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RancallProcessIdNumber) Reset() {
	*x = RancallProcessIdNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RancallProcessIdNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RancallProcessIdNumber) ProtoMessage() {}

func (x *RancallProcessIdNumber) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RancallProcessIdNumber.ProtoReflect.Descriptor instead.
func (*RancallProcessIdNumber) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{57}
}

func (x *RancallProcessIdNumber) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm-ni-v01.00.asn1:459
type RanfunctionName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RanFunctionShortName   string `protobuf:"bytes,1,opt,name=ran_function_short_name,json=ranFunctionShortName,proto3" json:"ran_function_short_name,omitempty"`
	RanFunctionE2SmOid     string `protobuf:"bytes,2,opt,name=ran_function_e2_sm_oid,json=ranFunctionE2SmOid,proto3" json:"ran_function_e2_sm_oid,omitempty"`
	RanFunctionDescription string `protobuf:"bytes,3,opt,name=ran_function_description,json=ranFunctionDescription,proto3" json:"ran_function_description,omitempty"`
	RanFunctionInstance    int32  `protobuf:"varint,4,opt,name=ran_function_instance,json=ranFunctionInstance,proto3" json:"ran_function_instance,omitempty"`
}

func (x *RanfunctionName) Reset() {
	*x = RanfunctionName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanfunctionName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanfunctionName) ProtoMessage() {}

func (x *RanfunctionName) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanfunctionName.ProtoReflect.Descriptor instead.
func (*RanfunctionName) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{58}
}

func (x *RanfunctionName) GetRanFunctionShortName() string {
	if x != nil {
		return x.RanFunctionShortName
	}
	return ""
}

func (x *RanfunctionName) GetRanFunctionE2SmOid() string {
	if x != nil {
		return x.RanFunctionE2SmOid
	}
	return ""
}

func (x *RanfunctionName) GetRanFunctionDescription() string {
	if x != nil {
		return x.RanFunctionDescription
	}
	return ""
}

func (x *RanfunctionName) GetRanFunctionInstance() int32 {
	if x != nil {
		return x.RanFunctionInstance
	}
	return 0
}

// sequence from e2sm-ni-v01.00.asn1:468
type RanimperativePolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RanImperativePolicyList []*RanparameterItem `protobuf:"bytes,1,rep,name=ran_imperative_policy_list,json=ranImperativePolicyList,proto3" json:"ran_imperative_policy_list,omitempty"`
}

func (x *RanimperativePolicy) Reset() {
	*x = RanimperativePolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanimperativePolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanimperativePolicy) ProtoMessage() {}

func (x *RanimperativePolicy) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanimperativePolicy.ProtoReflect.Descriptor instead.
func (*RanimperativePolicy) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{59}
}

func (x *RanimperativePolicy) GetRanImperativePolicyList() []*RanparameterItem {
	if x != nil {
		return x.RanImperativePolicyList
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:473
type RanparameterItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RanParameterId    *RanparameterId    `protobuf:"bytes,1,opt,name=ran_parameter_id,json=ranParameterId,proto3" json:"ran_parameter_id,omitempty"`
	RanParameterValue *RanparameterValue `protobuf:"bytes,2,opt,name=ran_parameter_value,json=ranParameterValue,proto3" json:"ran_parameter_value,omitempty"`
}

func (x *RanparameterItem) Reset() {
	*x = RanparameterItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanparameterItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanparameterItem) ProtoMessage() {}

func (x *RanparameterItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanparameterItem.ProtoReflect.Descriptor instead.
func (*RanparameterItem) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{60}
}

func (x *RanparameterItem) GetRanParameterId() *RanparameterId {
	if x != nil {
		return x.RanParameterId
	}
	return nil
}

func (x *RanparameterItem) GetRanParameterValue() *RanparameterValue {
	if x != nil {
		return x.RanParameterValue
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:479
type RanparameterDefItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RanParameterId   *RanparameterId   `protobuf:"bytes,1,opt,name=ran_parameter_id,json=ranParameterId,proto3" json:"ran_parameter_id,omitempty"`
	RanParameterName *RanparameterName `protobuf:"bytes,2,opt,name=ran_parameter_name,json=ranParameterName,proto3" json:"ran_parameter_name,omitempty"`
	RanParameterType RanparameterType  `protobuf:"varint,3,opt,name=ran_parameter_type,json=ranParameterType,proto3,enum=e2sm_ni.v1beta1.RanparameterType" json:"ran_parameter_type,omitempty"`
}

func (x *RanparameterDefItem) Reset() {
	*x = RanparameterDefItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanparameterDefItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanparameterDefItem) ProtoMessage() {}

func (x *RanparameterDefItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanparameterDefItem.ProtoReflect.Descriptor instead.
func (*RanparameterDefItem) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{61}
}

func (x *RanparameterDefItem) GetRanParameterId() *RanparameterId {
	if x != nil {
		return x.RanParameterId
	}
	return nil
}

func (x *RanparameterDefItem) GetRanParameterName() *RanparameterName {
	if x != nil {
		return x.RanParameterName
	}
	return nil
}

func (x *RanparameterDefItem) GetRanParameterType() RanparameterType {
	if x != nil {
		return x.RanParameterType
	}
	return RanparameterType_RANPARAMETER_TYPE_INTEGER
}

// range of Integer from e2sm-ni-v01.00.asn1:485
type RanparameterId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RanparameterId) Reset() {
	*x = RanparameterId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanparameterId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanparameterId) ProtoMessage() {}

func (x *RanparameterId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanparameterId.ProtoReflect.Descriptor instead.
func (*RanparameterId) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{62}
}

func (x *RanparameterId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm-ni-v01.00.asn1:509
type RanparameterValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-ni-v01.00.asn1:509
	//
	// Types that are assignable to RanparameterValue:
	//	*RanparameterValue_ValueInt
	//	*RanparameterValue_ValueEnum
	//	*RanparameterValue_ValueBool
	//	*RanparameterValue_ValueBitS
	//	*RanparameterValue_ValueOctS
	//	*RanparameterValue_ValuePrtS
	RanparameterValue isRanparameterValue_RanparameterValue `protobuf_oneof:"ranparameter_value"`
}

func (x *RanparameterValue) Reset() {
	*x = RanparameterValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanparameterValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanparameterValue) ProtoMessage() {}

func (x *RanparameterValue) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanparameterValue.ProtoReflect.Descriptor instead.
func (*RanparameterValue) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{63}
}

func (m *RanparameterValue) GetRanparameterValue() isRanparameterValue_RanparameterValue {
	if m != nil {
		return m.RanparameterValue
	}
	return nil
}

func (x *RanparameterValue) GetValueInt() int32 {
	if x, ok := x.GetRanparameterValue().(*RanparameterValue_ValueInt); ok {
		return x.ValueInt
	}
	return 0
}

func (x *RanparameterValue) GetValueEnum() int32 {
	if x, ok := x.GetRanparameterValue().(*RanparameterValue_ValueEnum); ok {
		return x.ValueEnum
	}
	return 0
}

func (x *RanparameterValue) GetValueBool() bool {
	if x, ok := x.GetRanparameterValue().(*RanparameterValue_ValueBool); ok {
		return x.ValueBool
	}
	return false
}

func (x *RanparameterValue) GetValueBitS() []byte {
	if x, ok := x.GetRanparameterValue().(*RanparameterValue_ValueBitS); ok {
		return x.ValueBitS
	}
	return nil
}

func (x *RanparameterValue) GetValueOctS() []byte {
	if x, ok := x.GetRanparameterValue().(*RanparameterValue_ValueOctS); ok {
		return x.ValueOctS
	}
	return nil
}

func (x *RanparameterValue) GetValuePrtS() int32 {
	if x, ok := x.GetRanparameterValue().(*RanparameterValue_ValuePrtS); ok {
		return x.ValuePrtS
	}
	return 0
}

type isRanparameterValue_RanparameterValue interface {
	isRanparameterValue_RanparameterValue()
}

type RanparameterValue_ValueInt struct {
	ValueInt int32 `protobuf:"varint,1,opt,name=value_int,json=valueInt,proto3,oneof"`
}

type RanparameterValue_ValueEnum struct {
	ValueEnum int32 `protobuf:"varint,2,opt,name=value_enum,json=valueEnum,proto3,oneof"`
}

type RanparameterValue_ValueBool struct {
	ValueBool bool `protobuf:"varint,3,opt,name=value_bool,json=valueBool,proto3,oneof"`
}

type RanparameterValue_ValueBitS struct {
	ValueBitS []byte `protobuf:"bytes,4,opt,name=value_bit_s,json=valueBitS,proto3,oneof"`
}

type RanparameterValue_ValueOctS struct {
	ValueOctS []byte `protobuf:"bytes,5,opt,name=value_oct_s,json=valueOctS,proto3,oneof"`
}

type RanparameterValue_ValuePrtS struct {
	ValuePrtS int32 `protobuf:"varint,6,opt,name=value_prt_s,json=valuePrtS,proto3,oneof"`
}

func (*RanparameterValue_ValueInt) isRanparameterValue_RanparameterValue() {}

func (*RanparameterValue_ValueEnum) isRanparameterValue_RanparameterValue() {}

func (*RanparameterValue_ValueBool) isRanparameterValue_RanparameterValue() {}

func (*RanparameterValue_ValueBitS) isRanparameterValue_RanparameterValue() {}

func (*RanparameterValue_ValueOctS) isRanparameterValue_RanparameterValue() {}

func (*RanparameterValue_ValuePrtS) isRanparameterValue_RanparameterValue() {}

// range of Integer from e2sm-ni-v01.00.asn1:519
type RanueGroupId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RanueGroupId) Reset() {
	*x = RanueGroupId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanueGroupId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanueGroupId) ProtoMessage() {}

func (x *RanueGroupId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanueGroupId.ProtoReflect.Descriptor instead.
func (*RanueGroupId) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{64}
}

func (x *RanueGroupId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm-ni-v01.00.asn1:522
type RanueGroupItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RanUegroupId         *RanueGroupId         `protobuf:"bytes,1,opt,name=ran_uegroup_id,json=ranUegroupId,proto3" json:"ran_uegroup_id,omitempty"`
	RanUegroupDefinition *RanueGroupDefinition `protobuf:"bytes,2,opt,name=ran_uegroup_definition,json=ranUegroupDefinition,proto3" json:"ran_uegroup_definition,omitempty"`
	RanPolicy            *RanimperativePolicy  `protobuf:"bytes,3,opt,name=ran_policy,json=ranPolicy,proto3" json:"ran_policy,omitempty"`
}

func (x *RanueGroupItem) Reset() {
	*x = RanueGroupItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanueGroupItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanueGroupItem) ProtoMessage() {}

func (x *RanueGroupItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanueGroupItem.ProtoReflect.Descriptor instead.
func (*RanueGroupItem) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{65}
}

func (x *RanueGroupItem) GetRanUegroupId() *RanueGroupId {
	if x != nil {
		return x.RanUegroupId
	}
	return nil
}

func (x *RanueGroupItem) GetRanUegroupDefinition() *RanueGroupDefinition {
	if x != nil {
		return x.RanUegroupDefinition
	}
	return nil
}

func (x *RanueGroupItem) GetRanPolicy() *RanimperativePolicy {
	if x != nil {
		return x.RanPolicy
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:531
type RanueGroupDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RanUegroupDefList []*RanueGroupDefItem `protobuf:"bytes,1,rep,name=ran_uegroup_def_list,json=ranUegroupDefList,proto3" json:"ran_uegroup_def_list,omitempty"`
}

func (x *RanueGroupDefinition) Reset() {
	*x = RanueGroupDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanueGroupDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanueGroupDefinition) ProtoMessage() {}

func (x *RanueGroupDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanueGroupDefinition.ProtoReflect.Descriptor instead.
func (*RanueGroupDefinition) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{66}
}

func (x *RanueGroupDefinition) GetRanUegroupDefList() []*RanueGroupDefItem {
	if x != nil {
		return x.RanUegroupDefList
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:537
type RanueGroupDefItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RanParameterId    *RanparameterId           `protobuf:"bytes,1,opt,name=ran_parameter_id,json=ranParameterId,proto3" json:"ran_parameter_id,omitempty"`
	RanParameterTest  RanparameterTestCondition `protobuf:"varint,2,opt,name=ran_parameter_test,json=ranParameterTest,proto3,enum=e2sm_ni.v1beta1.RanparameterTestCondition" json:"ran_parameter_test,omitempty"`
	RanParameterValue *RanparameterValue        `protobuf:"bytes,3,opt,name=ran_parameter_value,json=ranParameterValue,proto3" json:"ran_parameter_value,omitempty"`
}

func (x *RanueGroupDefItem) Reset() {
	*x = RanueGroupDefItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanueGroupDefItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanueGroupDefItem) ProtoMessage() {}

func (x *RanueGroupDefItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanueGroupDefItem.ProtoReflect.Descriptor instead.
func (*RanueGroupDefItem) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{67}
}

func (x *RanueGroupDefItem) GetRanParameterId() *RanparameterId {
	if x != nil {
		return x.RanParameterId
	}
	return nil
}

func (x *RanueGroupDefItem) GetRanParameterTest() RanparameterTestCondition {
	if x != nil {
		return x.RanParameterTest
	}
	return RanparameterTestCondition_RANPARAMETER_TEST_CONDITION_EQUAL
}

func (x *RanueGroupDefItem) GetRanParameterValue() *RanparameterValue {
	if x != nil {
		return x.RanParameterValue
	}
	return nil
}

// range of Integer from e2sm-ni-v01.00.asn1:546
type RicControlMessagePriority struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RicControlMessagePriority) Reset() {
	*x = RicControlMessagePriority{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicControlMessagePriority) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicControlMessagePriority) ProtoMessage() {}

func (x *RicControlMessagePriority) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicControlMessagePriority.ProtoReflect.Descriptor instead.
func (*RicControlMessagePriority) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{68}
}

func (x *RicControlMessagePriority) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm-ni-v01.00.asn1:547
type RicControlStyleList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicControlStyleType             *RicStyleType          `protobuf:"bytes,1,opt,name=ric_control_style_type,json=ricControlStyleType,proto3" json:"ric_control_style_type,omitempty"`
	RicControlStyleName             *RicStyleName          `protobuf:"bytes,2,opt,name=ric_control_style_name,json=ricControlStyleName,proto3" json:"ric_control_style_name,omitempty"`
	RicControlFormatType            *RicFormatType         `protobuf:"bytes,3,opt,name=ric_control_format_type,json=ricControlFormatType,proto3" json:"ric_control_format_type,omitempty"`
	RicControlHeaderFormatType      *RicFormatType         `protobuf:"bytes,4,opt,name=ric_control_header_format_type,json=ricControlHeaderFormatType,proto3" json:"ric_control_header_format_type,omitempty"`
	RicControlMessageFormatType     *RicFormatType         `protobuf:"bytes,5,opt,name=ric_control_message_format_type,json=ricControlMessageFormatType,proto3" json:"ric_control_message_format_type,omitempty"`
	RicCallProcessIdformatType      *RicFormatType         `protobuf:"bytes,6,opt,name=ric_call_process_idformat_type,json=ricCallProcessIdformatType,proto3" json:"ric_call_process_idformat_type,omitempty"`
	RicControlOutcomeFormatType     *RicFormatType         `protobuf:"bytes,7,opt,name=ric_control_outcome_format_type,json=ricControlOutcomeFormatType,proto3" json:"ric_control_outcome_format_type,omitempty"`
	RicControlOutcomeRanParaDefList []*RanparameterDefItem `protobuf:"bytes,8,rep,name=ric_control_outcome_ran_para_def_list,json=ricControlOutcomeRanParaDefList,proto3" json:"ric_control_outcome_ran_para_def_list,omitempty"`
}

func (x *RicControlStyleList) Reset() {
	*x = RicControlStyleList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicControlStyleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicControlStyleList) ProtoMessage() {}

func (x *RicControlStyleList) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicControlStyleList.ProtoReflect.Descriptor instead.
func (*RicControlStyleList) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{69}
}

func (x *RicControlStyleList) GetRicControlStyleType() *RicStyleType {
	if x != nil {
		return x.RicControlStyleType
	}
	return nil
}

func (x *RicControlStyleList) GetRicControlStyleName() *RicStyleName {
	if x != nil {
		return x.RicControlStyleName
	}
	return nil
}

func (x *RicControlStyleList) GetRicControlFormatType() *RicFormatType {
	if x != nil {
		return x.RicControlFormatType
	}
	return nil
}

func (x *RicControlStyleList) GetRicControlHeaderFormatType() *RicFormatType {
	if x != nil {
		return x.RicControlHeaderFormatType
	}
	return nil
}

func (x *RicControlStyleList) GetRicControlMessageFormatType() *RicFormatType {
	if x != nil {
		return x.RicControlMessageFormatType
	}
	return nil
}

func (x *RicControlStyleList) GetRicCallProcessIdformatType() *RicFormatType {
	if x != nil {
		return x.RicCallProcessIdformatType
	}
	return nil
}

func (x *RicControlStyleList) GetRicControlOutcomeFormatType() *RicFormatType {
	if x != nil {
		return x.RicControlOutcomeFormatType
	}
	return nil
}

func (x *RicControlStyleList) GetRicControlOutcomeRanParaDefList() []*RanparameterDefItem {
	if x != nil {
		return x.RicControlOutcomeRanParaDefList
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:559
type RicEventTriggerStyleList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicEventTriggerStyleType  *RicStyleType  `protobuf:"bytes,1,opt,name=ric_event_trigger_style_type,json=ricEventTriggerStyleType,proto3" json:"ric_event_trigger_style_type,omitempty"`
	RicEventTriggerStyleName  *RicStyleName  `protobuf:"bytes,2,opt,name=ric_event_trigger_style_name,json=ricEventTriggerStyleName,proto3" json:"ric_event_trigger_style_name,omitempty"`
	RicEventTriggerFormatType *RicFormatType `protobuf:"bytes,3,opt,name=ric_event_trigger_format_type,json=ricEventTriggerFormatType,proto3" json:"ric_event_trigger_format_type,omitempty"`
}

func (x *RicEventTriggerStyleList) Reset() {
	*x = RicEventTriggerStyleList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicEventTriggerStyleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicEventTriggerStyleList) ProtoMessage() {}

func (x *RicEventTriggerStyleList) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicEventTriggerStyleList.ProtoReflect.Descriptor instead.
func (*RicEventTriggerStyleList) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{70}
}

func (x *RicEventTriggerStyleList) GetRicEventTriggerStyleType() *RicStyleType {
	if x != nil {
		return x.RicEventTriggerStyleType
	}
	return nil
}

func (x *RicEventTriggerStyleList) GetRicEventTriggerStyleName() *RicStyleName {
	if x != nil {
		return x.RicEventTriggerStyleName
	}
	return nil
}

func (x *RicEventTriggerStyleList) GetRicEventTriggerFormatType() *RicFormatType {
	if x != nil {
		return x.RicEventTriggerFormatType
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:565
type RicInsertStyleList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicInsertStyleType             *RicStyleType          `protobuf:"bytes,1,opt,name=ric_insert_style_type,json=ricInsertStyleType,proto3" json:"ric_insert_style_type,omitempty"`
	RicInsertStyleName             *RicStyleName          `protobuf:"bytes,2,opt,name=ric_insert_style_name,json=ricInsertStyleName,proto3" json:"ric_insert_style_name,omitempty"`
	RicInsertActionFormatType      *RicFormatType         `protobuf:"bytes,3,opt,name=ric_insert_action_format_type,json=ricInsertActionFormatType,proto3" json:"ric_insert_action_format_type,omitempty"`
	RicInsertRanParameterDefList   []*RanparameterDefItem `protobuf:"bytes,4,rep,name=ric_insert_ran_parameter_def_list,json=ricInsertRanParameterDefList,proto3" json:"ric_insert_ran_parameter_def_list,omitempty"`
	RicIndicationHeaderFormatType  *RicFormatType         `protobuf:"bytes,5,opt,name=ric_indication_header_format_type,json=ricIndicationHeaderFormatType,proto3" json:"ric_indication_header_format_type,omitempty"`
	RicIndicationMessageFormatType *RicFormatType         `protobuf:"bytes,6,opt,name=ric_indication_message_format_type,json=ricIndicationMessageFormatType,proto3" json:"ric_indication_message_format_type,omitempty"`
	RicCallProcessIdformatType     *RicFormatType         `protobuf:"bytes,7,opt,name=ric_call_process_idformat_type,json=ricCallProcessIdformatType,proto3" json:"ric_call_process_idformat_type,omitempty"`
}

func (x *RicInsertStyleList) Reset() {
	*x = RicInsertStyleList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicInsertStyleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicInsertStyleList) ProtoMessage() {}

func (x *RicInsertStyleList) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicInsertStyleList.ProtoReflect.Descriptor instead.
func (*RicInsertStyleList) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{71}
}

func (x *RicInsertStyleList) GetRicInsertStyleType() *RicStyleType {
	if x != nil {
		return x.RicInsertStyleType
	}
	return nil
}

func (x *RicInsertStyleList) GetRicInsertStyleName() *RicStyleName {
	if x != nil {
		return x.RicInsertStyleName
	}
	return nil
}

func (x *RicInsertStyleList) GetRicInsertActionFormatType() *RicFormatType {
	if x != nil {
		return x.RicInsertActionFormatType
	}
	return nil
}

func (x *RicInsertStyleList) GetRicInsertRanParameterDefList() []*RanparameterDefItem {
	if x != nil {
		return x.RicInsertRanParameterDefList
	}
	return nil
}

func (x *RicInsertStyleList) GetRicIndicationHeaderFormatType() *RicFormatType {
	if x != nil {
		return x.RicIndicationHeaderFormatType
	}
	return nil
}

func (x *RicInsertStyleList) GetRicIndicationMessageFormatType() *RicFormatType {
	if x != nil {
		return x.RicIndicationMessageFormatType
	}
	return nil
}

func (x *RicInsertStyleList) GetRicCallProcessIdformatType() *RicFormatType {
	if x != nil {
		return x.RicCallProcessIdformatType
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:575
type RicPolicyStyleList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicPolicyStyleType           *RicStyleType          `protobuf:"bytes,1,opt,name=ric_policy_style_type,json=ricPolicyStyleType,proto3" json:"ric_policy_style_type,omitempty"`
	RicPolicyStyleName           *RicStyleName          `protobuf:"bytes,2,opt,name=ric_policy_style_name,json=ricPolicyStyleName,proto3" json:"ric_policy_style_name,omitempty"`
	RicPolicyActionFormatType    *RicFormatType         `protobuf:"bytes,3,opt,name=ric_policy_action_format_type,json=ricPolicyActionFormatType,proto3" json:"ric_policy_action_format_type,omitempty"`
	RicPolicyRanParameterDefList []*RanparameterDefItem `protobuf:"bytes,4,rep,name=ric_policy_ran_parameter_def_list,json=ricPolicyRanParameterDefList,proto3" json:"ric_policy_ran_parameter_def_list,omitempty"`
}

func (x *RicPolicyStyleList) Reset() {
	*x = RicPolicyStyleList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicPolicyStyleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicPolicyStyleList) ProtoMessage() {}

func (x *RicPolicyStyleList) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicPolicyStyleList.ProtoReflect.Descriptor instead.
func (*RicPolicyStyleList) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{72}
}

func (x *RicPolicyStyleList) GetRicPolicyStyleType() *RicStyleType {
	if x != nil {
		return x.RicPolicyStyleType
	}
	return nil
}

func (x *RicPolicyStyleList) GetRicPolicyStyleName() *RicStyleName {
	if x != nil {
		return x.RicPolicyStyleName
	}
	return nil
}

func (x *RicPolicyStyleList) GetRicPolicyActionFormatType() *RicFormatType {
	if x != nil {
		return x.RicPolicyActionFormatType
	}
	return nil
}

func (x *RicPolicyStyleList) GetRicPolicyRanParameterDefList() []*RanparameterDefItem {
	if x != nil {
		return x.RicPolicyRanParameterDefList
	}
	return nil
}

// sequence from e2sm-ni-v01.00.asn1:583
type RicReportStyleList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicReportStyleType             *RicStyleType          `protobuf:"bytes,1,opt,name=ric_report_style_type,json=ricReportStyleType,proto3" json:"ric_report_style_type,omitempty"`
	RicReportStyleName             *RicStyleName          `protobuf:"bytes,2,opt,name=ric_report_style_name,json=ricReportStyleName,proto3" json:"ric_report_style_name,omitempty"`
	RicReportActionFormatType      *RicFormatType         `protobuf:"bytes,3,opt,name=ric_report_action_format_type,json=ricReportActionFormatType,proto3" json:"ric_report_action_format_type,omitempty"`
	RicReportRanParameterDefList   []*RanparameterDefItem `protobuf:"bytes,4,rep,name=ric_report_ran_parameter_def_list,json=ricReportRanParameterDefList,proto3" json:"ric_report_ran_parameter_def_list,omitempty"`
	RicIndicationHeaderFormatType  *RicFormatType         `protobuf:"bytes,5,opt,name=ric_indication_header_format_type,json=ricIndicationHeaderFormatType,proto3" json:"ric_indication_header_format_type,omitempty"`
	RicIndicationMessageFormatType *RicFormatType         `protobuf:"bytes,6,opt,name=ric_indication_message_format_type,json=ricIndicationMessageFormatType,proto3" json:"ric_indication_message_format_type,omitempty"`
}

func (x *RicReportStyleList) Reset() {
	*x = RicReportStyleList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicReportStyleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicReportStyleList) ProtoMessage() {}

func (x *RicReportStyleList) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicReportStyleList.ProtoReflect.Descriptor instead.
func (*RicReportStyleList) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{73}
}

func (x *RicReportStyleList) GetRicReportStyleType() *RicStyleType {
	if x != nil {
		return x.RicReportStyleType
	}
	return nil
}

func (x *RicReportStyleList) GetRicReportStyleName() *RicStyleName {
	if x != nil {
		return x.RicReportStyleName
	}
	return nil
}

func (x *RicReportStyleList) GetRicReportActionFormatType() *RicFormatType {
	if x != nil {
		return x.RicReportActionFormatType
	}
	return nil
}

func (x *RicReportStyleList) GetRicReportRanParameterDefList() []*RanparameterDefItem {
	if x != nil {
		return x.RicReportRanParameterDefList
	}
	return nil
}

func (x *RicReportStyleList) GetRicIndicationHeaderFormatType() *RicFormatType {
	if x != nil {
		return x.RicIndicationHeaderFormatType
	}
	return nil
}

func (x *RicReportStyleList) GetRicIndicationMessageFormatType() *RicFormatType {
	if x != nil {
		return x.RicIndicationMessageFormatType
	}
	return nil
}

// range of Integer from e2sm-ni-v01.00.asn1:594
type RicFormatType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RicFormatType) Reset() {
	*x = RicFormatType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicFormatType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicFormatType) ProtoMessage() {}

func (x *RicFormatType) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicFormatType.ProtoReflect.Descriptor instead.
func (*RicFormatType) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{74}
}

func (x *RicFormatType) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm-ni-v01.00.asn1:596
type RicStyleType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RicStyleType) Reset() {
	*x = RicStyleType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicStyleType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicStyleType) ProtoMessage() {}

func (x *RicStyleType) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicStyleType.ProtoReflect.Descriptor instead.
func (*RicStyleType) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{75}
}

func (x *RicStyleType) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type PlmnIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PlmnIdentity) Reset() {
	*x = PlmnIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlmnIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlmnIdentity) ProtoMessage() {}

func (x *PlmnIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlmnIdentity.ProtoReflect.Descriptor instead.
func (*PlmnIdentity) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{76}
}

func (x *PlmnIdentity) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type NiTimeStamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NiTimeStamp) Reset() {
	*x = NiTimeStamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiTimeStamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiTimeStamp) ProtoMessage() {}

func (x *NiTimeStamp) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiTimeStamp.ProtoReflect.Descriptor instead.
func (*NiTimeStamp) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{77}
}

func (x *NiTimeStamp) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type NiMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NiMessage) Reset() {
	*x = NiMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NiMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NiMessage) ProtoMessage() {}

func (x *NiMessage) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NiMessage.ProtoReflect.Descriptor instead.
func (*NiMessage) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{78}
}

func (x *NiMessage) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type RancallProcessIdString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RancallProcessIdString) Reset() {
	*x = RancallProcessIdString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RancallProcessIdString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RancallProcessIdString) ProtoMessage() {}

func (x *RancallProcessIdString) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RancallProcessIdString.ProtoReflect.Descriptor instead.
func (*RancallProcessIdString) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{79}
}

func (x *RancallProcessIdString) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type RanparameterName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RanparameterName) Reset() {
	*x = RanparameterName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanparameterName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanparameterName) ProtoMessage() {}

func (x *RanparameterName) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanparameterName.ProtoReflect.Descriptor instead.
func (*RanparameterName) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{80}
}

func (x *RanparameterName) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type RicStyleName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RicStyleName) Reset() {
	*x = RicStyleName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicStyleName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicStyleName) ProtoMessage() {}

func (x *RicStyleName) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicStyleName.ProtoReflect.Descriptor instead.
func (*RicStyleName) Descriptor() ([]byte, []int) {
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP(), []int{81}
}

func (x *RicStyleName) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_e2sm_ni_v1beta1_e2sm_ni_ies_proto protoreflect.FileDescriptor

var file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDesc = []byte{
	0x0a, 0x21, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2f, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x5f, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x1a, 0x1a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x82, 0x01, 0x0a, 0x0b, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6e, 0x62, 0x49, 0x64,
	0x12, 0x43, 0x0a, 0x0e, 0x70, 0x5f, 0x6c, 0x6d, 0x6e, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x70, 0x4c, 0x6d, 0x6e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x07, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x52, 0x05,
	0x65, 0x4e, 0x62, 0x49, 0x64, 0x22, 0xdb, 0x01, 0x0a, 0x05, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x12,
	0x2c, 0x0a, 0x0d, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x7a, 0x02, 0x68, 0x03, 0x48,
	0x00, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x45, 0x4e, 0x62, 0x49, 0x64, 0x12, 0x2a, 0x0a,
	0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x7a, 0x02, 0x68, 0x04, 0x48, 0x00, 0x52, 0x09,
	0x68, 0x6f, 0x6d, 0x65, 0x45, 0x4e, 0x62, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x13, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x7a, 0x02, 0x68, 0x03, 0x48,
	0x00, 0x52, 0x0f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x45, 0x4e, 0x62,
	0x49, 0x64, 0x12, 0x35, 0x0a, 0x12, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x63, 0x72, 0x6f,
	0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x7a, 0x02, 0x68, 0x03, 0x48, 0x00, 0x52, 0x0e, 0x6c, 0x6f, 0x6e, 0x67, 0x4d,
	0x61, 0x63, 0x72, 0x6f, 0x45, 0x4e, 0x62, 0x49, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x65, 0x6e, 0x62,
	0x5f, 0x69, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x0d, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x65, 0x6e,
	0x47, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0e, 0x70, 0x5f, 0x6c, 0x6d, 0x6e, 0x5f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x50, 0x6c, 0x6d, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x70, 0x4c,
	0x6d, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x07, 0x67, 0x5f,
	0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x45, 0x6e,
	0x67, 0x6e, 0x62, 0x49, 0x64, 0x52, 0x05, 0x67, 0x4e, 0x62, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x07,
	0x45, 0x6e, 0x67, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x67, 0x5f, 0x6e, 0x62, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x7a, 0x02, 0x68,
	0x04, 0x48, 0x00, 0x52, 0x05, 0x67, 0x4e, 0x62, 0x49, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x65, 0x6e,
	0x67, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x22, 0x31, 0x0a, 0x09, 0x47, 0x6e, 0x62, 0x43, 0x75, 0x55,
	0x70, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x22, 0x09, 0x18, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01,
	0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x07, 0x47, 0x6e, 0x62,
	0x44, 0x75, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x22, 0x09, 0x18, 0xff, 0xff, 0xff, 0xff, 0xff,
	0x01, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x7a, 0x0a, 0x0b, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x67, 0x4e, 0x62, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x07, 0x70, 0x6c, 0x6d,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x6c, 0x6d,
	0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x70, 0x6c, 0x6d, 0x6e, 0x49,
	0x64, 0x12, 0x33, 0x0a, 0x06, 0x67, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x47, 0x6e, 0x62, 0x49, 0x64, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52,
	0x05, 0x67, 0x6e, 0x62, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x0b, 0x47, 0x6e, 0x62, 0x49, 0x64, 0x43,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x06, 0x67, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x7a, 0x02, 0x68, 0x04, 0x48, 0x00,
	0x52, 0x05, 0x67, 0x6e, 0x62, 0x49, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x67, 0x6e, 0x62, 0x5f, 0x69,
	0x64, 0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x22, 0x7c, 0x0a, 0x0d, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x6e, 0x67, 0x65, 0x4e, 0x62, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x07, 0x70, 0x6c, 0x6d,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x6c, 0x6d,
	0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x70, 0x6c, 0x6d, 0x6e, 0x49,
	0x64, 0x12, 0x33, 0x0a, 0x06, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52,
	0x05, 0x65, 0x6e, 0x62, 0x49, 0x64, 0x22, 0xb7, 0x01, 0x0a, 0x0b, 0x45, 0x6e, 0x62, 0x49, 0x64,
	0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x0c, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64,
	0x5f, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x7a, 0x02, 0x68, 0x03, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x6e, 0x62, 0x49, 0x64, 0x4d, 0x61,
	0x63, 0x72, 0x6f, 0x12, 0x35, 0x0a, 0x11, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x7a, 0x02, 0x68, 0x03, 0x48, 0x00, 0x52, 0x0f, 0x65, 0x6e, 0x62, 0x49, 0x64,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x12, 0x33, 0x0a, 0x10, 0x65, 0x6e,
	0x62, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x7a, 0x02, 0x68, 0x03, 0x48, 0x00, 0x52,
	0x0e, 0x65, 0x6e, 0x62, 0x49, 0x64, 0x4c, 0x6f, 0x6e, 0x67, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x42,
	0x0f, 0x0a, 0x0d, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x22, 0x98, 0x01, 0x0a, 0x11, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x67, 0x52, 0x61, 0x6e,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x04, 0x67, 0x5f, 0x6e, 0x62, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x67, 0x4e, 0x62,
	0x49, 0x64, 0x48, 0x00, 0x52, 0x03, 0x67, 0x4e, 0x62, 0x12, 0x38, 0x0a, 0x07, 0x6e, 0x67, 0x5f,
	0x65, 0x5f, 0x6e, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x6e, 0x67, 0x65, 0x4e, 0x62, 0x49, 0x64, 0x48, 0x00, 0x52, 0x05, 0x6e, 0x67,
	0x45, 0x4e, 0x62, 0x42, 0x16, 0x0a, 0x14, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6e, 0x67,
	0x5f, 0x72, 0x61, 0x6e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x31, 0x0a, 0x0e, 0x4d,
	0x61, 0x78, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x65, 0x73, 0x12, 0x1f, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42,
	0x06, 0x1a, 0x04, 0x08, 0xff, 0xff, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31,
	0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0xff, 0x01, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x31, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x65, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x0b, 0xfa, 0x42, 0x08, 0x1a, 0x06, 0x18, 0xff, 0xff, 0x03, 0x28, 0x00, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x1b, 0x4d, 0x61, 0x78, 0x6f, 0x66, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x54, 0x65,
	0x73, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x0f, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x32, 0x0a, 0x10, 0x4d, 0x61, 0x78, 0x6f, 0x66, 0x52, 0x61, 0x6e, 0x75, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0xff, 0x01, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x15, 0x4d, 0x61, 0x78, 0x6f, 0x66, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x1a, 0x03, 0x08, 0xff, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x35, 0x0a, 0x12, 0x4d, 0x61, 0x78, 0x6f, 0x66, 0x52, 0x61, 0x6e, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x08, 0xff, 0xff, 0x03, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2d, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x6f, 0x66, 0x4e,
	0x69, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x6f, 0x66, 0x52, 0x69,
	0x63, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x1c, 0x45, 0x32, 0x53, 0x6d, 0x4e,
	0x69, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x70, 0x0a, 0x18, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x45, 0x32, 0x53, 0x6d,
	0x4e, 0x69, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x48,
	0x00, 0x52, 0x16, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x42, 0x23, 0x0a, 0x21, 0x65, 0x32, 0x5f,
	0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb8,
	0x03, 0x0a, 0x23, 0x45, 0x32, 0x53, 0x6d, 0x4e, 0x69, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x12, 0x3e, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x4e, 0x69, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4e,
	0x69, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0b, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x13, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4e, 0x69, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e,
	0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4e, 0x69, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x6a, 0x0a,
	0x1a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x5f, 0x69, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x4e, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x0f,
	0x52, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x49, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xc6, 0x01, 0x0a, 0x16, 0x45, 0x32,
	0x53, 0x6d, 0x4e, 0x69, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x0e, 0x72, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x79, 0x6c,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52,
	0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x69, 0x63,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x67, 0x0a, 0x18, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x45, 0x32,
	0x53, 0x6d, 0x4e, 0x69, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x16, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x22, 0x9f, 0x02, 0x0a, 0x1c, 0x45, 0x32, 0x53, 0x6d, 0x4e, 0x69, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x12, 0x6c, 0x0a, 0x19, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x45, 0x32, 0x53, 0x6d, 0x4e, 0x69, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x48, 0x00, 0x52, 0x17, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x31, 0x12, 0x6c, 0x0a, 0x19, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x32, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x45, 0x32, 0x53, 0x6d, 0x4e, 0x69, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x32, 0x48, 0x00, 0x52, 0x17, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x32, 0x42,
	0x23, 0x0a, 0x21, 0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x1d, 0x45, 0x32, 0x53, 0x6d, 0x4e, 0x69, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x12, 0x62, 0x0a, 0x15, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x92, 0x01, 0x05,
	0x08, 0x01, 0x10, 0xff, 0x01, 0x52, 0x13, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x77, 0x0a, 0x1d, 0x45, 0x32,
	0x53, 0x6d, 0x4e, 0x69, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x32, 0x12, 0x56, 0x0a, 0x10, 0x72,
	0x61, 0x6e, 0x5f, 0x75, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x75, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x92, 0x01, 0x05, 0x08, 0x01,
	0x10, 0xff, 0x01, 0x52, 0x0e, 0x72, 0x61, 0x6e, 0x55, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x16, 0x45, 0x32, 0x53, 0x6d, 0x4e, 0x69, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x6c,
	0x0a, 0x19, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x45, 0x32, 0x53, 0x6d, 0x4e, 0x69, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x31, 0x48, 0x00, 0x52, 0x17, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x42, 0x1c, 0x0a, 0x1a,
	0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0xac, 0x02, 0x0a, 0x1d, 0x45,
	0x32, 0x53, 0x6d, 0x4e, 0x69, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x12, 0x3e, 0x0a, 0x0e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4e, 0x69, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x0c,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x4e, 0x69, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x4d,
	0x0a, 0x13, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4e, 0x69,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x4e, 0x69, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xa9, 0x01, 0x0a, 0x17, 0x45, 0x32,
	0x53, 0x6d, 0x4e, 0x69, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x6f, 0x0a, 0x1a, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x45, 0x32, 0x53, 0x6d,
	0x4e, 0x69, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x48, 0x00, 0x52, 0x18, 0x69, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x42, 0x1d, 0x0a, 0x1b, 0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f,
	0x6e, 0x69, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x69, 0x0a, 0x1e, 0x45, 0x32, 0x53, 0x6d, 0x4e, 0x69, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x12, 0x47, 0x0a, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x4e, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x10,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0xfd, 0x01, 0x0a, 0x13, 0x45, 0x32, 0x53, 0x6d, 0x4e, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x64, 0x0a, 0x17, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x5f, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x45, 0x32, 0x53, 0x6d,
	0x4e, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x48, 0x00, 0x52, 0x14, 0x63, 0x61, 0x6c, 0x6c, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x12, 0x64,
	0x0a, 0x17, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69,
	0x64, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x45, 0x32, 0x53, 0x6d, 0x4e, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x32, 0x48, 0x00, 0x52, 0x14,
	0x63, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x32, 0x42, 0x1a, 0x0a, 0x18, 0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x6e, 0x69,
	0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64,
	0x22, 0x6d, 0x0a, 0x1a, 0x45, 0x32, 0x53, 0x6d, 0x4e, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x12, 0x4f,
	0x0a, 0x0f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e,
	0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x63, 0x61, 0x6c,
	0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22,
	0x6d, 0x0a, 0x1a, 0x45, 0x32, 0x53, 0x6d, 0x4e, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x32, 0x12, 0x4f, 0x0a,
	0x0f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x63, 0x61, 0x6c, 0x6c,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x95,
	0x01, 0x0a, 0x13, 0x45, 0x32, 0x53, 0x6d, 0x4e, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x63, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x45, 0x32, 0x53, 0x6d, 0x4e, 0x69, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x31, 0x48, 0x00, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x42, 0x19, 0x0a, 0x17, 0x65,
	0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0xda, 0x02, 0x0a, 0x1a, 0x45, 0x32, 0x53, 0x6d, 0x4e,
	0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x31, 0x12, 0x3e, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x4e, 0x69, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4e, 0x69,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x13, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4e, 0x69, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6b, 0x0a, 0x1c, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52,
	0x69, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x19, 0x72, 0x69, 0x63, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x22, 0x9a, 0x01, 0x0a, 0x14, 0x45, 0x32, 0x53, 0x6d, 0x4e, 0x69, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x66, 0x0a, 0x17,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x45, 0x32, 0x53, 0x6d, 0x4e, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x48, 0x00, 0x52, 0x15, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x31, 0x42, 0x1a, 0x0a, 0x18, 0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x6e, 0x69,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x66, 0x0a, 0x1b, 0x45, 0x32, 0x53, 0x6d, 0x4e, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x12,
	0x47, 0x0a, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4e, 0x69, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x14, 0x45, 0x32, 0x53,
	0x6d, 0x4e, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d,
	0x65, 0x12, 0x66, 0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6f, 0x75, 0x74,
	0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x45, 0x32, 0x53, 0x6d, 0x4e, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31,
	0x48, 0x00, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4f, 0x75, 0x74, 0x63, 0x6f,
	0x6d, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x42, 0x1a, 0x0a, 0x18, 0x65, 0x32, 0x5f,
	0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6f, 0x75,
	0x74, 0x63, 0x6f, 0x6d, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x1b, 0x45, 0x32, 0x53, 0x6d, 0x4e, 0x69,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x31, 0x12, 0x61, 0x0a, 0x14, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65,
	0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x92, 0x01, 0x06, 0x08, 0x01,
	0x10, 0xff, 0xff, 0x03, 0x52, 0x12, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xc2, 0x01, 0x0a, 0x1c, 0x45, 0x32, 0x53,
	0x6d, 0x4e, 0x69, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x11, 0x72, 0x61, 0x6e,
	0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0f, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x54, 0x0a, 0x0c, 0x6e, 0x69, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x45, 0x32, 0x53, 0x6d, 0x4e, 0x69, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10,
	0x3f, 0x52, 0x0a, 0x6e, 0x69, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xe1, 0x04,
	0x0a, 0x15, 0x45, 0x32, 0x53, 0x6d, 0x4e, 0x69, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x3e, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x4e, 0x69, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x75, 0x0a, 0x1c, 0x72, 0x69, 0x63, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x52, 0x69, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04,
	0x08, 0x01, 0x10, 0x3f, 0x52, 0x18, 0x72, 0x69, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x62,
	0x0a, 0x15, 0x72, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x52, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x3f, 0x52, 0x12,
	0x72, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x62, 0x0a, 0x15, 0x72, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74,
	0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01,
	0x10, 0x3f, 0x52, 0x12, 0x72, 0x69, 0x63, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x65, 0x0a, 0x16, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x3f, 0x52, 0x13, 0x72, 0x69, 0x63, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x62, 0x0a,
	0x15, 0x72, 0x69, 0x63, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x73, 0x74, 0x79, 0x6c,
	0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52,
	0x69, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x3f, 0x52, 0x12, 0x72,
	0x69, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x45, 0x0a, 0x0d, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6e, 0x47, 0x6e, 0x62,
	0x49, 0x64, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x47, 0x6e, 0x62, 0x49,
	0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x0d, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x47, 0x6e, 0x62, 0x44, 0x75, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x10, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6e, 0x67, 0x5f, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x67, 0x52,
	0x61, 0x6e, 0x49, 0x64, 0x52, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x67, 0x52, 0x61,
	0x6e, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0a, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x64, 0x75, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e,
	0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x6e, 0x62, 0x44, 0x75, 0x49,
	0x64, 0x52, 0x07, 0x67, 0x4e, 0x62, 0x44, 0x75, 0x49, 0x64, 0x22, 0x98, 0x01, 0x0a, 0x0f, 0x47,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x47, 0x6e, 0x62, 0x43, 0x75, 0x55, 0x70, 0x49, 0x64, 0x12, 0x47,
	0x0a, 0x10, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6e, 0x67, 0x5f, 0x72, 0x61, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x4e, 0x67, 0x52, 0x61, 0x6e, 0x49, 0x64, 0x52, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x4e, 0x67, 0x52, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0d, 0x67, 0x5f, 0x6e, 0x62, 0x5f,
	0x63, 0x75, 0x5f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x47, 0x6e, 0x62, 0x43, 0x75, 0x55, 0x70, 0x49, 0x64, 0x52, 0x09, 0x67, 0x4e, 0x62, 0x43,
	0x75, 0x55, 0x70, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x0d, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e,
	0x67, 0x52, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x67,
	0x52, 0x61, 0x6e, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x9a, 0x03, 0x0a, 0x0c, 0x4e, 0x69, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x43, 0x0a, 0x0e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x5f, 0x6e, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x45, 0x4e, 0x62, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x11, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x5f, 0x65, 0x6e, 0x5f, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6e, 0x47, 0x6e, 0x62, 0x49,
	0x64, 0x48, 0x00, 0x52, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6e, 0x47, 0x4e, 0x62,
	0x49, 0x64, 0x12, 0x49, 0x0a, 0x10, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6e, 0x67, 0x5f,
	0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x67, 0x52, 0x61, 0x6e, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0d,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x67, 0x52, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x4a, 0x0a,
	0x11, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x64, 0x75, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x47, 0x6e, 0x62, 0x44, 0x75, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x47, 0x4e, 0x62, 0x44, 0x75, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x14, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x5f, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e,
	0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x47, 0x6e, 0x62, 0x43, 0x75, 0x55, 0x70, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0f, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x47, 0x4e, 0x62, 0x43, 0x75, 0x55, 0x70, 0x49, 0x64, 0x42, 0x0f, 0x0a, 0x0d,
	0x6e, 0x69, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0xea, 0x03,
	0x0a, 0x0d, 0x4e, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x4a, 0x0a, 0x0f, 0x73, 0x31, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4e, 0x69, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x53, 0x31, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x31,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x78,
	0x32, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4e, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x58, 0x32, 0x48, 0x00, 0x52, 0x0d, 0x78, 0x32, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x6e, 0x67, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x4e, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x4e, 0x67, 0x48, 0x00, 0x52, 0x0d, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x78, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4e,
	0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x58, 0x6e, 0x48, 0x00,
	0x52, 0x0d, 0x78, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x4a, 0x0a, 0x0f, 0x66, 0x31, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4e, 0x69, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x46, 0x31, 0x48, 0x00, 0x52, 0x0d, 0x66, 0x31,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x65,
	0x31, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4e, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x45, 0x31, 0x48, 0x00, 0x52, 0x0d, 0x65, 0x31, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x6e, 0x69, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x50, 0x0a, 0x0f, 0x4e, 0x69,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x53, 0x31, 0x12, 0x3d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4e,
	0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x61, 0x63, 0x68, 0x31, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x50, 0x0a, 0x0f,
	0x4e, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x58, 0x32, 0x12,
	0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x4e, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x61, 0x63, 0x68, 0x31, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x50,
	0x0a, 0x0f, 0x4e, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e,
	0x67, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x4e, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x61, 0x63, 0x68, 0x31, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x50, 0x0a, 0x0f, 0x4e, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x58, 0x6e, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x4e, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x61, 0x63, 0x68, 0x31, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x50, 0x0a, 0x0f, 0x4e, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x46, 0x31, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4e, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x61, 0x63, 0x68, 0x31, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x50, 0x0a, 0x0f, 0x4e, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x31, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4e, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x61, 0x63, 0x68, 0x31, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x16, 0x4e, 0x69, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x61, 0x63, 0x68,
	0x31, 0x12, 0x45, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x64, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x64, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x46, 0x0a, 0x0f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x6f, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x0d, 0x74, 0x79, 0x70, 0x65, 0x4f, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0xaf, 0x02, 0x0a, 0x10, 0x4e, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x58, 0x0a, 0x18, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x69, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e,
	0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4e, 0x69, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x65, 0x49, 0x64, 0x52, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x65, 0x49, 0x64, 0x12,
	0x5e, 0x0a, 0x1a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x69, 0x65, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4e, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x49, 0x65, 0x54, 0x65, 0x73, 0x74, 0x52, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x65, 0x54, 0x65, 0x73, 0x74, 0x12,
	0x61, 0x0a, 0x1b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x69, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4e, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x49, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x18, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x45, 0x0a, 0x0e, 0x4e, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x49, 0x65, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x65,
	0x49, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xf2, 0x01, 0x0a, 0x11, 0x4e, 0x69,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1d, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x00, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12,
	0x1f, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x6f, 0x6f, 0x6c,
	0x12, 0x20, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x62, 0x69, 0x74, 0x5f, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x69,
	0x74, 0x53, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6f, 0x63, 0x74, 0x5f,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x4f, 0x63, 0x74, 0x53, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x70, 0x72,
	0x74, 0x5f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x09, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x50, 0x72, 0x74, 0x53, 0x42, 0x16, 0x0a, 0x14, 0x6e, 0x69, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x69, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e,
	0x0a, 0x16, 0x52, 0x61, 0x6e, 0x63, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x49, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8e,
	0x02, 0x0a, 0x0f, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x41, 0x0a, 0x17, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0x96, 0x01, 0x52,
	0x14, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x16, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x6f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xe8,
	0x07, 0x52, 0x12, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x32,
	0x53, 0x6d, 0x4f, 0x69, 0x64, 0x12, 0x44, 0x0a, 0x18, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01,
	0x18, 0x96, 0x01, 0x52, 0x16, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x72,
	0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x72, 0x61, 0x6e, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22,
	0x83, 0x01, 0x0a, 0x13, 0x52, 0x61, 0x6e, 0x69, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x6c, 0x0a, 0x1a, 0x72, 0x61, 0x6e, 0x5f, 0x69,
	0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x61,
	0x6e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0c,
	0xfa, 0x42, 0x09, 0x92, 0x01, 0x06, 0x08, 0x01, 0x10, 0xff, 0xff, 0x03, 0x52, 0x17, 0x72, 0x61,
	0x6e, 0x49, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xb1, 0x01, 0x0a, 0x10, 0x52, 0x61, 0x6e, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x49, 0x0a, 0x10, 0x72, 0x61,
	0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x52, 0x0e, 0x72, 0x61, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x52, 0x0a, 0x13, 0x72, 0x61, 0x6e, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x11, 0x72, 0x61, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x82, 0x02, 0x0a, 0x13, 0x52, 0x61,
	0x6e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x44, 0x65, 0x66, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x49, 0x0a, 0x10, 0x72, 0x61, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x61,
	0x6e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x64, 0x52, 0x0e, 0x72, 0x61,
	0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x12,
	0x72, 0x61, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x10, 0x72, 0x61, 0x6e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4f, 0x0a,
	0x12, 0x72, 0x61, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x72, 0x61,
	0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x33,
	0x0a, 0x0e, 0x52, 0x61, 0x6e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x0b, 0xfa, 0x42, 0x08, 0x1a, 0x06, 0x18, 0xff, 0xff, 0x03, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0xf0, 0x01, 0x0a, 0x11, 0x52, 0x61, 0x6e, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x09,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0a, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52,
	0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x5f, 0x62, 0x69, 0x74, 0x5f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x00, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x69, 0x74, 0x53, 0x12, 0x20, 0x0a, 0x0b,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6f, 0x63, 0x74, 0x5f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x48, 0x00, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x63, 0x74, 0x53, 0x12, 0x20,
	0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x70, 0x72, 0x74, 0x5f, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x72, 0x74, 0x53,
	0x42, 0x14, 0x0a, 0x12, 0x72, 0x61, 0x6e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0c, 0x52, 0x61, 0x6e, 0x75, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0xff, 0x01, 0x28,
	0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xf7, 0x01, 0x0a, 0x0e, 0x52, 0x61, 0x6e,
	0x75, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x43, 0x0a, 0x0e, 0x72,
	0x61, 0x6e, 0x5f, 0x75, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x75, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x52, 0x0c, 0x72, 0x61, 0x6e, 0x55, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x5b, 0x0a, 0x16, 0x72, 0x61, 0x6e, 0x5f, 0x75, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x75, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x72, 0x61, 0x6e, 0x55, 0x65, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a,
	0x0a, 0x72, 0x61, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x69, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x09, 0x72, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x22, 0x79, 0x0a, 0x14, 0x52, 0x61, 0x6e, 0x75, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x61, 0x0a, 0x14, 0x72, 0x61,
	0x6e, 0x5f, 0x75, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x64, 0x65, 0x66, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x75, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x66, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0c, 0xfa, 0x42,
	0x09, 0x92, 0x01, 0x06, 0x08, 0x01, 0x10, 0xff, 0xff, 0x03, 0x52, 0x11, 0x72, 0x61, 0x6e, 0x55,
	0x65, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x8c, 0x02,
	0x0a, 0x11, 0x52, 0x61, 0x6e, 0x75, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x66, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x49, 0x0a, 0x10, 0x72, 0x61, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x52, 0x61, 0x6e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x64, 0x52, 0x0e,
	0x72, 0x61, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x58,
	0x0a, 0x12, 0x72, 0x61, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f,
	0x74, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x61, 0x6e,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x72, 0x61, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x54, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x13, 0x72, 0x61, 0x6e, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x11, 0x72, 0x61, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x19,
	0x52, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0xad, 0x06, 0x0a, 0x13, 0x52, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x16, 0x72, 0x69, 0x63, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e,
	0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x13, 0x72, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x52, 0x0a, 0x16, 0x72,
	0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x69,
	0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x13, 0x72, 0x69, 0x63, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x55, 0x0a, 0x17, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x14, 0x72, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x62, 0x0a, 0x1e, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x52, 0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x1a,
	0x72, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x64, 0x0a, 0x1f, 0x72, 0x69,
	0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x1b, 0x72, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x62, 0x0a, 0x1e, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x1a, 0x72, 0x69, 0x63, 0x43, 0x61, 0x6c,
	0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x64, 0x0a, 0x1f, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x5f, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x52, 0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x1b, 0x72,
	0x69, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x25, 0x72,
	0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6f, 0x75, 0x74, 0x63, 0x6f,
	0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x5f, 0x64, 0x65, 0x66, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x61, 0x6e,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x44, 0x65, 0x66, 0x49, 0x74, 0x65, 0x6d,
	0x42, 0x0c, 0xfa, 0x42, 0x09, 0x92, 0x01, 0x06, 0x08, 0x01, 0x10, 0xff, 0xff, 0x03, 0x52, 0x1f,
	0x72, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d,
	0x65, 0x52, 0x61, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x44, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0xba, 0x02, 0x0a, 0x18, 0x52, 0x69, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x5d, 0x0a, 0x1c,
	0x72, 0x69, 0x63, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x18, 0x72, 0x69, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x5d, 0x0a, 0x1c, 0x72,
	0x69, 0x63, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x18, 0x72, 0x69, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x60, 0x0a, 0x1d, 0x72, 0x69,
	0x63, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x19, 0x72, 0x69, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xd1, 0x05, 0x0a,
	0x12, 0x52, 0x69, 0x63, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x15, 0x72, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x12, 0x72, 0x69, 0x63, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x50, 0x0a, 0x15, 0x72, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x12, 0x72, 0x69, 0x63, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x60, 0x0a, 0x1d, 0x72, 0x69, 0x63, 0x5f, 0x69,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x52, 0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x19,
	0x72, 0x69, 0x63, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x7b, 0x0a, 0x21, 0x72, 0x69, 0x63,
	0x5f, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x72, 0x61, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x44, 0x65, 0x66, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x92,
	0x01, 0x06, 0x08, 0x01, 0x10, 0xff, 0xff, 0x03, 0x52, 0x1c, 0x72, 0x69, 0x63, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x52, 0x61, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x44,
	0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x68, 0x0a, 0x21, 0x72, 0x69, 0x63, 0x5f, 0x69, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x1d, 0x72, 0x69, 0x63, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x6a, 0x0a, 0x22, 0x72, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52,
	0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x1e, 0x72, 0x69,
	0x63, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x62, 0x0a, 0x1e,
	0x72, 0x69, 0x63, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x69, 0x64, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x1a, 0x72, 0x69, 0x63, 0x43, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x97, 0x03, 0x0a, 0x12, 0x52, 0x69, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x15, 0x72, 0x69, 0x63, 0x5f, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x12, 0x72, 0x69, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x50, 0x0a, 0x15, 0x72, 0x69, 0x63,
	0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x12, 0x72, 0x69, 0x63, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x60, 0x0a, 0x1d, 0x72,
	0x69, 0x63, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x19, 0x72, 0x69, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x7b, 0x0a,
	0x21, 0x72, 0x69, 0x63, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x72, 0x61, 0x6e, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x44, 0x65, 0x66, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0c,
	0xfa, 0x42, 0x09, 0x92, 0x01, 0x06, 0x08, 0x01, 0x10, 0xff, 0xff, 0x03, 0x52, 0x1c, 0x72, 0x69,
	0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x61, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x44, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xed, 0x04, 0x0a, 0x12, 0x52,
	0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x50, 0x0a, 0x15, 0x72, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x12, 0x72, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x50, 0x0a, 0x15, 0x72, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x12, 0x72, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x60, 0x0a, 0x1d, 0x72, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52,
	0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x19, 0x72, 0x69,
	0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x7b, 0x0a, 0x21, 0x72, 0x69, 0x63, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x61, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x44, 0x65, 0x66, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x92, 0x01, 0x06,
	0x08, 0x01, 0x10, 0xff, 0xff, 0x03, 0x52, 0x1c, 0x72, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x61, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x44, 0x65, 0x66,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x68, 0x0a, 0x21, 0x72, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x52, 0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x1d, 0x72, 0x69, 0x63, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x6a,
	0x0a, 0x22, 0x72, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x69, 0x63,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x1e, 0x72, 0x69, 0x63, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x25, 0x0a, 0x0d, 0x52, 0x69,
	0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x24, 0x0a, 0x0c, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2d, 0x0a, 0x0c, 0x50, 0x6c, 0x6d, 0x6e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x7a, 0x02, 0x68, 0x03, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a, 0x0b, 0x4e, 0x69, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x7a, 0x02, 0x68, 0x08, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x21, 0x0a, 0x09, 0x4e, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x16, 0x52, 0x61, 0x6e, 0x63, 0x61,
	0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0x96, 0x01, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x34, 0x0a, 0x10, 0x52, 0x61, 0x6e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18,
	0x96, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0c, 0x52, 0x69, 0x63,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10,
	0x01, 0x18, 0x96, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2a, 0x55, 0x0a, 0x0b, 0x43,
	0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x52,
	0x49, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54,
	0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x52, 0x49, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x49, 0x54,
	0x59, 0x5f, 0x49, 0x47, 0x4e, 0x4f, 0x52, 0x45, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x52,
	0x49, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59,
	0x10, 0x02, 0x2a, 0x53, 0x0a, 0x08, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x15,
	0x0a, 0x11, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f,
	0x4e, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e, 0x43,
	0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x10, 0x01, 0x12,
	0x16, 0x0a, 0x12, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x44,
	0x41, 0x54, 0x4f, 0x52, 0x59, 0x10, 0x02, 0x2a, 0x5a, 0x0a, 0x0b, 0x4e, 0x69, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x15, 0x4e, 0x49, 0x5f, 0x44, 0x49, 0x52,
	0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x43, 0x4f, 0x4d, 0x49, 0x4e, 0x47, 0x10,
	0x00, 0x12, 0x19, 0x0a, 0x15, 0x4e, 0x49, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x4f, 0x55, 0x54, 0x47, 0x4f, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11,
	0x4e, 0x49, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x42, 0x4f, 0x54,
	0x48, 0x10, 0x02, 0x2a, 0xa6, 0x01, 0x0a, 0x0d, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x66, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x46,
	0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x48, 0x49, 0x4e, 0x47,
	0x10, 0x00, 0x12, 0x26, 0x0a, 0x22, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x46, 0x5f, 0x4d, 0x45,
	0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x54, 0x49, 0x4e, 0x47,
	0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x01, 0x12, 0x26, 0x0a, 0x22, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4f, 0x46, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x55,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x46, 0x55, 0x4c, 0x5f, 0x4f, 0x55, 0x54, 0x43, 0x4f, 0x4d, 0x45,
	0x10, 0x02, 0x12, 0x28, 0x0a, 0x24, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x46, 0x5f, 0x4d, 0x45,
	0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x46,
	0x55, 0x4c, 0x5f, 0x4f, 0x55, 0x54, 0x43, 0x4f, 0x4d, 0x45, 0x10, 0x03, 0x2a, 0xbb, 0x01, 0x0a,
	0x10, 0x4e, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x65, 0x54, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x19, 0x4e, 0x49, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c,
	0x5f, 0x49, 0x45, 0x5f, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x00,
	0x12, 0x23, 0x0a, 0x1f, 0x4e, 0x49, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f,
	0x49, 0x45, 0x5f, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x47, 0x52, 0x45, 0x41, 0x54, 0x45, 0x52, 0x54,
	0x48, 0x41, 0x4e, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x4e, 0x49, 0x5f, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x49, 0x45, 0x5f, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x4c, 0x45, 0x53,
	0x53, 0x54, 0x48, 0x41, 0x4e, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x4e, 0x49, 0x5f, 0x50, 0x52,
	0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x49, 0x45, 0x5f, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x43,
	0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x53, 0x10, 0x03, 0x12, 0x1f, 0x0a, 0x1b, 0x4e, 0x49, 0x5f,
	0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x49, 0x45, 0x5f, 0x54, 0x45, 0x53, 0x54,
	0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e, 0x54, 0x10, 0x04, 0x2a, 0x68, 0x0a, 0x06, 0x4e, 0x69,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x49, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x53, 0x31, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x49, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x58, 0x32, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x49, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4e, 0x47, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x49, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x58, 0x4e, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x49, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x46, 0x31, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x49, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x45, 0x31, 0x10, 0x05, 0x2a, 0xec, 0x01, 0x0a, 0x19, 0x52, 0x61, 0x6e, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x21, 0x52, 0x41, 0x4e, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54,
	0x45, 0x52, 0x5f, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x2b, 0x0a, 0x27, 0x52, 0x41, 0x4e,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x43,
	0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x47, 0x52, 0x45, 0x41, 0x54, 0x45, 0x52,
	0x54, 0x48, 0x41, 0x4e, 0x10, 0x01, 0x12, 0x28, 0x0a, 0x24, 0x52, 0x41, 0x4e, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x44,
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x53, 0x53, 0x54, 0x48, 0x41, 0x4e, 0x10, 0x02,
	0x12, 0x28, 0x0a, 0x24, 0x52, 0x41, 0x4e, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52,
	0x5f, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x53, 0x10, 0x03, 0x12, 0x27, 0x0a, 0x23, 0x52, 0x41,
	0x4e, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x45, 0x53, 0x54, 0x5f,
	0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e,
	0x54, 0x10, 0x04, 0x2a, 0xe0, 0x01, 0x0a, 0x10, 0x52, 0x61, 0x6e, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x41, 0x4e, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e,
	0x54, 0x45, 0x47, 0x45, 0x52, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x52, 0x41, 0x4e, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x55,
	0x4d, 0x45, 0x52, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x41, 0x4e,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42,
	0x4f, 0x4f, 0x4c, 0x45, 0x41, 0x4e, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x52, 0x41, 0x4e, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x49,
	0x54, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x22, 0x0a, 0x1e, 0x52, 0x41,
	0x4e, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4f, 0x43, 0x54, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x26,
	0x0a, 0x22, 0x52, 0x41, 0x4e, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x49, 0x4e, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x53, 0x54,
	0x52, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x42, 0x57, 0x5a, 0x55, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6e, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2f, 0x6f, 0x6e, 0x6f, 0x73, 0x2d, 0x65, 0x32, 0x2d, 0x73, 0x6d, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6e,
	0x69, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x65, 0x32, 0x73, 0x6d, 0x2d, 0x6e,
	0x69, 0x2d, 0x69, 0x65, 0x73, 0x3b, 0x65, 0x32, 0x73, 0x6d, 0x6e, 0x69, 0x69, 0x65, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescOnce sync.Once
	file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescData = file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDesc
)

func file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescGZIP() []byte {
	file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescOnce.Do(func() {
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescData = protoimpl.X.CompressGZIP(file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescData)
	})
	return file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDescData
}

var file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes = make([]protoimpl.MessageInfo, 82)
var file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_goTypes = []interface{}{
	(Criticality)(0),                            // 0: e2sm_ni.v1beta1.Criticality
	(Presence)(0),                               // 1: e2sm_ni.v1beta1.Presence
	(NiDirection)(0),                            // 2: e2sm_ni.v1beta1.NiDirection
	(TypeOfMessage)(0),                          // 3: e2sm_ni.v1beta1.TypeOfMessage
	(NiProtocolIeTest)(0),                       // 4: e2sm_ni.v1beta1.NiProtocolIeTest
	(NiType)(0),                                 // 5: e2sm_ni.v1beta1.NiType
	(RanparameterTestCondition)(0),              // 6: e2sm_ni.v1beta1.RanparameterTestCondition
	(RanparameterType)(0),                       // 7: e2sm_ni.v1beta1.RanparameterType
	(*GlobalEnbId)(nil),                         // 8: e2sm_ni.v1beta1.GlobalEnbId
	(*EnbId)(nil),                               // 9: e2sm_ni.v1beta1.EnbId
	(*GlobalenGnbId)(nil),                       // 10: e2sm_ni.v1beta1.GlobalenGnbId
	(*EngnbId)(nil),                             // 11: e2sm_ni.v1beta1.EngnbId
	(*GnbCuUpId)(nil),                           // 12: e2sm_ni.v1beta1.GnbCuUpId
	(*GnbDuId)(nil),                             // 13: e2sm_ni.v1beta1.GnbDuId
	(*GlobalgNbId)(nil),                         // 14: e2sm_ni.v1beta1.GlobalgNbId
	(*GnbIdChoice)(nil),                         // 15: e2sm_ni.v1beta1.GnbIdChoice
	(*GlobalngeNbId)(nil),                       // 16: e2sm_ni.v1beta1.GlobalngeNbId
	(*EnbIdChoice)(nil),                         // 17: e2sm_ni.v1beta1.EnbIdChoice
	(*GlobalNgRannodeId)(nil),                   // 18: e2sm_ni.v1beta1.GlobalNgRannodeId
	(*MaxProtocolIes)(nil),                      // 19: e2sm_ni.v1beta1.MaxProtocolIes
	(*ProcedureCode)(nil),                       // 20: e2sm_ni.v1beta1.ProcedureCode
	(*ProtocolIeId)(nil),                        // 21: e2sm_ni.v1beta1.ProtocolIeId
	(*MaxofInterfaceProtocolTests)(nil),         // 22: e2sm_ni.v1beta1.MaxofInterfaceProtocolTests
	(*MaxofRanueGroups)(nil),                    // 23: e2sm_ni.v1beta1.MaxofRanueGroups
	(*MaxofActionParameters)(nil),               // 24: e2sm_ni.v1beta1.MaxofActionParameters
	(*MaxofRanparameters)(nil),                  // 25: e2sm_ni.v1beta1.MaxofRanparameters
	(*MaxofNitypes)(nil),                        // 26: e2sm_ni.v1beta1.MaxofNitypes
	(*MaxofRicstyles)(nil),                      // 27: e2sm_ni.v1beta1.MaxofRicstyles
	(*E2SmNiEventTriggerDefinition)(nil),        // 28: e2sm_ni.v1beta1.E2SmNiEventTriggerDefinition
	(*E2SmNiEventTriggerDefinitionFormat1)(nil), // 29: e2sm_ni.v1beta1.E2SmNiEventTriggerDefinitionFormat1
	(*E2SmNiActionDefinition)(nil),              // 30: e2sm_ni.v1beta1.E2SmNiActionDefinition
	(*E2SmNiActionDefinitionFormat)(nil),        // 31: e2sm_ni.v1beta1.E2SmNiActionDefinitionFormat
	(*E2SmNiActionDefinitionFormat1)(nil),       // 32: e2sm_ni.v1beta1.E2SmNiActionDefinitionFormat1
	(*E2SmNiActionDefinitionFormat2)(nil),       // 33: e2sm_ni.v1beta1.E2SmNiActionDefinitionFormat2
	(*E2SmNiIndicationHeader)(nil),              // 34: e2sm_ni.v1beta1.E2SmNiIndicationHeader
	(*E2SmNiIndicationHeaderFormat1)(nil),       // 35: e2sm_ni.v1beta1.E2SmNiIndicationHeaderFormat1
	(*E2SmNiIndicationMessage)(nil),             // 36: e2sm_ni.v1beta1.E2SmNiIndicationMessage
	(*E2SmNiIndicationMessageFormat1)(nil),      // 37: e2sm_ni.v1beta1.E2SmNiIndicationMessageFormat1
	(*E2SmNiCallProcessId)(nil),                 // 38: e2sm_ni.v1beta1.E2SmNiCallProcessId
	(*E2SmNiCallProcessIdFormat1)(nil),          // 39: e2sm_ni.v1beta1.E2SmNiCallProcessIdFormat1
	(*E2SmNiCallProcessIdFormat2)(nil),          // 40: e2sm_ni.v1beta1.E2SmNiCallProcessIdFormat2
	(*E2SmNiControlHeader)(nil),                 // 41: e2sm_ni.v1beta1.E2SmNiControlHeader
	(*E2SmNiControlHeaderFormat1)(nil),          // 42: e2sm_ni.v1beta1.E2SmNiControlHeaderFormat1
	(*E2SmNiControlMessage)(nil),                // 43: e2sm_ni.v1beta1.E2SmNiControlMessage
	(*E2SmNiControlMessageFormat1)(nil),         // 44: e2sm_ni.v1beta1.E2SmNiControlMessageFormat1
	(*E2SmNiControlOutcome)(nil),                // 45: e2sm_ni.v1beta1.E2SmNiControlOutcome
	(*E2SmNiControlOutcomeFormat1)(nil),         // 46: e2sm_ni.v1beta1.E2SmNiControlOutcomeFormat1
	(*E2SmNiRanfunctionDescription)(nil),        // 47: e2sm_ni.v1beta1.E2SmNiRanfunctionDescription
	(*E2SmNiRanfunctionItem)(nil),               // 48: e2sm_ni.v1beta1.E2SmNiRanfunctionItem
	(*GlobalEnGnbId)(nil),                       // 49: e2sm_ni.v1beta1.GlobalEnGnbId
	(*GlobalGnbDuId)(nil),                       // 50: e2sm_ni.v1beta1.GlobalGnbDuId
	(*GlobalGnbCuUpId)(nil),                     // 51: e2sm_ni.v1beta1.GlobalGnbCuUpId
	(*GlobalNgRanId)(nil),                       // 52: e2sm_ni.v1beta1.GlobalNgRanId
	(*NiIdentifier)(nil),                        // 53: e2sm_ni.v1beta1.NiIdentifier
	(*NiMessageType)(nil),                       // 54: e2sm_ni.v1beta1.NiMessageType
	(*NiMessageTypeS1)(nil),                     // 55: e2sm_ni.v1beta1.NiMessageTypeS1
	(*NiMessageTypeX2)(nil),                     // 56: e2sm_ni.v1beta1.NiMessageTypeX2
	(*NiMessageTypeNg)(nil),                     // 57: e2sm_ni.v1beta1.NiMessageTypeNg
	(*NiMessageTypeXn)(nil),                     // 58: e2sm_ni.v1beta1.NiMessageTypeXn
	(*NiMessageTypeF1)(nil),                     // 59: e2sm_ni.v1beta1.NiMessageTypeF1
	(*NiMessageTypeE1)(nil),                     // 60: e2sm_ni.v1beta1.NiMessageTypeE1
	(*NiMessageTypeApproach1)(nil),              // 61: e2sm_ni.v1beta1.NiMessageTypeApproach1
	(*NiProtocolIeItem)(nil),                    // 62: e2sm_ni.v1beta1.NiProtocolIeItem
	(*NiProtocolIeId)(nil),                      // 63: e2sm_ni.v1beta1.NiProtocolIeId
	(*NiProtocolIeValue)(nil),                   // 64: e2sm_ni.v1beta1.NiProtocolIeValue
	(*RancallProcessIdNumber)(nil),              // 65: e2sm_ni.v1beta1.RancallProcessIdNumber
	(*RanfunctionName)(nil),                     // 66: e2sm_ni.v1beta1.RanfunctionName
	(*RanimperativePolicy)(nil),                 // 67: e2sm_ni.v1beta1.RanimperativePolicy
	(*RanparameterItem)(nil),                    // 68: e2sm_ni.v1beta1.RanparameterItem
	(*RanparameterDefItem)(nil),                 // 69: e2sm_ni.v1beta1.RanparameterDefItem
	(*RanparameterId)(nil),                      // 70: e2sm_ni.v1beta1.RanparameterId
	(*RanparameterValue)(nil),                   // 71: e2sm_ni.v1beta1.RanparameterValue
	(*RanueGroupId)(nil),                        // 72: e2sm_ni.v1beta1.RanueGroupId
	(*RanueGroupItem)(nil),                      // 73: e2sm_ni.v1beta1.RanueGroupItem
	(*RanueGroupDefinition)(nil),                // 74: e2sm_ni.v1beta1.RanueGroupDefinition
	(*RanueGroupDefItem)(nil),                   // 75: e2sm_ni.v1beta1.RanueGroupDefItem
	(*RicControlMessagePriority)(nil),           // 76: e2sm_ni.v1beta1.RicControlMessagePriority
	(*RicControlStyleList)(nil),                 // 77: e2sm_ni.v1beta1.RicControlStyleList
	(*RicEventTriggerStyleList)(nil),            // 78: e2sm_ni.v1beta1.RicEventTriggerStyleList
	(*RicInsertStyleList)(nil),                  // 79: e2sm_ni.v1beta1.RicInsertStyleList
	(*RicPolicyStyleList)(nil),                  // 80: e2sm_ni.v1beta1.RicPolicyStyleList
	(*RicReportStyleList)(nil),                  // 81: e2sm_ni.v1beta1.RicReportStyleList
	(*RicFormatType)(nil),                       // 82: e2sm_ni.v1beta1.RicFormatType
	(*RicStyleType)(nil),                        // 83: e2sm_ni.v1beta1.RicStyleType
	(*PlmnIdentity)(nil),                        // 84: e2sm_ni.v1beta1.PlmnIdentity
	(*NiTimeStamp)(nil),                         // 85: e2sm_ni.v1beta1.NiTimeStamp
	(*NiMessage)(nil),                           // 86: e2sm_ni.v1beta1.NiMessage
	(*RancallProcessIdString)(nil),              // 87: e2sm_ni.v1beta1.RancallProcessIdString
	(*RanparameterName)(nil),                    // 88: e2sm_ni.v1beta1.RanparameterName
	(*RicStyleName)(nil),                        // 89: e2sm_ni.v1beta1.RicStyleName
}
var file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_depIdxs = []int32{
	84,  // 0: e2sm_ni.v1beta1.GlobalEnbId.p_lmn_identity:type_name -> e2sm_ni.v1beta1.PlmnIdentity
	9,   // 1: e2sm_ni.v1beta1.GlobalEnbId.e_nb_id:type_name -> e2sm_ni.v1beta1.EnbId
	84,  // 2: e2sm_ni.v1beta1.GlobalenGnbId.p_lmn_identity:type_name -> e2sm_ni.v1beta1.PlmnIdentity
	11,  // 3: e2sm_ni.v1beta1.GlobalenGnbId.g_nb_id:type_name -> e2sm_ni.v1beta1.EngnbId
	84,  // 4: e2sm_ni.v1beta1.GlobalgNbId.plmn_id:type_name -> e2sm_ni.v1beta1.PlmnIdentity
	15,  // 5: e2sm_ni.v1beta1.GlobalgNbId.gnb_id:type_name -> e2sm_ni.v1beta1.GnbIdChoice
	84,  // 6: e2sm_ni.v1beta1.GlobalngeNbId.plmn_id:type_name -> e2sm_ni.v1beta1.PlmnIdentity
	17,  // 7: e2sm_ni.v1beta1.GlobalngeNbId.enb_id:type_name -> e2sm_ni.v1beta1.EnbIdChoice
	14,  // 8: e2sm_ni.v1beta1.GlobalNgRannodeId.g_nb:type_name -> e2sm_ni.v1beta1.GlobalgNbId
	16,  // 9: e2sm_ni.v1beta1.GlobalNgRannodeId.ng_e_nb:type_name -> e2sm_ni.v1beta1.GlobalngeNbId
	29,  // 10: e2sm_ni.v1beta1.E2SmNiEventTriggerDefinition.event_definition_format1:type_name -> e2sm_ni.v1beta1.E2SmNiEventTriggerDefinitionFormat1
	5,   // 11: e2sm_ni.v1beta1.E2SmNiEventTriggerDefinitionFormat1.interface_type:type_name -> e2sm_ni.v1beta1.NiType
	53,  // 12: e2sm_ni.v1beta1.E2SmNiEventTriggerDefinitionFormat1.interface_id:type_name -> e2sm_ni.v1beta1.NiIdentifier
	2,   // 13: e2sm_ni.v1beta1.E2SmNiEventTriggerDefinitionFormat1.interface_direction:type_name -> e2sm_ni.v1beta1.NiDirection
	54,  // 14: e2sm_ni.v1beta1.E2SmNiEventTriggerDefinitionFormat1.interface_message_type:type_name -> e2sm_ni.v1beta1.NiMessageType
	62,  // 15: e2sm_ni.v1beta1.E2SmNiEventTriggerDefinitionFormat1.interface_protocol_ie_list:type_name -> e2sm_ni.v1beta1.NiProtocolIeItem
	83,  // 16: e2sm_ni.v1beta1.E2SmNiActionDefinition.ric_style_type:type_name -> e2sm_ni.v1beta1.RicStyleType
	31,  // 17: e2sm_ni.v1beta1.E2SmNiActionDefinition.action_definition_format:type_name -> e2sm_ni.v1beta1.E2SmNiActionDefinitionFormat
	32,  // 18: e2sm_ni.v1beta1.E2SmNiActionDefinitionFormat.action_definition_format1:type_name -> e2sm_ni.v1beta1.E2SmNiActionDefinitionFormat1
	33,  // 19: e2sm_ni.v1beta1.E2SmNiActionDefinitionFormat.action_definition_format2:type_name -> e2sm_ni.v1beta1.E2SmNiActionDefinitionFormat2
	68,  // 20: e2sm_ni.v1beta1.E2SmNiActionDefinitionFormat1.action_parameter_list:type_name -> e2sm_ni.v1beta1.RanparameterItem
	73,  // 21: e2sm_ni.v1beta1.E2SmNiActionDefinitionFormat2.ran_uegroup_list:type_name -> e2sm_ni.v1beta1.RanueGroupItem
	35,  // 22: e2sm_ni.v1beta1.E2SmNiIndicationHeader.indication_header_format1:type_name -> e2sm_ni.v1beta1.E2SmNiIndicationHeaderFormat1
	5,   // 23: e2sm_ni.v1beta1.E2SmNiIndicationHeaderFormat1.interface_type:type_name -> e2sm_ni.v1beta1.NiType
	53,  // 24: e2sm_ni.v1beta1.E2SmNiIndicationHeaderFormat1.interface_id:type_name -> e2sm_ni.v1beta1.NiIdentifier
	2,   // 25: e2sm_ni.v1beta1.E2SmNiIndicationHeaderFormat1.interface_direction:type_name -> e2sm_ni.v1beta1.NiDirection
	85,  // 26: e2sm_ni.v1beta1.E2SmNiIndicationHeaderFormat1.timestamp:type_name -> e2sm_ni.v1beta1.NiTimeStamp
	37,  // 27: e2sm_ni.v1beta1.E2SmNiIndicationMessage.indication_message_format1:type_name -> e2sm_ni.v1beta1.E2SmNiIndicationMessageFormat1
	86,  // 28: e2sm_ni.v1beta1.E2SmNiIndicationMessageFormat1.interface_message:type_name -> e2sm_ni.v1beta1.NiMessage
	39,  // 29: e2sm_ni.v1beta1.E2SmNiCallProcessId.call_process_id_format1:type_name -> e2sm_ni.v1beta1.E2SmNiCallProcessIdFormat1
	40,  // 30: e2sm_ni.v1beta1.E2SmNiCallProcessId.call_process_id_format2:type_name -> e2sm_ni.v1beta1.E2SmNiCallProcessIdFormat2
	65,  // 31: e2sm_ni.v1beta1.E2SmNiCallProcessIdFormat1.call_process_id:type_name -> e2sm_ni.v1beta1.RancallProcessIdNumber
	87,  // 32: e2sm_ni.v1beta1.E2SmNiCallProcessIdFormat2.call_process_id:type_name -> e2sm_ni.v1beta1.RancallProcessIdString
	42,  // 33: e2sm_ni.v1beta1.E2SmNiControlHeader.control_header_format1:type_name -> e2sm_ni.v1beta1.E2SmNiControlHeaderFormat1
	5,   // 34: e2sm_ni.v1beta1.E2SmNiControlHeaderFormat1.interface_type:type_name -> e2sm_ni.v1beta1.NiType
	53,  // 35: e2sm_ni.v1beta1.E2SmNiControlHeaderFormat1.interface_id:type_name -> e2sm_ni.v1beta1.NiIdentifier
	2,   // 36: e2sm_ni.v1beta1.E2SmNiControlHeaderFormat1.interface_direction:type_name -> e2sm_ni.v1beta1.NiDirection
	76,  // 37: e2sm_ni.v1beta1.E2SmNiControlHeaderFormat1.ric_control_message_priority:type_name -> e2sm_ni.v1beta1.RicControlMessagePriority
	44,  // 38: e2sm_ni.v1beta1.E2SmNiControlMessage.control_message_format1:type_name -> e2sm_ni.v1beta1.E2SmNiControlMessageFormat1
	86,  // 39: e2sm_ni.v1beta1.E2SmNiControlMessageFormat1.interface_message:type_name -> e2sm_ni.v1beta1.NiMessage
	46,  // 40: e2sm_ni.v1beta1.E2SmNiControlOutcome.control_outcome_format1:type_name -> e2sm_ni.v1beta1.E2SmNiControlOutcomeFormat1
	68,  // 41: e2sm_ni.v1beta1.E2SmNiControlOutcomeFormat1.outcome_element_list:type_name -> e2sm_ni.v1beta1.RanparameterItem
	66,  // 42: e2sm_ni.v1beta1.E2SmNiRanfunctionDescription.ran_function_name:type_name -> e2sm_ni.v1beta1.RanfunctionName
	48,  // 43: e2sm_ni.v1beta1.E2SmNiRanfunctionDescription.ni_type_list:type_name -> e2sm_ni.v1beta1.E2SmNiRanfunctionItem
	5,   // 44: e2sm_ni.v1beta1.E2SmNiRanfunctionItem.interface_type:type_name -> e2sm_ni.v1beta1.NiType
	78,  // 45: e2sm_ni.v1beta1.E2SmNiRanfunctionItem.ric_event_trigger_style_list:type_name -> e2sm_ni.v1beta1.RicEventTriggerStyleList
	81,  // 46: e2sm_ni.v1beta1.E2SmNiRanfunctionItem.ric_report_style_list:type_name -> e2sm_ni.v1beta1.RicReportStyleList
	79,  // 47: e2sm_ni.v1beta1.E2SmNiRanfunctionItem.ric_insert_style_list:type_name -> e2sm_ni.v1beta1.RicInsertStyleList
	77,  // 48: e2sm_ni.v1beta1.E2SmNiRanfunctionItem.ric_control_style_list:type_name -> e2sm_ni.v1beta1.RicControlStyleList
	80,  // 49: e2sm_ni.v1beta1.E2SmNiRanfunctionItem.ric_policy_style_list:type_name -> e2sm_ni.v1beta1.RicPolicyStyleList
	10,  // 50: e2sm_ni.v1beta1.GlobalEnGnbId.value:type_name -> e2sm_ni.v1beta1.GlobalenGnbId
	52,  // 51: e2sm_ni.v1beta1.GlobalGnbDuId.global_ng_ran_id:type_name -> e2sm_ni.v1beta1.GlobalNgRanId
	13,  // 52: e2sm_ni.v1beta1.GlobalGnbDuId.g_nb_du_id:type_name -> e2sm_ni.v1beta1.GnbDuId
	52,  // 53: e2sm_ni.v1beta1.GlobalGnbCuUpId.global_ng_ran_id:type_name -> e2sm_ni.v1beta1.GlobalNgRanId
	12,  // 54: e2sm_ni.v1beta1.GlobalGnbCuUpId.g_nb_cu_up_id:type_name -> e2sm_ni.v1beta1.GnbCuUpId
	18,  // 55: e2sm_ni.v1beta1.GlobalNgRanId.value:type_name -> e2sm_ni.v1beta1.GlobalNgRannodeId
	8,   // 56: e2sm_ni.v1beta1.NiIdentifier.global_e_nb_id:type_name -> e2sm_ni.v1beta1.GlobalEnbId
	49,  // 57: e2sm_ni.v1beta1.NiIdentifier.global_en_g_nb_id:type_name -> e2sm_ni.v1beta1.GlobalEnGnbId
	52,  // 58: e2sm_ni.v1beta1.NiIdentifier.global_ng_ran_id:type_name -> e2sm_ni.v1beta1.GlobalNgRanId
	50,  // 59: e2sm_ni.v1beta1.NiIdentifier.global_g_nb_du_id:type_name -> e2sm_ni.v1beta1.GlobalGnbDuId
	51,  // 60: e2sm_ni.v1beta1.NiIdentifier.global_g_nb_cu_up_id:type_name -> e2sm_ni.v1beta1.GlobalGnbCuUpId
	55,  // 61: e2sm_ni.v1beta1.NiMessageType.s1_message_type:type_name -> e2sm_ni.v1beta1.NiMessageTypeS1
	56,  // 62: e2sm_ni.v1beta1.NiMessageType.x2_message_type:type_name -> e2sm_ni.v1beta1.NiMessageTypeX2
	57,  // 63: e2sm_ni.v1beta1.NiMessageType.ng_message_type:type_name -> e2sm_ni.v1beta1.NiMessageTypeNg
	58,  // 64: e2sm_ni.v1beta1.NiMessageType.xn_message_type:type_name -> e2sm_ni.v1beta1.NiMessageTypeXn
	59,  // 65: e2sm_ni.v1beta1.NiMessageType.f1_message_type:type_name -> e2sm_ni.v1beta1.NiMessageTypeF1
	60,  // 66: e2sm_ni.v1beta1.NiMessageType.e1_message_type:type_name -> e2sm_ni.v1beta1.NiMessageTypeE1
	61,  // 67: e2sm_ni.v1beta1.NiMessageTypeS1.value:type_name -> e2sm_ni.v1beta1.NiMessageTypeApproach1
	61,  // 68: e2sm_ni.v1beta1.NiMessageTypeX2.value:type_name -> e2sm_ni.v1beta1.NiMessageTypeApproach1
	61,  // 69: e2sm_ni.v1beta1.NiMessageTypeNg.value:type_name -> e2sm_ni.v1beta1.NiMessageTypeApproach1
	61,  // 70: e2sm_ni.v1beta1.NiMessageTypeXn.value:type_name -> e2sm_ni.v1beta1.NiMessageTypeApproach1
	61,  // 71: e2sm_ni.v1beta1.NiMessageTypeF1.value:type_name -> e2sm_ni.v1beta1.NiMessageTypeApproach1
	61,  // 72: e2sm_ni.v1beta1.NiMessageTypeE1.value:type_name -> e2sm_ni.v1beta1.NiMessageTypeApproach1
	20,  // 73: e2sm_ni.v1beta1.NiMessageTypeApproach1.procedure_code:type_name -> e2sm_ni.v1beta1.ProcedureCode
	3,   // 74: e2sm_ni.v1beta1.NiMessageTypeApproach1.type_of_message:type_name -> e2sm_ni.v1beta1.TypeOfMessage
	63,  // 75: e2sm_ni.v1beta1.NiProtocolIeItem.interface_protocol_ie_id:type_name -> e2sm_ni.v1beta1.NiProtocolIeId
	4,   // 76: e2sm_ni.v1beta1.NiProtocolIeItem.interface_protocol_ie_test:type_name -> e2sm_ni.v1beta1.NiProtocolIeTest
	64,  // 77: e2sm_ni.v1beta1.NiProtocolIeItem.interface_protocol_ie_value:type_name -> e2sm_ni.v1beta1.NiProtocolIeValue
	21,  // 78: e2sm_ni.v1beta1.NiProtocolIeId.value:type_name -> e2sm_ni.v1beta1.ProtocolIeId
	68,  // 79: e2sm_ni.v1beta1.RanimperativePolicy.ran_imperative_policy_list:type_name -> e2sm_ni.v1beta1.RanparameterItem
	70,  // 80: e2sm_ni.v1beta1.RanparameterItem.ran_parameter_id:type_name -> e2sm_ni.v1beta1.RanparameterId
	71,  // 81: e2sm_ni.v1beta1.RanparameterItem.ran_parameter_value:type_name -> e2sm_ni.v1beta1.RanparameterValue
	70,  // 82: e2sm_ni.v1beta1.RanparameterDefItem.ran_parameter_id:type_name -> e2sm_ni.v1beta1.RanparameterId
	88,  // 83: e2sm_ni.v1beta1.RanparameterDefItem.ran_parameter_name:type_name -> e2sm_ni.v1beta1.RanparameterName
	7,   // 84: e2sm_ni.v1beta1.RanparameterDefItem.ran_parameter_type:type_name -> e2sm_ni.v1beta1.RanparameterType
	72,  // 85: e2sm_ni.v1beta1.RanueGroupItem.ran_uegroup_id:type_name -> e2sm_ni.v1beta1.RanueGroupId
	74,  // 86: e2sm_ni.v1beta1.RanueGroupItem.ran_uegroup_definition:type_name -> e2sm_ni.v1beta1.RanueGroupDefinition
	67,  // 87: e2sm_ni.v1beta1.RanueGroupItem.ran_policy:type_name -> e2sm_ni.v1beta1.RanimperativePolicy
	75,  // 88: e2sm_ni.v1beta1.RanueGroupDefinition.ran_uegroup_def_list:type_name -> e2sm_ni.v1beta1.RanueGroupDefItem
	70,  // 89: e2sm_ni.v1beta1.RanueGroupDefItem.ran_parameter_id:type_name -> e2sm_ni.v1beta1.RanparameterId
	6,   // 90: e2sm_ni.v1beta1.RanueGroupDefItem.ran_parameter_test:type_name -> e2sm_ni.v1beta1.RanparameterTestCondition
	71,  // 91: e2sm_ni.v1beta1.RanueGroupDefItem.ran_parameter_value:type_name -> e2sm_ni.v1beta1.RanparameterValue
	83,  // 92: e2sm_ni.v1beta1.RicControlStyleList.ric_control_style_type:type_name -> e2sm_ni.v1beta1.RicStyleType
	89,  // 93: e2sm_ni.v1beta1.RicControlStyleList.ric_control_style_name:type_name -> e2sm_ni.v1beta1.RicStyleName
	82,  // 94: e2sm_ni.v1beta1.RicControlStyleList.ric_control_format_type:type_name -> e2sm_ni.v1beta1.RicFormatType
	82,  // 95: e2sm_ni.v1beta1.RicControlStyleList.ric_control_header_format_type:type_name -> e2sm_ni.v1beta1.RicFormatType
	82,  // 96: e2sm_ni.v1beta1.RicControlStyleList.ric_control_message_format_type:type_name -> e2sm_ni.v1beta1.RicFormatType
	82,  // 97: e2sm_ni.v1beta1.RicControlStyleList.ric_call_process_idformat_type:type_name -> e2sm_ni.v1beta1.RicFormatType
	82,  // 98: e2sm_ni.v1beta1.RicControlStyleList.ric_control_outcome_format_type:type_name -> e2sm_ni.v1beta1.RicFormatType
	69,  // 99: e2sm_ni.v1beta1.RicControlStyleList.ric_control_outcome_ran_para_def_list:type_name -> e2sm_ni.v1beta1.RanparameterDefItem
	83,  // 100: e2sm_ni.v1beta1.RicEventTriggerStyleList.ric_event_trigger_style_type:type_name -> e2sm_ni.v1beta1.RicStyleType
	89,  // 101: e2sm_ni.v1beta1.RicEventTriggerStyleList.ric_event_trigger_style_name:type_name -> e2sm_ni.v1beta1.RicStyleName
	82,  // 102: e2sm_ni.v1beta1.RicEventTriggerStyleList.ric_event_trigger_format_type:type_name -> e2sm_ni.v1beta1.RicFormatType
	83,  // 103: e2sm_ni.v1beta1.RicInsertStyleList.ric_insert_style_type:type_name -> e2sm_ni.v1beta1.RicStyleType
	89,  // 104: e2sm_ni.v1beta1.RicInsertStyleList.ric_insert_style_name:type_name -> e2sm_ni.v1beta1.RicStyleName
	82,  // 105: e2sm_ni.v1beta1.RicInsertStyleList.ric_insert_action_format_type:type_name -> e2sm_ni.v1beta1.RicFormatType
	69,  // 106: e2sm_ni.v1beta1.RicInsertStyleList.ric_insert_ran_parameter_def_list:type_name -> e2sm_ni.v1beta1.RanparameterDefItem
	82,  // 107: e2sm_ni.v1beta1.RicInsertStyleList.ric_indication_header_format_type:type_name -> e2sm_ni.v1beta1.RicFormatType
	82,  // 108: e2sm_ni.v1beta1.RicInsertStyleList.ric_indication_message_format_type:type_name -> e2sm_ni.v1beta1.RicFormatType
	82,  // 109: e2sm_ni.v1beta1.RicInsertStyleList.ric_call_process_idformat_type:type_name -> e2sm_ni.v1beta1.RicFormatType
	83,  // 110: e2sm_ni.v1beta1.RicPolicyStyleList.ric_policy_style_type:type_name -> e2sm_ni.v1beta1.RicStyleType
	89,  // 111: e2sm_ni.v1beta1.RicPolicyStyleList.ric_policy_style_name:type_name -> e2sm_ni.v1beta1.RicStyleName
	82,  // 112: e2sm_ni.v1beta1.RicPolicyStyleList.ric_policy_action_format_type:type_name -> e2sm_ni.v1beta1.RicFormatType
	69,  // 113: e2sm_ni.v1beta1.RicPolicyStyleList.ric_policy_ran_parameter_def_list:type_name -> e2sm_ni.v1beta1.RanparameterDefItem
	83,  // 114: e2sm_ni.v1beta1.RicReportStyleList.ric_report_style_type:type_name -> e2sm_ni.v1beta1.RicStyleType
	89,  // 115: e2sm_ni.v1beta1.RicReportStyleList.ric_report_style_name:type_name -> e2sm_ni.v1beta1.RicStyleName
	82,  // 116: e2sm_ni.v1beta1.RicReportStyleList.ric_report_action_format_type:type_name -> e2sm_ni.v1beta1.RicFormatType
	69,  // 117: e2sm_ni.v1beta1.RicReportStyleList.ric_report_ran_parameter_def_list:type_name -> e2sm_ni.v1beta1.RanparameterDefItem
	82,  // 118: e2sm_ni.v1beta1.RicReportStyleList.ric_indication_header_format_type:type_name -> e2sm_ni.v1beta1.RicFormatType
	82,  // 119: e2sm_ni.v1beta1.RicReportStyleList.ric_indication_message_format_type:type_name -> e2sm_ni.v1beta1.RicFormatType
	120, // [120:120] is the sub-list for method output_type
	120, // [120:120] is the sub-list for method input_type
	120, // [120:120] is the sub-list for extension type_name
	120, // [120:120] is the sub-list for extension extendee
	0,   // [0:120] is the sub-list for field type_name
}

func init() { file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_init() }
func file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_init() {
	if File_e2sm_ni_v1beta1_e2sm_ni_ies_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalEnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalenGnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EngnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnbCuUpId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnbDuId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalgNbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnbIdChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalngeNbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnbIdChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalNgRannodeId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxProtocolIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcedureCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtocolIeId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxofInterfaceProtocolTests); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxofRanueGroups); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxofActionParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxofRanparameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxofNitypes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxofRicstyles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmNiEventTriggerDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmNiEventTriggerDefinitionFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmNiActionDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmNiActionDefinitionFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmNiActionDefinitionFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmNiActionDefinitionFormat2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmNiIndicationHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmNiIndicationHeaderFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmNiIndicationMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmNiIndicationMessageFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmNiCallProcessId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmNiCallProcessIdFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmNiCallProcessIdFormat2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmNiControlHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmNiControlHeaderFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmNiControlMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmNiControlMessageFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmNiControlOutcome); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmNiControlOutcomeFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmNiRanfunctionDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmNiRanfunctionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalEnGnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalGnbDuId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalGnbCuUpId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalNgRanId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiMessageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiMessageTypeS1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiMessageTypeX2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiMessageTypeNg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiMessageTypeXn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiMessageTypeF1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiMessageTypeE1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiMessageTypeApproach1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiProtocolIeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiProtocolIeId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiProtocolIeValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RancallProcessIdNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanfunctionName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanimperativePolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanparameterItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanparameterDefItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanparameterId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanparameterValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanueGroupId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanueGroupItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanueGroupDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanueGroupDefItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicControlMessagePriority); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicControlStyleList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicEventTriggerStyleList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicInsertStyleList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicPolicyStyleList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicReportStyleList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicFormatType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicStyleType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlmnIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiTimeStamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NiMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RancallProcessIdString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanparameterName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicStyleName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*EnbId_MacroENbId)(nil),
		(*EnbId_HomeENbId)(nil),
		(*EnbId_ShortMacroENbId)(nil),
		(*EnbId_LongMacroENbId)(nil),
	}
	file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*EngnbId_GNbId)(nil),
	}
	file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*GnbIdChoice_GnbId)(nil),
	}
	file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*EnbIdChoice_EnbIdMacro)(nil),
		(*EnbIdChoice_EnbIdShortmacro)(nil),
		(*EnbIdChoice_EnbIdLongmacro)(nil),
	}
	file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*GlobalNgRannodeId_GNb)(nil),
		(*GlobalNgRannodeId_NgENb)(nil),
	}
	file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*E2SmNiEventTriggerDefinition_EventDefinitionFormat1)(nil),
	}
	file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[23].OneofWrappers = []interface{}{
		(*E2SmNiActionDefinitionFormat_ActionDefinitionFormat1)(nil),
		(*E2SmNiActionDefinitionFormat_ActionDefinitionFormat2)(nil),
	}
	file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[26].OneofWrappers = []interface{}{
		(*E2SmNiIndicationHeader_IndicationHeaderFormat1)(nil),
	}
	file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[28].OneofWrappers = []interface{}{
		(*E2SmNiIndicationMessage_IndicationMessageFormat1)(nil),
	}
	file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[30].OneofWrappers = []interface{}{
		(*E2SmNiCallProcessId_CallProcessIdFormat1)(nil),
		(*E2SmNiCallProcessId_CallProcessIdFormat2)(nil),
	}
	file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[33].OneofWrappers = []interface{}{
		(*E2SmNiControlHeader_ControlHeaderFormat1)(nil),
	}
	file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[35].OneofWrappers = []interface{}{
		(*E2SmNiControlMessage_ControlMessageFormat1)(nil),
	}
	file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[37].OneofWrappers = []interface{}{
		(*E2SmNiControlOutcome_ControlOutcomeFormat1)(nil),
	}
	file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[45].OneofWrappers = []interface{}{
		(*NiIdentifier_GlobalENbId)(nil),
		(*NiIdentifier_GlobalEnGNbId)(nil),
		(*NiIdentifier_GlobalNgRanId)(nil),
		(*NiIdentifier_GlobalGNbDuId)(nil),
		(*NiIdentifier_GlobalGNbCuUpId)(nil),
	}
	file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[46].OneofWrappers = []interface{}{
		(*NiMessageType_S1MessageType)(nil),
		(*NiMessageType_X2MessageType)(nil),
		(*NiMessageType_NgMessageType)(nil),
		(*NiMessageType_XnMessageType)(nil),
		(*NiMessageType_F1MessageType)(nil),
		(*NiMessageType_E1MessageType)(nil),
	}
	file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[56].OneofWrappers = []interface{}{
		(*NiProtocolIeValue_ValueInt)(nil),
		(*NiProtocolIeValue_ValueEnum)(nil),
		(*NiProtocolIeValue_ValueBool)(nil),
		(*NiProtocolIeValue_ValueBitS)(nil),
		(*NiProtocolIeValue_ValueOctS)(nil),
		(*NiProtocolIeValue_ValuePrtS)(nil),
	}
	file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes[63].OneofWrappers = []interface{}{
		(*RanparameterValue_ValueInt)(nil),
		(*RanparameterValue_ValueEnum)(nil),
		(*RanparameterValue_ValueBool)(nil),
		(*RanparameterValue_ValueBitS)(nil),
		(*RanparameterValue_ValueOctS)(nil),
		(*RanparameterValue_ValuePrtS)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   82,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_goTypes,
		DependencyIndexes: file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_depIdxs,
		EnumInfos:         file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_enumTypes,
		MessageInfos:      file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_msgTypes,
	}.Build()
	File_e2sm_ni_v1beta1_e2sm_ni_ies_proto = out.File
	file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_rawDesc = nil
	file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_goTypes = nil
	file_e2sm_ni_v1beta1_e2sm_ni_ies_proto_depIdxs = nil
}
