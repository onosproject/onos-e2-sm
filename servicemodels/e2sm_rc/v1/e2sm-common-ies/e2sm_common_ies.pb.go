// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.19.4
// source: e2sm_rc/v1/e2sm_common_ies.proto

package e2smcommonies

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	asn1 "github.com/onosproject/onos-lib-go/api/asn1/v1/asn1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// enumerated from e2sm_v2.asn1:109
// @inject_tag: aper:"valueExt"
type InterfaceType int32

const (
	InterfaceType_INTERFACE_TYPE_N_G InterfaceType = 0
	InterfaceType_INTERFACE_TYPE_XN  InterfaceType = 1
	InterfaceType_INTERFACE_TYPE_F1  InterfaceType = 2
	InterfaceType_INTERFACE_TYPE_E1  InterfaceType = 3
	InterfaceType_INTERFACE_TYPE_S1  InterfaceType = 4
	InterfaceType_INTERFACE_TYPE_X2  InterfaceType = 5
	InterfaceType_INTERFACE_TYPE_W1  InterfaceType = 6
)

// Enum value maps for InterfaceType.
var (
	InterfaceType_name = map[int32]string{
		0: "INTERFACE_TYPE_N_G",
		1: "INTERFACE_TYPE_XN",
		2: "INTERFACE_TYPE_F1",
		3: "INTERFACE_TYPE_E1",
		4: "INTERFACE_TYPE_S1",
		5: "INTERFACE_TYPE_X2",
		6: "INTERFACE_TYPE_W1",
	}
	InterfaceType_value = map[string]int32{
		"INTERFACE_TYPE_N_G": 0,
		"INTERFACE_TYPE_XN":  1,
		"INTERFACE_TYPE_F1":  2,
		"INTERFACE_TYPE_E1":  3,
		"INTERFACE_TYPE_S1":  4,
		"INTERFACE_TYPE_X2":  5,
		"INTERFACE_TYPE_W1":  6,
	}
)

func (x InterfaceType) Enum() *InterfaceType {
	p := new(InterfaceType)
	*p = x
	return p
}

func (x InterfaceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InterfaceType) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_enumTypes[0].Descriptor()
}

func (InterfaceType) Type() protoreflect.EnumType {
	return &file_e2sm_rc_v1_e2sm_common_ies_proto_enumTypes[0]
}

func (x InterfaceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InterfaceType.Descriptor instead.
func (InterfaceType) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{0}
}

// enumerated from e2sm_v2.asn1:148
type RrcclassLte int32

const (
	RrcclassLte_RRCCLASS_LTE_B_CCH_BCH         RrcclassLte = 0
	RrcclassLte_RRCCLASS_LTE_B_CCH_BCH_MBMS    RrcclassLte = 1
	RrcclassLte_RRCCLASS_LTE_B_CCH_DL_SCH      RrcclassLte = 2
	RrcclassLte_RRCCLASS_LTE_B_CCH_DL_SCH_BR   RrcclassLte = 3
	RrcclassLte_RRCCLASS_LTE_B_CCH_DL_SCH_MBMS RrcclassLte = 4
	RrcclassLte_RRCCLASS_LTE_M_CCH             RrcclassLte = 5
	RrcclassLte_RRCCLASS_LTE_P_CCH             RrcclassLte = 6
	RrcclassLte_RRCCLASS_LTE_DL_CCCH           RrcclassLte = 7
	RrcclassLte_RRCCLASS_LTE_DL_DCCH           RrcclassLte = 8
	RrcclassLte_RRCCLASS_LTE_UL_CCCH           RrcclassLte = 9
	RrcclassLte_RRCCLASS_LTE_UL_DCCH           RrcclassLte = 10
	RrcclassLte_RRCCLASS_LTE_S_C_MCCH          RrcclassLte = 11
)

// Enum value maps for RrcclassLte.
var (
	RrcclassLte_name = map[int32]string{
		0:  "RRCCLASS_LTE_B_CCH_BCH",
		1:  "RRCCLASS_LTE_B_CCH_BCH_MBMS",
		2:  "RRCCLASS_LTE_B_CCH_DL_SCH",
		3:  "RRCCLASS_LTE_B_CCH_DL_SCH_BR",
		4:  "RRCCLASS_LTE_B_CCH_DL_SCH_MBMS",
		5:  "RRCCLASS_LTE_M_CCH",
		6:  "RRCCLASS_LTE_P_CCH",
		7:  "RRCCLASS_LTE_DL_CCCH",
		8:  "RRCCLASS_LTE_DL_DCCH",
		9:  "RRCCLASS_LTE_UL_CCCH",
		10: "RRCCLASS_LTE_UL_DCCH",
		11: "RRCCLASS_LTE_S_C_MCCH",
	}
	RrcclassLte_value = map[string]int32{
		"RRCCLASS_LTE_B_CCH_BCH":         0,
		"RRCCLASS_LTE_B_CCH_BCH_MBMS":    1,
		"RRCCLASS_LTE_B_CCH_DL_SCH":      2,
		"RRCCLASS_LTE_B_CCH_DL_SCH_BR":   3,
		"RRCCLASS_LTE_B_CCH_DL_SCH_MBMS": 4,
		"RRCCLASS_LTE_M_CCH":             5,
		"RRCCLASS_LTE_P_CCH":             6,
		"RRCCLASS_LTE_DL_CCCH":           7,
		"RRCCLASS_LTE_DL_DCCH":           8,
		"RRCCLASS_LTE_UL_CCCH":           9,
		"RRCCLASS_LTE_UL_DCCH":           10,
		"RRCCLASS_LTE_S_C_MCCH":          11,
	}
)

func (x RrcclassLte) Enum() *RrcclassLte {
	p := new(RrcclassLte)
	*p = x
	return p
}

func (x RrcclassLte) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RrcclassLte) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_enumTypes[1].Descriptor()
}

func (RrcclassLte) Type() protoreflect.EnumType {
	return &file_e2sm_rc_v1_e2sm_common_ies_proto_enumTypes[1]
}

func (x RrcclassLte) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RrcclassLte.Descriptor instead.
func (RrcclassLte) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{1}
}

// enumerated from e2sm_v2.asn1:150
type RrcclassNr int32

const (
	RrcclassNr_RRCCLASS_NR_B_CCH_BCH    RrcclassNr = 0
	RrcclassNr_RRCCLASS_NR_B_CCH_DL_SCH RrcclassNr = 1
	RrcclassNr_RRCCLASS_NR_D_L_CCCH     RrcclassNr = 2
	RrcclassNr_RRCCLASS_NR_D_L_DCCH     RrcclassNr = 3
	RrcclassNr_RRCCLASS_NR_P_CCH        RrcclassNr = 4
	RrcclassNr_RRCCLASS_NR_U_L_CCCH     RrcclassNr = 5
	RrcclassNr_RRCCLASS_NR_U_L_CCCH1    RrcclassNr = 6
	RrcclassNr_RRCCLASS_NR_U_L_DCCH     RrcclassNr = 7
)

// Enum value maps for RrcclassNr.
var (
	RrcclassNr_name = map[int32]string{
		0: "RRCCLASS_NR_B_CCH_BCH",
		1: "RRCCLASS_NR_B_CCH_DL_SCH",
		2: "RRCCLASS_NR_D_L_CCCH",
		3: "RRCCLASS_NR_D_L_DCCH",
		4: "RRCCLASS_NR_P_CCH",
		5: "RRCCLASS_NR_U_L_CCCH",
		6: "RRCCLASS_NR_U_L_CCCH1",
		7: "RRCCLASS_NR_U_L_DCCH",
	}
	RrcclassNr_value = map[string]int32{
		"RRCCLASS_NR_B_CCH_BCH":    0,
		"RRCCLASS_NR_B_CCH_DL_SCH": 1,
		"RRCCLASS_NR_D_L_CCCH":     2,
		"RRCCLASS_NR_D_L_DCCH":     3,
		"RRCCLASS_NR_P_CCH":        4,
		"RRCCLASS_NR_U_L_CCCH":     5,
		"RRCCLASS_NR_U_L_CCCH1":    6,
		"RRCCLASS_NR_U_L_DCCH":     7,
	}
)

func (x RrcclassNr) Enum() *RrcclassNr {
	p := new(RrcclassNr)
	*p = x
	return p
}

func (x RrcclassNr) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RrcclassNr) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_enumTypes[2].Descriptor()
}

func (RrcclassNr) Type() protoreflect.EnumType {
	return &file_e2sm_rc_v1_e2sm_common_ies_proto_enumTypes[2]
}

func (x RrcclassNr) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RrcclassNr.Descriptor instead.
func (RrcclassNr) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{2}
}

// enumerated from e2sm_v2.asn1:556
type NrfrequencyShift7P5Khz int32

const (
	NrfrequencyShift7P5Khz_NRFREQUENCY_SHIFT7P5KHZ_FALSE NrfrequencyShift7P5Khz = 0
	NrfrequencyShift7P5Khz_NRFREQUENCY_SHIFT7P5KHZ_TRUE  NrfrequencyShift7P5Khz = 1
)

// Enum value maps for NrfrequencyShift7P5Khz.
var (
	NrfrequencyShift7P5Khz_name = map[int32]string{
		0: "NRFREQUENCY_SHIFT7P5KHZ_FALSE",
		1: "NRFREQUENCY_SHIFT7P5KHZ_TRUE",
	}
	NrfrequencyShift7P5Khz_value = map[string]int32{
		"NRFREQUENCY_SHIFT7P5KHZ_FALSE": 0,
		"NRFREQUENCY_SHIFT7P5KHZ_TRUE":  1,
	}
)

func (x NrfrequencyShift7P5Khz) Enum() *NrfrequencyShift7P5Khz {
	p := new(NrfrequencyShift7P5Khz)
	*p = x
	return p
}

func (x NrfrequencyShift7P5Khz) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NrfrequencyShift7P5Khz) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_enumTypes[3].Descriptor()
}

func (NrfrequencyShift7P5Khz) Type() protoreflect.EnumType {
	return &file_e2sm_rc_v1_e2sm_common_ies_proto_enumTypes[3]
}

func (x NrfrequencyShift7P5Khz) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NrfrequencyShift7P5Khz.Descriptor instead.
func (NrfrequencyShift7P5Khz) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{3}
}

type MessageType int32

const (
	MessageType_MESSAGE_TYPE_INITIATING_MESSAGE   MessageType = 0
	MessageType_MESSAGE_TYPE_SUCCESSFUL_OUTCOME   MessageType = 1
	MessageType_MESSAGE_TYPE_UNSUCCESSFUL_OUTCOME MessageType = 3
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "MESSAGE_TYPE_INITIATING_MESSAGE",
		1: "MESSAGE_TYPE_SUCCESSFUL_OUTCOME",
		3: "MESSAGE_TYPE_UNSUCCESSFUL_OUTCOME",
	}
	MessageType_value = map[string]int32{
		"MESSAGE_TYPE_INITIATING_MESSAGE":   0,
		"MESSAGE_TYPE_SUCCESSFUL_OUTCOME":   1,
		"MESSAGE_TYPE_UNSUCCESSFUL_OUTCOME": 3,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_enumTypes[4].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_e2sm_rc_v1_e2sm_common_ies_proto_enumTypes[4]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{4}
}

// constant Integer from e2sm_v2.asn1:21
// {-}
type MaxE1Apid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:65535,valueUB:65535"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:65535,valueUB:65535"`
}

func (x *MaxE1Apid) Reset() {
	*x = MaxE1Apid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxE1Apid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxE1Apid) ProtoMessage() {}

func (x *MaxE1Apid) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxE1Apid.ProtoReflect.Descriptor instead.
func (*MaxE1Apid) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{0}
}

func (x *MaxE1Apid) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_v2.asn1:22
// {-}
type MaxF1Apid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4,valueUB:4"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:4,valueUB:4"`
}

func (x *MaxF1Apid) Reset() {
	*x = MaxF1Apid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxF1Apid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxF1Apid) ProtoMessage() {}

func (x *MaxF1Apid) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxF1Apid.ProtoReflect.Descriptor instead.
func (*MaxF1Apid) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{1}
}

func (x *MaxF1Apid) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_v2.asn1:25
// {-}
type MaxEarfcn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:65535,valueUB:65535"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:65535,valueUB:65535"`
}

func (x *MaxEarfcn) Reset() {
	*x = MaxEarfcn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxEarfcn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxEarfcn) ProtoMessage() {}

func (x *MaxEarfcn) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxEarfcn.ProtoReflect.Descriptor instead.
func (*MaxEarfcn) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{2}
}

func (x *MaxEarfcn) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_v2.asn1:28
// {-}
type MaxNrarfcn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:3279165,valueUB:3279165"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:3279165,valueUB:3279165"`
}

func (x *MaxNrarfcn) Reset() {
	*x = MaxNrarfcn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxNrarfcn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxNrarfcn) ProtoMessage() {}

func (x *MaxNrarfcn) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxNrarfcn.ProtoReflect.Descriptor instead.
func (*MaxNrarfcn) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{3}
}

func (x *MaxNrarfcn) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_v2.asn1:29
// {-}
type MaxnoofNrCellBands struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:32,valueUB:32"`
}

func (x *MaxnoofNrCellBands) Reset() {
	*x = MaxnoofNrCellBands{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofNrCellBands) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofNrCellBands) ProtoMessage() {}

func (x *MaxnoofNrCellBands) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofNrCellBands.ProtoReflect.Descriptor instead.
func (*MaxnoofNrCellBands) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{4}
}

func (x *MaxnoofNrCellBands) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm_v2.asn1:39
// {CGI}
// aper:"choiceExt"
type Cgi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_v2.asn1:39
	//
	// Types that are assignable to Cgi:
	//	*Cgi_NRCgi
	//	*Cgi_EUtraCgi
	Cgi isCgi_Cgi `protobuf_oneof:"cgi"`
}

func (x *Cgi) Reset() {
	*x = Cgi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cgi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cgi) ProtoMessage() {}

func (x *Cgi) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cgi.ProtoReflect.Descriptor instead.
func (*Cgi) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{5}
}

func (m *Cgi) GetCgi() isCgi_Cgi {
	if m != nil {
		return m.Cgi
	}
	return nil
}

func (x *Cgi) GetNRCgi() *NrCgi {
	if x, ok := x.GetCgi().(*Cgi_NRCgi); ok {
		return x.NRCgi
	}
	return nil
}

func (x *Cgi) GetEUtraCgi() *EutraCgi {
	if x, ok := x.GetCgi().(*Cgi_EUtraCgi); ok {
		return x.EUtraCgi
	}
	return nil
}

type isCgi_Cgi interface {
	isCgi_Cgi()
}

type Cgi_NRCgi struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt"
	NRCgi *NrCgi `protobuf:"bytes,1,opt,name=n_r_cgi,json=nR-CGI,proto3,oneof" aper:"choiceIdx:1,valueExt"`
}

type Cgi_EUtraCgi struct {
	// @inject_tag: aper:"choiceIdx:2,valueExt"
	EUtraCgi *EutraCgi `protobuf:"bytes,2,opt,name=e_utra_cgi,json=eUTRA-CGI,proto3,oneof" aper:"choiceIdx:2,valueExt"`
}

func (*Cgi_NRCgi) isCgi_Cgi() {}

func (*Cgi_EUtraCgi) isCgi_Cgi() {}

// sequence from e2sm_v2.asn1:45
// {CoreCPID}
// aper:"choiceExt"
type CoreCpid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_v2.asn1:45
	//
	// Types that are assignable to CoreCpid:
	//	*CoreCpid_FiveGc
	//	*CoreCpid_EPc
	CoreCpid isCoreCpid_CoreCpid `protobuf_oneof:"core_cpid"`
}

func (x *CoreCpid) Reset() {
	*x = CoreCpid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreCpid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreCpid) ProtoMessage() {}

func (x *CoreCpid) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreCpid.ProtoReflect.Descriptor instead.
func (*CoreCpid) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{6}
}

func (m *CoreCpid) GetCoreCpid() isCoreCpid_CoreCpid {
	if m != nil {
		return m.CoreCpid
	}
	return nil
}

func (x *CoreCpid) GetFiveGc() *Guami {
	if x, ok := x.GetCoreCpid().(*CoreCpid_FiveGc); ok {
		return x.FiveGc
	}
	return nil
}

func (x *CoreCpid) GetEPc() *Gummei {
	if x, ok := x.GetCoreCpid().(*CoreCpid_EPc); ok {
		return x.EPc
	}
	return nil
}

type isCoreCpid_CoreCpid interface {
	isCoreCpid_CoreCpid()
}

type CoreCpid_FiveGc struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt"
	FiveGc *Guami `protobuf:"bytes,1,opt,name=five_gc,json=fiveGC,proto3,oneof" aper:"choiceIdx:1,valueExt"`
}

type CoreCpid_EPc struct {
	// @inject_tag: aper:"choiceIdx:2,valueExt"
	EPc *Gummei `protobuf:"bytes,2,opt,name=e_pc,json=ePC,proto3,oneof" aper:"choiceIdx:2,valueExt"`
}

func (*CoreCpid_FiveGc) isCoreCpid_CoreCpid() {}

func (*CoreCpid_EPc) isCoreCpid_CoreCpid() {}

// sequence from e2sm_v2.asn1:51
// {InterfaceIdentifier}
// aper:"valueExt"
type InterfaceIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_v2.asn1:51
	//
	// Types that are assignable to InterfaceIdentifier:
	//	*InterfaceIdentifier_NG
	//	*InterfaceIdentifier_XN
	//	*InterfaceIdentifier_F1
	//	*InterfaceIdentifier_E1
	//	*InterfaceIdentifier_S1
	//	*InterfaceIdentifier_X2
	//	*InterfaceIdentifier_W1
	InterfaceIdentifier isInterfaceIdentifier_InterfaceIdentifier `protobuf_oneof:"interface_identifier"`
}

func (x *InterfaceIdentifier) Reset() {
	*x = InterfaceIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceIdentifier) ProtoMessage() {}

func (x *InterfaceIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceIdentifier.ProtoReflect.Descriptor instead.
func (*InterfaceIdentifier) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{7}
}

func (m *InterfaceIdentifier) GetInterfaceIdentifier() isInterfaceIdentifier_InterfaceIdentifier {
	if m != nil {
		return m.InterfaceIdentifier
	}
	return nil
}

func (x *InterfaceIdentifier) GetNG() *InterfaceIdNg {
	if x, ok := x.GetInterfaceIdentifier().(*InterfaceIdentifier_NG); ok {
		return x.NG
	}
	return nil
}

func (x *InterfaceIdentifier) GetXN() *InterfaceIdXn {
	if x, ok := x.GetInterfaceIdentifier().(*InterfaceIdentifier_XN); ok {
		return x.XN
	}
	return nil
}

func (x *InterfaceIdentifier) GetF1() *InterfaceIdF1 {
	if x, ok := x.GetInterfaceIdentifier().(*InterfaceIdentifier_F1); ok {
		return x.F1
	}
	return nil
}

func (x *InterfaceIdentifier) GetE1() *InterfaceIdE1 {
	if x, ok := x.GetInterfaceIdentifier().(*InterfaceIdentifier_E1); ok {
		return x.E1
	}
	return nil
}

func (x *InterfaceIdentifier) GetS1() *InterfaceIdS1 {
	if x, ok := x.GetInterfaceIdentifier().(*InterfaceIdentifier_S1); ok {
		return x.S1
	}
	return nil
}

func (x *InterfaceIdentifier) GetX2() *InterfaceIdX2 {
	if x, ok := x.GetInterfaceIdentifier().(*InterfaceIdentifier_X2); ok {
		return x.X2
	}
	return nil
}

func (x *InterfaceIdentifier) GetW1() *InterfaceIdW1 {
	if x, ok := x.GetInterfaceIdentifier().(*InterfaceIdentifier_W1); ok {
		return x.W1
	}
	return nil
}

type isInterfaceIdentifier_InterfaceIdentifier interface {
	isInterfaceIdentifier_InterfaceIdentifier()
}

type InterfaceIdentifier_NG struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt"
	NG *InterfaceIdNg `protobuf:"bytes,1,opt,name=n_g,json=nG,proto3,oneof" aper:"choiceIdx:1,valueExt"`
}

type InterfaceIdentifier_XN struct {
	// @inject_tag: aper:"choiceIdx:2,valueExt"
	XN *InterfaceIdXn `protobuf:"bytes,2,opt,name=x_n,json=xN,proto3,oneof" aper:"choiceIdx:2,valueExt"`
}

type InterfaceIdentifier_F1 struct {
	// @inject_tag: aper:"choiceIdx:3,valueExt"
	F1 *InterfaceIdF1 `protobuf:"bytes,3,opt,name=f1,proto3,oneof" aper:"choiceIdx:3,valueExt"`
}

type InterfaceIdentifier_E1 struct {
	// @inject_tag: aper:"choiceIdx:4,valueExt"
	E1 *InterfaceIdE1 `protobuf:"bytes,4,opt,name=e1,proto3,oneof" aper:"choiceIdx:4,valueExt"`
}

type InterfaceIdentifier_S1 struct {
	// @inject_tag: aper:"choiceIdx:5,valueExt"
	S1 *InterfaceIdS1 `protobuf:"bytes,5,opt,name=s1,proto3,oneof" aper:"choiceIdx:5,valueExt"`
}

type InterfaceIdentifier_X2 struct {
	// @inject_tag: aper:"choiceIdx:6,valueExt"
	X2 *InterfaceIdX2 `protobuf:"bytes,6,opt,name=x2,proto3,oneof" aper:"choiceIdx:6,valueExt"`
}

type InterfaceIdentifier_W1 struct {
	// @inject_tag: aper:"choiceIdx:7,valueExt"
	W1 *InterfaceIdW1 `protobuf:"bytes,7,opt,name=w1,proto3,oneof" aper:"choiceIdx:7,valueExt"`
}

func (*InterfaceIdentifier_NG) isInterfaceIdentifier_InterfaceIdentifier() {}

func (*InterfaceIdentifier_XN) isInterfaceIdentifier_InterfaceIdentifier() {}

func (*InterfaceIdentifier_F1) isInterfaceIdentifier_InterfaceIdentifier() {}

func (*InterfaceIdentifier_E1) isInterfaceIdentifier_InterfaceIdentifier() {}

func (*InterfaceIdentifier_S1) isInterfaceIdentifier_InterfaceIdentifier() {}

func (*InterfaceIdentifier_X2) isInterfaceIdentifier_InterfaceIdentifier() {}

func (*InterfaceIdentifier_W1) isInterfaceIdentifier_InterfaceIdentifier() {}

// sequence from e2sm_v2.asn1:62
// {InterfaceID-NG}
type InterfaceIdNg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	Guami *Guami `protobuf:"bytes,1,opt,name=guami,proto3" json:"guami,omitempty" aper:"valueExt"`
}

func (x *InterfaceIdNg) Reset() {
	*x = InterfaceIdNg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceIdNg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceIdNg) ProtoMessage() {}

func (x *InterfaceIdNg) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceIdNg.ProtoReflect.Descriptor instead.
func (*InterfaceIdNg) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{8}
}

func (x *InterfaceIdNg) GetGuami() *Guami {
	if x != nil {
		return x.Guami
	}
	return nil
}

// sequence from e2sm_v2.asn1:67
// {InterfaceID-Xn}
type InterfaceIdXn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"choiceExt"
	GlobalNgRanId *GlobalNgrannodeId `protobuf:"bytes,1,opt,name=global_ng_ran_id,json=global-NG-RAN-ID,proto3" json:"global_ng_ran_id,omitempty" aper:"choiceExt"`
}

func (x *InterfaceIdXn) Reset() {
	*x = InterfaceIdXn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceIdXn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceIdXn) ProtoMessage() {}

func (x *InterfaceIdXn) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceIdXn.ProtoReflect.Descriptor instead.
func (*InterfaceIdXn) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{9}
}

func (x *InterfaceIdXn) GetGlobalNgRanId() *GlobalNgrannodeId {
	if x != nil {
		return x.GlobalNgRanId
	}
	return nil
}

// sequence from e2sm_v2.asn1:72
// {InterfaceID-F1}
type InterfaceIdF1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	GlobalGnbId *GlobalGnbId `protobuf:"bytes,1,opt,name=global_gnb_id,json=globalGNB-ID,proto3" json:"global_gnb_id,omitempty" aper:"valueExt"`
	GNbDuId     *GnbDuId     `protobuf:"bytes,2,opt,name=g_nb_du_id,json=gNB-DU-ID,proto3" json:"g_nb_du_id,omitempty"`
}

func (x *InterfaceIdF1) Reset() {
	*x = InterfaceIdF1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceIdF1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceIdF1) ProtoMessage() {}

func (x *InterfaceIdF1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceIdF1.ProtoReflect.Descriptor instead.
func (*InterfaceIdF1) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{10}
}

func (x *InterfaceIdF1) GetGlobalGnbId() *GlobalGnbId {
	if x != nil {
		return x.GlobalGnbId
	}
	return nil
}

func (x *InterfaceIdF1) GetGNbDuId() *GnbDuId {
	if x != nil {
		return x.GNbDuId
	}
	return nil
}

// sequence from e2sm_v2.asn1:78
// {InterfaceID-E1}
type InterfaceIdE1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	GlobalGnbId *GlobalGnbId `protobuf:"bytes,1,opt,name=global_gnb_id,json=globalGNB-ID,proto3" json:"global_gnb_id,omitempty" aper:"valueExt"`
	GNbCuUpId   *GnbCuUpId   `protobuf:"bytes,2,opt,name=g_nb_cu_up_id,json=gNB-CU-UP-ID,proto3" json:"g_nb_cu_up_id,omitempty"`
}

func (x *InterfaceIdE1) Reset() {
	*x = InterfaceIdE1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceIdE1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceIdE1) ProtoMessage() {}

func (x *InterfaceIdE1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceIdE1.ProtoReflect.Descriptor instead.
func (*InterfaceIdE1) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{11}
}

func (x *InterfaceIdE1) GetGlobalGnbId() *GlobalGnbId {
	if x != nil {
		return x.GlobalGnbId
	}
	return nil
}

func (x *InterfaceIdE1) GetGNbCuUpId() *GnbCuUpId {
	if x != nil {
		return x.GNbCuUpId
	}
	return nil
}

// sequence from e2sm_v2.asn1:84
// {InterfaceID-S1}
type InterfaceIdS1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	GUmmei *Gummei `protobuf:"bytes,1,opt,name=g_ummei,json=gUMMEI,proto3" json:"g_ummei,omitempty" aper:"valueExt"`
}

func (x *InterfaceIdS1) Reset() {
	*x = InterfaceIdS1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceIdS1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceIdS1) ProtoMessage() {}

func (x *InterfaceIdS1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceIdS1.ProtoReflect.Descriptor instead.
func (*InterfaceIdS1) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{12}
}

func (x *InterfaceIdS1) GetGUmmei() *Gummei {
	if x != nil {
		return x.GUmmei
	}
	return nil
}

// sequence from e2sm_v2.asn1:93
// {InterfaceID-X2}
type InterfaceIdX2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"choiceExt"
	NodeType *NodeType `protobuf:"bytes,1,opt,name=node_type,json=nodeType,proto3" json:"node_type,omitempty" aper:"choiceExt"`
}

func (x *InterfaceIdX2) Reset() {
	*x = InterfaceIdX2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceIdX2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceIdX2) ProtoMessage() {}

func (x *InterfaceIdX2) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceIdX2.ProtoReflect.Descriptor instead.
func (*InterfaceIdX2) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{13}
}

func (x *InterfaceIdX2) GetNodeType() *NodeType {
	if x != nil {
		return x.NodeType
	}
	return nil
}

type NodeType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to NodeType:
	//	*NodeType_GlobalEnbId
	//	*NodeType_GlobalEnGnbId
	NodeType isNodeType_NodeType `protobuf_oneof:"node_type"`
}

func (x *NodeType) Reset() {
	*x = NodeType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeType) ProtoMessage() {}

func (x *NodeType) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeType.ProtoReflect.Descriptor instead.
func (*NodeType) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{14}
}

func (m *NodeType) GetNodeType() isNodeType_NodeType {
	if m != nil {
		return m.NodeType
	}
	return nil
}

func (x *NodeType) GetGlobalEnbId() *GlobalEnbId {
	if x, ok := x.GetNodeType().(*NodeType_GlobalEnbId); ok {
		return x.GlobalEnbId
	}
	return nil
}

func (x *NodeType) GetGlobalEnGnbId() *GlobalenGnbId {
	if x, ok := x.GetNodeType().(*NodeType_GlobalEnGnbId); ok {
		return x.GlobalEnGnbId
	}
	return nil
}

type isNodeType_NodeType interface {
	isNodeType_NodeType()
}

type NodeType_GlobalEnbId struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt"
	GlobalEnbId *GlobalEnbId `protobuf:"bytes,1,opt,name=global_enb_id,json=globalEnbId,proto3,oneof" aper:"choiceIdx:1,valueExt"`
}

type NodeType_GlobalEnGnbId struct {
	// @inject_tag: aper:"choiceIdx:2,valueExt"
	GlobalEnGnbId *GlobalenGnbId `protobuf:"bytes,2,opt,name=global_en_gnb_id,json=globalEnGnbId,proto3,oneof" aper:"choiceIdx:2,valueExt"`
}

func (*NodeType_GlobalEnbId) isNodeType_NodeType() {}

func (*NodeType_GlobalEnGnbId) isNodeType_NodeType() {}

// sequence from e2sm_v2.asn1:98
// {InterfaceID-W1}
type InterfaceIdW1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	GlobalNgENbId *GlobalNgEnbId `protobuf:"bytes,1,opt,name=global_ng_e_nb_id,json=global-ng-eNB-ID,proto3" json:"global_ng_e_nb_id,omitempty" aper:"valueExt"`
	NgENbDuId     *NgenbDuId     `protobuf:"bytes,2,opt,name=ng_e_nb_du_id,json=ng-eNB-DU-ID,proto3" json:"ng_e_nb_du_id,omitempty"`
}

func (x *InterfaceIdW1) Reset() {
	*x = InterfaceIdW1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceIdW1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceIdW1) ProtoMessage() {}

func (x *InterfaceIdW1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceIdW1.ProtoReflect.Descriptor instead.
func (*InterfaceIdW1) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{15}
}

func (x *InterfaceIdW1) GetGlobalNgENbId() *GlobalNgEnbId {
	if x != nil {
		return x.GlobalNgENbId
	}
	return nil
}

func (x *InterfaceIdW1) GetNgENbDuId() *NgenbDuId {
	if x != nil {
		return x.NgENbDuId
	}
	return nil
}

// sequence from e2sm_v2.asn1:104
// {Interface-MessageID}
// @inject_tag: aper:"valueExt"
type InterfaceMessageId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterfaceProcedureId int32 `protobuf:"varint,1,opt,name=interface_procedure_id,json=interfaceProcedureID,proto3" json:"interface_procedure_id,omitempty"`
	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:2"
	MessageType MessageType `protobuf:"varint,2,opt,name=message_type,json=messageType,proto3,enum=e2sm_rc.v1.MessageType" json:"message_type,omitempty" aper:"valueExt,valueLB:0,valueUB:2"`
}

func (x *InterfaceMessageId) Reset() {
	*x = InterfaceMessageId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceMessageId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceMessageId) ProtoMessage() {}

func (x *InterfaceMessageId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceMessageId.ProtoReflect.Descriptor instead.
func (*InterfaceMessageId) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{16}
}

func (x *InterfaceMessageId) GetInterfaceProcedureId() int32 {
	if x != nil {
		return x.InterfaceProcedureId
	}
	return 0
}

func (x *InterfaceMessageId) GetMessageType() MessageType {
	if x != nil {
		return x.MessageType
	}
	return MessageType_MESSAGE_TYPE_INITIATING_MESSAGE
}

// sequence from e2sm_v2.asn1:112
// {GroupID}
// @inject_tag: aper:"choiceExt"
type GroupId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_v2.asn1:112
	//
	// Types that are assignable to GroupId:
	//	*GroupId_FiveGc
	//	*GroupId_EPc
	GroupId isGroupId_GroupId `protobuf_oneof:"group_id"`
}

func (x *GroupId) Reset() {
	*x = GroupId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupId) ProtoMessage() {}

func (x *GroupId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupId.ProtoReflect.Descriptor instead.
func (*GroupId) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{17}
}

func (m *GroupId) GetGroupId() isGroupId_GroupId {
	if m != nil {
		return m.GroupId
	}
	return nil
}

func (x *GroupId) GetFiveGc() *FiveQi {
	if x, ok := x.GetGroupId().(*GroupId_FiveGc); ok {
		return x.FiveGc
	}
	return nil
}

func (x *GroupId) GetEPc() *Qci {
	if x, ok := x.GetGroupId().(*GroupId_EPc); ok {
		return x.EPc
	}
	return nil
}

type isGroupId_GroupId interface {
	isGroupId_GroupId()
}

type GroupId_FiveGc struct {
	// @inject_tag: aper:"choiceIdx:1"
	FiveGc *FiveQi `protobuf:"bytes,1,opt,name=five_gc,json=fiveGC,proto3,oneof" aper:"choiceIdx:1"`
}

type GroupId_EPc struct {
	// @inject_tag: aper:"choiceIdx:2"
	EPc *Qci `protobuf:"bytes,2,opt,name=e_pc,json=ePC,proto3,oneof" aper:"choiceIdx:2"`
}

func (*GroupId_FiveGc) isGroupId_GroupId() {}

func (*GroupId_EPc) isGroupId_GroupId() {}

// sequence from e2sm_v2.asn1:118
// {QoSID}
// @inject_tag: aper:"choiceExt"
type QoSid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_v2.asn1:118
	//
	// Types that are assignable to QoSid:
	//	*QoSid_FiveGc
	//	*QoSid_EPc
	QoSid isQoSid_QoSid `protobuf_oneof:"qo_sid"`
}

func (x *QoSid) Reset() {
	*x = QoSid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QoSid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QoSid) ProtoMessage() {}

func (x *QoSid) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QoSid.ProtoReflect.Descriptor instead.
func (*QoSid) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{18}
}

func (m *QoSid) GetQoSid() isQoSid_QoSid {
	if m != nil {
		return m.QoSid
	}
	return nil
}

func (x *QoSid) GetFiveGc() *FiveQi {
	if x, ok := x.GetQoSid().(*QoSid_FiveGc); ok {
		return x.FiveGc
	}
	return nil
}

func (x *QoSid) GetEPc() *Qci {
	if x, ok := x.GetQoSid().(*QoSid_EPc); ok {
		return x.EPc
	}
	return nil
}

type isQoSid_QoSid interface {
	isQoSid_QoSid()
}

type QoSid_FiveGc struct {
	// @inject_tag: aper:"choiceIdx:1"
	FiveGc *FiveQi `protobuf:"bytes,1,opt,name=five_gc,json=fiveGC,proto3,oneof" aper:"choiceIdx:1"`
}

type QoSid_EPc struct {
	// @inject_tag: aper:"choiceIdx:2"
	EPc *Qci `protobuf:"bytes,2,opt,name=e_pc,json=ePC,proto3,oneof" aper:"choiceIdx:2"`
}

func (*QoSid_FiveGc) isQoSid_QoSid() {}

func (*QoSid_EPc) isQoSid_QoSid() {}

// sequence from e2sm_v2.asn1:124
// {RANfunction-Name}
type RanfunctionName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:150"
	RanFunctionShortName string `protobuf:"bytes,1,opt,name=ran_function_short_name,json=ranFunction-ShortName,proto3" json:"ran_function_short_name,omitempty" aper:"sizeExt,sizeLB:1,sizeUB:150"`
	// @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:1000"
	RanFunctionE2SmOid string `protobuf:"bytes,2,opt,name=ran_function_e2_sm_oid,json=ranFunction-E2SM-OID,proto3" json:"ran_function_e2_sm_oid,omitempty" aper:"sizeExt,sizeLB:1,sizeUB:1000"`
	// @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:150"
	RanFunctionDescription string `protobuf:"bytes,3,opt,name=ran_function_description,json=ranFunction-Description,proto3" json:"ran_function_description,omitempty" aper:"sizeExt,sizeLB:1,sizeUB:150"`
	// @inject_tag: aper:"optional"
	RanFunctionInstance *int32 `protobuf:"varint,4,opt,name=ran_function_instance,json=ranFunction-Instance,proto3,oneof" json:"ran_function_instance,omitempty" aper:"optional"`
}

func (x *RanfunctionName) Reset() {
	*x = RanfunctionName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanfunctionName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanfunctionName) ProtoMessage() {}

func (x *RanfunctionName) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanfunctionName.ProtoReflect.Descriptor instead.
func (*RanfunctionName) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{19}
}

func (x *RanfunctionName) GetRanFunctionShortName() string {
	if x != nil {
		return x.RanFunctionShortName
	}
	return ""
}

func (x *RanfunctionName) GetRanFunctionE2SmOid() string {
	if x != nil {
		return x.RanFunctionE2SmOid
	}
	return ""
}

func (x *RanfunctionName) GetRanFunctionDescription() string {
	if x != nil {
		return x.RanFunctionDescription
	}
	return ""
}

func (x *RanfunctionName) GetRanFunctionInstance() int32 {
	if x != nil && x.RanFunctionInstance != nil {
		return *x.RanFunctionInstance
	}
	return 0
}

// range of Integer from e2sm_v2.asn1:133
// {RIC-Format-Type}
type RicFormatType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RicFormatType) Reset() {
	*x = RicFormatType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicFormatType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicFormatType) ProtoMessage() {}

func (x *RicFormatType) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicFormatType.ProtoReflect.Descriptor instead.
func (*RicFormatType) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{20}
}

func (x *RicFormatType) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_v2.asn1:135
// {RIC-Style-Type}
type RicStyleType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RicStyleType) Reset() {
	*x = RicStyleType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicStyleType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicStyleType) ProtoMessage() {}

func (x *RicStyleType) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicStyleType.ProtoReflect.Descriptor instead.
func (*RicStyleType) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{21}
}

func (x *RicStyleType) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_v2.asn1:131
// {RIC-Style-Name}
type RicStyleName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:150"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeExt,sizeLB:1,sizeUB:150"`
}

func (x *RicStyleName) Reset() {
	*x = RicStyleName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicStyleName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicStyleName) ProtoMessage() {}

func (x *RicStyleName) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicStyleName.ProtoReflect.Descriptor instead.
func (*RicStyleName) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{22}
}

func (x *RicStyleName) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// sequence from e2sm_v2.asn1:143
// {RRC-MessageID}
// @inject_tag: aper:"valueExt"
type RrcMessageId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"choiceExt"
	RrcType   *RrcType `protobuf:"bytes,1,opt,name=rrc_type,json=rrcType,proto3" json:"rrc_type,omitempty" aper:"choiceExt"`
	MessageId int64    `protobuf:"varint,2,opt,name=message_id,json=messageID,proto3" json:"message_id,omitempty"`
}

func (x *RrcMessageId) Reset() {
	*x = RrcMessageId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RrcMessageId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RrcMessageId) ProtoMessage() {}

func (x *RrcMessageId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RrcMessageId.ProtoReflect.Descriptor instead.
func (*RrcMessageId) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{23}
}

func (x *RrcMessageId) GetRrcType() *RrcType {
	if x != nil {
		return x.RrcType
	}
	return nil
}

func (x *RrcMessageId) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

type RrcType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RrcType:
	//	*RrcType_Lte
	//	*RrcType_Nr
	RrcType isRrcType_RrcType `protobuf_oneof:"rrc_type"`
}

func (x *RrcType) Reset() {
	*x = RrcType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RrcType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RrcType) ProtoMessage() {}

func (x *RrcType) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RrcType.ProtoReflect.Descriptor instead.
func (*RrcType) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{24}
}

func (m *RrcType) GetRrcType() isRrcType_RrcType {
	if m != nil {
		return m.RrcType
	}
	return nil
}

func (x *RrcType) GetLte() RrcclassLte {
	if x, ok := x.GetRrcType().(*RrcType_Lte); ok {
		return x.Lte
	}
	return RrcclassLte_RRCCLASS_LTE_B_CCH_BCH
}

func (x *RrcType) GetNr() RrcclassNr {
	if x, ok := x.GetRrcType().(*RrcType_Nr); ok {
		return x.Nr
	}
	return RrcclassNr_RRCCLASS_NR_B_CCH_BCH
}

type isRrcType_RrcType interface {
	isRrcType_RrcType()
}

type RrcType_Lte struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt,valueLB:0,valueUB:11"
	Lte RrcclassLte `protobuf:"varint,1,opt,name=lte,proto3,enum=e2sm_rc.v1.RrcclassLte,oneof" aper:"choiceIdx:1,valueExt,valueLB:0,valueUB:11"`
}

type RrcType_Nr struct {
	// @inject_tag: aper:"choiceIdx:2,valueExt,valueLB:0,valueUB:7"
	Nr RrcclassNr `protobuf:"varint,2,opt,name=nr,proto3,enum=e2sm_rc.v1.RrcclassNr,oneof" aper:"choiceIdx:2,valueExt,valueLB:0,valueUB:7"`
}

func (*RrcType_Lte) isRrcType_RrcType() {}

func (*RrcType_Nr) isRrcType_RrcType() {}

// sequence from e2sm_v2.asn1:153
// {ServingCell-ARFCN}
// @inject_tag: aper:"choiceExt"
type ServingCellArfcn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_v2.asn1:153
	//
	// Types that are assignable to ServingCellArfcn:
	//	*ServingCellArfcn_NR
	//	*ServingCellArfcn_EUtra
	ServingCellArfcn isServingCellArfcn_ServingCellArfcn `protobuf_oneof:"serving_cell_arfcn"`
}

func (x *ServingCellArfcn) Reset() {
	*x = ServingCellArfcn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServingCellArfcn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServingCellArfcn) ProtoMessage() {}

func (x *ServingCellArfcn) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServingCellArfcn.ProtoReflect.Descriptor instead.
func (*ServingCellArfcn) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{25}
}

func (m *ServingCellArfcn) GetServingCellArfcn() isServingCellArfcn_ServingCellArfcn {
	if m != nil {
		return m.ServingCellArfcn
	}
	return nil
}

func (x *ServingCellArfcn) GetNR() *NrArfcn {
	if x, ok := x.GetServingCellArfcn().(*ServingCellArfcn_NR); ok {
		return x.NR
	}
	return nil
}

func (x *ServingCellArfcn) GetEUtra() *EUtraArfcn {
	if x, ok := x.GetServingCellArfcn().(*ServingCellArfcn_EUtra); ok {
		return x.EUtra
	}
	return nil
}

type isServingCellArfcn_ServingCellArfcn interface {
	isServingCellArfcn_ServingCellArfcn()
}

type ServingCellArfcn_NR struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt"
	NR *NrArfcn `protobuf:"bytes,1,opt,name=n_r,json=nR,proto3,oneof" aper:"choiceIdx:1,valueExt"`
}

type ServingCellArfcn_EUtra struct {
	// @inject_tag: aper:"choiceIdx:2"
	EUtra *EUtraArfcn `protobuf:"bytes,2,opt,name=e_utra,json=eUTRA,proto3,oneof" aper:"choiceIdx:2"`
}

func (*ServingCellArfcn_NR) isServingCellArfcn_ServingCellArfcn() {}

func (*ServingCellArfcn_EUtra) isServingCellArfcn_ServingCellArfcn() {}

// sequence from e2sm_v2.asn1:159
// {ServingCell-PCI}
// @inject_tag: aper:"choiceExt"
type ServingCellPci struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_v2.asn1:159
	//
	// Types that are assignable to ServingCellPci:
	//	*ServingCellPci_NR
	//	*ServingCellPci_EUtra
	ServingCellPci isServingCellPci_ServingCellPci `protobuf_oneof:"serving_cell_pci"`
}

func (x *ServingCellPci) Reset() {
	*x = ServingCellPci{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServingCellPci) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServingCellPci) ProtoMessage() {}

func (x *ServingCellPci) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServingCellPci.ProtoReflect.Descriptor instead.
func (*ServingCellPci) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{26}
}

func (m *ServingCellPci) GetServingCellPci() isServingCellPci_ServingCellPci {
	if m != nil {
		return m.ServingCellPci
	}
	return nil
}

func (x *ServingCellPci) GetNR() *NrPci {
	if x, ok := x.GetServingCellPci().(*ServingCellPci_NR); ok {
		return x.NR
	}
	return nil
}

func (x *ServingCellPci) GetEUtra() *EUtraPci {
	if x, ok := x.GetServingCellPci().(*ServingCellPci_EUtra); ok {
		return x.EUtra
	}
	return nil
}

type isServingCellPci_ServingCellPci interface {
	isServingCellPci_ServingCellPci()
}

type ServingCellPci_NR struct {
	// @inject_tag: aper:"choiceIdx:1"
	NR *NrPci `protobuf:"bytes,1,opt,name=n_r,json=nR,proto3,oneof" aper:"choiceIdx:1"`
}

type ServingCellPci_EUtra struct {
	// @inject_tag: aper:"choiceIdx:2"
	EUtra *EUtraPci `protobuf:"bytes,2,opt,name=e_utra,json=eUTRA,proto3,oneof" aper:"choiceIdx:2"`
}

func (*ServingCellPci_NR) isServingCellPci_ServingCellPci() {}

func (*ServingCellPci_EUtra) isServingCellPci_ServingCellPci() {}

// sequence from e2sm_v2.asn1:166
// {UEID}
// @inject_tag: aper:"choiceExt"
type Ueid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_v2.asn1:166
	//
	// Types that are assignable to Ueid:
	//	*Ueid_GNbUeid
	//	*Ueid_GNbDuUeid
	//	*Ueid_GNbCuUpUeid
	//	*Ueid_NgENbUeid
	//	*Ueid_NgENbDuUeid
	//	*Ueid_EnGNbUeid
	//	*Ueid_ENbUeid
	Ueid isUeid_Ueid `protobuf_oneof:"ueid"`
}

func (x *Ueid) Reset() {
	*x = Ueid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ueid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ueid) ProtoMessage() {}

func (x *Ueid) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ueid.ProtoReflect.Descriptor instead.
func (*Ueid) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{27}
}

func (m *Ueid) GetUeid() isUeid_Ueid {
	if m != nil {
		return m.Ueid
	}
	return nil
}

func (x *Ueid) GetGNbUeid() *UeidGnb {
	if x, ok := x.GetUeid().(*Ueid_GNbUeid); ok {
		return x.GNbUeid
	}
	return nil
}

func (x *Ueid) GetGNbDuUeid() *UeidGnbDu {
	if x, ok := x.GetUeid().(*Ueid_GNbDuUeid); ok {
		return x.GNbDuUeid
	}
	return nil
}

func (x *Ueid) GetGNbCuUpUeid() *UeidGnbCuUp {
	if x, ok := x.GetUeid().(*Ueid_GNbCuUpUeid); ok {
		return x.GNbCuUpUeid
	}
	return nil
}

func (x *Ueid) GetNgENbUeid() *UeidNgEnb {
	if x, ok := x.GetUeid().(*Ueid_NgENbUeid); ok {
		return x.NgENbUeid
	}
	return nil
}

func (x *Ueid) GetNgENbDuUeid() *UeidNgEnbDu {
	if x, ok := x.GetUeid().(*Ueid_NgENbDuUeid); ok {
		return x.NgENbDuUeid
	}
	return nil
}

func (x *Ueid) GetEnGNbUeid() *UeidEnGnb {
	if x, ok := x.GetUeid().(*Ueid_EnGNbUeid); ok {
		return x.EnGNbUeid
	}
	return nil
}

func (x *Ueid) GetENbUeid() *UeidEnb {
	if x, ok := x.GetUeid().(*Ueid_ENbUeid); ok {
		return x.ENbUeid
	}
	return nil
}

type isUeid_Ueid interface {
	isUeid_Ueid()
}

type Ueid_GNbUeid struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt"
	GNbUeid *UeidGnb `protobuf:"bytes,1,opt,name=g_nb_ueid,json=gNB-UEID,proto3,oneof" aper:"choiceIdx:1,valueExt"`
}

type Ueid_GNbDuUeid struct {
	// @inject_tag: aper:"choiceIdx:2,valueExt"
	GNbDuUeid *UeidGnbDu `protobuf:"bytes,2,opt,name=g_nb_du_ueid,json=gNB-DU-UEID,proto3,oneof" aper:"choiceIdx:2,valueExt"`
}

type Ueid_GNbCuUpUeid struct {
	// @inject_tag: aper:"choiceIdx:3,valueExt"
	GNbCuUpUeid *UeidGnbCuUp `protobuf:"bytes,3,opt,name=g_nb_cu_up_ueid,json=gNB-CU-UP-UEID,proto3,oneof" aper:"choiceIdx:3,valueExt"`
}

type Ueid_NgENbUeid struct {
	// @inject_tag: aper:"choiceIdx:4,valueExt"
	NgENbUeid *UeidNgEnb `protobuf:"bytes,4,opt,name=ng_e_nb_ueid,json=ng-eNB-UEID,proto3,oneof" aper:"choiceIdx:4,valueExt"`
}

type Ueid_NgENbDuUeid struct {
	// @inject_tag: aper:"choiceIdx:5,valueExt"
	NgENbDuUeid *UeidNgEnbDu `protobuf:"bytes,5,opt,name=ng_e_nb_du_ueid,json=ng-eNB-DU-UEID,proto3,oneof" aper:"choiceIdx:5,valueExt"`
}

type Ueid_EnGNbUeid struct {
	// @inject_tag: aper:"choiceIdx:6,valueExt"
	EnGNbUeid *UeidEnGnb `protobuf:"bytes,6,opt,name=en_g_nb_ueid,json=en-gNB-UEID,proto3,oneof" aper:"choiceIdx:6,valueExt"`
}

type Ueid_ENbUeid struct {
	// @inject_tag: aper:"choiceIdx:7,valueExt"
	ENbUeid *UeidEnb `protobuf:"bytes,7,opt,name=e_nb_ueid,json=eNB-UEID,proto3,oneof" aper:"choiceIdx:7,valueExt"`
}

func (*Ueid_GNbUeid) isUeid_Ueid() {}

func (*Ueid_GNbDuUeid) isUeid_Ueid() {}

func (*Ueid_GNbCuUpUeid) isUeid_Ueid() {}

func (*Ueid_NgENbUeid) isUeid_Ueid() {}

func (*Ueid_NgENbDuUeid) isUeid_Ueid() {}

func (*Ueid_EnGNbUeid) isUeid_Ueid() {}

func (*Ueid_ENbUeid) isUeid_Ueid() {}

// sequence from e2sm_v2.asn1:177
// {UEID-GNB}
type UeidGnb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AmfUeNgapId *AmfUeNgapId `protobuf:"bytes,1,opt,name=amf_ue_ngap_id,json=amf-UE-NGAP-ID,proto3" json:"amf_ue_ngap_id,omitempty"`
	// @inject_tag: aper:"valueExt"
	Guami *Guami `protobuf:"bytes,2,opt,name=guami,proto3" json:"guami,omitempty" aper:"valueExt"`
	// @inject_tag: aper:"optional"
	GNbCuUeF1ApIdList *UeidGnbCuF1ApIdList `protobuf:"bytes,3,opt,name=g_nb_cu_ue_f1_ap_id_list,json=gNB-CU-UE-F1AP-ID-List,proto3,oneof" json:"g_nb_cu_ue_f1_ap_id_list,omitempty" aper:"optional"`
	// @inject_tag: aper:"optional"
	GNbCuCpUeE1ApIdList *UeidGnbCuCpE1ApIdList `protobuf:"bytes,4,opt,name=g_nb_cu_cp_ue_e1_ap_id_list,json=gNB-CU-CP-UE-E1AP-ID-List,proto3,oneof" json:"g_nb_cu_cp_ue_e1_ap_id_list,omitempty" aper:"optional"`
	// @inject_tag: aper:"optional"
	RanUeid *Ranueid `protobuf:"bytes,5,opt,name=ran_ueid,json=ran-UEID,proto3,oneof" json:"ran_ueid,omitempty" aper:"optional"`
	// @inject_tag: aper:"optional"
	MNgRanUeXnApId *NgRannodeUexnApid `protobuf:"bytes,6,opt,name=m_ng_ran_ue_xn_ap_id,json=m-NG-RAN-UE-XnAP-ID,proto3,oneof" json:"m_ng_ran_ue_xn_ap_id,omitempty" aper:"optional"`
	// @inject_tag: aper:"optional,valueExt"
	GlobalGnbId *GlobalGnbId `protobuf:"bytes,7,opt,name=global_gnb_id,json=globalGNB-ID,proto3,oneof" json:"global_gnb_id,omitempty" aper:"optional,valueExt"`
	// @inject_tag: aper:"optional,choiceExt,fromValueExt"
	GlobalNgRannodeId *GlobalNgrannodeId `protobuf:"bytes,8,opt,name=global_ng_rannode_id,json=globalNG-RANNode-ID,proto3,oneof" json:"global_ng_rannode_id,omitempty" aper:"optional,choiceExt,fromValueExt"`
}

func (x *UeidGnb) Reset() {
	*x = UeidGnb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UeidGnb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UeidGnb) ProtoMessage() {}

func (x *UeidGnb) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UeidGnb.ProtoReflect.Descriptor instead.
func (*UeidGnb) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{28}
}

func (x *UeidGnb) GetAmfUeNgapId() *AmfUeNgapId {
	if x != nil {
		return x.AmfUeNgapId
	}
	return nil
}

func (x *UeidGnb) GetGuami() *Guami {
	if x != nil {
		return x.Guami
	}
	return nil
}

func (x *UeidGnb) GetGNbCuUeF1ApIdList() *UeidGnbCuF1ApIdList {
	if x != nil {
		return x.GNbCuUeF1ApIdList
	}
	return nil
}

func (x *UeidGnb) GetGNbCuCpUeE1ApIdList() *UeidGnbCuCpE1ApIdList {
	if x != nil {
		return x.GNbCuCpUeE1ApIdList
	}
	return nil
}

func (x *UeidGnb) GetRanUeid() *Ranueid {
	if x != nil {
		return x.RanUeid
	}
	return nil
}

func (x *UeidGnb) GetMNgRanUeXnApId() *NgRannodeUexnApid {
	if x != nil {
		return x.MNgRanUeXnApId
	}
	return nil
}

func (x *UeidGnb) GetGlobalGnbId() *GlobalGnbId {
	if x != nil {
		return x.GlobalGnbId
	}
	return nil
}

func (x *UeidGnb) GetGlobalNgRannodeId() *GlobalNgrannodeId {
	if x != nil {
		return x.GlobalNgRannodeId
	}
	return nil
}

// sequence from e2sm_v2.asn1:195
// {UEID-GNB-CU-CP-E1AP-ID-List}
type UeidGnbCuCpE1ApIdList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:65535"
	Value []*UeidGnbCuCpE1ApIdItem `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"valueExt,sizeLB:1,sizeUB:65535"`
}

func (x *UeidGnbCuCpE1ApIdList) Reset() {
	*x = UeidGnbCuCpE1ApIdList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UeidGnbCuCpE1ApIdList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UeidGnbCuCpE1ApIdList) ProtoMessage() {}

func (x *UeidGnbCuCpE1ApIdList) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UeidGnbCuCpE1ApIdList.ProtoReflect.Descriptor instead.
func (*UeidGnbCuCpE1ApIdList) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{29}
}

func (x *UeidGnbCuCpE1ApIdList) GetValue() []*UeidGnbCuCpE1ApIdItem {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_v2.asn1:196
// {UEID-GNB-CU-CP-E1AP-ID-Item}
type UeidGnbCuCpE1ApIdItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GNbCuCpUeE1ApId *GnbCuCpUeE1ApId `protobuf:"bytes,1,opt,name=g_nb_cu_cp_ue_e1_ap_id,json=gNB-CU-CP-UE-E1AP-ID,proto3" json:"g_nb_cu_cp_ue_e1_ap_id,omitempty"`
}

func (x *UeidGnbCuCpE1ApIdItem) Reset() {
	*x = UeidGnbCuCpE1ApIdItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UeidGnbCuCpE1ApIdItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UeidGnbCuCpE1ApIdItem) ProtoMessage() {}

func (x *UeidGnbCuCpE1ApIdItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UeidGnbCuCpE1ApIdItem.ProtoReflect.Descriptor instead.
func (*UeidGnbCuCpE1ApIdItem) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{30}
}

func (x *UeidGnbCuCpE1ApIdItem) GetGNbCuCpUeE1ApId() *GnbCuCpUeE1ApId {
	if x != nil {
		return x.GNbCuCpUeE1ApId
	}
	return nil
}

// sequence from e2sm_v2.asn1:202
// {UEID-GNB-CU-F1AP-ID-List}
type UeidGnbCuF1ApIdList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:4"
	Value []*UeidGnbCuCpF1ApIdItem `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"valueExt,sizeLB:1,sizeUB:4"`
}

func (x *UeidGnbCuF1ApIdList) Reset() {
	*x = UeidGnbCuF1ApIdList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UeidGnbCuF1ApIdList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UeidGnbCuF1ApIdList) ProtoMessage() {}

func (x *UeidGnbCuF1ApIdList) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UeidGnbCuF1ApIdList.ProtoReflect.Descriptor instead.
func (*UeidGnbCuF1ApIdList) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{31}
}

func (x *UeidGnbCuF1ApIdList) GetValue() []*UeidGnbCuCpF1ApIdItem {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_v2.asn1:203
// {UEID-GNB-CU-CP-F1AP-ID-Item}
type UeidGnbCuCpF1ApIdItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GNbCuUeF1ApId *GnbCuUeF1ApId `protobuf:"bytes,1,opt,name=g_nb_cu_ue_f1_ap_id,json=gNB-CU-UE-F1AP-ID,proto3" json:"g_nb_cu_ue_f1_ap_id,omitempty"`
}

func (x *UeidGnbCuCpF1ApIdItem) Reset() {
	*x = UeidGnbCuCpF1ApIdItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UeidGnbCuCpF1ApIdItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UeidGnbCuCpF1ApIdItem) ProtoMessage() {}

func (x *UeidGnbCuCpF1ApIdItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UeidGnbCuCpF1ApIdItem.ProtoReflect.Descriptor instead.
func (*UeidGnbCuCpF1ApIdItem) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{32}
}

func (x *UeidGnbCuCpF1ApIdItem) GetGNbCuUeF1ApId() *GnbCuUeF1ApId {
	if x != nil {
		return x.GNbCuUeF1ApId
	}
	return nil
}

// sequence from e2sm_v2.asn1:208
// {UEID-GNB-DU}
type UeidGnbDu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GNbCuUeF1ApId *GnbCuUeF1ApId `protobuf:"bytes,1,opt,name=g_nb_cu_ue_f1_ap_id,json=gNB-CU-UE-F1AP-ID,proto3" json:"g_nb_cu_ue_f1_ap_id,omitempty"`
	// @inject_tag: aper:"optional"
	RanUeid *Ranueid `protobuf:"bytes,2,opt,name=ran_ueid,json=ran-UEID,proto3,oneof" json:"ran_ueid,omitempty" aper:"optional"`
}

func (x *UeidGnbDu) Reset() {
	*x = UeidGnbDu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UeidGnbDu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UeidGnbDu) ProtoMessage() {}

func (x *UeidGnbDu) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UeidGnbDu.ProtoReflect.Descriptor instead.
func (*UeidGnbDu) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{33}
}

func (x *UeidGnbDu) GetGNbCuUeF1ApId() *GnbCuUeF1ApId {
	if x != nil {
		return x.GNbCuUeF1ApId
	}
	return nil
}

func (x *UeidGnbDu) GetRanUeid() *Ranueid {
	if x != nil {
		return x.RanUeid
	}
	return nil
}

// sequence from e2sm_v2.asn1:214
// {UEID-GNB-CU-UP}
type UeidGnbCuUp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GNbCuCpUeE1ApId *GnbCuCpUeE1ApId `protobuf:"bytes,1,opt,name=g_nb_cu_cp_ue_e1_ap_id,json=gNB-CU-CP-UE-E1AP-ID,proto3" json:"g_nb_cu_cp_ue_e1_ap_id,omitempty"`
	// @inject_tag: aper:"optional"
	RanUeid *Ranueid `protobuf:"bytes,2,opt,name=ran_ueid,json=ran-UEID,proto3,oneof" json:"ran_ueid,omitempty" aper:"optional"`
}

func (x *UeidGnbCuUp) Reset() {
	*x = UeidGnbCuUp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UeidGnbCuUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UeidGnbCuUp) ProtoMessage() {}

func (x *UeidGnbCuUp) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UeidGnbCuUp.ProtoReflect.Descriptor instead.
func (*UeidGnbCuUp) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{34}
}

func (x *UeidGnbCuUp) GetGNbCuCpUeE1ApId() *GnbCuCpUeE1ApId {
	if x != nil {
		return x.GNbCuCpUeE1ApId
	}
	return nil
}

func (x *UeidGnbCuUp) GetRanUeid() *Ranueid {
	if x != nil {
		return x.RanUeid
	}
	return nil
}

// sequence from e2sm_v2.asn1:220
// {UEID-NG-ENB}
type UeidNgEnb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AmfUeNgapId *AmfUeNgapId `protobuf:"bytes,1,opt,name=amf_ue_ngap_id,json=amf-UE-NGAP-ID,proto3" json:"amf_ue_ngap_id,omitempty"`
	// @inject_tag: aper:"valueExt"
	Guami *Guami `protobuf:"bytes,2,opt,name=guami,proto3" json:"guami,omitempty" aper:"valueExt"`
	// @inject_tag: aper:"optional"
	NgENbCuUeW1ApId *NgenbCuUeW1ApId `protobuf:"bytes,3,opt,name=ng_e_nb_cu_ue_w1_ap_id,json=ng-eNB-CU-UE-W1AP-ID,proto3,oneof" json:"ng_e_nb_cu_ue_w1_ap_id,omitempty" aper:"optional"`
	// @inject_tag: aper:"optional"
	MNgRanUeXnApId *NgRannodeUexnApid `protobuf:"bytes,4,opt,name=m_ng_ran_ue_xn_ap_id,json=m-NG-RAN-UE-XnAP-ID,proto3,oneof" json:"m_ng_ran_ue_xn_ap_id,omitempty" aper:"optional"`
	// @inject_tag: aper:"optional,valueExt"
	GlobalNgEnbId *GlobalNgEnbId `protobuf:"bytes,5,opt,name=global_ng_enb_id,json=globalNgENB-ID,proto3,oneof" json:"global_ng_enb_id,omitempty" aper:"optional,valueExt"`
	// @inject_tag: aper:"optional,choiceExt,fromValueExt"
	GlobalNgRannodeId *GlobalNgrannodeId `protobuf:"bytes,6,opt,name=global_ng_rannode_id,json=globalNG-RANNode-ID,proto3,oneof" json:"global_ng_rannode_id,omitempty" aper:"optional,choiceExt,fromValueExt"`
}

func (x *UeidNgEnb) Reset() {
	*x = UeidNgEnb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UeidNgEnb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UeidNgEnb) ProtoMessage() {}

func (x *UeidNgEnb) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UeidNgEnb.ProtoReflect.Descriptor instead.
func (*UeidNgEnb) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{35}
}

func (x *UeidNgEnb) GetAmfUeNgapId() *AmfUeNgapId {
	if x != nil {
		return x.AmfUeNgapId
	}
	return nil
}

func (x *UeidNgEnb) GetGuami() *Guami {
	if x != nil {
		return x.Guami
	}
	return nil
}

func (x *UeidNgEnb) GetNgENbCuUeW1ApId() *NgenbCuUeW1ApId {
	if x != nil {
		return x.NgENbCuUeW1ApId
	}
	return nil
}

func (x *UeidNgEnb) GetMNgRanUeXnApId() *NgRannodeUexnApid {
	if x != nil {
		return x.MNgRanUeXnApId
	}
	return nil
}

func (x *UeidNgEnb) GetGlobalNgEnbId() *GlobalNgEnbId {
	if x != nil {
		return x.GlobalNgEnbId
	}
	return nil
}

func (x *UeidNgEnb) GetGlobalNgRannodeId() *GlobalNgrannodeId {
	if x != nil {
		return x.GlobalNgRannodeId
	}
	return nil
}

// sequence from e2sm_v2.asn1:235
// {UEID-NG-ENB-DU}
type UeidNgEnbDu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NgENbCuUeW1ApId *NgenbCuUeW1ApId `protobuf:"bytes,1,opt,name=ng_e_nb_cu_ue_w1_ap_id,json=ng-eNB-CU-UE-W1AP-ID,proto3" json:"ng_e_nb_cu_ue_w1_ap_id,omitempty"`
}

func (x *UeidNgEnbDu) Reset() {
	*x = UeidNgEnbDu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UeidNgEnbDu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UeidNgEnbDu) ProtoMessage() {}

func (x *UeidNgEnbDu) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UeidNgEnbDu.ProtoReflect.Descriptor instead.
func (*UeidNgEnbDu) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{36}
}

func (x *UeidNgEnbDu) GetNgENbCuUeW1ApId() *NgenbCuUeW1ApId {
	if x != nil {
		return x.NgENbCuUeW1ApId
	}
	return nil
}

// sequence from e2sm_v2.asn1:240
// {UEID-EN-GNB}
type UeidEnGnb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MENbUeX2ApId *EnbUeX2ApId `protobuf:"bytes,1,opt,name=m_e_nb_ue_x2_ap_id,json=m-eNB-UE-X2AP-ID,proto3" json:"m_e_nb_ue_x2_ap_id,omitempty"`
	// @inject_tag: aper:"optional"
	MENbUeX2ApIdExtension *EnbUeX2ApIdExtension `protobuf:"bytes,2,opt,name=m_e_nb_ue_x2_ap_id_extension,json=m-eNB-UE-X2AP-ID-Extension,proto3,oneof" json:"m_e_nb_ue_x2_ap_id_extension,omitempty" aper:"optional"`
	// @inject_tag: aper:"valueExt"
	GlobalEnbId *GlobalEnbId `protobuf:"bytes,3,opt,name=global_enb_id,json=globalENB-ID,proto3" json:"global_enb_id,omitempty" aper:"valueExt"`
	// @inject_tag: aper:"optional"
	GNbCuUeF1ApId *GnbCuUeF1ApId `protobuf:"bytes,4,opt,name=g_nb_cu_ue_f1_ap_id,json=gNB-CU-UE-F1AP-ID,proto3,oneof" json:"g_nb_cu_ue_f1_ap_id,omitempty" aper:"optional"`
	// @inject_tag: aper:"optional"
	GNbCuCpUeE1ApIdList *UeidGnbCuCpE1ApIdList `protobuf:"bytes,5,opt,name=g_nb_cu_cp_ue_e1_ap_id_list,json=gNB-CU-CP-UE-E1AP-ID-List,proto3,oneof" json:"g_nb_cu_cp_ue_e1_ap_id_list,omitempty" aper:"optional"`
	// @inject_tag: aper:"optional"
	RanUeid *Ranueid `protobuf:"bytes,6,opt,name=ran_ueid,json=ran-UEID,proto3,oneof" json:"ran_ueid,omitempty" aper:"optional"`
}

func (x *UeidEnGnb) Reset() {
	*x = UeidEnGnb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UeidEnGnb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UeidEnGnb) ProtoMessage() {}

func (x *UeidEnGnb) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UeidEnGnb.ProtoReflect.Descriptor instead.
func (*UeidEnGnb) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{37}
}

func (x *UeidEnGnb) GetMENbUeX2ApId() *EnbUeX2ApId {
	if x != nil {
		return x.MENbUeX2ApId
	}
	return nil
}

func (x *UeidEnGnb) GetMENbUeX2ApIdExtension() *EnbUeX2ApIdExtension {
	if x != nil {
		return x.MENbUeX2ApIdExtension
	}
	return nil
}

func (x *UeidEnGnb) GetGlobalEnbId() *GlobalEnbId {
	if x != nil {
		return x.GlobalEnbId
	}
	return nil
}

func (x *UeidEnGnb) GetGNbCuUeF1ApId() *GnbCuUeF1ApId {
	if x != nil {
		return x.GNbCuUeF1ApId
	}
	return nil
}

func (x *UeidEnGnb) GetGNbCuCpUeE1ApIdList() *UeidGnbCuCpE1ApIdList {
	if x != nil {
		return x.GNbCuCpUeE1ApIdList
	}
	return nil
}

func (x *UeidEnGnb) GetRanUeid() *Ranueid {
	if x != nil {
		return x.RanUeid
	}
	return nil
}

// sequence from e2sm_v2.asn1:252
// {UEID-ENB}
type UeidEnb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MMeUeS1ApId *MmeUeS1ApId `protobuf:"bytes,1,opt,name=m_me_ue_s1_ap_id,json=mME-UE-S1AP-ID,proto3" json:"m_me_ue_s1_ap_id,omitempty"`
	// @inject_tag: aper:"valueExt"
	GUmmei *Gummei `protobuf:"bytes,2,opt,name=g_ummei,json=gUMMEI,proto3" json:"g_ummei,omitempty" aper:"valueExt"`
	// @inject_tag: aper:"optional"
	MENbUeX2ApId *EnbUeX2ApId `protobuf:"bytes,3,opt,name=m_e_nb_ue_x2_ap_id,json=m-eNB-UE-X2AP-ID,proto3,oneof" json:"m_e_nb_ue_x2_ap_id,omitempty" aper:"optional"`
	// @inject_tag: aper:"optional"
	MENbUeX2ApIdExtension *EnbUeX2ApIdExtension `protobuf:"bytes,4,opt,name=m_e_nb_ue_x2_ap_id_extension,json=m-eNB-UE-X2AP-ID-Extension,proto3,oneof" json:"m_e_nb_ue_x2_ap_id_extension,omitempty" aper:"optional"`
	// @inject_tag: aper:"optional,valueExt"
	GlobalEnbId *GlobalEnbId `protobuf:"bytes,5,opt,name=global_enb_id,json=globalENB-ID,proto3,oneof" json:"global_enb_id,omitempty" aper:"optional,valueExt"`
}

func (x *UeidEnb) Reset() {
	*x = UeidEnb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UeidEnb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UeidEnb) ProtoMessage() {}

func (x *UeidEnb) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UeidEnb.ProtoReflect.Descriptor instead.
func (*UeidEnb) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{38}
}

func (x *UeidEnb) GetMMeUeS1ApId() *MmeUeS1ApId {
	if x != nil {
		return x.MMeUeS1ApId
	}
	return nil
}

func (x *UeidEnb) GetGUmmei() *Gummei {
	if x != nil {
		return x.GUmmei
	}
	return nil
}

func (x *UeidEnb) GetMENbUeX2ApId() *EnbUeX2ApId {
	if x != nil {
		return x.MENbUeX2ApId
	}
	return nil
}

func (x *UeidEnb) GetMENbUeX2ApIdExtension() *EnbUeX2ApIdExtension {
	if x != nil {
		return x.MENbUeX2ApIdExtension
	}
	return nil
}

func (x *UeidEnb) GetGlobalEnbId() *GlobalEnbId {
	if x != nil {
		return x.GlobalEnbId
	}
	return nil
}

// sequence from e2sm_v2.asn1:276
// {ENB-ID}
type EnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_v2.asn1:276
	//
	// Types that are assignable to EnbId:
	//	*EnbId_MacroENbId
	//	*EnbId_HomeENbId
	//	*EnbId_ShortMacroENbId
	//	*EnbId_LongMacroENbId
	EnbId isEnbId_EnbId `protobuf_oneof:"enb_id"`
}

func (x *EnbId) Reset() {
	*x = EnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnbId) ProtoMessage() {}

func (x *EnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnbId.ProtoReflect.Descriptor instead.
func (*EnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{39}
}

func (m *EnbId) GetEnbId() isEnbId_EnbId {
	if m != nil {
		return m.EnbId
	}
	return nil
}

func (x *EnbId) GetMacroENbId() *asn1.BitString {
	if x, ok := x.GetEnbId().(*EnbId_MacroENbId); ok {
		return x.MacroENbId
	}
	return nil
}

func (x *EnbId) GetHomeENbId() *asn1.BitString {
	if x, ok := x.GetEnbId().(*EnbId_HomeENbId); ok {
		return x.HomeENbId
	}
	return nil
}

func (x *EnbId) GetShortMacroENbId() *asn1.BitString {
	if x, ok := x.GetEnbId().(*EnbId_ShortMacroENbId); ok {
		return x.ShortMacroENbId
	}
	return nil
}

func (x *EnbId) GetLongMacroENbId() *asn1.BitString {
	if x, ok := x.GetEnbId().(*EnbId_LongMacroENbId); ok {
		return x.LongMacroENbId
	}
	return nil
}

type isEnbId_EnbId interface {
	isEnbId_EnbId()
}

type EnbId_MacroENbId struct {
	// @inject_tag: aper:"choiceIdx:1,sizeLB:20,sizeUB:20"
	MacroENbId *asn1.BitString `protobuf:"bytes,1,opt,name=macro_e_nb_id,json=macro-eNB-ID,proto3,oneof" aper:"choiceIdx:1,sizeLB:20,sizeUB:20"`
}

type EnbId_HomeENbId struct {
	// @inject_tag: aper:"choiceIdx:2,sizeLB:28,sizeUB:28"
	HomeENbId *asn1.BitString `protobuf:"bytes,2,opt,name=home_e_nb_id,json=home-eNB-ID,proto3,oneof" aper:"choiceIdx:2,sizeLB:28,sizeUB:28"`
}

type EnbId_ShortMacroENbId struct {
	// @inject_tag: aper:"choiceIdx:3,sizeLB:18,sizeUB:18,fromChoiceExt"
	ShortMacroENbId *asn1.BitString `protobuf:"bytes,3,opt,name=short_macro_e_nb_id,json=short-Macro-eNB-ID,proto3,oneof" aper:"choiceIdx:3,sizeLB:18,sizeUB:18,fromChoiceExt"`
}

type EnbId_LongMacroENbId struct {
	// @inject_tag: aper:"choiceIdx:4,sizeLB:21,sizeUB:21,fromChoiceExt"
	LongMacroENbId *asn1.BitString `protobuf:"bytes,4,opt,name=long_macro_e_nb_id,json=long-Macro-eNB-ID,proto3,oneof" aper:"choiceIdx:4,sizeLB:21,sizeUB:21,fromChoiceExt"`
}

func (*EnbId_MacroENbId) isEnbId_EnbId() {}

func (*EnbId_HomeENbId) isEnbId_EnbId() {}

func (*EnbId_ShortMacroENbId) isEnbId_EnbId() {}

func (*EnbId_LongMacroENbId) isEnbId_EnbId() {}

// sequence from e2sm_v2.asn1:285
// {GlobalENB-ID}
type GlobalEnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnidentity *Plmnidentity `protobuf:"bytes,1,opt,name=p_lmnidentity,json=pLMNIdentity,proto3" json:"p_lmnidentity,omitempty"`
	// @inject_tag: aper:"choiceExt"
	ENbId *EnbId `protobuf:"bytes,2,opt,name=e_nb_id,json=eNB-ID,proto3" json:"e_nb_id,omitempty" aper:"choiceExt"`
}

func (x *GlobalEnbId) Reset() {
	*x = GlobalEnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalEnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalEnbId) ProtoMessage() {}

func (x *GlobalEnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalEnbId.ProtoReflect.Descriptor instead.
func (*GlobalEnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{40}
}

func (x *GlobalEnbId) GetPLmnidentity() *Plmnidentity {
	if x != nil {
		return x.PLmnidentity
	}
	return nil
}

func (x *GlobalEnbId) GetENbId() *EnbId {
	if x != nil {
		return x.ENbId
	}
	return nil
}

// sequence from e2sm_v2.asn1:293
// {GUMMEI}
type Gummei struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnIdentity *Plmnidentity `protobuf:"bytes,1,opt,name=p_lmn_identity,json=pLMN-Identity,proto3" json:"p_lmn_identity,omitempty"`
	MMeGroupId   *MmeGroupId   `protobuf:"bytes,2,opt,name=m_me_group_id,json=mME-Group-ID,proto3" json:"m_me_group_id,omitempty"`
	MMeCode      *MmeCode      `protobuf:"bytes,3,opt,name=m_me_code,json=mME-Code,proto3" json:"m_me_code,omitempty"`
}

func (x *Gummei) Reset() {
	*x = Gummei{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Gummei) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Gummei) ProtoMessage() {}

func (x *Gummei) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Gummei.ProtoReflect.Descriptor instead.
func (*Gummei) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{41}
}

func (x *Gummei) GetPLmnIdentity() *Plmnidentity {
	if x != nil {
		return x.PLmnIdentity
	}
	return nil
}

func (x *Gummei) GetMMeGroupId() *MmeGroupId {
	if x != nil {
		return x.MMeGroupId
	}
	return nil
}

func (x *Gummei) GetMMeCode() *MmeCode {
	if x != nil {
		return x.MMeCode
	}
	return nil
}

// range of Integer from e2sm_v2.asn1:306
// {MME-UE-S1AP-ID}
type MmeUeS1ApId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:4294967295"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:4294967295"`
}

func (x *MmeUeS1ApId) Reset() {
	*x = MmeUeS1ApId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MmeUeS1ApId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MmeUeS1ApId) ProtoMessage() {}

func (x *MmeUeS1ApId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MmeUeS1ApId.ProtoReflect.Descriptor instead.
func (*MmeUeS1ApId) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{42}
}

func (x *MmeUeS1ApId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_v2.asn1:309
// {QCI}
type Qci struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:255"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:255"`
}

func (x *Qci) Reset() {
	*x = Qci{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qci) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qci) ProtoMessage() {}

func (x *Qci) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qci.ProtoReflect.Descriptor instead.
func (*Qci) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{43}
}

func (x *Qci) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_v2.asn1:312
// {SubscriberProfileIDforRFP}
type SubscriberProfileIdforRfp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1,valueUB:256"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1,valueUB:256"`
}

func (x *SubscriberProfileIdforRfp) Reset() {
	*x = SubscriberProfileIdforRfp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriberProfileIdforRfp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriberProfileIdforRfp) ProtoMessage() {}

func (x *SubscriberProfileIdforRfp) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriberProfileIdforRfp.ProtoReflect.Descriptor instead.
func (*SubscriberProfileIdforRfp) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{44}
}

func (x *SubscriberProfileIdforRfp) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm_v2.asn1:330
// {EN-GNB-ID}
type EnGnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_v2.asn1:330
	//
	// Types that are assignable to EnGnbId:
	//	*EnGnbId_EnGNbId
	EnGnbId isEnGnbId_EnGnbId `protobuf_oneof:"en_gnb_id"`
}

func (x *EnGnbId) Reset() {
	*x = EnGnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnGnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnGnbId) ProtoMessage() {}

func (x *EnGnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnGnbId.ProtoReflect.Descriptor instead.
func (*EnGnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{45}
}

func (m *EnGnbId) GetEnGnbId() isEnGnbId_EnGnbId {
	if m != nil {
		return m.EnGnbId
	}
	return nil
}

func (x *EnGnbId) GetEnGNbId() *asn1.BitString {
	if x, ok := x.GetEnGnbId().(*EnGnbId_EnGNbId); ok {
		return x.EnGNbId
	}
	return nil
}

type isEnGnbId_EnGnbId interface {
	isEnGnbId_EnGnbId()
}

type EnGnbId_EnGNbId struct {
	// @inject_tag: aper:"choiceIdx:1,sizeLB:22,sizeUB:32"
	EnGNbId *asn1.BitString `protobuf:"bytes,1,opt,name=en_g_nb_id,json=en-gNB-ID,proto3,oneof" aper:"choiceIdx:1,sizeLB:22,sizeUB:32"`
}

func (*EnGnbId_EnGNbId) isEnGnbId_EnGnbId() {}

// range of Integer from e2sm_v2.asn1:335
// {ENB-UE-X2AP-ID}
type EnbUeX2ApId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:4095"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:4095"`
}

func (x *EnbUeX2ApId) Reset() {
	*x = EnbUeX2ApId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnbUeX2ApId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnbUeX2ApId) ProtoMessage() {}

func (x *EnbUeX2ApId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnbUeX2ApId.ProtoReflect.Descriptor instead.
func (*EnbUeX2ApId) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{46}
}

func (x *EnbUeX2ApId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_v2.asn1:338
// {ENB-UE-X2AP-ID-Extension}
type EnbUeX2ApIdExtension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:4095"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueExt,valueLB:0,valueUB:4095"`
}

func (x *EnbUeX2ApIdExtension) Reset() {
	*x = EnbUeX2ApIdExtension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnbUeX2ApIdExtension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnbUeX2ApIdExtension) ProtoMessage() {}

func (x *EnbUeX2ApIdExtension) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnbUeX2ApIdExtension.ProtoReflect.Descriptor instead.
func (*EnbUeX2ApIdExtension) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{47}
}

func (x *EnbUeX2ApIdExtension) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_v2.asn1:341
// {E-UTRA-ARFCN}
type EUtraArfcn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:65535"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:65535"`
}

func (x *EUtraArfcn) Reset() {
	*x = EUtraArfcn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EUtraArfcn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EUtraArfcn) ProtoMessage() {}

func (x *EUtraArfcn) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EUtraArfcn.ProtoReflect.Descriptor instead.
func (*EUtraArfcn) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{48}
}

func (x *EUtraArfcn) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_v2.asn1:344
// {E-UTRA-PCI}
type EUtraPci struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:503"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueExt,valueLB:0,valueUB:503"`
}

func (x *EUtraPci) Reset() {
	*x = EUtraPci{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EUtraPci) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EUtraPci) ProtoMessage() {}

func (x *EUtraPci) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EUtraPci.ProtoReflect.Descriptor instead.
func (*EUtraPci) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{49}
}

func (x *EUtraPci) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type EUtraTac struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:2,sizeUB:2"
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:2,sizeUB:2"`
}

func (x *EUtraTac) Reset() {
	*x = EUtraTac{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EUtraTac) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EUtraTac) ProtoMessage() {}

func (x *EUtraTac) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EUtraTac.ProtoReflect.Descriptor instead.
func (*EUtraTac) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{50}
}

func (x *EUtraTac) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_v2.asn1:351
// {GlobalenGNB-ID}
type GlobalenGnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnIdentity *Plmnidentity `protobuf:"bytes,1,opt,name=p_lmn_identity,json=pLMN-Identity,proto3" json:"p_lmn_identity,omitempty"`
	// @inject_tag: aper:"choiceExt"
	EnGNbId *EnGnbId `protobuf:"bytes,2,opt,name=en_g_nb_id,json=en-gNB-ID,proto3" json:"en_g_nb_id,omitempty" aper:"choiceExt"`
}

func (x *GlobalenGnbId) Reset() {
	*x = GlobalenGnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalenGnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalenGnbId) ProtoMessage() {}

func (x *GlobalenGnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalenGnbId.ProtoReflect.Descriptor instead.
func (*GlobalenGnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{51}
}

func (x *GlobalenGnbId) GetPLmnIdentity() *Plmnidentity {
	if x != nil {
		return x.PLmnIdentity
	}
	return nil
}

func (x *GlobalenGnbId) GetEnGNbId() *EnGnbId {
	if x != nil {
		return x.EnGNbId
	}
	return nil
}

// range of Integer from e2sm_v2.asn1:365
// {NGENB-CU-UE-W1AP-ID}
type NgenbCuUeW1ApId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:4294967295"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueExt,valueLB:0,valueUB:4294967295"`
}

func (x *NgenbCuUeW1ApId) Reset() {
	*x = NgenbCuUeW1ApId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NgenbCuUeW1ApId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NgenbCuUeW1ApId) ProtoMessage() {}

func (x *NgenbCuUeW1ApId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NgenbCuUeW1ApId.ProtoReflect.Descriptor instead.
func (*NgenbCuUeW1ApId) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{52}
}

func (x *NgenbCuUeW1ApId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_v2.asn1:368
// {NGENB-DU-ID}
type NgenbDuId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:68719476735"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueExt,valueLB:0,valueUB:68719476735"`
}

func (x *NgenbDuId) Reset() {
	*x = NgenbDuId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NgenbDuId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NgenbDuId) ProtoMessage() {}

func (x *NgenbDuId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NgenbDuId.ProtoReflect.Descriptor instead.
func (*NgenbDuId) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{53}
}

func (x *NgenbDuId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Amfpointer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:6,sizeUB:6"
	Value *asn1.BitString `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:6,sizeUB:6"`
}

func (x *Amfpointer) Reset() {
	*x = Amfpointer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Amfpointer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Amfpointer) ProtoMessage() {}

func (x *Amfpointer) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Amfpointer.ProtoReflect.Descriptor instead.
func (*Amfpointer) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{54}
}

func (x *Amfpointer) GetValue() *asn1.BitString {
	if x != nil {
		return x.Value
	}
	return nil
}

type AmfregionId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:8,sizeUB:8"
	Value *asn1.BitString `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:8,sizeUB:8"`
}

func (x *AmfregionId) Reset() {
	*x = AmfregionId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AmfregionId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmfregionId) ProtoMessage() {}

func (x *AmfregionId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmfregionId.ProtoReflect.Descriptor instead.
func (*AmfregionId) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{55}
}

func (x *AmfregionId) GetValue() *asn1.BitString {
	if x != nil {
		return x.Value
	}
	return nil
}

type AmfsetId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:10,sizeUB:10"
	Value *asn1.BitString `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:10,sizeUB:10"`
}

func (x *AmfsetId) Reset() {
	*x = AmfsetId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AmfsetId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmfsetId) ProtoMessage() {}

func (x *AmfsetId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmfsetId.ProtoReflect.Descriptor instead.
func (*AmfsetId) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{56}
}

func (x *AmfsetId) GetValue() *asn1.BitString {
	if x != nil {
		return x.Value
	}
	return nil
}

// range of Integer from e2sm_v2.asn1:389
// {AMF-UE-NGAP-ID}
type AmfUeNgapId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:1099511627775"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueExt,valueLB:0,valueUB:1099511627775"`
}

func (x *AmfUeNgapId) Reset() {
	*x = AmfUeNgapId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AmfUeNgapId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmfUeNgapId) ProtoMessage() {}

func (x *AmfUeNgapId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmfUeNgapId.ProtoReflect.Descriptor instead.
func (*AmfUeNgapId) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{57}
}

func (x *AmfUeNgapId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type EutracellIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:28,sizeUB:28"
	Value *asn1.BitString `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:28,sizeUB:28"`
}

func (x *EutracellIdentity) Reset() {
	*x = EutracellIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EutracellIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EutracellIdentity) ProtoMessage() {}

func (x *EutracellIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EutracellIdentity.ProtoReflect.Descriptor instead.
func (*EutracellIdentity) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{58}
}

func (x *EutracellIdentity) GetValue() *asn1.BitString {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_v2.asn1:396
// {EUTRA-CGI}
type EutraCgi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnidentity      *Plmnidentity      `protobuf:"bytes,1,opt,name=p_lmnidentity,json=pLMNIdentity,proto3" json:"p_lmnidentity,omitempty"`
	EUtracellIdentity *EutracellIdentity `protobuf:"bytes,2,opt,name=e_utracell_identity,json=eUTRACellIdentity,proto3" json:"e_utracell_identity,omitempty"`
}

func (x *EutraCgi) Reset() {
	*x = EutraCgi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EutraCgi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EutraCgi) ProtoMessage() {}

func (x *EutraCgi) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EutraCgi.ProtoReflect.Descriptor instead.
func (*EutraCgi) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{59}
}

func (x *EutraCgi) GetPLmnidentity() *Plmnidentity {
	if x != nil {
		return x.PLmnidentity
	}
	return nil
}

func (x *EutraCgi) GetEUtracellIdentity() *EutracellIdentity {
	if x != nil {
		return x.EUtracellIdentity
	}
	return nil
}

// range of Integer from e2sm_v2.asn1:402
// {FiveQI}
type FiveQi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:255"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueExt,valueLB:0,valueUB:255"`
}

func (x *FiveQi) Reset() {
	*x = FiveQi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FiveQi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FiveQi) ProtoMessage() {}

func (x *FiveQi) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FiveQi.ProtoReflect.Descriptor instead.
func (*FiveQi) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{60}
}

func (x *FiveQi) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm_v2.asn1:406
// {GlobalGNB-ID}
type GlobalGnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnidentity *Plmnidentity `protobuf:"bytes,1,opt,name=p_lmnidentity,json=pLMNIdentity,proto3" json:"p_lmnidentity,omitempty"`
	// @inject_tag: aper:"choiceExt"
	GNbId *GnbId `protobuf:"bytes,2,opt,name=g_nb_id,json=gNB-ID,proto3" json:"g_nb_id,omitempty" aper:"choiceExt"`
}

func (x *GlobalGnbId) Reset() {
	*x = GlobalGnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalGnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalGnbId) ProtoMessage() {}

func (x *GlobalGnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalGnbId.ProtoReflect.Descriptor instead.
func (*GlobalGnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{61}
}

func (x *GlobalGnbId) GetPLmnidentity() *Plmnidentity {
	if x != nil {
		return x.PLmnidentity
	}
	return nil
}

func (x *GlobalGnbId) GetGNbId() *GnbId {
	if x != nil {
		return x.GNbId
	}
	return nil
}

// sequence from e2sm_v2.asn1:413
// {GlobalNgENB-ID}
type GlobalNgEnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnidentity *Plmnidentity `protobuf:"bytes,1,opt,name=p_lmnidentity,json=pLMNIdentity,proto3" json:"p_lmnidentity,omitempty"`
	// @inject_tag: aper:"choiceExt"
	NgEnbId *NgEnbId `protobuf:"bytes,2,opt,name=ng_enb_id,json=ngENB-ID,proto3" json:"ng_enb_id,omitempty" aper:"choiceExt"`
}

func (x *GlobalNgEnbId) Reset() {
	*x = GlobalNgEnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalNgEnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalNgEnbId) ProtoMessage() {}

func (x *GlobalNgEnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalNgEnbId.ProtoReflect.Descriptor instead.
func (*GlobalNgEnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{62}
}

func (x *GlobalNgEnbId) GetPLmnidentity() *Plmnidentity {
	if x != nil {
		return x.PLmnidentity
	}
	return nil
}

func (x *GlobalNgEnbId) GetNgEnbId() *NgEnbId {
	if x != nil {
		return x.NgEnbId
	}
	return nil
}

// sequence from e2sm_v2.asn1:421
// {GNB-ID}
type GnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_v2.asn1:421
	//
	// Types that are assignable to GnbId:
	//	*GnbId_GNbId
	GnbId isGnbId_GnbId `protobuf_oneof:"gnb_id"`
}

func (x *GnbId) Reset() {
	*x = GnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnbId) ProtoMessage() {}

func (x *GnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnbId.ProtoReflect.Descriptor instead.
func (*GnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{63}
}

func (m *GnbId) GetGnbId() isGnbId_GnbId {
	if m != nil {
		return m.GnbId
	}
	return nil
}

func (x *GnbId) GetGNbId() *asn1.BitString {
	if x, ok := x.GetGnbId().(*GnbId_GNbId); ok {
		return x.GNbId
	}
	return nil
}

type isGnbId_GnbId interface {
	isGnbId_GnbId()
}

type GnbId_GNbId struct {
	// @inject_tag: aper:"choiceIdx:1,sizeLB:22,sizeUB:32"
	GNbId *asn1.BitString `protobuf:"bytes,1,opt,name=g_nb_id,json=gNB-ID,proto3,oneof" aper:"choiceIdx:1,sizeLB:22,sizeUB:32"`
}

func (*GnbId_GNbId) isGnbId_GnbId() {}

// sequence from e2sm_v2.asn1:427
// {GUAMI}
type Guami struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnidentity *Plmnidentity `protobuf:"bytes,1,opt,name=p_lmnidentity,json=pLMNIdentity,proto3" json:"p_lmnidentity,omitempty"`
	AMfregionId  *AmfregionId  `protobuf:"bytes,2,opt,name=a_mfregion_id,json=aMFRegionID,proto3" json:"a_mfregion_id,omitempty"`
	AMfsetId     *AmfsetId     `protobuf:"bytes,3,opt,name=a_mfset_id,json=aMFSetID,proto3" json:"a_mfset_id,omitempty"`
	AMfpointer   *Amfpointer   `protobuf:"bytes,4,opt,name=a_mfpointer,json=aMFPointer,proto3" json:"a_mfpointer,omitempty"`
}

func (x *Guami) Reset() {
	*x = Guami{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Guami) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Guami) ProtoMessage() {}

func (x *Guami) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Guami.ProtoReflect.Descriptor instead.
func (*Guami) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{64}
}

func (x *Guami) GetPLmnidentity() *Plmnidentity {
	if x != nil {
		return x.PLmnidentity
	}
	return nil
}

func (x *Guami) GetAMfregionId() *AmfregionId {
	if x != nil {
		return x.AMfregionId
	}
	return nil
}

func (x *Guami) GetAMfsetId() *AmfsetId {
	if x != nil {
		return x.AMfsetId
	}
	return nil
}

func (x *Guami) GetAMfpointer() *Amfpointer {
	if x != nil {
		return x.AMfpointer
	}
	return nil
}

// range of Integer from e2sm_v2.asn1:435
// {IndexToRFSP}
type IndexToRfsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1,valueUB:256,valueExt"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:1,valueUB:256,valueExt"`
}

func (x *IndexToRfsp) Reset() {
	*x = IndexToRfsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexToRfsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexToRfsp) ProtoMessage() {}

func (x *IndexToRfsp) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexToRfsp.ProtoReflect.Descriptor instead.
func (*IndexToRfsp) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{65}
}

func (x *IndexToRfsp) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm_v2.asn1:439
// {NgENB-ID}
type NgEnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_v2.asn1:439
	//
	// Types that are assignable to NgEnbId:
	//	*NgEnbId_MacroNgEnbId
	//	*NgEnbId_ShortMacroNgEnbId
	//	*NgEnbId_LongMacroNgEnbId
	NgEnbId isNgEnbId_NgEnbId `protobuf_oneof:"ng_enb_id"`
}

func (x *NgEnbId) Reset() {
	*x = NgEnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NgEnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NgEnbId) ProtoMessage() {}

func (x *NgEnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NgEnbId.ProtoReflect.Descriptor instead.
func (*NgEnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{66}
}

func (m *NgEnbId) GetNgEnbId() isNgEnbId_NgEnbId {
	if m != nil {
		return m.NgEnbId
	}
	return nil
}

func (x *NgEnbId) GetMacroNgEnbId() *asn1.BitString {
	if x, ok := x.GetNgEnbId().(*NgEnbId_MacroNgEnbId); ok {
		return x.MacroNgEnbId
	}
	return nil
}

func (x *NgEnbId) GetShortMacroNgEnbId() *asn1.BitString {
	if x, ok := x.GetNgEnbId().(*NgEnbId_ShortMacroNgEnbId); ok {
		return x.ShortMacroNgEnbId
	}
	return nil
}

func (x *NgEnbId) GetLongMacroNgEnbId() *asn1.BitString {
	if x, ok := x.GetNgEnbId().(*NgEnbId_LongMacroNgEnbId); ok {
		return x.LongMacroNgEnbId
	}
	return nil
}

type isNgEnbId_NgEnbId interface {
	isNgEnbId_NgEnbId()
}

type NgEnbId_MacroNgEnbId struct {
	// @inject_tag: aper:"choiceIdx:1,sizeLB:20,sizeUB:20"
	MacroNgEnbId *asn1.BitString `protobuf:"bytes,1,opt,name=macro_ng_enb_id,json=macroNgENB-ID,proto3,oneof" aper:"choiceIdx:1,sizeLB:20,sizeUB:20"`
}

type NgEnbId_ShortMacroNgEnbId struct {
	// @inject_tag: aper:"choiceIdx:2,sizeLB:18,sizeUB:18"
	ShortMacroNgEnbId *asn1.BitString `protobuf:"bytes,2,opt,name=short_macro_ng_enb_id,json=shortMacroNgENB-ID,proto3,oneof" aper:"choiceIdx:2,sizeLB:18,sizeUB:18"`
}

type NgEnbId_LongMacroNgEnbId struct {
	// @inject_tag: aper:"choiceIdx:3,sizeLB:21,sizeUB:21"
	LongMacroNgEnbId *asn1.BitString `protobuf:"bytes,3,opt,name=long_macro_ng_enb_id,json=longMacroNgENB-ID,proto3,oneof" aper:"choiceIdx:3,sizeLB:21,sizeUB:21"`
}

func (*NgEnbId_MacroNgEnbId) isNgEnbId_NgEnbId() {}

func (*NgEnbId_ShortMacroNgEnbId) isNgEnbId_NgEnbId() {}

func (*NgEnbId_LongMacroNgEnbId) isNgEnbId_NgEnbId() {}

type NrcellIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:36,sizeUB:36"
	Value *asn1.BitString `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:36,sizeUB:36"`
}

func (x *NrcellIdentity) Reset() {
	*x = NrcellIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NrcellIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NrcellIdentity) ProtoMessage() {}

func (x *NrcellIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NrcellIdentity.ProtoReflect.Descriptor instead.
func (*NrcellIdentity) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{67}
}

func (x *NrcellIdentity) GetValue() *asn1.BitString {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_v2.asn1:450
// {NR-CGI}
type NrCgi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnidentity   *Plmnidentity   `protobuf:"bytes,1,opt,name=p_lmnidentity,json=pLMNIdentity,proto3" json:"p_lmnidentity,omitempty"`
	NRcellIdentity *NrcellIdentity `protobuf:"bytes,2,opt,name=n_rcell_identity,json=nRCellIdentity,proto3" json:"n_rcell_identity,omitempty"`
}

func (x *NrCgi) Reset() {
	*x = NrCgi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NrCgi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NrCgi) ProtoMessage() {}

func (x *NrCgi) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NrCgi.ProtoReflect.Descriptor instead.
func (*NrCgi) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{68}
}

func (x *NrCgi) GetPLmnidentity() *Plmnidentity {
	if x != nil {
		return x.PLmnidentity
	}
	return nil
}

func (x *NrCgi) GetNRcellIdentity() *NrcellIdentity {
	if x != nil {
		return x.NRcellIdentity
	}
	return nil
}

// range of Integer from e2sm_v2.asn1:459
// {QosFlowIdentifier}
type QosFlowIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:63,valueExt"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:63,valueExt"`
}

func (x *QosFlowIdentifier) Reset() {
	*x = QosFlowIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QosFlowIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QosFlowIdentifier) ProtoMessage() {}

func (x *QosFlowIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QosFlowIdentifier.ProtoReflect.Descriptor instead.
func (*QosFlowIdentifier) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{69}
}

func (x *QosFlowIdentifier) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Sd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:3,sizeUB:3"
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:3,sizeUB:3"`
}

func (x *Sd) Reset() {
	*x = Sd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sd) ProtoMessage() {}

func (x *Sd) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sd.ProtoReflect.Descriptor instead.
func (*Sd) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{70}
}

func (x *Sd) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_v2.asn1:466
// {S-NSSAI}
// @inject_tag: aper:"valueExt"
type SNssai struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SSt *Sst `protobuf:"bytes,1,opt,name=s_st,json=sST,proto3" json:"s_st,omitempty"`
	// @inject_tag: aper:"optional"
	SD *Sd `protobuf:"bytes,2,opt,name=s_d,json=sD,proto3,oneof" json:"s_d,omitempty" aper:"optional"`
}

func (x *SNssai) Reset() {
	*x = SNssai{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SNssai) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SNssai) ProtoMessage() {}

func (x *SNssai) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SNssai.ProtoReflect.Descriptor instead.
func (*SNssai) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{71}
}

func (x *SNssai) GetSSt() *Sst {
	if x != nil {
		return x.SSt
	}
	return nil
}

func (x *SNssai) GetSD() *Sd {
	if x != nil {
		return x.SD
	}
	return nil
}

type Sst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:1"
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:1"`
}

func (x *Sst) Reset() {
	*x = Sst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sst) ProtoMessage() {}

func (x *Sst) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sst.ProtoReflect.Descriptor instead.
func (*Sst) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{72}
}

func (x *Sst) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// range of Integer from e2sm_v2.asn1:483
// {NG-RANnodeUEXnAPID}
type NgRannodeUexnApid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:4294967295"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:4294967295"`
}

func (x *NgRannodeUexnApid) Reset() {
	*x = NgRannodeUexnApid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NgRannodeUexnApid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NgRannodeUexnApid) ProtoMessage() {}

func (x *NgRannodeUexnApid) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NgRannodeUexnApid.ProtoReflect.Descriptor instead.
func (*NgRannodeUexnApid) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{73}
}

func (x *NgRannodeUexnApid) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm_v2.asn1:486
// {GlobalNGRANNodeID}
type GlobalNgrannodeId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_v2.asn1:486
	//
	// Types that are assignable to GlobalNgrannodeId:
	//	*GlobalNgrannodeId_GNb
	//	*GlobalNgrannodeId_NgENb
	GlobalNgrannodeId isGlobalNgrannodeId_GlobalNgrannodeId `protobuf_oneof:"global_ngrannode_id"`
}

func (x *GlobalNgrannodeId) Reset() {
	*x = GlobalNgrannodeId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalNgrannodeId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalNgrannodeId) ProtoMessage() {}

func (x *GlobalNgrannodeId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalNgrannodeId.ProtoReflect.Descriptor instead.
func (*GlobalNgrannodeId) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{74}
}

func (m *GlobalNgrannodeId) GetGlobalNgrannodeId() isGlobalNgrannodeId_GlobalNgrannodeId {
	if m != nil {
		return m.GlobalNgrannodeId
	}
	return nil
}

func (x *GlobalNgrannodeId) GetGNb() *GlobalGnbId {
	if x, ok := x.GetGlobalNgrannodeId().(*GlobalNgrannodeId_GNb); ok {
		return x.GNb
	}
	return nil
}

func (x *GlobalNgrannodeId) GetNgENb() *GlobalNgEnbId {
	if x, ok := x.GetGlobalNgrannodeId().(*GlobalNgrannodeId_NgENb); ok {
		return x.NgENb
	}
	return nil
}

type isGlobalNgrannodeId_GlobalNgrannodeId interface {
	isGlobalNgrannodeId_GlobalNgrannodeId()
}

type GlobalNgrannodeId_GNb struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt"
	GNb *GlobalGnbId `protobuf:"bytes,1,opt,name=g_nb,json=gNB,proto3,oneof" aper:"choiceIdx:1,valueExt"`
}

type GlobalNgrannodeId_NgENb struct {
	// @inject_tag: aper:"choiceIdx:2,valueExt"
	NgENb *GlobalNgEnbId `protobuf:"bytes,2,opt,name=ng_e_nb,json=ng-eNB,proto3,oneof" aper:"choiceIdx:2,valueExt"`
}

func (*GlobalNgrannodeId_GNb) isGlobalNgrannodeId_GlobalNgrannodeId() {}

func (*GlobalNgrannodeId_NgENb) isGlobalNgrannodeId_GlobalNgrannodeId() {}

// range of Integer from e2sm_v2.asn1:499
// {GNB-CU-CP-UE-E1AP-ID}
type GnbCuCpUeE1ApId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:4294967295"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:4294967295"`
}

func (x *GnbCuCpUeE1ApId) Reset() {
	*x = GnbCuCpUeE1ApId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnbCuCpUeE1ApId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnbCuCpUeE1ApId) ProtoMessage() {}

func (x *GnbCuCpUeE1ApId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnbCuCpUeE1ApId.ProtoReflect.Descriptor instead.
func (*GnbCuCpUeE1ApId) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{75}
}

func (x *GnbCuCpUeE1ApId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_v2.asn1:502
// {GNB-CU-UP-ID}
type GnbCuUpId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:68719476735"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:68719476735"`
}

func (x *GnbCuUpId) Reset() {
	*x = GnbCuUpId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnbCuUpId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnbCuUpId) ProtoMessage() {}

func (x *GnbCuUpId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnbCuUpId.ProtoReflect.Descriptor instead.
func (*GnbCuUpId) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{76}
}

func (x *GnbCuUpId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type FiveGsTac struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:3,sizeUB:3"
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:3,sizeUB:3"`
}

func (x *FiveGsTac) Reset() {
	*x = FiveGsTac{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FiveGsTac) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FiveGsTac) ProtoMessage() {}

func (x *FiveGsTac) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FiveGsTac.ProtoReflect.Descriptor instead.
func (*FiveGsTac) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{77}
}

func (x *FiveGsTac) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_v2.asn1:518
// {FreqBandNrItem}
// @inject_tag: aper:"valueExt"
type FreqBandNrItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:1,valueUB:1024"
	FreqBandIndicatorNr int32 `protobuf:"varint,1,opt,name=freq_band_indicator_nr,json=freqBandIndicatorNr,proto3" json:"freq_band_indicator_nr,omitempty" aper:"valueExt,valueLB:1,valueUB:1024"`
}

func (x *FreqBandNrItem) Reset() {
	*x = FreqBandNrItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreqBandNrItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreqBandNrItem) ProtoMessage() {}

func (x *FreqBandNrItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreqBandNrItem.ProtoReflect.Descriptor instead.
func (*FreqBandNrItem) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{78}
}

func (x *FreqBandNrItem) GetFreqBandIndicatorNr() int32 {
	if x != nil {
		return x.FreqBandIndicatorNr
	}
	return 0
}

// range of Integer from e2sm_v2.asn1:524
// {GNB-CU-UE-F1AP-ID}
type GnbCuUeF1ApId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:4294967295"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueExt,valueLB:0,valueUB:4294967295"`
}

func (x *GnbCuUeF1ApId) Reset() {
	*x = GnbCuUeF1ApId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnbCuUeF1ApId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnbCuUeF1ApId) ProtoMessage() {}

func (x *GnbCuUeF1ApId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnbCuUeF1ApId.ProtoReflect.Descriptor instead.
func (*GnbCuUeF1ApId) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{79}
}

func (x *GnbCuUeF1ApId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_v2.asn1:527
// {GNB-DU-ID}
type GnbDuId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:68719476735"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:68719476735"`
}

func (x *GnbDuId) Reset() {
	*x = GnbDuId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnbDuId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnbDuId) ProtoMessage() {}

func (x *GnbDuId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnbDuId.ProtoReflect.Descriptor instead.
func (*GnbDuId) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{80}
}

func (x *GnbDuId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_v2.asn1:530
// {NR-PCI}
type NrPci struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:1007"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:1007"`
}

func (x *NrPci) Reset() {
	*x = NrPci{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NrPci) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NrPci) ProtoMessage() {}

func (x *NrPci) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NrPci.ProtoReflect.Descriptor instead.
func (*NrPci) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{81}
}

func (x *NrPci) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm_v2.asn1:534
// {NR-ARFCN}
type NrArfcn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:3279165"
	NRarfcn int32 `protobuf:"varint,1,opt,name=n_rarfcn,json=nRARFCN,proto3" json:"n_rarfcn,omitempty" aper:"valueLB:0,valueUB:3279165"`
}

func (x *NrArfcn) Reset() {
	*x = NrArfcn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NrArfcn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NrArfcn) ProtoMessage() {}

func (x *NrArfcn) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NrArfcn.ProtoReflect.Descriptor instead.
func (*NrArfcn) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{82}
}

func (x *NrArfcn) GetNRarfcn() int32 {
	if x != nil {
		return x.NRarfcn
	}
	return 0
}

// sequence from e2sm_v2.asn1:541
// {NRFrequencyBand-List}
type NrfrequencyBandList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:32,valueExt"
	Value []*NrfrequencyBandItem `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:32,valueExt"`
}

func (x *NrfrequencyBandList) Reset() {
	*x = NrfrequencyBandList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NrfrequencyBandList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NrfrequencyBandList) ProtoMessage() {}

func (x *NrfrequencyBandList) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NrfrequencyBandList.ProtoReflect.Descriptor instead.
func (*NrfrequencyBandList) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{83}
}

func (x *NrfrequencyBandList) GetValue() []*NrfrequencyBandItem {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_v2.asn1:542
// {NRFrequencyBandItem}
type NrfrequencyBandItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:1,valueUB:1024"
	FreqBandIndicatorNr  int32                 `protobuf:"varint,1,opt,name=freq_band_indicator_nr,json=freqBandIndicatorNr,proto3" json:"freq_band_indicator_nr,omitempty" aper:"valueExt,valueLB:1,valueUB:1024"`
	SupportedSulbandList *SupportedSulbandList `protobuf:"bytes,2,opt,name=supported_sulband_list,json=supportedSULBandList,proto3" json:"supported_sulband_list,omitempty"`
}

func (x *NrfrequencyBandItem) Reset() {
	*x = NrfrequencyBandItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NrfrequencyBandItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NrfrequencyBandItem) ProtoMessage() {}

func (x *NrfrequencyBandItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NrfrequencyBandItem.ProtoReflect.Descriptor instead.
func (*NrfrequencyBandItem) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{84}
}

func (x *NrfrequencyBandItem) GetFreqBandIndicatorNr() int32 {
	if x != nil {
		return x.FreqBandIndicatorNr
	}
	return 0
}

func (x *NrfrequencyBandItem) GetSupportedSulbandList() *SupportedSulbandList {
	if x != nil {
		return x.SupportedSulbandList
	}
	return nil
}

// sequence from e2sm_v2.asn1:549
// {NRFrequencyInfo}
// @inject_tag: aper:"valueExt"
type NrfrequencyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	NrArfcn           *NrArfcn             `protobuf:"bytes,1,opt,name=nr_arfcn,json=nrARFCN,proto3" json:"nr_arfcn,omitempty" aper:"valueExt"`
	FrequencyBandList *NrfrequencyBandList `protobuf:"bytes,2,opt,name=frequency_band_list,json=frequencyBand-List,proto3" json:"frequency_band_list,omitempty"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:1,valueExt"
	FrequencyShift7P5Khz *NrfrequencyShift7P5Khz `protobuf:"varint,3,opt,name=frequency_shift7p5khz,json=frequencyShift7p5khz,proto3,enum=e2sm_rc.v1.NrfrequencyShift7P5Khz,oneof" json:"frequency_shift7p5khz,omitempty" aper:"optional,valueLB:0,valueUB:1,valueExt"`
}

func (x *NrfrequencyInfo) Reset() {
	*x = NrfrequencyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NrfrequencyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NrfrequencyInfo) ProtoMessage() {}

func (x *NrfrequencyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NrfrequencyInfo.ProtoReflect.Descriptor instead.
func (*NrfrequencyInfo) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{85}
}

func (x *NrfrequencyInfo) GetNrArfcn() *NrArfcn {
	if x != nil {
		return x.NrArfcn
	}
	return nil
}

func (x *NrfrequencyInfo) GetFrequencyBandList() *NrfrequencyBandList {
	if x != nil {
		return x.FrequencyBandList
	}
	return nil
}

func (x *NrfrequencyInfo) GetFrequencyShift7P5Khz() NrfrequencyShift7P5Khz {
	if x != nil && x.FrequencyShift7P5Khz != nil {
		return *x.FrequencyShift7P5Khz
	}
	return NrfrequencyShift7P5Khz_NRFREQUENCY_SHIFT7P5KHZ_FALSE
}

// sequence from e2sm_v2.asn1:567
// {SupportedSULBandList}
type SupportedSulbandList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:0,sizeUB:32,valueExt"
	Value []*SupportedSulfreqBandItem `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:0,sizeUB:32,valueExt"`
}

func (x *SupportedSulbandList) Reset() {
	*x = SupportedSulbandList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportedSulbandList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportedSulbandList) ProtoMessage() {}

func (x *SupportedSulbandList) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportedSulbandList.ProtoReflect.Descriptor instead.
func (*SupportedSulbandList) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{86}
}

func (x *SupportedSulbandList) GetValue() []*SupportedSulfreqBandItem {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_v2.asn1:568
// {SupportedSULFreqBandItem}
type SupportedSulfreqBandItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:1,valueUB:1024"
	FreqBandIndicatorNr int32 `protobuf:"varint,1,opt,name=freq_band_indicator_nr,json=freqBandIndicatorNr,proto3" json:"freq_band_indicator_nr,omitempty" aper:"valueExt,valueLB:1,valueUB:1024"`
}

func (x *SupportedSulfreqBandItem) Reset() {
	*x = SupportedSulfreqBandItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportedSulfreqBandItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportedSulfreqBandItem) ProtoMessage() {}

func (x *SupportedSulfreqBandItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportedSulfreqBandItem.ProtoReflect.Descriptor instead.
func (*SupportedSulfreqBandItem) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{87}
}

func (x *SupportedSulfreqBandItem) GetFreqBandIndicatorNr() int32 {
	if x != nil {
		return x.FreqBandIndicatorNr
	}
	return 0
}

type Ranueid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:8,sizeUB:8"
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:8,sizeUB:8"`
}

func (x *Ranueid) Reset() {
	*x = Ranueid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ranueid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ranueid) ProtoMessage() {}

func (x *Ranueid) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ranueid.ProtoReflect.Descriptor instead.
func (*Ranueid) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{88}
}

func (x *Ranueid) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type Plmnidentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag:aper:"sizeLB:3,sizeUB:3"
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:3,sizeUB:3"`
}

func (x *Plmnidentity) Reset() {
	*x = Plmnidentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plmnidentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plmnidentity) ProtoMessage() {}

func (x *Plmnidentity) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plmnidentity.ProtoReflect.Descriptor instead.
func (*Plmnidentity) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{89}
}

func (x *Plmnidentity) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type MmeGroupId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag:aper:"sizeLB:2,sizeUB:2"
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:2,sizeUB:2"`
}

func (x *MmeGroupId) Reset() {
	*x = MmeGroupId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MmeGroupId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MmeGroupId) ProtoMessage() {}

func (x *MmeGroupId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MmeGroupId.ProtoReflect.Descriptor instead.
func (*MmeGroupId) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{90}
}

func (x *MmeGroupId) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type MmeCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag:aper:"sizeLB:1,sizeUB:1"
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:1"`
}

func (x *MmeCode) Reset() {
	*x = MmeCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MmeCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MmeCode) ProtoMessage() {}

func (x *MmeCode) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MmeCode.ProtoReflect.Descriptor instead.
func (*MmeCode) Descriptor() ([]byte, []int) {
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP(), []int{91}
}

func (x *MmeCode) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_e2sm_rc_v1_e2sm_common_ies_proto protoreflect.FileDescriptor

var file_e2sm_rc_v1_e2sm_common_ies_proto_rawDesc = []byte{
	0x0a, 0x20, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x1a, 0x1a,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x61, 0x73, 0x6e, 0x31,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2c,
	0x0a, 0x09, 0x4d, 0x61, 0x78, 0x45, 0x31, 0x41, 0x70, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a,
	0x04, 0x08, 0xff, 0xff, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2a, 0x0a, 0x09,
	0x4d, 0x61, 0x78, 0x46, 0x31, 0x41, 0x70, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a, 0x09, 0x4d, 0x61, 0x78, 0x45,
	0x61, 0x72, 0x66, 0x63, 0x6e, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x08, 0xff, 0xff, 0x03, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x0a, 0x4d, 0x61, 0x78, 0x4e, 0x72, 0x61,
	0x72, 0x66, 0x63, 0x6e, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x08, 0xbd, 0x92, 0xc8, 0x01, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x12, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f,
	0x66, 0x4e, 0x72, 0x43, 0x65, 0x6c, 0x6c, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x71, 0x0a, 0x03, 0x43,
	0x67, 0x69, 0x12, 0x2c, 0x0a, 0x07, 0x6e, 0x5f, 0x72, 0x5f, 0x63, 0x67, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x72, 0x43, 0x67, 0x69, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x52, 0x2d, 0x43, 0x47, 0x49,
	0x12, 0x35, 0x0a, 0x0a, 0x65, 0x5f, 0x75, 0x74, 0x72, 0x61, 0x5f, 0x63, 0x67, 0x69, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x75, 0x74, 0x72, 0x61, 0x43, 0x67, 0x69, 0x48, 0x00, 0x52, 0x09, 0x65, 0x55,
	0x54, 0x52, 0x41, 0x2d, 0x43, 0x47, 0x49, 0x42, 0x05, 0x0a, 0x03, 0x63, 0x67, 0x69, 0x22, 0x6e,
	0x0a, 0x08, 0x43, 0x6f, 0x72, 0x65, 0x43, 0x70, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x66, 0x69,
	0x76, 0x65, 0x5f, 0x67, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x75, 0x61, 0x6d, 0x69, 0x48, 0x00,
	0x52, 0x06, 0x66, 0x69, 0x76, 0x65, 0x47, 0x43, 0x12, 0x27, 0x0a, 0x04, 0x65, 0x5f, 0x70, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x75, 0x6d, 0x6d, 0x65, 0x69, 0x48, 0x00, 0x52, 0x03, 0x65, 0x50,
	0x43, 0x42, 0x0b, 0x0a, 0x09, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x70, 0x69, 0x64, 0x22, 0xea,
	0x02, 0x0a, 0x13, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x03, 0x6e, 0x5f, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x4e, 0x67, 0x48, 0x00,
	0x52, 0x02, 0x6e, 0x47, 0x12, 0x2c, 0x0a, 0x03, 0x78, 0x5f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x58, 0x6e, 0x48, 0x00, 0x52, 0x02,
	0x78, 0x4e, 0x12, 0x2b, 0x0a, 0x02, 0x66, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x46, 0x31, 0x48, 0x00, 0x52, 0x02, 0x66, 0x31, 0x12,
	0x2b, 0x0a, 0x02, 0x65, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x45, 0x31, 0x48, 0x00, 0x52, 0x02, 0x65, 0x31, 0x12, 0x2b, 0x0a, 0x02,
	0x73, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x53, 0x31, 0x48, 0x00, 0x52, 0x02, 0x73, 0x31, 0x12, 0x2b, 0x0a, 0x02, 0x78, 0x32, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x58, 0x32,
	0x48, 0x00, 0x52, 0x02, 0x78, 0x32, 0x12, 0x2b, 0x0a, 0x02, 0x77, 0x31, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x57, 0x31, 0x48, 0x00, 0x52,
	0x02, 0x77, 0x31, 0x42, 0x16, 0x0a, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x38, 0x0a, 0x0d, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x4e, 0x67, 0x12, 0x27, 0x0a, 0x05,
	0x67, 0x75, 0x61, 0x6d, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x75, 0x61, 0x6d, 0x69, 0x52, 0x05,
	0x67, 0x75, 0x61, 0x6d, 0x69, 0x22, 0x5a, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x58, 0x6e, 0x12, 0x49, 0x0a, 0x10, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x5f, 0x6e, 0x67, 0x5f, 0x72, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x67, 0x72, 0x61, 0x6e, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x52,
	0x10, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2d, 0x4e, 0x47, 0x2d, 0x52, 0x41, 0x4e, 0x2d, 0x49,
	0x44, 0x22, 0x81, 0x01, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x46, 0x31, 0x12, 0x3c, 0x0a, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x67, 0x6e,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x47, 0x6e,
	0x62, 0x49, 0x64, 0x52, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x47, 0x4e, 0x42, 0x2d, 0x49,
	0x44, 0x12, 0x32, 0x0a, 0x0a, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x64, 0x75, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6e, 0x62, 0x44, 0x75, 0x49, 0x64, 0x52, 0x09, 0x67, 0x4e, 0x42, 0x2d,
	0x44, 0x55, 0x2d, 0x49, 0x44, 0x22, 0x89, 0x01, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x45, 0x31, 0x12, 0x3c, 0x0a, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x5f, 0x67, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x47, 0x6e, 0x62, 0x49, 0x64, 0x52, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x47,
	0x4e, 0x42, 0x2d, 0x49, 0x44, 0x12, 0x3a, 0x0a, 0x0d, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75,
	0x5f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6e, 0x62, 0x43, 0x75, 0x55,
	0x70, 0x49, 0x64, 0x52, 0x0c, 0x67, 0x4e, 0x42, 0x2d, 0x43, 0x55, 0x2d, 0x55, 0x50, 0x2d, 0x49,
	0x44, 0x22, 0x3c, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x53, 0x31, 0x12, 0x2b, 0x0a, 0x07, 0x67, 0x5f, 0x75, 0x6d, 0x6d, 0x65, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x75, 0x6d, 0x6d, 0x65, 0x69, 0x52, 0x06, 0x67, 0x55, 0x4d, 0x4d, 0x45, 0x49, 0x22,
	0x42, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x58, 0x32,
	0x12, 0x31, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x3d, 0x0a, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x62, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6e, 0x62, 0x49, 0x64,
	0x48, 0x00, 0x52, 0x0b, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x12,
	0x44, 0x0a, 0x10, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x5f, 0x67, 0x6e, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x47,
	0x6e, 0x62, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6e,
	0x47, 0x6e, 0x62, 0x49, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x57, 0x31, 0x12, 0x46, 0x0a, 0x11, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6e,
	0x67, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x4e, 0x67, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x52, 0x10, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x2d, 0x6e, 0x67, 0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x12, 0x3a, 0x0a, 0x0d,
	0x6e, 0x67, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x64, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x67, 0x65, 0x6e, 0x62, 0x44, 0x75, 0x49, 0x64, 0x52, 0x0c, 0x6e, 0x67, 0x2d, 0x65,
	0x4e, 0x42, 0x2d, 0x44, 0x55, 0x2d, 0x49, 0x44, 0x22, 0x86, 0x01, 0x0a, 0x12, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x34, 0x0a, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x14, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64,
	0x75, 0x72, 0x65, 0x49, 0x44, 0x12, 0x3a, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x6a, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x07,
	0x66, 0x69, 0x76, 0x65, 0x5f, 0x67, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x76, 0x65, 0x51,
	0x69, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x76, 0x65, 0x47, 0x43, 0x12, 0x24, 0x0a, 0x04, 0x65,
	0x5f, 0x70, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x63, 0x69, 0x48, 0x00, 0x52, 0x03, 0x65, 0x50,
	0x43, 0x42, 0x0a, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x22, 0x66, 0x0a,
	0x05, 0x51, 0x6f, 0x53, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x07, 0x66, 0x69, 0x76, 0x65, 0x5f, 0x67,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x76, 0x65, 0x51, 0x69, 0x48, 0x00, 0x52, 0x06, 0x66,
	0x69, 0x76, 0x65, 0x47, 0x43, 0x12, 0x24, 0x0a, 0x04, 0x65, 0x5f, 0x70, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x51, 0x63, 0x69, 0x48, 0x00, 0x52, 0x03, 0x65, 0x50, 0x43, 0x42, 0x08, 0x0a, 0x06, 0x71,
	0x6f, 0x5f, 0x73, 0x69, 0x64, 0x22, 0xb2, 0x02, 0x0a, 0x0f, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x17, 0x72, 0x61, 0x6e,
	0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72,
	0x05, 0x10, 0x01, 0x18, 0x96, 0x01, 0x52, 0x15, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2d, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a,
	0x16, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x32,
	0x5f, 0x73, 0x6d, 0x5f, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa,
	0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xe8, 0x07, 0x52, 0x14, 0x72, 0x61, 0x6e, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x45, 0x32, 0x53, 0x4d, 0x2d, 0x4f, 0x49, 0x44, 0x12,
	0x45, 0x0a, 0x18, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0x96, 0x01, 0x52, 0x17, 0x72,
	0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x15, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x14, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x18, 0x0a, 0x16, 0x5f, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x25, 0x0a, 0x0d, 0x52, 0x69,
	0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x24, 0x0a, 0x0c, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x24, 0x0a, 0x0c, 0x52, 0x69, 0x63, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5d, 0x0a,
	0x0c, 0x52, 0x72, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a,
	0x08, 0x72, 0x72, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x72, 0x63,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x72, 0x72, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x22, 0x6c, 0x0a, 0x07,
	0x52, 0x72, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x03, 0x6c, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x72, 0x63, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4c, 0x74, 0x65, 0x48, 0x00, 0x52,
	0x03, 0x6c, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x02, 0x6e, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x72,
	0x63, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x72, 0x48, 0x00, 0x52, 0x02, 0x6e, 0x72, 0x42, 0x0a,
	0x0a, 0x08, 0x72, 0x72, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x10, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x6c, 0x6c, 0x41, 0x72, 0x66, 0x63, 0x6e, 0x12,
	0x26, 0x0a, 0x03, 0x6e, 0x5f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x72, 0x41, 0x72, 0x66, 0x63,
	0x6e, 0x48, 0x00, 0x52, 0x02, 0x6e, 0x52, 0x12, 0x2f, 0x0a, 0x06, 0x65, 0x5f, 0x75, 0x74, 0x72,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x55, 0x74, 0x72, 0x61, 0x41, 0x72, 0x66, 0x63, 0x6e, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x55, 0x54, 0x52, 0x41, 0x42, 0x14, 0x0a, 0x12, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x61, 0x72, 0x66, 0x63, 0x6e, 0x22, 0x79,
	0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x6c, 0x6c, 0x50, 0x63, 0x69,
	0x12, 0x24, 0x0a, 0x03, 0x6e, 0x5f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x72, 0x50, 0x63, 0x69,
	0x48, 0x00, 0x52, 0x02, 0x6e, 0x52, 0x12, 0x2d, 0x0a, 0x06, 0x65, 0x5f, 0x75, 0x74, 0x72, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x55, 0x74, 0x72, 0x61, 0x50, 0x63, 0x69, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x55, 0x54, 0x52, 0x41, 0x42, 0x12, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x70, 0x63, 0x69, 0x22, 0xb2, 0x03, 0x0a, 0x04, 0x55, 0x65,
	0x69, 0x64, 0x12, 0x32, 0x0a, 0x09, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x75, 0x65, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x65, 0x69, 0x64, 0x47, 0x6e, 0x62, 0x48, 0x00, 0x52, 0x08, 0x67, 0x4e,
	0x42, 0x2d, 0x55, 0x45, 0x49, 0x44, 0x12, 0x3a, 0x0a, 0x0c, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x64,
	0x75, 0x5f, 0x75, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65, 0x69, 0x64, 0x47, 0x6e,
	0x62, 0x44, 0x75, 0x48, 0x00, 0x52, 0x0b, 0x67, 0x4e, 0x42, 0x2d, 0x44, 0x55, 0x2d, 0x55, 0x45,
	0x49, 0x44, 0x12, 0x42, 0x0a, 0x0f, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x75, 0x70,
	0x5f, 0x75, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65, 0x69, 0x64, 0x47, 0x6e, 0x62,
	0x43, 0x75, 0x55, 0x70, 0x48, 0x00, 0x52, 0x0e, 0x67, 0x4e, 0x42, 0x2d, 0x43, 0x55, 0x2d, 0x55,
	0x50, 0x2d, 0x55, 0x45, 0x49, 0x44, 0x12, 0x3a, 0x0a, 0x0c, 0x6e, 0x67, 0x5f, 0x65, 0x5f, 0x6e,
	0x62, 0x5f, 0x75, 0x65, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65, 0x69, 0x64, 0x4e, 0x67,
	0x45, 0x6e, 0x62, 0x48, 0x00, 0x52, 0x0b, 0x6e, 0x67, 0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x55, 0x45,
	0x49, 0x44, 0x12, 0x42, 0x0a, 0x0f, 0x6e, 0x67, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x64, 0x75,
	0x5f, 0x75, 0x65, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65, 0x69, 0x64, 0x4e, 0x67, 0x45,
	0x6e, 0x62, 0x44, 0x75, 0x48, 0x00, 0x52, 0x0e, 0x6e, 0x67, 0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x44,
	0x55, 0x2d, 0x55, 0x45, 0x49, 0x44, 0x12, 0x3a, 0x0a, 0x0c, 0x65, 0x6e, 0x5f, 0x67, 0x5f, 0x6e,
	0x62, 0x5f, 0x75, 0x65, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65, 0x69, 0x64, 0x45, 0x6e,
	0x47, 0x6e, 0x62, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x6e, 0x2d, 0x67, 0x4e, 0x42, 0x2d, 0x55, 0x45,
	0x49, 0x44, 0x12, 0x32, 0x0a, 0x09, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x75, 0x65, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x65, 0x69, 0x64, 0x45, 0x6e, 0x62, 0x48, 0x00, 0x52, 0x08, 0x65, 0x4e,
	0x42, 0x2d, 0x55, 0x45, 0x49, 0x44, 0x42, 0x06, 0x0a, 0x04, 0x75, 0x65, 0x69, 0x64, 0x22, 0xf0,
	0x05, 0x0a, 0x07, 0x55, 0x65, 0x69, 0x64, 0x47, 0x6e, 0x62, 0x12, 0x3f, 0x0a, 0x0e, 0x61, 0x6d,
	0x66, 0x5f, 0x75, 0x65, 0x5f, 0x6e, 0x67, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x6d, 0x66, 0x55, 0x65, 0x4e, 0x67, 0x61, 0x70, 0x49, 0x64, 0x52, 0x0e, 0x61, 0x6d, 0x66,
	0x2d, 0x55, 0x45, 0x2d, 0x4e, 0x47, 0x41, 0x50, 0x2d, 0x49, 0x44, 0x12, 0x27, 0x0a, 0x05, 0x67,
	0x75, 0x61, 0x6d, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x75, 0x61, 0x6d, 0x69, 0x52, 0x05, 0x67,
	0x75, 0x61, 0x6d, 0x69, 0x12, 0x5e, 0x0a, 0x18, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f,
	0x75, 0x65, 0x5f, 0x66, 0x31, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65, 0x69, 0x64, 0x47, 0x6e, 0x62, 0x43, 0x75, 0x46, 0x31, 0x41,
	0x70, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x16, 0x67, 0x4e, 0x42, 0x2d, 0x43,
	0x55, 0x2d, 0x55, 0x45, 0x2d, 0x46, 0x31, 0x41, 0x50, 0x2d, 0x49, 0x44, 0x2d, 0x4c, 0x69, 0x73,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x66, 0x0a, 0x1b, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f,
	0x63, 0x70, 0x5f, 0x75, 0x65, 0x5f, 0x65, 0x31, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65, 0x69, 0x64, 0x47, 0x6e, 0x62, 0x43, 0x75,
	0x43, 0x70, 0x45, 0x31, 0x41, 0x70, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x01, 0x52, 0x19,
	0x67, 0x4e, 0x42, 0x2d, 0x43, 0x55, 0x2d, 0x43, 0x50, 0x2d, 0x55, 0x45, 0x2d, 0x45, 0x31, 0x41,
	0x50, 0x2d, 0x49, 0x44, 0x2d, 0x4c, 0x69, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x08,
	0x72, 0x61, 0x6e, 0x5f, 0x75, 0x65, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x75,
	0x65, 0x69, 0x64, 0x48, 0x02, 0x52, 0x08, 0x72, 0x61, 0x6e, 0x2d, 0x55, 0x45, 0x49, 0x44, 0x88,
	0x01, 0x01, 0x12, 0x55, 0x0a, 0x14, 0x6d, 0x5f, 0x6e, 0x67, 0x5f, 0x72, 0x61, 0x6e, 0x5f, 0x75,
	0x65, 0x5f, 0x78, 0x6e, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x67,
	0x52, 0x61, 0x6e, 0x6e, 0x6f, 0x64, 0x65, 0x55, 0x65, 0x78, 0x6e, 0x41, 0x70, 0x69, 0x64, 0x48,
	0x03, 0x52, 0x13, 0x6d, 0x2d, 0x4e, 0x47, 0x2d, 0x52, 0x41, 0x4e, 0x2d, 0x55, 0x45, 0x2d, 0x58,
	0x6e, 0x41, 0x50, 0x2d, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x0d, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x5f, 0x67, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x47, 0x6e, 0x62, 0x49, 0x64, 0x48, 0x04, 0x52, 0x0c, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x47, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x55, 0x0a, 0x14,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6e, 0x67, 0x5f, 0x72, 0x61, 0x6e, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x67,
	0x72, 0x61, 0x6e, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x48, 0x05, 0x52, 0x13, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x4e, 0x47, 0x2d, 0x52, 0x41, 0x4e, 0x4e, 0x6f, 0x64, 0x65, 0x2d, 0x49, 0x44,
	0x88, 0x01, 0x01, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f,
	0x75, 0x65, 0x5f, 0x66, 0x31, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x42, 0x1e, 0x0a, 0x1c, 0x5f, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x63, 0x70, 0x5f,
	0x75, 0x65, 0x5f, 0x65, 0x31, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x72, 0x61, 0x6e, 0x5f, 0x75, 0x65, 0x69, 0x64, 0x42, 0x17, 0x0a,
	0x15, 0x5f, 0x6d, 0x5f, 0x6e, 0x67, 0x5f, 0x72, 0x61, 0x6e, 0x5f, 0x75, 0x65, 0x5f, 0x78, 0x6e,
	0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x5f, 0x67, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x5f, 0x6e, 0x67, 0x5f, 0x72, 0x61, 0x6e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69,
	0x64, 0x22, 0x50, 0x0a, 0x15, 0x55, 0x65, 0x69, 0x64, 0x47, 0x6e, 0x62, 0x43, 0x75, 0x43, 0x70,
	0x45, 0x31, 0x41, 0x70, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65, 0x69, 0x64, 0x47, 0x6e, 0x62, 0x43, 0x75,
	0x43, 0x70, 0x45, 0x31, 0x41, 0x70, 0x49, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x6a, 0x0a, 0x15, 0x55, 0x65, 0x69, 0x64, 0x47, 0x6e, 0x62, 0x43, 0x75,
	0x43, 0x70, 0x45, 0x31, 0x41, 0x70, 0x49, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x51, 0x0a, 0x16,
	0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x63, 0x70, 0x5f, 0x75, 0x65, 0x5f, 0x65, 0x31,
	0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6e, 0x62, 0x43, 0x75, 0x43,
	0x70, 0x55, 0x65, 0x45, 0x31, 0x41, 0x70, 0x49, 0x64, 0x52, 0x14, 0x67, 0x4e, 0x42, 0x2d, 0x43,
	0x55, 0x2d, 0x43, 0x50, 0x2d, 0x55, 0x45, 0x2d, 0x45, 0x31, 0x41, 0x50, 0x2d, 0x49, 0x44, 0x22,
	0x4e, 0x0a, 0x13, 0x55, 0x65, 0x69, 0x64, 0x47, 0x6e, 0x62, 0x43, 0x75, 0x46, 0x31, 0x41, 0x70,
	0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x65, 0x69, 0x64, 0x47, 0x6e, 0x62, 0x43, 0x75, 0x43, 0x70, 0x46, 0x31,
	0x41, 0x70, 0x49, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x62, 0x0a, 0x15, 0x55, 0x65, 0x69, 0x64, 0x47, 0x6e, 0x62, 0x43, 0x75, 0x43, 0x70, 0x46, 0x31,
	0x41, 0x70, 0x49, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x49, 0x0a, 0x13, 0x67, 0x5f, 0x6e, 0x62,
	0x5f, 0x63, 0x75, 0x5f, 0x75, 0x65, 0x5f, 0x66, 0x31, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6e, 0x62, 0x43, 0x75, 0x55, 0x65, 0x46, 0x31, 0x41, 0x70, 0x49, 0x64,
	0x52, 0x11, 0x67, 0x4e, 0x42, 0x2d, 0x43, 0x55, 0x2d, 0x55, 0x45, 0x2d, 0x46, 0x31, 0x41, 0x50,
	0x2d, 0x49, 0x44, 0x22, 0x99, 0x01, 0x0a, 0x09, 0x55, 0x65, 0x69, 0x64, 0x47, 0x6e, 0x62, 0x44,
	0x75, 0x12, 0x49, 0x0a, 0x13, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x75, 0x65, 0x5f,
	0x66, 0x31, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6e, 0x62, 0x43,
	0x75, 0x55, 0x65, 0x46, 0x31, 0x41, 0x70, 0x49, 0x64, 0x52, 0x11, 0x67, 0x4e, 0x42, 0x2d, 0x43,
	0x55, 0x2d, 0x55, 0x45, 0x2d, 0x46, 0x31, 0x41, 0x50, 0x2d, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x08,
	0x72, 0x61, 0x6e, 0x5f, 0x75, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x75,
	0x65, 0x69, 0x64, 0x48, 0x00, 0x52, 0x08, 0x72, 0x61, 0x6e, 0x2d, 0x55, 0x45, 0x49, 0x44, 0x88,
	0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x72, 0x61, 0x6e, 0x5f, 0x75, 0x65, 0x69, 0x64, 0x22,
	0xa3, 0x01, 0x0a, 0x0b, 0x55, 0x65, 0x69, 0x64, 0x47, 0x6e, 0x62, 0x43, 0x75, 0x55, 0x70, 0x12,
	0x51, 0x0a, 0x16, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x63, 0x70, 0x5f, 0x75, 0x65,
	0x5f, 0x65, 0x31, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6e, 0x62,
	0x43, 0x75, 0x43, 0x70, 0x55, 0x65, 0x45, 0x31, 0x41, 0x70, 0x49, 0x64, 0x52, 0x14, 0x67, 0x4e,
	0x42, 0x2d, 0x43, 0x55, 0x2d, 0x43, 0x50, 0x2d, 0x55, 0x45, 0x2d, 0x45, 0x31, 0x41, 0x50, 0x2d,
	0x49, 0x44, 0x12, 0x34, 0x0a, 0x08, 0x72, 0x61, 0x6e, 0x5f, 0x75, 0x65, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x61, 0x6e, 0x75, 0x65, 0x69, 0x64, 0x48, 0x00, 0x52, 0x08, 0x72, 0x61, 0x6e,
	0x2d, 0x55, 0x45, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x72, 0x61, 0x6e,
	0x5f, 0x75, 0x65, 0x69, 0x64, 0x22, 0xa7, 0x04, 0x0a, 0x09, 0x55, 0x65, 0x69, 0x64, 0x4e, 0x67,
	0x45, 0x6e, 0x62, 0x12, 0x3f, 0x0a, 0x0e, 0x61, 0x6d, 0x66, 0x5f, 0x75, 0x65, 0x5f, 0x6e, 0x67,
	0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6d, 0x66, 0x55, 0x65, 0x4e, 0x67,
	0x61, 0x70, 0x49, 0x64, 0x52, 0x0e, 0x61, 0x6d, 0x66, 0x2d, 0x55, 0x45, 0x2d, 0x4e, 0x47, 0x41,
	0x50, 0x2d, 0x49, 0x44, 0x12, 0x27, 0x0a, 0x05, 0x67, 0x75, 0x61, 0x6d, 0x69, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x75, 0x61, 0x6d, 0x69, 0x52, 0x05, 0x67, 0x75, 0x61, 0x6d, 0x69, 0x12, 0x56, 0x0a,
	0x16, 0x6e, 0x67, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x75, 0x65, 0x5f, 0x77,
	0x31, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x67, 0x65, 0x6e, 0x62,
	0x43, 0x75, 0x55, 0x65, 0x57, 0x31, 0x41, 0x70, 0x49, 0x64, 0x48, 0x00, 0x52, 0x14, 0x6e, 0x67,
	0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x43, 0x55, 0x2d, 0x55, 0x45, 0x2d, 0x57, 0x31, 0x41, 0x50, 0x2d,
	0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x55, 0x0a, 0x14, 0x6d, 0x5f, 0x6e, 0x67, 0x5f, 0x72, 0x61,
	0x6e, 0x5f, 0x75, 0x65, 0x5f, 0x78, 0x6e, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x67, 0x52, 0x61, 0x6e, 0x6e, 0x6f, 0x64, 0x65, 0x55, 0x65, 0x78, 0x6e, 0x41, 0x70,
	0x69, 0x64, 0x48, 0x01, 0x52, 0x13, 0x6d, 0x2d, 0x4e, 0x47, 0x2d, 0x52, 0x41, 0x4e, 0x2d, 0x55,
	0x45, 0x2d, 0x58, 0x6e, 0x41, 0x50, 0x2d, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x48, 0x0a, 0x10,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x67, 0x45, 0x6e, 0x62, 0x49,
	0x64, 0x48, 0x02, 0x52, 0x0e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x67, 0x45, 0x4e, 0x42,
	0x2d, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x55, 0x0a, 0x14, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x5f, 0x6e, 0x67, 0x5f, 0x72, 0x61, 0x6e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x67, 0x72, 0x61, 0x6e, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x48, 0x03, 0x52, 0x13, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x47, 0x2d,
	0x52, 0x41, 0x4e, 0x4e, 0x6f, 0x64, 0x65, 0x2d, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x19, 0x0a,
	0x17, 0x5f, 0x6e, 0x67, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x75, 0x65, 0x5f,
	0x77, 0x31, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x6d, 0x5f, 0x6e,
	0x67, 0x5f, 0x72, 0x61, 0x6e, 0x5f, 0x75, 0x65, 0x5f, 0x78, 0x6e, 0x5f, 0x61, 0x70, 0x5f, 0x69,
	0x64, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6e, 0x67, 0x5f,
	0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x5f, 0x6e, 0x67, 0x5f, 0x72, 0x61, 0x6e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x22,
	0x60, 0x0a, 0x0b, 0x55, 0x65, 0x69, 0x64, 0x4e, 0x67, 0x45, 0x6e, 0x62, 0x44, 0x75, 0x12, 0x51,
	0x0a, 0x16, 0x6e, 0x67, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x75, 0x65, 0x5f,
	0x77, 0x31, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x67, 0x65, 0x6e,
	0x62, 0x43, 0x75, 0x55, 0x65, 0x57, 0x31, 0x41, 0x70, 0x49, 0x64, 0x52, 0x14, 0x6e, 0x67, 0x2d,
	0x65, 0x4e, 0x42, 0x2d, 0x43, 0x55, 0x2d, 0x55, 0x45, 0x2d, 0x57, 0x31, 0x41, 0x50, 0x2d, 0x49,
	0x44, 0x22, 0xcd, 0x04, 0x0a, 0x09, 0x55, 0x65, 0x69, 0x64, 0x45, 0x6e, 0x47, 0x6e, 0x62, 0x12,
	0x45, 0x0a, 0x12, 0x6d, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x75, 0x65, 0x5f, 0x78, 0x32, 0x5f,
	0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x62, 0x55, 0x65, 0x58, 0x32,
	0x41, 0x70, 0x49, 0x64, 0x52, 0x10, 0x6d, 0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x55, 0x45, 0x2d, 0x58,
	0x32, 0x41, 0x50, 0x2d, 0x49, 0x44, 0x12, 0x67, 0x0a, 0x1c, 0x6d, 0x5f, 0x65, 0x5f, 0x6e, 0x62,
	0x5f, 0x75, 0x65, 0x5f, 0x78, 0x32, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x5f, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x62, 0x55, 0x65, 0x58,
	0x32, 0x41, 0x70, 0x49, 0x64, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x1a, 0x6d, 0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x55, 0x45, 0x2d, 0x58, 0x32, 0x41, 0x50, 0x2d,
	0x49, 0x44, 0x2d, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x3c, 0x0a, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x52,
	0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x12, 0x4e, 0x0a,
	0x13, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x75, 0x65, 0x5f, 0x66, 0x31, 0x5f, 0x61,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6e, 0x62, 0x43, 0x75, 0x55, 0x65, 0x46,
	0x31, 0x41, 0x70, 0x49, 0x64, 0x48, 0x01, 0x52, 0x11, 0x67, 0x4e, 0x42, 0x2d, 0x43, 0x55, 0x2d,
	0x55, 0x45, 0x2d, 0x46, 0x31, 0x41, 0x50, 0x2d, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x66, 0x0a,
	0x1b, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x63, 0x70, 0x5f, 0x75, 0x65, 0x5f, 0x65,
	0x31, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x65, 0x69, 0x64, 0x47, 0x6e, 0x62, 0x43, 0x75, 0x43, 0x70, 0x45, 0x31, 0x41, 0x70, 0x49,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x02, 0x52, 0x19, 0x67, 0x4e, 0x42, 0x2d, 0x43, 0x55, 0x2d,
	0x43, 0x50, 0x2d, 0x55, 0x45, 0x2d, 0x45, 0x31, 0x41, 0x50, 0x2d, 0x49, 0x44, 0x2d, 0x4c, 0x69,
	0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x08, 0x72, 0x61, 0x6e, 0x5f, 0x75, 0x65, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x75, 0x65, 0x69, 0x64, 0x48, 0x03, 0x52, 0x08,
	0x72, 0x61, 0x6e, 0x2d, 0x55, 0x45, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x1f, 0x0a, 0x1d, 0x5f,
	0x6d, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x75, 0x65, 0x5f, 0x78, 0x32, 0x5f, 0x61, 0x70, 0x5f,
	0x69, 0x64, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x16, 0x0a, 0x14,
	0x5f, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x75, 0x65, 0x5f, 0x66, 0x31, 0x5f, 0x61,
	0x70, 0x5f, 0x69, 0x64, 0x42, 0x1e, 0x0a, 0x1c, 0x5f, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75,
	0x5f, 0x63, 0x70, 0x5f, 0x75, 0x65, 0x5f, 0x65, 0x31, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x72, 0x61, 0x6e, 0x5f, 0x75, 0x65, 0x69,
	0x64, 0x22, 0xbb, 0x03, 0x0a, 0x07, 0x55, 0x65, 0x69, 0x64, 0x45, 0x6e, 0x62, 0x12, 0x41, 0x0a,
	0x10, 0x6d, 0x5f, 0x6d, 0x65, 0x5f, 0x75, 0x65, 0x5f, 0x73, 0x31, 0x5f, 0x61, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6d, 0x65, 0x55, 0x65, 0x53, 0x31, 0x41, 0x70, 0x49, 0x64,
	0x52, 0x0e, 0x6d, 0x4d, 0x45, 0x2d, 0x55, 0x45, 0x2d, 0x53, 0x31, 0x41, 0x50, 0x2d, 0x49, 0x44,
	0x12, 0x2b, 0x0a, 0x07, 0x67, 0x5f, 0x75, 0x6d, 0x6d, 0x65, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x75, 0x6d, 0x6d, 0x65, 0x69, 0x52, 0x06, 0x67, 0x55, 0x4d, 0x4d, 0x45, 0x49, 0x12, 0x4a, 0x0a,
	0x12, 0x6d, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x75, 0x65, 0x5f, 0x78, 0x32, 0x5f, 0x61, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x62, 0x55, 0x65, 0x58, 0x32, 0x41, 0x70,
	0x49, 0x64, 0x48, 0x00, 0x52, 0x10, 0x6d, 0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x55, 0x45, 0x2d, 0x58,
	0x32, 0x41, 0x50, 0x2d, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x67, 0x0a, 0x1c, 0x6d, 0x5f, 0x65,
	0x5f, 0x6e, 0x62, 0x5f, 0x75, 0x65, 0x5f, 0x78, 0x32, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x5f,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x62,
	0x55, 0x65, 0x58, 0x32, 0x41, 0x70, 0x49, 0x64, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x48, 0x01, 0x52, 0x1a, 0x6d, 0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x55, 0x45, 0x2d, 0x58, 0x32,
	0x41, 0x50, 0x2d, 0x49, 0x44, 0x2d, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x41, 0x0a, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6e, 0x62,
	0x49, 0x64, 0x48, 0x02, 0x52, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x4e, 0x42, 0x2d,
	0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x6d, 0x5f, 0x65, 0x5f, 0x6e, 0x62,
	0x5f, 0x75, 0x65, 0x5f, 0x78, 0x32, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x42, 0x1f, 0x0a, 0x1d,
	0x5f, 0x6d, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x75, 0x65, 0x5f, 0x78, 0x32, 0x5f, 0x61, 0x70,
	0x5f, 0x69, 0x64, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x22,
	0x91, 0x02, 0x0a, 0x05, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0d, 0x6d, 0x61, 0x63,
	0x72, 0x6f, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x2d, 0x65, 0x4e,
	0x42, 0x2d, 0x49, 0x44, 0x12, 0x37, 0x0a, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x65, 0x5f, 0x6e,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00,
	0x52, 0x0b, 0x68, 0x6f, 0x6d, 0x65, 0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x12, 0x45, 0x0a,
	0x13, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x5f, 0x65, 0x5f, 0x6e,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00,
	0x52, 0x12, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x2d, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x2d, 0x65, 0x4e,
	0x42, 0x2d, 0x49, 0x44, 0x12, 0x43, 0x0a, 0x12, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x63,
	0x72, 0x6f, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x11, 0x6c, 0x6f, 0x6e, 0x67, 0x2d, 0x4d, 0x61, 0x63,
	0x72, 0x6f, 0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x65, 0x6e, 0x62,
	0x5f, 0x69, 0x64, 0x22, 0x78, 0x0a, 0x0b, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6e, 0x62,
	0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0d, 0x70, 0x5f, 0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x0c, 0x70, 0x4c, 0x4d, 0x4e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x2a, 0x0a, 0x07, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x6e, 0x62, 0x49, 0x64, 0x52, 0x06, 0x65, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x22, 0xb8, 0x01,
	0x0a, 0x06, 0x47, 0x75, 0x6d, 0x6d, 0x65, 0x69, 0x12, 0x3f, 0x0a, 0x0e, 0x70, 0x5f, 0x6c, 0x6d,
	0x6e, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c,
	0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x70, 0x4c, 0x4d, 0x4e,
	0x2d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x3b, 0x0a, 0x0d, 0x6d, 0x5f, 0x6d,
	0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6d,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x52, 0x0c, 0x6d, 0x4d, 0x45, 0x2d, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x2d, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x09, 0x6d, 0x5f, 0x6d, 0x65, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x08,
	0x6d, 0x4d, 0x45, 0x2d, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x32, 0x0a, 0x0b, 0x4d, 0x6d, 0x65, 0x55,
	0x65, 0x53, 0x31, 0x41, 0x70, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x22, 0x08, 0x18, 0xff, 0xff,
	0xff, 0xff, 0x0f, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x27, 0x0a, 0x03,
	0x51, 0x63, 0x69, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0xff, 0x01, 0x28, 0x00, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3d, 0x0a, 0x19, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x66, 0x6f, 0x72, 0x52,
	0x66, 0x70, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0x80, 0x02, 0x28, 0x01, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x4b, 0x0a, 0x07, 0x45, 0x6e, 0x47, 0x6e, 0x62, 0x49, 0x64, 0x12,
	0x33, 0x0a, 0x0a, 0x65, 0x6e, 0x5f, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69,
	0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x09, 0x65, 0x6e, 0x2d, 0x67, 0x4e,
	0x42, 0x2d, 0x49, 0x44, 0x42, 0x0b, 0x0a, 0x09, 0x65, 0x6e, 0x5f, 0x67, 0x6e, 0x62, 0x5f, 0x69,
	0x64, 0x22, 0x2f, 0x0a, 0x0b, 0x45, 0x6e, 0x62, 0x55, 0x65, 0x58, 0x32, 0x41, 0x70, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0xff, 0x1f, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x38, 0x0a, 0x14, 0x45, 0x6e, 0x62, 0x55, 0x65, 0x58, 0x32, 0x41, 0x70, 0x49,
	0x64, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05,
	0x18, 0xff, 0x1f, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0a,
	0x45, 0x55, 0x74, 0x72, 0x61, 0x41, 0x72, 0x66, 0x63, 0x6e, 0x12, 0x21, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x1a, 0x06,
	0x18, 0xff, 0xff, 0x03, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a,
	0x08, 0x45, 0x55, 0x74, 0x72, 0x61, 0x50, 0x63, 0x69, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18,
	0xf7, 0x03, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x20, 0x0a, 0x08, 0x45,
	0x55, 0x74, 0x72, 0x61, 0x54, 0x61, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x84, 0x01,
	0x0a, 0x0d, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x47, 0x6e, 0x62, 0x49, 0x64, 0x12,
	0x3f, 0x0a, 0x0e, 0x70, 0x5f, 0x6c, 0x6d, 0x6e, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x0d, 0x70, 0x4c, 0x4d, 0x4e, 0x2d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x32, 0x0a, 0x0a, 0x65, 0x6e, 0x5f, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6e, 0x47, 0x6e, 0x62, 0x49, 0x64, 0x52, 0x09, 0x65, 0x6e, 0x2d, 0x67, 0x4e,
	0x42, 0x2d, 0x49, 0x44, 0x22, 0x36, 0x0a, 0x0f, 0x4e, 0x67, 0x65, 0x6e, 0x62, 0x43, 0x75, 0x55,
	0x65, 0x57, 0x31, 0x41, 0x70, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x22, 0x08, 0x18, 0xff, 0xff,
	0xff, 0xff, 0x0f, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x09,
	0x4e, 0x67, 0x65, 0x6e, 0x62, 0x44, 0x75, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x22, 0x09, 0x18,
	0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x36, 0x0a, 0x0a, 0x41, 0x6d, 0x66, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x28, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x0b, 0x41, 0x6d, 0x66, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x34, 0x0a, 0x08, 0x41, 0x6d, 0x66, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73,
	0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x0b, 0x41, 0x6d, 0x66, 0x55, 0x65, 0x4e,
	0x67, 0x61, 0x70, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x22, 0x09, 0x18, 0xff, 0xff, 0xff, 0xff,
	0xff, 0x1f, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3d, 0x0a, 0x11, 0x45,
	0x75, 0x74, 0x72, 0x61, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x08, 0x45,
	0x75, 0x74, 0x72, 0x61, 0x43, 0x67, 0x69, 0x12, 0x3d, 0x0a, 0x0d, 0x70, 0x5f, 0x6c, 0x6d, 0x6e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x6d, 0x6e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x70, 0x4c, 0x4d, 0x4e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x4d, 0x0a, 0x13, 0x65, 0x5f, 0x75, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x75, 0x74, 0x72, 0x61, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x11, 0x65, 0x55, 0x54, 0x52, 0x41, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x2a, 0x0a, 0x06, 0x46, 0x69, 0x76, 0x65, 0x51, 0x69, 0x12,
	0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0xff, 0x01, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x78, 0x0a, 0x0b, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x47, 0x6e, 0x62, 0x49, 0x64,
	0x12, 0x3d, 0x0a, 0x0d, 0x70, 0x5f, 0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x0c, 0x70, 0x4c, 0x4d, 0x4e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x2a, 0x0a, 0x07, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6e,
	0x62, 0x49, 0x64, 0x52, 0x06, 0x67, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x22, 0x80, 0x01, 0x0a, 0x0d,
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x67, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x3d, 0x0a,
	0x0d, 0x70, 0x5f, 0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0c,
	0x70, 0x4c, 0x4d, 0x4e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x09,
	0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x67, 0x45,
	0x6e, 0x62, 0x49, 0x64, 0x52, 0x08, 0x6e, 0x67, 0x45, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x22, 0x40,
	0x0a, 0x05, 0x47, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x07, 0x67, 0x5f, 0x6e, 0x62, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x06,
	0x67, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x67, 0x6e, 0x62, 0x5f, 0x69, 0x64,
	0x22, 0xf0, 0x01, 0x0a, 0x05, 0x47, 0x75, 0x61, 0x6d, 0x69, 0x12, 0x3d, 0x0a, 0x0d, 0x70, 0x5f,
	0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x70, 0x4c, 0x4d,
	0x4e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x3b, 0x0a, 0x0d, 0x61, 0x5f, 0x6d,
	0x66, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6d,
	0x66, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x0b, 0x61, 0x4d, 0x46, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x5f, 0x6d, 0x66, 0x73, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6d, 0x66, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x52, 0x08, 0x61, 0x4d, 0x46, 0x53, 0x65, 0x74, 0x49, 0x44, 0x12, 0x37, 0x0a, 0x0b, 0x61, 0x5f,
	0x6d, 0x66, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6d, 0x66,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x61, 0x4d, 0x46, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x22, 0x2f, 0x0a, 0x0b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x54, 0x6f, 0x52, 0x66,
	0x73, 0x70, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0x80, 0x02, 0x28, 0x01, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xe4, 0x01, 0x0a, 0x07, 0x4e, 0x67, 0x45, 0x6e, 0x62, 0x49, 0x64,
	0x12, 0x3c, 0x0a, 0x0f, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x5f, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52,
	0x0d, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x4e, 0x67, 0x45, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x12, 0x47,
	0x0a, 0x15, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x5f, 0x6e, 0x67,
	0x5f, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x48, 0x00, 0x52, 0x12, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x4e,
	0x67, 0x45, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x12, 0x45, 0x0a, 0x14, 0x6c, 0x6f, 0x6e, 0x67, 0x5f,
	0x6d, 0x61, 0x63, 0x72, 0x6f, 0x5f, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x11, 0x6c, 0x6f, 0x6e,
	0x67, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x4e, 0x67, 0x45, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x42, 0x0b,
	0x0a, 0x09, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x22, 0x3a, 0x0a, 0x0e, 0x4e,
	0x72, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x28, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x05, 0x4e, 0x72, 0x43, 0x67,
	0x69, 0x12, 0x3d, 0x0a, 0x0d, 0x70, 0x5f, 0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x0c, 0x70, 0x4c, 0x4d, 0x4e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x44, 0x0a, 0x10, 0x6e, 0x5f, 0x72, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x72, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0e, 0x6e, 0x52, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x34, 0x0a, 0x11, 0x51, 0x6f, 0x73, 0x46, 0x6c, 0x6f,
	0x77, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a,
	0x04, 0x18, 0x3f, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1a, 0x0a, 0x02,
	0x53, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5a, 0x0a, 0x06, 0x53, 0x4e, 0x73, 0x73,
	0x61, 0x69, 0x12, 0x22, 0x0a, 0x04, 0x73, 0x5f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x73,
	0x74, 0x52, 0x03, 0x73, 0x53, 0x54, 0x12, 0x24, 0x0a, 0x03, 0x73, 0x5f, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x64, 0x48, 0x00, 0x52, 0x02, 0x73, 0x44, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x73, 0x5f, 0x64, 0x22, 0x1b, 0x0a, 0x03, 0x53, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x38, 0x0a, 0x11, 0x4e, 0x67, 0x52, 0x61, 0x6e, 0x6e, 0x6f, 0x64, 0x65, 0x55, 0x65,
	0x78, 0x6e, 0x41, 0x70, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x22, 0x08, 0x18, 0xff, 0xff, 0xff,
	0xff, 0x0f, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x11,
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x67, 0x72, 0x61, 0x6e, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x2c, 0x0a, 0x04, 0x67, 0x5f, 0x6e, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x47, 0x6e, 0x62, 0x49, 0x64, 0x48, 0x00, 0x52, 0x03, 0x67, 0x4e, 0x42, 0x12,
	0x34, 0x0a, 0x07, 0x6e, 0x67, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x67, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x48, 0x00, 0x52, 0x06, 0x6e,
	0x67, 0x2d, 0x65, 0x4e, 0x42, 0x42, 0x15, 0x0a, 0x13, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f,
	0x6e, 0x67, 0x72, 0x61, 0x6e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x36, 0x0a, 0x0f,
	0x47, 0x6e, 0x62, 0x43, 0x75, 0x43, 0x70, 0x55, 0x65, 0x45, 0x31, 0x41, 0x70, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0d,
	0xfa, 0x42, 0x0a, 0x22, 0x08, 0x18, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x28, 0x00, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x09, 0x47, 0x6e, 0x62, 0x43, 0x75, 0x55, 0x70, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x22, 0x09, 0x18, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x28, 0x00,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x21, 0x0a, 0x09, 0x46, 0x69, 0x76, 0x65, 0x47,
	0x73, 0x54, 0x61, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x45, 0x0a, 0x0e, 0x46, 0x72,
	0x65, 0x71, 0x42, 0x61, 0x6e, 0x64, 0x4e, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x33, 0x0a, 0x16,
	0x66, 0x72, 0x65, 0x71, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x66, 0x72,
	0x65, 0x71, 0x42, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x4e,
	0x72, 0x22, 0x34, 0x0a, 0x0d, 0x47, 0x6e, 0x62, 0x43, 0x75, 0x55, 0x65, 0x46, 0x31, 0x41, 0x70,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x22, 0x08, 0x18, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x28, 0x00,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x07, 0x47, 0x6e, 0x62, 0x44, 0x75,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x22, 0x09, 0x18, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x28,
	0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x29, 0x0a, 0x05, 0x4e, 0x72, 0x50, 0x63,
	0x69, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0xef, 0x07, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x24, 0x0a, 0x07, 0x4e, 0x72, 0x41, 0x72, 0x66, 0x63, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x6e, 0x5f, 0x72, 0x61, 0x72, 0x66, 0x63, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x6e, 0x52, 0x41, 0x52, 0x46, 0x43, 0x4e, 0x22, 0x4c, 0x0a, 0x13, 0x4e, 0x72, 0x66,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x72, 0x66,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x61, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa2, 0x01, 0x0a, 0x13, 0x4e, 0x72, 0x66, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x61, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x33, 0x0a, 0x16, 0x66, 0x72, 0x65, 0x71, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x13, 0x66, 0x72, 0x65, 0x71, 0x42, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x4e, 0x72, 0x12, 0x56, 0x0a, 0x16, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x5f, 0x73, 0x75, 0x6c, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x75, 0x6c, 0x62, 0x61,
	0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x14, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x53, 0x55, 0x4c, 0x42, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x8b, 0x02, 0x0a,
	0x0f, 0x4e, 0x72, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x2e, 0x0a, 0x08, 0x6e, 0x72, 0x5f, 0x61, 0x72, 0x66, 0x63, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x72, 0x41, 0x72, 0x66, 0x63, 0x6e, 0x52, 0x07, 0x6e, 0x72, 0x41, 0x52, 0x46, 0x43, 0x4e,
	0x12, 0x50, 0x0a, 0x13, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x62, 0x61,
	0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x72, 0x66, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x12,
	0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x61, 0x6e, 0x64, 0x2d, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x5c, 0x0a, 0x15, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f,
	0x73, 0x68, 0x69, 0x66, 0x74, 0x37, 0x70, 0x35, 0x6b, 0x68, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x22, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x72, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x68, 0x69, 0x66, 0x74, 0x37,
	0x70, 0x35, 0x6b, 0x68, 0x7a, 0x48, 0x00, 0x52, 0x14, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x79, 0x53, 0x68, 0x69, 0x66, 0x74, 0x37, 0x70, 0x35, 0x6b, 0x68, 0x7a, 0x88, 0x01, 0x01,
	0x42, 0x18, 0x0a, 0x16, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x73,
	0x68, 0x69, 0x66, 0x74, 0x37, 0x70, 0x35, 0x6b, 0x68, 0x7a, 0x22, 0x52, 0x0a, 0x14, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x75, 0x6c, 0x62, 0x61, 0x6e, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x3a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x75, 0x6c, 0x66, 0x72, 0x65, 0x71, 0x42,
	0x61, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4f,
	0x0a, 0x18, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x75, 0x6c, 0x66, 0x72,
	0x65, 0x71, 0x42, 0x61, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x33, 0x0a, 0x16, 0x66, 0x72,
	0x65, 0x71, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x6e, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x66, 0x72, 0x65, 0x71,
	0x42, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x72, 0x22,
	0x1f, 0x0a, 0x07, 0x52, 0x61, 0x6e, 0x75, 0x65, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x24, 0x0a, 0x0c, 0x50, 0x6c, 0x6d, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x22, 0x0a, 0x0a, 0x4d, 0x6d, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1f, 0x0a, 0x07, 0x4d, 0x6d,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2a, 0xb1, 0x01, 0x0a, 0x0d,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x12, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4e, 0x5f, 0x47, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41,
	0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x58, 0x4e, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11,
	0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46,
	0x31, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x31, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x31, 0x10,
	0x04, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x58, 0x32, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x54, 0x45,
	0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x31, 0x10, 0x06, 0x2a,
	0xe2, 0x02, 0x0a, 0x0b, 0x52, 0x72, 0x63, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4c, 0x74, 0x65, 0x12,
	0x1a, 0x0a, 0x16, 0x52, 0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4c, 0x54, 0x45, 0x5f,
	0x42, 0x5f, 0x43, 0x43, 0x48, 0x5f, 0x42, 0x43, 0x48, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x52,
	0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4c, 0x54, 0x45, 0x5f, 0x42, 0x5f, 0x43, 0x43,
	0x48, 0x5f, 0x42, 0x43, 0x48, 0x5f, 0x4d, 0x42, 0x4d, 0x53, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19,
	0x52, 0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4c, 0x54, 0x45, 0x5f, 0x42, 0x5f, 0x43,
	0x43, 0x48, 0x5f, 0x44, 0x4c, 0x5f, 0x53, 0x43, 0x48, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x52,
	0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4c, 0x54, 0x45, 0x5f, 0x42, 0x5f, 0x43, 0x43,
	0x48, 0x5f, 0x44, 0x4c, 0x5f, 0x53, 0x43, 0x48, 0x5f, 0x42, 0x52, 0x10, 0x03, 0x12, 0x22, 0x0a,
	0x1e, 0x52, 0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4c, 0x54, 0x45, 0x5f, 0x42, 0x5f,
	0x43, 0x43, 0x48, 0x5f, 0x44, 0x4c, 0x5f, 0x53, 0x43, 0x48, 0x5f, 0x4d, 0x42, 0x4d, 0x53, 0x10,
	0x04, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4c, 0x54,
	0x45, 0x5f, 0x4d, 0x5f, 0x43, 0x43, 0x48, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x52, 0x43,
	0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4c, 0x54, 0x45, 0x5f, 0x50, 0x5f, 0x43, 0x43, 0x48, 0x10,
	0x06, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4c, 0x54,
	0x45, 0x5f, 0x44, 0x4c, 0x5f, 0x43, 0x43, 0x43, 0x48, 0x10, 0x07, 0x12, 0x18, 0x0a, 0x14, 0x52,
	0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4c, 0x54, 0x45, 0x5f, 0x44, 0x4c, 0x5f, 0x44,
	0x43, 0x43, 0x48, 0x10, 0x08, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x52, 0x43, 0x43, 0x4c, 0x41, 0x53,
	0x53, 0x5f, 0x4c, 0x54, 0x45, 0x5f, 0x55, 0x4c, 0x5f, 0x43, 0x43, 0x43, 0x48, 0x10, 0x09, 0x12,
	0x18, 0x0a, 0x14, 0x52, 0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4c, 0x54, 0x45, 0x5f,
	0x55, 0x4c, 0x5f, 0x44, 0x43, 0x43, 0x48, 0x10, 0x0a, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x52, 0x43,
	0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4c, 0x54, 0x45, 0x5f, 0x53, 0x5f, 0x43, 0x5f, 0x4d, 0x43,
	0x43, 0x48, 0x10, 0x0b, 0x2a, 0xdf, 0x01, 0x0a, 0x0a, 0x52, 0x72, 0x63, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x4e, 0x72, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f,
	0x4e, 0x52, 0x5f, 0x42, 0x5f, 0x43, 0x43, 0x48, 0x5f, 0x42, 0x43, 0x48, 0x10, 0x00, 0x12, 0x1c,
	0x0a, 0x18, 0x52, 0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4e, 0x52, 0x5f, 0x42, 0x5f,
	0x43, 0x43, 0x48, 0x5f, 0x44, 0x4c, 0x5f, 0x53, 0x43, 0x48, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14,
	0x52, 0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4e, 0x52, 0x5f, 0x44, 0x5f, 0x4c, 0x5f,
	0x43, 0x43, 0x43, 0x48, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x52, 0x43, 0x43, 0x4c, 0x41,
	0x53, 0x53, 0x5f, 0x4e, 0x52, 0x5f, 0x44, 0x5f, 0x4c, 0x5f, 0x44, 0x43, 0x43, 0x48, 0x10, 0x03,
	0x12, 0x15, 0x0a, 0x11, 0x52, 0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4e, 0x52, 0x5f,
	0x50, 0x5f, 0x43, 0x43, 0x48, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x52, 0x43, 0x43, 0x4c,
	0x41, 0x53, 0x53, 0x5f, 0x4e, 0x52, 0x5f, 0x55, 0x5f, 0x4c, 0x5f, 0x43, 0x43, 0x43, 0x48, 0x10,
	0x05, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4e, 0x52,
	0x5f, 0x55, 0x5f, 0x4c, 0x5f, 0x43, 0x43, 0x43, 0x48, 0x31, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14,
	0x52, 0x52, 0x43, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4e, 0x52, 0x5f, 0x55, 0x5f, 0x4c, 0x5f,
	0x44, 0x43, 0x43, 0x48, 0x10, 0x07, 0x2a, 0x5d, 0x0a, 0x16, 0x4e, 0x72, 0x66, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x68, 0x69, 0x66, 0x74, 0x37, 0x70, 0x35, 0x6b, 0x68, 0x7a,
	0x12, 0x21, 0x0a, 0x1d, 0x4e, 0x52, 0x46, 0x52, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x43, 0x59, 0x5f,
	0x53, 0x48, 0x49, 0x46, 0x54, 0x37, 0x50, 0x35, 0x4b, 0x48, 0x5a, 0x5f, 0x46, 0x41, 0x4c, 0x53,
	0x45, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x4e, 0x52, 0x46, 0x52, 0x45, 0x51, 0x55, 0x45, 0x4e,
	0x43, 0x59, 0x5f, 0x53, 0x48, 0x49, 0x46, 0x54, 0x37, 0x50, 0x35, 0x4b, 0x48, 0x5a, 0x5f, 0x54,
	0x52, 0x55, 0x45, 0x10, 0x01, 0x2a, 0x7e, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x1f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f,
	0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x4d, 0x45, 0x53,
	0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x46, 0x55, 0x4c, 0x5f, 0x4f, 0x55, 0x54, 0x43, 0x4f, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x25,
	0x0a, 0x21, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x46, 0x55, 0x4c, 0x5f, 0x4f, 0x55, 0x54, 0x43,
	0x4f, 0x4d, 0x45, 0x10, 0x03, 0x42, 0x4c, 0x5a, 0x4a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6e, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f,
	0x6f, 0x6e, 0x6f, 0x73, 0x2d, 0x65, 0x32, 0x2d, 0x73, 0x6d, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x63,
	0x2f, 0x76, 0x31, 0x2f, 0x65, 0x32, 0x73, 0x6d, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2d,
	0x69, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescOnce sync.Once
	file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescData = file_e2sm_rc_v1_e2sm_common_ies_proto_rawDesc
)

func file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescGZIP() []byte {
	file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescOnce.Do(func() {
		file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescData = protoimpl.X.CompressGZIP(file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescData)
	})
	return file_e2sm_rc_v1_e2sm_common_ies_proto_rawDescData
}

var file_e2sm_rc_v1_e2sm_common_ies_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes = make([]protoimpl.MessageInfo, 92)
var file_e2sm_rc_v1_e2sm_common_ies_proto_goTypes = []interface{}{
	(InterfaceType)(0),                // 0: e2sm_rc.v1.InterfaceType
	(RrcclassLte)(0),                  // 1: e2sm_rc.v1.RrcclassLte
	(RrcclassNr)(0),                   // 2: e2sm_rc.v1.RrcclassNr
	(NrfrequencyShift7P5Khz)(0),       // 3: e2sm_rc.v1.NrfrequencyShift7p5khz
	(MessageType)(0),                  // 4: e2sm_rc.v1.MessageType
	(*MaxE1Apid)(nil),                 // 5: e2sm_rc.v1.MaxE1Apid
	(*MaxF1Apid)(nil),                 // 6: e2sm_rc.v1.MaxF1Apid
	(*MaxEarfcn)(nil),                 // 7: e2sm_rc.v1.MaxEarfcn
	(*MaxNrarfcn)(nil),                // 8: e2sm_rc.v1.MaxNrarfcn
	(*MaxnoofNrCellBands)(nil),        // 9: e2sm_rc.v1.MaxnoofNrCellBands
	(*Cgi)(nil),                       // 10: e2sm_rc.v1.Cgi
	(*CoreCpid)(nil),                  // 11: e2sm_rc.v1.CoreCpid
	(*InterfaceIdentifier)(nil),       // 12: e2sm_rc.v1.InterfaceIdentifier
	(*InterfaceIdNg)(nil),             // 13: e2sm_rc.v1.InterfaceIdNg
	(*InterfaceIdXn)(nil),             // 14: e2sm_rc.v1.InterfaceIdXn
	(*InterfaceIdF1)(nil),             // 15: e2sm_rc.v1.InterfaceIdF1
	(*InterfaceIdE1)(nil),             // 16: e2sm_rc.v1.InterfaceIdE1
	(*InterfaceIdS1)(nil),             // 17: e2sm_rc.v1.InterfaceIdS1
	(*InterfaceIdX2)(nil),             // 18: e2sm_rc.v1.InterfaceIdX2
	(*NodeType)(nil),                  // 19: e2sm_rc.v1.NodeType
	(*InterfaceIdW1)(nil),             // 20: e2sm_rc.v1.InterfaceIdW1
	(*InterfaceMessageId)(nil),        // 21: e2sm_rc.v1.InterfaceMessageId
	(*GroupId)(nil),                   // 22: e2sm_rc.v1.GroupId
	(*QoSid)(nil),                     // 23: e2sm_rc.v1.QoSid
	(*RanfunctionName)(nil),           // 24: e2sm_rc.v1.RanfunctionName
	(*RicFormatType)(nil),             // 25: e2sm_rc.v1.RicFormatType
	(*RicStyleType)(nil),              // 26: e2sm_rc.v1.RicStyleType
	(*RicStyleName)(nil),              // 27: e2sm_rc.v1.RicStyleName
	(*RrcMessageId)(nil),              // 28: e2sm_rc.v1.RrcMessageId
	(*RrcType)(nil),                   // 29: e2sm_rc.v1.RrcType
	(*ServingCellArfcn)(nil),          // 30: e2sm_rc.v1.ServingCellArfcn
	(*ServingCellPci)(nil),            // 31: e2sm_rc.v1.ServingCellPci
	(*Ueid)(nil),                      // 32: e2sm_rc.v1.Ueid
	(*UeidGnb)(nil),                   // 33: e2sm_rc.v1.UeidGnb
	(*UeidGnbCuCpE1ApIdList)(nil),     // 34: e2sm_rc.v1.UeidGnbCuCpE1ApIdList
	(*UeidGnbCuCpE1ApIdItem)(nil),     // 35: e2sm_rc.v1.UeidGnbCuCpE1ApIdItem
	(*UeidGnbCuF1ApIdList)(nil),       // 36: e2sm_rc.v1.UeidGnbCuF1ApIdList
	(*UeidGnbCuCpF1ApIdItem)(nil),     // 37: e2sm_rc.v1.UeidGnbCuCpF1ApIdItem
	(*UeidGnbDu)(nil),                 // 38: e2sm_rc.v1.UeidGnbDu
	(*UeidGnbCuUp)(nil),               // 39: e2sm_rc.v1.UeidGnbCuUp
	(*UeidNgEnb)(nil),                 // 40: e2sm_rc.v1.UeidNgEnb
	(*UeidNgEnbDu)(nil),               // 41: e2sm_rc.v1.UeidNgEnbDu
	(*UeidEnGnb)(nil),                 // 42: e2sm_rc.v1.UeidEnGnb
	(*UeidEnb)(nil),                   // 43: e2sm_rc.v1.UeidEnb
	(*EnbId)(nil),                     // 44: e2sm_rc.v1.EnbId
	(*GlobalEnbId)(nil),               // 45: e2sm_rc.v1.GlobalEnbId
	(*Gummei)(nil),                    // 46: e2sm_rc.v1.Gummei
	(*MmeUeS1ApId)(nil),               // 47: e2sm_rc.v1.MmeUeS1ApId
	(*Qci)(nil),                       // 48: e2sm_rc.v1.Qci
	(*SubscriberProfileIdforRfp)(nil), // 49: e2sm_rc.v1.SubscriberProfileIdforRfp
	(*EnGnbId)(nil),                   // 50: e2sm_rc.v1.EnGnbId
	(*EnbUeX2ApId)(nil),               // 51: e2sm_rc.v1.EnbUeX2ApId
	(*EnbUeX2ApIdExtension)(nil),      // 52: e2sm_rc.v1.EnbUeX2ApIdExtension
	(*EUtraArfcn)(nil),                // 53: e2sm_rc.v1.EUtraArfcn
	(*EUtraPci)(nil),                  // 54: e2sm_rc.v1.EUtraPci
	(*EUtraTac)(nil),                  // 55: e2sm_rc.v1.EUtraTac
	(*GlobalenGnbId)(nil),             // 56: e2sm_rc.v1.GlobalenGnbId
	(*NgenbCuUeW1ApId)(nil),           // 57: e2sm_rc.v1.NgenbCuUeW1ApId
	(*NgenbDuId)(nil),                 // 58: e2sm_rc.v1.NgenbDuId
	(*Amfpointer)(nil),                // 59: e2sm_rc.v1.Amfpointer
	(*AmfregionId)(nil),               // 60: e2sm_rc.v1.AmfregionId
	(*AmfsetId)(nil),                  // 61: e2sm_rc.v1.AmfsetId
	(*AmfUeNgapId)(nil),               // 62: e2sm_rc.v1.AmfUeNgapId
	(*EutracellIdentity)(nil),         // 63: e2sm_rc.v1.EutracellIdentity
	(*EutraCgi)(nil),                  // 64: e2sm_rc.v1.EutraCgi
	(*FiveQi)(nil),                    // 65: e2sm_rc.v1.FiveQi
	(*GlobalGnbId)(nil),               // 66: e2sm_rc.v1.GlobalGnbId
	(*GlobalNgEnbId)(nil),             // 67: e2sm_rc.v1.GlobalNgEnbId
	(*GnbId)(nil),                     // 68: e2sm_rc.v1.GnbId
	(*Guami)(nil),                     // 69: e2sm_rc.v1.Guami
	(*IndexToRfsp)(nil),               // 70: e2sm_rc.v1.IndexToRfsp
	(*NgEnbId)(nil),                   // 71: e2sm_rc.v1.NgEnbId
	(*NrcellIdentity)(nil),            // 72: e2sm_rc.v1.NrcellIdentity
	(*NrCgi)(nil),                     // 73: e2sm_rc.v1.NrCgi
	(*QosFlowIdentifier)(nil),         // 74: e2sm_rc.v1.QosFlowIdentifier
	(*Sd)(nil),                        // 75: e2sm_rc.v1.Sd
	(*SNssai)(nil),                    // 76: e2sm_rc.v1.SNssai
	(*Sst)(nil),                       // 77: e2sm_rc.v1.Sst
	(*NgRannodeUexnApid)(nil),         // 78: e2sm_rc.v1.NgRannodeUexnApid
	(*GlobalNgrannodeId)(nil),         // 79: e2sm_rc.v1.GlobalNgrannodeId
	(*GnbCuCpUeE1ApId)(nil),           // 80: e2sm_rc.v1.GnbCuCpUeE1ApId
	(*GnbCuUpId)(nil),                 // 81: e2sm_rc.v1.GnbCuUpId
	(*FiveGsTac)(nil),                 // 82: e2sm_rc.v1.FiveGsTac
	(*FreqBandNrItem)(nil),            // 83: e2sm_rc.v1.FreqBandNrItem
	(*GnbCuUeF1ApId)(nil),             // 84: e2sm_rc.v1.GnbCuUeF1ApId
	(*GnbDuId)(nil),                   // 85: e2sm_rc.v1.GnbDuId
	(*NrPci)(nil),                     // 86: e2sm_rc.v1.NrPci
	(*NrArfcn)(nil),                   // 87: e2sm_rc.v1.NrArfcn
	(*NrfrequencyBandList)(nil),       // 88: e2sm_rc.v1.NrfrequencyBandList
	(*NrfrequencyBandItem)(nil),       // 89: e2sm_rc.v1.NrfrequencyBandItem
	(*NrfrequencyInfo)(nil),           // 90: e2sm_rc.v1.NrfrequencyInfo
	(*SupportedSulbandList)(nil),      // 91: e2sm_rc.v1.SupportedSulbandList
	(*SupportedSulfreqBandItem)(nil),  // 92: e2sm_rc.v1.SupportedSulfreqBandItem
	(*Ranueid)(nil),                   // 93: e2sm_rc.v1.Ranueid
	(*Plmnidentity)(nil),              // 94: e2sm_rc.v1.Plmnidentity
	(*MmeGroupId)(nil),                // 95: e2sm_rc.v1.MmeGroupId
	(*MmeCode)(nil),                   // 96: e2sm_rc.v1.MmeCode
	(*asn1.BitString)(nil),            // 97: asn1.v1.BitString
}
var file_e2sm_rc_v1_e2sm_common_ies_proto_depIdxs = []int32{
	73,  // 0: e2sm_rc.v1.Cgi.n_r_cgi:type_name -> e2sm_rc.v1.NrCgi
	64,  // 1: e2sm_rc.v1.Cgi.e_utra_cgi:type_name -> e2sm_rc.v1.EutraCgi
	69,  // 2: e2sm_rc.v1.CoreCpid.five_gc:type_name -> e2sm_rc.v1.Guami
	46,  // 3: e2sm_rc.v1.CoreCpid.e_pc:type_name -> e2sm_rc.v1.Gummei
	13,  // 4: e2sm_rc.v1.InterfaceIdentifier.n_g:type_name -> e2sm_rc.v1.InterfaceIdNg
	14,  // 5: e2sm_rc.v1.InterfaceIdentifier.x_n:type_name -> e2sm_rc.v1.InterfaceIdXn
	15,  // 6: e2sm_rc.v1.InterfaceIdentifier.f1:type_name -> e2sm_rc.v1.InterfaceIdF1
	16,  // 7: e2sm_rc.v1.InterfaceIdentifier.e1:type_name -> e2sm_rc.v1.InterfaceIdE1
	17,  // 8: e2sm_rc.v1.InterfaceIdentifier.s1:type_name -> e2sm_rc.v1.InterfaceIdS1
	18,  // 9: e2sm_rc.v1.InterfaceIdentifier.x2:type_name -> e2sm_rc.v1.InterfaceIdX2
	20,  // 10: e2sm_rc.v1.InterfaceIdentifier.w1:type_name -> e2sm_rc.v1.InterfaceIdW1
	69,  // 11: e2sm_rc.v1.InterfaceIdNg.guami:type_name -> e2sm_rc.v1.Guami
	79,  // 12: e2sm_rc.v1.InterfaceIdXn.global_ng_ran_id:type_name -> e2sm_rc.v1.GlobalNgrannodeId
	66,  // 13: e2sm_rc.v1.InterfaceIdF1.global_gnb_id:type_name -> e2sm_rc.v1.GlobalGnbId
	85,  // 14: e2sm_rc.v1.InterfaceIdF1.g_nb_du_id:type_name -> e2sm_rc.v1.GnbDuId
	66,  // 15: e2sm_rc.v1.InterfaceIdE1.global_gnb_id:type_name -> e2sm_rc.v1.GlobalGnbId
	81,  // 16: e2sm_rc.v1.InterfaceIdE1.g_nb_cu_up_id:type_name -> e2sm_rc.v1.GnbCuUpId
	46,  // 17: e2sm_rc.v1.InterfaceIdS1.g_ummei:type_name -> e2sm_rc.v1.Gummei
	19,  // 18: e2sm_rc.v1.InterfaceIdX2.node_type:type_name -> e2sm_rc.v1.NodeType
	45,  // 19: e2sm_rc.v1.NodeType.global_enb_id:type_name -> e2sm_rc.v1.GlobalEnbId
	56,  // 20: e2sm_rc.v1.NodeType.global_en_gnb_id:type_name -> e2sm_rc.v1.GlobalenGnbId
	67,  // 21: e2sm_rc.v1.InterfaceIdW1.global_ng_e_nb_id:type_name -> e2sm_rc.v1.GlobalNgEnbId
	58,  // 22: e2sm_rc.v1.InterfaceIdW1.ng_e_nb_du_id:type_name -> e2sm_rc.v1.NgenbDuId
	4,   // 23: e2sm_rc.v1.InterfaceMessageId.message_type:type_name -> e2sm_rc.v1.MessageType
	65,  // 24: e2sm_rc.v1.GroupId.five_gc:type_name -> e2sm_rc.v1.FiveQi
	48,  // 25: e2sm_rc.v1.GroupId.e_pc:type_name -> e2sm_rc.v1.Qci
	65,  // 26: e2sm_rc.v1.QoSid.five_gc:type_name -> e2sm_rc.v1.FiveQi
	48,  // 27: e2sm_rc.v1.QoSid.e_pc:type_name -> e2sm_rc.v1.Qci
	29,  // 28: e2sm_rc.v1.RrcMessageId.rrc_type:type_name -> e2sm_rc.v1.RrcType
	1,   // 29: e2sm_rc.v1.RrcType.lte:type_name -> e2sm_rc.v1.RrcclassLte
	2,   // 30: e2sm_rc.v1.RrcType.nr:type_name -> e2sm_rc.v1.RrcclassNr
	87,  // 31: e2sm_rc.v1.ServingCellArfcn.n_r:type_name -> e2sm_rc.v1.NrArfcn
	53,  // 32: e2sm_rc.v1.ServingCellArfcn.e_utra:type_name -> e2sm_rc.v1.EUtraArfcn
	86,  // 33: e2sm_rc.v1.ServingCellPci.n_r:type_name -> e2sm_rc.v1.NrPci
	54,  // 34: e2sm_rc.v1.ServingCellPci.e_utra:type_name -> e2sm_rc.v1.EUtraPci
	33,  // 35: e2sm_rc.v1.Ueid.g_nb_ueid:type_name -> e2sm_rc.v1.UeidGnb
	38,  // 36: e2sm_rc.v1.Ueid.g_nb_du_ueid:type_name -> e2sm_rc.v1.UeidGnbDu
	39,  // 37: e2sm_rc.v1.Ueid.g_nb_cu_up_ueid:type_name -> e2sm_rc.v1.UeidGnbCuUp
	40,  // 38: e2sm_rc.v1.Ueid.ng_e_nb_ueid:type_name -> e2sm_rc.v1.UeidNgEnb
	41,  // 39: e2sm_rc.v1.Ueid.ng_e_nb_du_ueid:type_name -> e2sm_rc.v1.UeidNgEnbDu
	42,  // 40: e2sm_rc.v1.Ueid.en_g_nb_ueid:type_name -> e2sm_rc.v1.UeidEnGnb
	43,  // 41: e2sm_rc.v1.Ueid.e_nb_ueid:type_name -> e2sm_rc.v1.UeidEnb
	62,  // 42: e2sm_rc.v1.UeidGnb.amf_ue_ngap_id:type_name -> e2sm_rc.v1.AmfUeNgapId
	69,  // 43: e2sm_rc.v1.UeidGnb.guami:type_name -> e2sm_rc.v1.Guami
	36,  // 44: e2sm_rc.v1.UeidGnb.g_nb_cu_ue_f1_ap_id_list:type_name -> e2sm_rc.v1.UeidGnbCuF1ApIdList
	34,  // 45: e2sm_rc.v1.UeidGnb.g_nb_cu_cp_ue_e1_ap_id_list:type_name -> e2sm_rc.v1.UeidGnbCuCpE1ApIdList
	93,  // 46: e2sm_rc.v1.UeidGnb.ran_ueid:type_name -> e2sm_rc.v1.Ranueid
	78,  // 47: e2sm_rc.v1.UeidGnb.m_ng_ran_ue_xn_ap_id:type_name -> e2sm_rc.v1.NgRannodeUexnApid
	66,  // 48: e2sm_rc.v1.UeidGnb.global_gnb_id:type_name -> e2sm_rc.v1.GlobalGnbId
	79,  // 49: e2sm_rc.v1.UeidGnb.global_ng_rannode_id:type_name -> e2sm_rc.v1.GlobalNgrannodeId
	35,  // 50: e2sm_rc.v1.UeidGnbCuCpE1ApIdList.value:type_name -> e2sm_rc.v1.UeidGnbCuCpE1ApIdItem
	80,  // 51: e2sm_rc.v1.UeidGnbCuCpE1ApIdItem.g_nb_cu_cp_ue_e1_ap_id:type_name -> e2sm_rc.v1.GnbCuCpUeE1ApId
	37,  // 52: e2sm_rc.v1.UeidGnbCuF1ApIdList.value:type_name -> e2sm_rc.v1.UeidGnbCuCpF1ApIdItem
	84,  // 53: e2sm_rc.v1.UeidGnbCuCpF1ApIdItem.g_nb_cu_ue_f1_ap_id:type_name -> e2sm_rc.v1.GnbCuUeF1ApId
	84,  // 54: e2sm_rc.v1.UeidGnbDu.g_nb_cu_ue_f1_ap_id:type_name -> e2sm_rc.v1.GnbCuUeF1ApId
	93,  // 55: e2sm_rc.v1.UeidGnbDu.ran_ueid:type_name -> e2sm_rc.v1.Ranueid
	80,  // 56: e2sm_rc.v1.UeidGnbCuUp.g_nb_cu_cp_ue_e1_ap_id:type_name -> e2sm_rc.v1.GnbCuCpUeE1ApId
	93,  // 57: e2sm_rc.v1.UeidGnbCuUp.ran_ueid:type_name -> e2sm_rc.v1.Ranueid
	62,  // 58: e2sm_rc.v1.UeidNgEnb.amf_ue_ngap_id:type_name -> e2sm_rc.v1.AmfUeNgapId
	69,  // 59: e2sm_rc.v1.UeidNgEnb.guami:type_name -> e2sm_rc.v1.Guami
	57,  // 60: e2sm_rc.v1.UeidNgEnb.ng_e_nb_cu_ue_w1_ap_id:type_name -> e2sm_rc.v1.NgenbCuUeW1ApId
	78,  // 61: e2sm_rc.v1.UeidNgEnb.m_ng_ran_ue_xn_ap_id:type_name -> e2sm_rc.v1.NgRannodeUexnApid
	67,  // 62: e2sm_rc.v1.UeidNgEnb.global_ng_enb_id:type_name -> e2sm_rc.v1.GlobalNgEnbId
	79,  // 63: e2sm_rc.v1.UeidNgEnb.global_ng_rannode_id:type_name -> e2sm_rc.v1.GlobalNgrannodeId
	57,  // 64: e2sm_rc.v1.UeidNgEnbDu.ng_e_nb_cu_ue_w1_ap_id:type_name -> e2sm_rc.v1.NgenbCuUeW1ApId
	51,  // 65: e2sm_rc.v1.UeidEnGnb.m_e_nb_ue_x2_ap_id:type_name -> e2sm_rc.v1.EnbUeX2ApId
	52,  // 66: e2sm_rc.v1.UeidEnGnb.m_e_nb_ue_x2_ap_id_extension:type_name -> e2sm_rc.v1.EnbUeX2ApIdExtension
	45,  // 67: e2sm_rc.v1.UeidEnGnb.global_enb_id:type_name -> e2sm_rc.v1.GlobalEnbId
	84,  // 68: e2sm_rc.v1.UeidEnGnb.g_nb_cu_ue_f1_ap_id:type_name -> e2sm_rc.v1.GnbCuUeF1ApId
	34,  // 69: e2sm_rc.v1.UeidEnGnb.g_nb_cu_cp_ue_e1_ap_id_list:type_name -> e2sm_rc.v1.UeidGnbCuCpE1ApIdList
	93,  // 70: e2sm_rc.v1.UeidEnGnb.ran_ueid:type_name -> e2sm_rc.v1.Ranueid
	47,  // 71: e2sm_rc.v1.UeidEnb.m_me_ue_s1_ap_id:type_name -> e2sm_rc.v1.MmeUeS1ApId
	46,  // 72: e2sm_rc.v1.UeidEnb.g_ummei:type_name -> e2sm_rc.v1.Gummei
	51,  // 73: e2sm_rc.v1.UeidEnb.m_e_nb_ue_x2_ap_id:type_name -> e2sm_rc.v1.EnbUeX2ApId
	52,  // 74: e2sm_rc.v1.UeidEnb.m_e_nb_ue_x2_ap_id_extension:type_name -> e2sm_rc.v1.EnbUeX2ApIdExtension
	45,  // 75: e2sm_rc.v1.UeidEnb.global_enb_id:type_name -> e2sm_rc.v1.GlobalEnbId
	97,  // 76: e2sm_rc.v1.EnbId.macro_e_nb_id:type_name -> asn1.v1.BitString
	97,  // 77: e2sm_rc.v1.EnbId.home_e_nb_id:type_name -> asn1.v1.BitString
	97,  // 78: e2sm_rc.v1.EnbId.short_macro_e_nb_id:type_name -> asn1.v1.BitString
	97,  // 79: e2sm_rc.v1.EnbId.long_macro_e_nb_id:type_name -> asn1.v1.BitString
	94,  // 80: e2sm_rc.v1.GlobalEnbId.p_lmnidentity:type_name -> e2sm_rc.v1.Plmnidentity
	44,  // 81: e2sm_rc.v1.GlobalEnbId.e_nb_id:type_name -> e2sm_rc.v1.EnbId
	94,  // 82: e2sm_rc.v1.Gummei.p_lmn_identity:type_name -> e2sm_rc.v1.Plmnidentity
	95,  // 83: e2sm_rc.v1.Gummei.m_me_group_id:type_name -> e2sm_rc.v1.MmeGroupId
	96,  // 84: e2sm_rc.v1.Gummei.m_me_code:type_name -> e2sm_rc.v1.MmeCode
	97,  // 85: e2sm_rc.v1.EnGnbId.en_g_nb_id:type_name -> asn1.v1.BitString
	94,  // 86: e2sm_rc.v1.GlobalenGnbId.p_lmn_identity:type_name -> e2sm_rc.v1.Plmnidentity
	50,  // 87: e2sm_rc.v1.GlobalenGnbId.en_g_nb_id:type_name -> e2sm_rc.v1.EnGnbId
	97,  // 88: e2sm_rc.v1.Amfpointer.value:type_name -> asn1.v1.BitString
	97,  // 89: e2sm_rc.v1.AmfregionId.value:type_name -> asn1.v1.BitString
	97,  // 90: e2sm_rc.v1.AmfsetId.value:type_name -> asn1.v1.BitString
	97,  // 91: e2sm_rc.v1.EutracellIdentity.value:type_name -> asn1.v1.BitString
	94,  // 92: e2sm_rc.v1.EutraCgi.p_lmnidentity:type_name -> e2sm_rc.v1.Plmnidentity
	63,  // 93: e2sm_rc.v1.EutraCgi.e_utracell_identity:type_name -> e2sm_rc.v1.EutracellIdentity
	94,  // 94: e2sm_rc.v1.GlobalGnbId.p_lmnidentity:type_name -> e2sm_rc.v1.Plmnidentity
	68,  // 95: e2sm_rc.v1.GlobalGnbId.g_nb_id:type_name -> e2sm_rc.v1.GnbId
	94,  // 96: e2sm_rc.v1.GlobalNgEnbId.p_lmnidentity:type_name -> e2sm_rc.v1.Plmnidentity
	71,  // 97: e2sm_rc.v1.GlobalNgEnbId.ng_enb_id:type_name -> e2sm_rc.v1.NgEnbId
	97,  // 98: e2sm_rc.v1.GnbId.g_nb_id:type_name -> asn1.v1.BitString
	94,  // 99: e2sm_rc.v1.Guami.p_lmnidentity:type_name -> e2sm_rc.v1.Plmnidentity
	60,  // 100: e2sm_rc.v1.Guami.a_mfregion_id:type_name -> e2sm_rc.v1.AmfregionId
	61,  // 101: e2sm_rc.v1.Guami.a_mfset_id:type_name -> e2sm_rc.v1.AmfsetId
	59,  // 102: e2sm_rc.v1.Guami.a_mfpointer:type_name -> e2sm_rc.v1.Amfpointer
	97,  // 103: e2sm_rc.v1.NgEnbId.macro_ng_enb_id:type_name -> asn1.v1.BitString
	97,  // 104: e2sm_rc.v1.NgEnbId.short_macro_ng_enb_id:type_name -> asn1.v1.BitString
	97,  // 105: e2sm_rc.v1.NgEnbId.long_macro_ng_enb_id:type_name -> asn1.v1.BitString
	97,  // 106: e2sm_rc.v1.NrcellIdentity.value:type_name -> asn1.v1.BitString
	94,  // 107: e2sm_rc.v1.NrCgi.p_lmnidentity:type_name -> e2sm_rc.v1.Plmnidentity
	72,  // 108: e2sm_rc.v1.NrCgi.n_rcell_identity:type_name -> e2sm_rc.v1.NrcellIdentity
	77,  // 109: e2sm_rc.v1.SNssai.s_st:type_name -> e2sm_rc.v1.Sst
	75,  // 110: e2sm_rc.v1.SNssai.s_d:type_name -> e2sm_rc.v1.Sd
	66,  // 111: e2sm_rc.v1.GlobalNgrannodeId.g_nb:type_name -> e2sm_rc.v1.GlobalGnbId
	67,  // 112: e2sm_rc.v1.GlobalNgrannodeId.ng_e_nb:type_name -> e2sm_rc.v1.GlobalNgEnbId
	89,  // 113: e2sm_rc.v1.NrfrequencyBandList.value:type_name -> e2sm_rc.v1.NrfrequencyBandItem
	91,  // 114: e2sm_rc.v1.NrfrequencyBandItem.supported_sulband_list:type_name -> e2sm_rc.v1.SupportedSulbandList
	87,  // 115: e2sm_rc.v1.NrfrequencyInfo.nr_arfcn:type_name -> e2sm_rc.v1.NrArfcn
	88,  // 116: e2sm_rc.v1.NrfrequencyInfo.frequency_band_list:type_name -> e2sm_rc.v1.NrfrequencyBandList
	3,   // 117: e2sm_rc.v1.NrfrequencyInfo.frequency_shift7p5khz:type_name -> e2sm_rc.v1.NrfrequencyShift7p5khz
	92,  // 118: e2sm_rc.v1.SupportedSulbandList.value:type_name -> e2sm_rc.v1.SupportedSulfreqBandItem
	119, // [119:119] is the sub-list for method output_type
	119, // [119:119] is the sub-list for method input_type
	119, // [119:119] is the sub-list for extension type_name
	119, // [119:119] is the sub-list for extension extendee
	0,   // [0:119] is the sub-list for field type_name
}

func init() { file_e2sm_rc_v1_e2sm_common_ies_proto_init() }
func file_e2sm_rc_v1_e2sm_common_ies_proto_init() {
	if File_e2sm_rc_v1_e2sm_common_ies_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxE1Apid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxF1Apid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxEarfcn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxNrarfcn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofNrCellBands); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cgi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoreCpid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceIdNg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceIdXn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceIdF1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceIdE1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceIdS1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceIdX2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceIdW1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceMessageId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QoSid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanfunctionName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicFormatType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicStyleType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicStyleName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RrcMessageId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RrcType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServingCellArfcn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServingCellPci); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ueid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UeidGnb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UeidGnbCuCpE1ApIdList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UeidGnbCuCpE1ApIdItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UeidGnbCuF1ApIdList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UeidGnbCuCpF1ApIdItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UeidGnbDu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UeidGnbCuUp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UeidNgEnb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UeidNgEnbDu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UeidEnGnb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UeidEnb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalEnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Gummei); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MmeUeS1ApId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qci); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriberProfileIdforRfp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnGnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnbUeX2ApId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnbUeX2ApIdExtension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EUtraArfcn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EUtraPci); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EUtraTac); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalenGnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NgenbCuUeW1ApId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NgenbDuId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Amfpointer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AmfregionId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AmfsetId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AmfUeNgapId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EutracellIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EutraCgi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FiveQi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalGnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalNgEnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Guami); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexToRfsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NgEnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NrcellIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NrCgi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QosFlowIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SNssai); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NgRannodeUexnApid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalNgrannodeId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnbCuCpUeE1ApId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnbCuUpId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FiveGsTac); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreqBandNrItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnbCuUeF1ApId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnbDuId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NrPci); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NrArfcn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NrfrequencyBandList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NrfrequencyBandItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NrfrequencyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportedSulbandList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportedSulfreqBandItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ranueid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plmnidentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MmeGroupId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MmeCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Cgi_NRCgi)(nil),
		(*Cgi_EUtraCgi)(nil),
	}
	file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*CoreCpid_FiveGc)(nil),
		(*CoreCpid_EPc)(nil),
	}
	file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*InterfaceIdentifier_NG)(nil),
		(*InterfaceIdentifier_XN)(nil),
		(*InterfaceIdentifier_F1)(nil),
		(*InterfaceIdentifier_E1)(nil),
		(*InterfaceIdentifier_S1)(nil),
		(*InterfaceIdentifier_X2)(nil),
		(*InterfaceIdentifier_W1)(nil),
	}
	file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*NodeType_GlobalEnbId)(nil),
		(*NodeType_GlobalEnGnbId)(nil),
	}
	file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*GroupId_FiveGc)(nil),
		(*GroupId_EPc)(nil),
	}
	file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*QoSid_FiveGc)(nil),
		(*QoSid_EPc)(nil),
	}
	file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[24].OneofWrappers = []interface{}{
		(*RrcType_Lte)(nil),
		(*RrcType_Nr)(nil),
	}
	file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[25].OneofWrappers = []interface{}{
		(*ServingCellArfcn_NR)(nil),
		(*ServingCellArfcn_EUtra)(nil),
	}
	file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[26].OneofWrappers = []interface{}{
		(*ServingCellPci_NR)(nil),
		(*ServingCellPci_EUtra)(nil),
	}
	file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[27].OneofWrappers = []interface{}{
		(*Ueid_GNbUeid)(nil),
		(*Ueid_GNbDuUeid)(nil),
		(*Ueid_GNbCuUpUeid)(nil),
		(*Ueid_NgENbUeid)(nil),
		(*Ueid_NgENbDuUeid)(nil),
		(*Ueid_EnGNbUeid)(nil),
		(*Ueid_ENbUeid)(nil),
	}
	file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[28].OneofWrappers = []interface{}{}
	file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[33].OneofWrappers = []interface{}{}
	file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[34].OneofWrappers = []interface{}{}
	file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[35].OneofWrappers = []interface{}{}
	file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[37].OneofWrappers = []interface{}{}
	file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[38].OneofWrappers = []interface{}{}
	file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[39].OneofWrappers = []interface{}{
		(*EnbId_MacroENbId)(nil),
		(*EnbId_HomeENbId)(nil),
		(*EnbId_ShortMacroENbId)(nil),
		(*EnbId_LongMacroENbId)(nil),
	}
	file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[45].OneofWrappers = []interface{}{
		(*EnGnbId_EnGNbId)(nil),
	}
	file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[63].OneofWrappers = []interface{}{
		(*GnbId_GNbId)(nil),
	}
	file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[66].OneofWrappers = []interface{}{
		(*NgEnbId_MacroNgEnbId)(nil),
		(*NgEnbId_ShortMacroNgEnbId)(nil),
		(*NgEnbId_LongMacroNgEnbId)(nil),
	}
	file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[71].OneofWrappers = []interface{}{}
	file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[74].OneofWrappers = []interface{}{
		(*GlobalNgrannodeId_GNb)(nil),
		(*GlobalNgrannodeId_NgENb)(nil),
	}
	file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes[85].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_e2sm_rc_v1_e2sm_common_ies_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   92,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_e2sm_rc_v1_e2sm_common_ies_proto_goTypes,
		DependencyIndexes: file_e2sm_rc_v1_e2sm_common_ies_proto_depIdxs,
		EnumInfos:         file_e2sm_rc_v1_e2sm_common_ies_proto_enumTypes,
		MessageInfos:      file_e2sm_rc_v1_e2sm_common_ies_proto_msgTypes,
	}.Build()
	File_e2sm_rc_v1_e2sm_common_ies_proto = out.File
	file_e2sm_rc_v1_e2sm_common_ies_proto_rawDesc = nil
	file_e2sm_rc_v1_e2sm_common_ies_proto_goTypes = nil
	file_e2sm_rc_v1_e2sm_common_ies_proto_depIdxs = nil
}
