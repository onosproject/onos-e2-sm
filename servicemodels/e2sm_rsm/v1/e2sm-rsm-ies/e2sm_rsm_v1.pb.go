// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.17.1
// source: e2sm_rsm/v1/e2sm_rsm_v1.proto

package e2sm_rsm_ies

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	e2sm_v2_ies "github.com/onosproject/onos-e2-sm/servicemodels/e2sm_rsm/v1/e2sm-v2-ies"
	_ "github.com/onosproject/onos-lib-go/api/asn1/v1/asn1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// enumerated from e2sm-rsm-v1.asn:45
type UeIdType int32

const (
	UeIdType_UE_ID_TYPE_CU_UE_F1_AP_ID  UeIdType = 0
	UeIdType_UE_ID_TYPE_DU_UE_F1_AP_ID  UeIdType = 1
	UeIdType_UE_ID_TYPE_RAN_UE_NGAP_ID  UeIdType = 2
	UeIdType_UE_ID_TYPE_AMF_UE_NGAP_ID  UeIdType = 3
	UeIdType_UE_ID_TYPE_ENB_UE_S1_AP_ID UeIdType = 4
)

// Enum value maps for UeIdType.
var (
	UeIdType_name = map[int32]string{
		0: "UE_ID_TYPE_CU_UE_F1_AP_ID",
		1: "UE_ID_TYPE_DU_UE_F1_AP_ID",
		2: "UE_ID_TYPE_RAN_UE_NGAP_ID",
		3: "UE_ID_TYPE_AMF_UE_NGAP_ID",
		4: "UE_ID_TYPE_ENB_UE_S1_AP_ID",
	}
	UeIdType_value = map[string]int32{
		"UE_ID_TYPE_CU_UE_F1_AP_ID":  0,
		"UE_ID_TYPE_DU_UE_F1_AP_ID":  1,
		"UE_ID_TYPE_RAN_UE_NGAP_ID":  2,
		"UE_ID_TYPE_AMF_UE_NGAP_ID":  3,
		"UE_ID_TYPE_ENB_UE_S1_AP_ID": 4,
	}
)

func (x UeIdType) Enum() *UeIdType {
	p := new(UeIdType)
	*p = x
	return p
}

func (x UeIdType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UeIdType) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_enumTypes[0].Descriptor()
}

func (UeIdType) Type() protoreflect.EnumType {
	return &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_enumTypes[0]
}

func (x UeIdType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UeIdType.Descriptor instead.
func (UeIdType) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{0}
}

// enumerated from e2sm-rsm-v1.asn:73
type SlicingType int32

const (
	SlicingType_SLICING_TYPE_STATIC  SlicingType = 0
	SlicingType_SLICING_TYPE_DYNAMIC SlicingType = 1
)

// Enum value maps for SlicingType.
var (
	SlicingType_name = map[int32]string{
		0: "SLICING_TYPE_STATIC",
		1: "SLICING_TYPE_DYNAMIC",
	}
	SlicingType_value = map[string]int32{
		"SLICING_TYPE_STATIC":  0,
		"SLICING_TYPE_DYNAMIC": 1,
	}
)

func (x SlicingType) Enum() *SlicingType {
	p := new(SlicingType)
	*p = x
	return p
}

func (x SlicingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SlicingType) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_enumTypes[1].Descriptor()
}

func (SlicingType) Type() protoreflect.EnumType {
	return &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_enumTypes[1]
}

func (x SlicingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SlicingType.Descriptor instead.
func (SlicingType) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{1}
}

// enumerated from e2sm-rsm-v1.asn:109
type RsmTriggerType int32

const (
	RsmTriggerType_RSM_TRIGGER_TYPE_UE_ATTACH          RsmTriggerType = 0
	RsmTriggerType_RSM_TRIGGER_TYPE_UE_DETACH          RsmTriggerType = 1
	RsmTriggerType_RSM_TRIGGER_TYPE_HAND_IN_UE_ATTACH  RsmTriggerType = 2
	RsmTriggerType_RSM_TRIGGER_TYPE_HAND_OUT_UE_ATTACH RsmTriggerType = 3
)

// Enum value maps for RsmTriggerType.
var (
	RsmTriggerType_name = map[int32]string{
		0: "RSM_TRIGGER_TYPE_UE_ATTACH",
		1: "RSM_TRIGGER_TYPE_UE_DETACH",
		2: "RSM_TRIGGER_TYPE_HAND_IN_UE_ATTACH",
		3: "RSM_TRIGGER_TYPE_HAND_OUT_UE_ATTACH",
	}
	RsmTriggerType_value = map[string]int32{
		"RSM_TRIGGER_TYPE_UE_ATTACH":          0,
		"RSM_TRIGGER_TYPE_UE_DETACH":          1,
		"RSM_TRIGGER_TYPE_HAND_IN_UE_ATTACH":  2,
		"RSM_TRIGGER_TYPE_HAND_OUT_UE_ATTACH": 3,
	}
)

func (x RsmTriggerType) Enum() *RsmTriggerType {
	p := new(RsmTriggerType)
	*p = x
	return p
}

func (x RsmTriggerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RsmTriggerType) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_enumTypes[2].Descriptor()
}

func (RsmTriggerType) Type() protoreflect.EnumType {
	return &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_enumTypes[2]
}

func (x RsmTriggerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RsmTriggerType.Descriptor instead.
func (RsmTriggerType) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{2}
}

// enumerated from e2sm-rsm-v1.asn:151
type Emmcase int32

const (
	Emmcase_EMMCASE_ATTACHED Emmcase = 0
	Emmcase_EMMCASE_DETACHED Emmcase = 1
)

// Enum value maps for Emmcase.
var (
	Emmcase_name = map[int32]string{
		0: "EMMCASE_ATTACHED",
		1: "EMMCASE_DETACHED",
	}
	Emmcase_value = map[string]int32{
		"EMMCASE_ATTACHED": 0,
		"EMMCASE_DETACHED": 1,
	}
)

func (x Emmcase) Enum() *Emmcase {
	p := new(Emmcase)
	*p = x
	return p
}

func (x Emmcase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Emmcase) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_enumTypes[3].Descriptor()
}

func (Emmcase) Type() protoreflect.EnumType {
	return &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_enumTypes[3]
}

func (x Emmcase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Emmcase.Descriptor instead.
func (Emmcase) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{3}
}

// enumerated from e2sm-rsm-v1.asn:173
type E2SmRsmCommand int32

const (
	E2SmRsmCommand_E2_SM_RSM_COMMAND_SLICE_CREATE   E2SmRsmCommand = 0
	E2SmRsmCommand_E2_SM_RSM_COMMAND_SLICE_UPDATE   E2SmRsmCommand = 1
	E2SmRsmCommand_E2_SM_RSM_COMMAND_SLICE_DELETE   E2SmRsmCommand = 2
	E2SmRsmCommand_E2_SM_RSM_COMMAND_UE_ASSOCIATE   E2SmRsmCommand = 3
	E2SmRsmCommand_E2_SM_RSM_COMMAND_EVENT_TRIGGERS E2SmRsmCommand = 4
)

// Enum value maps for E2SmRsmCommand.
var (
	E2SmRsmCommand_name = map[int32]string{
		0: "E2_SM_RSM_COMMAND_SLICE_CREATE",
		1: "E2_SM_RSM_COMMAND_SLICE_UPDATE",
		2: "E2_SM_RSM_COMMAND_SLICE_DELETE",
		3: "E2_SM_RSM_COMMAND_UE_ASSOCIATE",
		4: "E2_SM_RSM_COMMAND_EVENT_TRIGGERS",
	}
	E2SmRsmCommand_value = map[string]int32{
		"E2_SM_RSM_COMMAND_SLICE_CREATE":   0,
		"E2_SM_RSM_COMMAND_SLICE_UPDATE":   1,
		"E2_SM_RSM_COMMAND_SLICE_DELETE":   2,
		"E2_SM_RSM_COMMAND_UE_ASSOCIATE":   3,
		"E2_SM_RSM_COMMAND_EVENT_TRIGGERS": 4,
	}
)

func (x E2SmRsmCommand) Enum() *E2SmRsmCommand {
	p := new(E2SmRsmCommand)
	*p = x
	return p
}

func (x E2SmRsmCommand) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (E2SmRsmCommand) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_enumTypes[4].Descriptor()
}

func (E2SmRsmCommand) Type() protoreflect.EnumType {
	return &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_enumTypes[4]
}

func (x E2SmRsmCommand) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use E2SmRsmCommand.Descriptor instead.
func (E2SmRsmCommand) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{4}
}

// enumerated from e2sm-rsm-v1.asn:187
type SchedulerType int32

const (
	SchedulerType_SCHEDULER_TYPE_ROUND_ROBIN         SchedulerType = 0
	SchedulerType_SCHEDULER_TYPE_PROPORTIONALLY_FAIR SchedulerType = 1
	SchedulerType_SCHEDULER_TYPE_QOS_BASED           SchedulerType = 2
)

// Enum value maps for SchedulerType.
var (
	SchedulerType_name = map[int32]string{
		0: "SCHEDULER_TYPE_ROUND_ROBIN",
		1: "SCHEDULER_TYPE_PROPORTIONALLY_FAIR",
		2: "SCHEDULER_TYPE_QOS_BASED",
	}
	SchedulerType_value = map[string]int32{
		"SCHEDULER_TYPE_ROUND_ROBIN":         0,
		"SCHEDULER_TYPE_PROPORTIONALLY_FAIR": 1,
		"SCHEDULER_TYPE_QOS_BASED":           2,
	}
)

func (x SchedulerType) Enum() *SchedulerType {
	p := new(SchedulerType)
	*p = x
	return p
}

func (x SchedulerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SchedulerType) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_enumTypes[5].Descriptor()
}

func (SchedulerType) Type() protoreflect.EnumType {
	return &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_enumTypes[5]
}

func (x SchedulerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SchedulerType.Descriptor instead.
func (SchedulerType) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{5}
}

// enumerated from e2sm-rsm-v1.asn:321
type AggregationLevelCap int32

const (
	AggregationLevelCap_AGGREGATION_LEVEL_CAP_ONE     AggregationLevelCap = 0
	AggregationLevelCap_AGGREGATION_LEVEL_CAP_TWO     AggregationLevelCap = 1
	AggregationLevelCap_AGGREGATION_LEVEL_CAP_FOUR    AggregationLevelCap = 2
	AggregationLevelCap_AGGREGATION_LEVEL_CAP_EIGHT   AggregationLevelCap = 3
	AggregationLevelCap_AGGREGATION_LEVEL_CAP_SIXTEEN AggregationLevelCap = 4
)

// Enum value maps for AggregationLevelCap.
var (
	AggregationLevelCap_name = map[int32]string{
		0: "AGGREGATION_LEVEL_CAP_ONE",
		1: "AGGREGATION_LEVEL_CAP_TWO",
		2: "AGGREGATION_LEVEL_CAP_FOUR",
		3: "AGGREGATION_LEVEL_CAP_EIGHT",
		4: "AGGREGATION_LEVEL_CAP_SIXTEEN",
	}
	AggregationLevelCap_value = map[string]int32{
		"AGGREGATION_LEVEL_CAP_ONE":     0,
		"AGGREGATION_LEVEL_CAP_TWO":     1,
		"AGGREGATION_LEVEL_CAP_FOUR":    2,
		"AGGREGATION_LEVEL_CAP_EIGHT":   3,
		"AGGREGATION_LEVEL_CAP_SIXTEEN": 4,
	}
)

func (x AggregationLevelCap) Enum() *AggregationLevelCap {
	p := new(AggregationLevelCap)
	*p = x
	return p
}

func (x AggregationLevelCap) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AggregationLevelCap) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_enumTypes[6].Descriptor()
}

func (AggregationLevelCap) Type() protoreflect.EnumType {
	return &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_enumTypes[6]
}

func (x AggregationLevelCap) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AggregationLevelCap.Descriptor instead.
func (AggregationLevelCap) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{6}
}

// enumerated from e2sm-rsm-v1.asn:339
type FeatureStatus int32

const (
	FeatureStatus_FEATURE_STATUS_ENABLE  FeatureStatus = 0
	FeatureStatus_FEATURE_STATUS_DISABLE FeatureStatus = 1
)

// Enum value maps for FeatureStatus.
var (
	FeatureStatus_name = map[int32]string{
		0: "FEATURE_STATUS_ENABLE",
		1: "FEATURE_STATUS_DISABLE",
	}
	FeatureStatus_value = map[string]int32{
		"FEATURE_STATUS_ENABLE":  0,
		"FEATURE_STATUS_DISABLE": 1,
	}
)

func (x FeatureStatus) Enum() *FeatureStatus {
	p := new(FeatureStatus)
	*p = x
	return p
}

func (x FeatureStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FeatureStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_enumTypes[7].Descriptor()
}

func (FeatureStatus) Type() protoreflect.EnumType {
	return &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_enumTypes[7]
}

func (x FeatureStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FeatureStatus.Descriptor instead.
func (FeatureStatus) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{7}
}

// enumerated from e2sm-rsm-v1.asn:344
type CarrierAggregationLevelCap int32

const (
	CarrierAggregationLevelCap_CARRIER_AGGREGATION_LEVEL_CAP_ONE   CarrierAggregationLevelCap = 0
	CarrierAggregationLevelCap_CARRIER_AGGREGATION_LEVEL_CAP_TWO   CarrierAggregationLevelCap = 1
	CarrierAggregationLevelCap_CARRIER_AGGREGATION_LEVEL_CAP_THREE CarrierAggregationLevelCap = 2
	CarrierAggregationLevelCap_CARRIER_AGGREGATION_LEVEL_CAP_FOUR  CarrierAggregationLevelCap = 3
)

// Enum value maps for CarrierAggregationLevelCap.
var (
	CarrierAggregationLevelCap_name = map[int32]string{
		0: "CARRIER_AGGREGATION_LEVEL_CAP_ONE",
		1: "CARRIER_AGGREGATION_LEVEL_CAP_TWO",
		2: "CARRIER_AGGREGATION_LEVEL_CAP_THREE",
		3: "CARRIER_AGGREGATION_LEVEL_CAP_FOUR",
	}
	CarrierAggregationLevelCap_value = map[string]int32{
		"CARRIER_AGGREGATION_LEVEL_CAP_ONE":   0,
		"CARRIER_AGGREGATION_LEVEL_CAP_TWO":   1,
		"CARRIER_AGGREGATION_LEVEL_CAP_THREE": 2,
		"CARRIER_AGGREGATION_LEVEL_CAP_FOUR":  3,
	}
)

func (x CarrierAggregationLevelCap) Enum() *CarrierAggregationLevelCap {
	p := new(CarrierAggregationLevelCap)
	*p = x
	return p
}

func (x CarrierAggregationLevelCap) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CarrierAggregationLevelCap) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_enumTypes[8].Descriptor()
}

func (CarrierAggregationLevelCap) Type() protoreflect.EnumType {
	return &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_enumTypes[8]
}

func (x CarrierAggregationLevelCap) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CarrierAggregationLevelCap.Descriptor instead.
func (CarrierAggregationLevelCap) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{8}
}

// constant Integer from e2sm-rsm-v1.asn:29
// {-}
type MaxnoofBearers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:32,valueUB:32"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MaxnoofBearers) Reset() {
	*x = MaxnoofBearers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofBearers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofBearers) ProtoMessage() {}

func (x *MaxnoofBearers) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofBearers.ProtoReflect.Descriptor instead.
func (*MaxnoofBearers) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{0}
}

func (x *MaxnoofBearers) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm-rsm-v1.asn:30
// {-}
type MaxnoofUes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:""
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MaxnoofUes) Reset() {
	*x = MaxnoofUes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofUes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofUes) ProtoMessage() {}

func (x *MaxnoofUes) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofUes.ProtoReflect.Descriptor instead.
func (*MaxnoofUes) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{1}
}

func (x *MaxnoofUes) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm-rsm-v1.asn:31
// {-}
type MaxnoofSlices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4294967295,valueUB:4294967295"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MaxnoofSlices) Reset() {
	*x = MaxnoofSlices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofSlices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofSlices) ProtoMessage() {}

func (x *MaxnoofSlices) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofSlices.ProtoReflect.Descriptor instead.
func (*MaxnoofSlices) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{2}
}

func (x *MaxnoofSlices) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm-rsm-v1.asn:32
// {SliceID}
type SliceId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1,valueUB:4294967295"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SliceId) Reset() {
	*x = SliceId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SliceId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SliceId) ProtoMessage() {}

func (x *SliceId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SliceId.ProtoReflect.Descriptor instead.
func (*SliceId) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{3}
}

func (x *SliceId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm-rsm-v1.asn:33
// {SliceIDAssoc}
type SliceIdassoc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:4294967295"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SliceIdassoc) Reset() {
	*x = SliceIdassoc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SliceIdassoc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SliceIdassoc) ProtoMessage() {}

func (x *SliceIdassoc) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SliceIdassoc.ProtoReflect.Descriptor instead.
func (*SliceIdassoc) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{4}
}

func (x *SliceIdassoc) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm-rsm-v1.asn:36
// {UE-Identity}
type UeIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-rsm-v1.asn:36
	//
	// Types that are assignable to UeIdentity:
	//	*UeIdentity_CuUeF1ApId
	//	*UeIdentity_DuUeF1ApId
	//	*UeIdentity_RanUeNgapId
	//	*UeIdentity_AmfUeNgapId
	//	*UeIdentity_EnbUeS1ApId
	UeIdentity isUeIdentity_UeIdentity `protobuf_oneof:"ue_identity"`
}

func (x *UeIdentity) Reset() {
	*x = UeIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UeIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UeIdentity) ProtoMessage() {}

func (x *UeIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UeIdentity.ProtoReflect.Descriptor instead.
func (*UeIdentity) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{5}
}

func (m *UeIdentity) GetUeIdentity() isUeIdentity_UeIdentity {
	if m != nil {
		return m.UeIdentity
	}
	return nil
}

func (x *UeIdentity) GetCuUeF1ApId() *CuUeF1ApId {
	if x, ok := x.GetUeIdentity().(*UeIdentity_CuUeF1ApId); ok {
		return x.CuUeF1ApId
	}
	return nil
}

func (x *UeIdentity) GetDuUeF1ApId() *DuUeF1ApId {
	if x, ok := x.GetUeIdentity().(*UeIdentity_DuUeF1ApId); ok {
		return x.DuUeF1ApId
	}
	return nil
}

func (x *UeIdentity) GetRanUeNgapId() *RanUeNgapId {
	if x, ok := x.GetUeIdentity().(*UeIdentity_RanUeNgapId); ok {
		return x.RanUeNgapId
	}
	return nil
}

func (x *UeIdentity) GetAmfUeNgapId() *e2sm_v2_ies.AmfUeNgapId {
	if x, ok := x.GetUeIdentity().(*UeIdentity_AmfUeNgapId); ok {
		return x.AmfUeNgapId
	}
	return nil
}

func (x *UeIdentity) GetEnbUeS1ApId() *EnbUeS1ApId {
	if x, ok := x.GetUeIdentity().(*UeIdentity_EnbUeS1ApId); ok {
		return x.EnbUeS1ApId
	}
	return nil
}

type isUeIdentity_UeIdentity interface {
	isUeIdentity_UeIdentity()
}

type UeIdentity_CuUeF1ApId struct {
	// @inject_tag: aper:"choiceIdx:1"
	CuUeF1ApId *CuUeF1ApId `protobuf:"bytes,1,opt,name=cu_ue_f1_ap_id,json=cuUeF1ApID,proto3,oneof"`
}

type UeIdentity_DuUeF1ApId struct {
	// @inject_tag: aper:"choiceIdx:2"
	DuUeF1ApId *DuUeF1ApId `protobuf:"bytes,2,opt,name=du_ue_f1_ap_id,json=duUeF1ApID,proto3,oneof"`
}

type UeIdentity_RanUeNgapId struct {
	// @inject_tag: aper:"choiceIdx:3"
	RanUeNgapId *RanUeNgapId `protobuf:"bytes,3,opt,name=ran_ue_ngap_id,json=ranUeNgapID,proto3,oneof"`
}

type UeIdentity_AmfUeNgapId struct {
	// @inject_tag: aper:"choiceIdx:4"
	AmfUeNgapId *e2sm_v2_ies.AmfUeNgapId `protobuf:"bytes,4,opt,name=amf_ue_ngap_id,json=amfUeNgapID,proto3,oneof"`
}

type UeIdentity_EnbUeS1ApId struct {
	// @inject_tag: aper:"choiceIdx:5"
	EnbUeS1ApId *EnbUeS1ApId `protobuf:"bytes,5,opt,name=enb_ue_s1_ap_id,json=enbUeS1ApID,proto3,oneof"`
}

func (*UeIdentity_CuUeF1ApId) isUeIdentity_UeIdentity() {}

func (*UeIdentity_DuUeF1ApId) isUeIdentity_UeIdentity() {}

func (*UeIdentity_RanUeNgapId) isUeIdentity_UeIdentity() {}

func (*UeIdentity_AmfUeNgapId) isUeIdentity_UeIdentity() {}

func (*UeIdentity_EnbUeS1ApId) isUeIdentity_UeIdentity() {}

// range of Integer from e2sm-rsm-v1.asn:53
// {CU-UE-F1AP-ID}
type CuUeF1ApId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:4294967295"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CuUeF1ApId) Reset() {
	*x = CuUeF1ApId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CuUeF1ApId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CuUeF1ApId) ProtoMessage() {}

func (x *CuUeF1ApId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CuUeF1ApId.ProtoReflect.Descriptor instead.
func (*CuUeF1ApId) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{6}
}

func (x *CuUeF1ApId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm-rsm-v1.asn:54
// {DU-UE-F1AP-ID}
type DuUeF1ApId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:4294967295"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *DuUeF1ApId) Reset() {
	*x = DuUeF1ApId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DuUeF1ApId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DuUeF1ApId) ProtoMessage() {}

func (x *DuUeF1ApId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DuUeF1ApId.ProtoReflect.Descriptor instead.
func (*DuUeF1ApId) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{7}
}

func (x *DuUeF1ApId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm-rsm-v1.asn:55
// {RAN-UE-NGAP-ID}
type RanUeNgapId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:1099511627775"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RanUeNgapId) Reset() {
	*x = RanUeNgapId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanUeNgapId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanUeNgapId) ProtoMessage() {}

func (x *RanUeNgapId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanUeNgapId.ProtoReflect.Descriptor instead.
func (*RanUeNgapId) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{8}
}

func (x *RanUeNgapId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm-rsm-v1.asn:56
// {ENB-UE-S1AP-ID}
type EnbUeS1ApId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:16777215"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EnbUeS1ApId) Reset() {
	*x = EnbUeS1ApId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnbUeS1ApId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnbUeS1ApId) ProtoMessage() {}

func (x *EnbUeS1ApId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnbUeS1ApId.ProtoReflect.Descriptor instead.
func (*EnbUeS1ApId) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{9}
}

func (x *EnbUeS1ApId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm-rsm-v1.asn:58
// {QFI}
type Qfi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:63"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Qfi) Reset() {
	*x = Qfi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qfi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qfi) ProtoMessage() {}

func (x *Qfi) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qfi.ProtoReflect.Descriptor instead.
func (*Qfi) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{10}
}

func (x *Qfi) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm-rsm-v1.asn:64
// {-}
type MaxnoofSlicingNodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:4294967295,valueUB:4294967295"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MaxnoofSlicingNodes) Reset() {
	*x = MaxnoofSlicingNodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofSlicingNodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofSlicingNodes) ProtoMessage() {}

func (x *MaxnoofSlicingNodes) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofSlicingNodes.ProtoReflect.Descriptor instead.
func (*MaxnoofSlicingNodes) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{11}
}

func (x *MaxnoofSlicingNodes) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm-rsm-v1.asn:79
// {NodeSlicingCapability-Item}
type NodeSlicingCapabilityItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:4294967295"
	MaxNumberOfSlicesDl int32 `protobuf:"varint,1,opt,name=max_number_of_slices_dl,json=maxNumberOfSlicesDL,proto3" json:"max_number_of_slices_dl,omitempty"`
	// @inject_tag: aper:"valueLB:0,valueUB:4294967295"
	MaxNumberOfSlicesUl int32 `protobuf:"varint,2,opt,name=max_number_of_slices_ul,json=maxNumberOfSlicesUL,proto3" json:"max_number_of_slices_ul,omitempty"`
	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:1"
	SlicingType            SlicingType `protobuf:"varint,3,opt,name=slicing_type,json=slicingType,proto3,enum=e2sm_rsm.v1.SlicingType" json:"slicing_type,omitempty"`
	MaxNumberOfUesPerSlice int32       `protobuf:"varint,4,opt,name=max_number_of_ues_per_slice,json=maxNumberOfUEsPerSlice,proto3" json:"max_number_of_ues_per_slice,omitempty"`
	// @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:5,sizeExt"
	SupportedConfig []*SupportedSlicingConfigItem `protobuf:"bytes,5,rep,name=supported_config,json=supportedConfig,proto3" json:"supported_config,omitempty"`
}

func (x *NodeSlicingCapabilityItem) Reset() {
	*x = NodeSlicingCapabilityItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeSlicingCapabilityItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeSlicingCapabilityItem) ProtoMessage() {}

func (x *NodeSlicingCapabilityItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeSlicingCapabilityItem.ProtoReflect.Descriptor instead.
func (*NodeSlicingCapabilityItem) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{12}
}

func (x *NodeSlicingCapabilityItem) GetMaxNumberOfSlicesDl() int32 {
	if x != nil {
		return x.MaxNumberOfSlicesDl
	}
	return 0
}

func (x *NodeSlicingCapabilityItem) GetMaxNumberOfSlicesUl() int32 {
	if x != nil {
		return x.MaxNumberOfSlicesUl
	}
	return 0
}

func (x *NodeSlicingCapabilityItem) GetSlicingType() SlicingType {
	if x != nil {
		return x.SlicingType
	}
	return SlicingType_SLICING_TYPE_STATIC
}

func (x *NodeSlicingCapabilityItem) GetMaxNumberOfUesPerSlice() int32 {
	if x != nil {
		return x.MaxNumberOfUesPerSlice
	}
	return 0
}

func (x *NodeSlicingCapabilityItem) GetSupportedConfig() []*SupportedSlicingConfigItem {
	if x != nil {
		return x.SupportedConfig
	}
	return nil
}

// sequence from e2sm-rsm-v1.asn:88
// {SupportedSlicingConfig-Item}
type SupportedSlicingConfigItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:4"
	SlicingConfigType E2SmRsmCommand `protobuf:"varint,1,opt,name=slicing_config_type,json=slicingConfigType,proto3,enum=e2sm_rsm.v1.E2SmRsmCommand" json:"slicing_config_type,omitempty"`
}

func (x *SupportedSlicingConfigItem) Reset() {
	*x = SupportedSlicingConfigItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportedSlicingConfigItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportedSlicingConfigItem) ProtoMessage() {}

func (x *SupportedSlicingConfigItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportedSlicingConfigItem.ProtoReflect.Descriptor instead.
func (*SupportedSlicingConfigItem) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{13}
}

func (x *SupportedSlicingConfigItem) GetSlicingConfigType() E2SmRsmCommand {
	if x != nil {
		return x.SlicingConfigType
	}
	return E2SmRsmCommand_E2_SM_RSM_COMMAND_SLICE_CREATE
}

// sequence from e2sm-rsm-v1.asn:97
// {SliceMetrics}
type SliceMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:100"
	PrbUtilization int32 `protobuf:"varint,1,opt,name=prb_utilization,json=prbUtilization,proto3" json:"prb_utilization,omitempty"`
	// @inject_tag: aper:"valueLB:0,valueUB:4294967295"
	NumUeAssocToSlice int32 `protobuf:"varint,2,opt,name=num_ue_assoc_to_slice,json=numUeAssocToSlice,proto3" json:"num_ue_assoc_to_slice,omitempty"`
	// @inject_tag: aper:"valueLB:0,valueUB:100"
	SliceLevelBler int32 `protobuf:"varint,3,opt,name=slice_level_bler,json=sliceLevelBLER,proto3" json:"slice_level_bler,omitempty"`
	// @inject_tag: aper:"valueLB:0,valueUB:15"
	AvgCqi int32 `protobuf:"varint,4,opt,name=avg_cqi,json=avgCQI,proto3" json:"avg_cqi,omitempty"`
}

func (x *SliceMetrics) Reset() {
	*x = SliceMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SliceMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SliceMetrics) ProtoMessage() {}

func (x *SliceMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SliceMetrics.ProtoReflect.Descriptor instead.
func (*SliceMetrics) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{14}
}

func (x *SliceMetrics) GetPrbUtilization() int32 {
	if x != nil {
		return x.PrbUtilization
	}
	return 0
}

func (x *SliceMetrics) GetNumUeAssocToSlice() int32 {
	if x != nil {
		return x.NumUeAssocToSlice
	}
	return 0
}

func (x *SliceMetrics) GetSliceLevelBler() int32 {
	if x != nil {
		return x.SliceLevelBler
	}
	return 0
}

func (x *SliceMetrics) GetAvgCqi() int32 {
	if x != nil {
		return x.AvgCqi
	}
	return 0
}

// sequence from e2sm-rsm-v1.asn:120
// {E2SM-RSM-EventTriggerDefinition}
type E2SmRsmEventTriggerDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	EventDefinitionFormats *EventDefinitionFormats `protobuf:"bytes,1,opt,name=event_definition_formats,json=eventDefinition-formats,proto3" json:"event_definition_formats,omitempty"`
}

func (x *E2SmRsmEventTriggerDefinition) Reset() {
	*x = E2SmRsmEventTriggerDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmRsmEventTriggerDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmRsmEventTriggerDefinition) ProtoMessage() {}

func (x *E2SmRsmEventTriggerDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmRsmEventTriggerDefinition.ProtoReflect.Descriptor instead.
func (*E2SmRsmEventTriggerDefinition) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{15}
}

func (x *E2SmRsmEventTriggerDefinition) GetEventDefinitionFormats() *EventDefinitionFormats {
	if x != nil {
		return x.EventDefinitionFormats
	}
	return nil
}

// choice from e2sm-rsm-v1.asn:117
// {E2SM-RSM-EventTriggerDefinition}
type EventDefinitionFormats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-rsm-v1.asn:117
	//
	// Types that are assignable to E2SmRsmIndicationHeader:
	//	*EventDefinitionFormats_EventDefinitionFormat1
	E2SmRsmIndicationHeader isEventDefinitionFormats_E2SmRsmIndicationHeader `protobuf_oneof:"e2_sm_rsm_indication_header"`
}

func (x *EventDefinitionFormats) Reset() {
	*x = EventDefinitionFormats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventDefinitionFormats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDefinitionFormats) ProtoMessage() {}

func (x *EventDefinitionFormats) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDefinitionFormats.ProtoReflect.Descriptor instead.
func (*EventDefinitionFormats) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{16}
}

func (m *EventDefinitionFormats) GetE2SmRsmIndicationHeader() isEventDefinitionFormats_E2SmRsmIndicationHeader {
	if m != nil {
		return m.E2SmRsmIndicationHeader
	}
	return nil
}

func (x *EventDefinitionFormats) GetEventDefinitionFormat1() *E2SmRsmEventTriggerDefinitionFormat1 {
	if x, ok := x.GetE2SmRsmIndicationHeader().(*EventDefinitionFormats_EventDefinitionFormat1); ok {
		return x.EventDefinitionFormat1
	}
	return nil
}

type isEventDefinitionFormats_E2SmRsmIndicationHeader interface {
	isEventDefinitionFormats_E2SmRsmIndicationHeader()
}

type EventDefinitionFormats_EventDefinitionFormat1 struct {
	// @inject_tag: aper:"valueExt,choiceIdx:1"
	EventDefinitionFormat1 *E2SmRsmEventTriggerDefinitionFormat1 `protobuf:"bytes,1,opt,name=event_definition_format1,json=eventDefinition-Format1,proto3,oneof"`
}

func (*EventDefinitionFormats_EventDefinitionFormat1) isEventDefinitionFormats_E2SmRsmIndicationHeader() {
}

// sequence from e2sm-rsm-v1.asn:125
// {E2SM-RSM-EventTriggerDefinition-Format1}
type E2SmRsmEventTriggerDefinitionFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,sizeLB:0,sizeUB:3"
	TriggerType RsmTriggerType `protobuf:"varint,1,opt,name=trigger_type,json=triggerType,proto3,enum=e2sm_rsm.v1.RsmTriggerType" json:"trigger_type,omitempty"`
	// @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:4,sizeExt"
	UeIdlist []*UeIdentity `protobuf:"bytes,2,rep,name=ue_idlist,json=ueIDlist,proto3" json:"ue_idlist,omitempty"`
	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:4"
	PrefferedUeIdtype UeIdType `protobuf:"varint,3,opt,name=preffered_ue_idtype,json=prefferedUeIDType,proto3,enum=e2sm_rsm.v1.UeIdType" json:"preffered_ue_idtype,omitempty"`
	// @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:32"
	BearerId []*BearerId `protobuf:"bytes,4,rep,name=bearer_id,json=bearerID,proto3" json:"bearer_id,omitempty"`
}

func (x *E2SmRsmEventTriggerDefinitionFormat1) Reset() {
	*x = E2SmRsmEventTriggerDefinitionFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmRsmEventTriggerDefinitionFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmRsmEventTriggerDefinitionFormat1) ProtoMessage() {}

func (x *E2SmRsmEventTriggerDefinitionFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmRsmEventTriggerDefinitionFormat1.ProtoReflect.Descriptor instead.
func (*E2SmRsmEventTriggerDefinitionFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{17}
}

func (x *E2SmRsmEventTriggerDefinitionFormat1) GetTriggerType() RsmTriggerType {
	if x != nil {
		return x.TriggerType
	}
	return RsmTriggerType_RSM_TRIGGER_TYPE_UE_ATTACH
}

func (x *E2SmRsmEventTriggerDefinitionFormat1) GetUeIdlist() []*UeIdentity {
	if x != nil {
		return x.UeIdlist
	}
	return nil
}

func (x *E2SmRsmEventTriggerDefinitionFormat1) GetPrefferedUeIdtype() UeIdType {
	if x != nil {
		return x.PrefferedUeIdtype
	}
	return UeIdType_UE_ID_TYPE_CU_UE_F1_AP_ID
}

func (x *E2SmRsmEventTriggerDefinitionFormat1) GetBearerId() []*BearerId {
	if x != nil {
		return x.BearerId
	}
	return nil
}

// sequence from e2sm-rsm-v1.asn:138
// {E2SM-RSM-IndicationHeader}
type E2SmRsmIndicationHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-rsm-v1.asn:138
	//
	// Types that are assignable to E2SmRsmIndicationHeader:
	//	*E2SmRsmIndicationHeader_IndicationHeaderFormat1
	E2SmRsmIndicationHeader isE2SmRsmIndicationHeader_E2SmRsmIndicationHeader `protobuf_oneof:"e2_sm_rsm_indication_header"`
}

func (x *E2SmRsmIndicationHeader) Reset() {
	*x = E2SmRsmIndicationHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmRsmIndicationHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmRsmIndicationHeader) ProtoMessage() {}

func (x *E2SmRsmIndicationHeader) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmRsmIndicationHeader.ProtoReflect.Descriptor instead.
func (*E2SmRsmIndicationHeader) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{18}
}

func (m *E2SmRsmIndicationHeader) GetE2SmRsmIndicationHeader() isE2SmRsmIndicationHeader_E2SmRsmIndicationHeader {
	if m != nil {
		return m.E2SmRsmIndicationHeader
	}
	return nil
}

func (x *E2SmRsmIndicationHeader) GetIndicationHeaderFormat1() *E2SmRsmIndicationHeaderFormat1 {
	if x, ok := x.GetE2SmRsmIndicationHeader().(*E2SmRsmIndicationHeader_IndicationHeaderFormat1); ok {
		return x.IndicationHeaderFormat1
	}
	return nil
}

type isE2SmRsmIndicationHeader_E2SmRsmIndicationHeader interface {
	isE2SmRsmIndicationHeader_E2SmRsmIndicationHeader()
}

type E2SmRsmIndicationHeader_IndicationHeaderFormat1 struct {
	// @inject_tag: aper:"valueExt"
	IndicationHeaderFormat1 *E2SmRsmIndicationHeaderFormat1 `protobuf:"bytes,1,opt,name=indication_header_format1,json=indicationHeader-Format1,proto3,oneof"`
}

func (*E2SmRsmIndicationHeader_IndicationHeaderFormat1) isE2SmRsmIndicationHeader_E2SmRsmIndicationHeader() {
}

// sequence from e2sm-rsm-v1.asn:143
// {E2SM-RSM-IndicationHeader-Format1}
type E2SmRsmIndicationHeaderFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	Cgi *e2sm_v2_ies.Cgi `protobuf:"bytes,1,opt,name=cgi,proto3" json:"cgi,omitempty"`
}

func (x *E2SmRsmIndicationHeaderFormat1) Reset() {
	*x = E2SmRsmIndicationHeaderFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmRsmIndicationHeaderFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmRsmIndicationHeaderFormat1) ProtoMessage() {}

func (x *E2SmRsmIndicationHeaderFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmRsmIndicationHeaderFormat1.ProtoReflect.Descriptor instead.
func (*E2SmRsmIndicationHeaderFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{19}
}

func (x *E2SmRsmIndicationHeaderFormat1) GetCgi() *e2sm_v2_ies.Cgi {
	if x != nil {
		return x.Cgi
	}
	return nil
}

// sequence from e2sm-rsm-v1.asn:154
// {E2SM-RSM-IndicationMessage}
type E2SmRsmIndicationMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-rsm-v1.asn:154
	//
	// Types that are assignable to E2SmRsmIndicationMessage:
	//	*E2SmRsmIndicationMessage_IndicationMessageFormat1
	E2SmRsmIndicationMessage isE2SmRsmIndicationMessage_E2SmRsmIndicationMessage `protobuf_oneof:"e2_sm_rsm_indication_message"`
}

func (x *E2SmRsmIndicationMessage) Reset() {
	*x = E2SmRsmIndicationMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmRsmIndicationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmRsmIndicationMessage) ProtoMessage() {}

func (x *E2SmRsmIndicationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmRsmIndicationMessage.ProtoReflect.Descriptor instead.
func (*E2SmRsmIndicationMessage) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{20}
}

func (m *E2SmRsmIndicationMessage) GetE2SmRsmIndicationMessage() isE2SmRsmIndicationMessage_E2SmRsmIndicationMessage {
	if m != nil {
		return m.E2SmRsmIndicationMessage
	}
	return nil
}

func (x *E2SmRsmIndicationMessage) GetIndicationMessageFormat1() *E2SmRsmIndicationMessageFormat1 {
	if x, ok := x.GetE2SmRsmIndicationMessage().(*E2SmRsmIndicationMessage_IndicationMessageFormat1); ok {
		return x.IndicationMessageFormat1
	}
	return nil
}

type isE2SmRsmIndicationMessage_E2SmRsmIndicationMessage interface {
	isE2SmRsmIndicationMessage_E2SmRsmIndicationMessage()
}

type E2SmRsmIndicationMessage_IndicationMessageFormat1 struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt"
	IndicationMessageFormat1 *E2SmRsmIndicationMessageFormat1 `protobuf:"bytes,1,opt,name=indication_message_format1,json=indicationMessage-Format1,proto3,oneof"`
}

func (*E2SmRsmIndicationMessage_IndicationMessageFormat1) isE2SmRsmIndicationMessage_E2SmRsmIndicationMessage() {
}

// sequence from e2sm-rsm-v1.asn:159
// {E2SM-RSM-IndicationMessage-Format1}
type E2SmRsmIndicationMessageFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	UeId       *UeIdentity `protobuf:"bytes,1,opt,name=ue_id,json=ueId,proto3" json:"ue_id,omitempty"`
	CuUeF1ApId *CuUeF1ApId `protobuf:"bytes,2,opt,name=cu_ue_f1ap_id,json=cuUeF1apId,proto3" json:"cu_ue_f1ap_id,omitempty"`
	DuUeF1ApId *DuUeF1ApId `protobuf:"bytes,3,opt,name=du_ue_f1ap_id,json=duUeF1apId,proto3" json:"du_ue_f1ap_id,omitempty"`
	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:1"
	EmmCase Emmcase `protobuf:"varint,4,opt,name=emm_case,json=emmCase,proto3,enum=e2sm_rsm.v1.Emmcase" json:"emm_case,omitempty"`
	// @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:4294967295"
	UlSlicingMetrics []*SliceMetrics `protobuf:"bytes,5,rep,name=ul_slicing_metrics,json=ulSlicingMetrics,proto3" json:"ul_slicing_metrics,omitempty"`
	// @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:4294967295"
	DlSlicingMetrics []*SliceMetrics `protobuf:"bytes,6,rep,name=dl_slicing_metrics,json=dlSlicingMetrics,proto3" json:"dl_slicing_metrics,omitempty"`
}

func (x *E2SmRsmIndicationMessageFormat1) Reset() {
	*x = E2SmRsmIndicationMessageFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmRsmIndicationMessageFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmRsmIndicationMessageFormat1) ProtoMessage() {}

func (x *E2SmRsmIndicationMessageFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmRsmIndicationMessageFormat1.ProtoReflect.Descriptor instead.
func (*E2SmRsmIndicationMessageFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{21}
}

func (x *E2SmRsmIndicationMessageFormat1) GetUeId() *UeIdentity {
	if x != nil {
		return x.UeId
	}
	return nil
}

func (x *E2SmRsmIndicationMessageFormat1) GetCuUeF1ApId() *CuUeF1ApId {
	if x != nil {
		return x.CuUeF1ApId
	}
	return nil
}

func (x *E2SmRsmIndicationMessageFormat1) GetDuUeF1ApId() *DuUeF1ApId {
	if x != nil {
		return x.DuUeF1ApId
	}
	return nil
}

func (x *E2SmRsmIndicationMessageFormat1) GetEmmCase() Emmcase {
	if x != nil {
		return x.EmmCase
	}
	return Emmcase_EMMCASE_ATTACHED
}

func (x *E2SmRsmIndicationMessageFormat1) GetUlSlicingMetrics() []*SliceMetrics {
	if x != nil {
		return x.UlSlicingMetrics
	}
	return nil
}

func (x *E2SmRsmIndicationMessageFormat1) GetDlSlicingMetrics() []*SliceMetrics {
	if x != nil {
		return x.DlSlicingMetrics
	}
	return nil
}

// sequence from e2sm-rsm-v1.asn:194
// {SliceParameters}
type SliceParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:2"
	SchedulerType SchedulerType `protobuf:"varint,1,opt,name=scheduler_type,json=schedulerType,proto3,enum=e2sm_rsm.v1.SchedulerType" json:"scheduler_type,omitempty"`
	// @inject_tag: aper:"optional,valueLB:1,valueUB:100"
	Weight *int32 `protobuf:"varint,2,opt,name=weight,proto3,oneof" json:"weight,omitempty"`
	// @inject_tag: aper:"optional,valueLB:1,valueUB:129,valueExt"
	QosLevel *int32 `protobuf:"varint,3,opt,name=qos_level,json=qosLevel,proto3,oneof" json:"qos_level,omitempty"`
	// @inject_tag: aper:"optional,valueExt"
	ScheduleInfo *ScheduleConfig `protobuf:"bytes,4,opt,name=schedule_info,json=scheduleInfo,proto3,oneof" json:"schedule_info,omitempty"`
}

func (x *SliceParameters) Reset() {
	*x = SliceParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SliceParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SliceParameters) ProtoMessage() {}

func (x *SliceParameters) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SliceParameters.ProtoReflect.Descriptor instead.
func (*SliceParameters) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{22}
}

func (x *SliceParameters) GetSchedulerType() SchedulerType {
	if x != nil {
		return x.SchedulerType
	}
	return SchedulerType_SCHEDULER_TYPE_ROUND_ROBIN
}

func (x *SliceParameters) GetWeight() int32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

func (x *SliceParameters) GetQosLevel() int32 {
	if x != nil && x.QosLevel != nil {
		return *x.QosLevel
	}
	return 0
}

func (x *SliceParameters) GetScheduleInfo() *ScheduleConfig {
	if x != nil {
		return x.ScheduleInfo
	}
	return nil
}

// sequence from e2sm-rsm-v1.asn:202
// {SliceConfig}
type SliceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SliceId *SliceId `protobuf:"bytes,1,opt,name=slice_id,json=sliceID,proto3" json:"slice_id,omitempty"`
	// @inject_tag: aper:"optional,sizeLB:1,sizeUB:160,sizeExt"
	SliceDescription *string `protobuf:"bytes,2,opt,name=slice_description,json=sliceDescription,proto3,oneof" json:"slice_description,omitempty"`
	// @inject_tag: aper:"valueExt"
	SliceConfigParameters *SliceParameters `protobuf:"bytes,3,opt,name=slice_config_parameters,json=sliceConfigParameters,proto3" json:"slice_config_parameters,omitempty"`
}

func (x *SliceConfig) Reset() {
	*x = SliceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SliceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SliceConfig) ProtoMessage() {}

func (x *SliceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SliceConfig.ProtoReflect.Descriptor instead.
func (*SliceConfig) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{23}
}

func (x *SliceConfig) GetSliceId() *SliceId {
	if x != nil {
		return x.SliceId
	}
	return nil
}

func (x *SliceConfig) GetSliceDescription() string {
	if x != nil && x.SliceDescription != nil {
		return *x.SliceDescription
	}
	return ""
}

func (x *SliceConfig) GetSliceConfigParameters() *SliceParameters {
	if x != nil {
		return x.SliceConfigParameters
	}
	return nil
}

// sequence from e2sm-rsm-v1.asn:209
// {SliceDelete}
type SliceDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SliceId *SliceId `protobuf:"bytes,1,opt,name=slice_id,json=sliceID,proto3" json:"slice_id,omitempty"`
}

func (x *SliceDelete) Reset() {
	*x = SliceDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SliceDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SliceDelete) ProtoMessage() {}

func (x *SliceDelete) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SliceDelete.ProtoReflect.Descriptor instead.
func (*SliceDelete) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{24}
}

func (x *SliceDelete) GetSliceId() *SliceId {
	if x != nil {
		return x.SliceId
	}
	return nil
}

// sequence from e2sm-rsm-v1.asn:218
// {SliceAssociate}
type SliceAssociate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	UeId *UeIdentity `protobuf:"bytes,1,opt,name=ue_id,json=ueId,proto3" json:"ue_id,omitempty"`
	// @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:32"
	BearerId        []*BearerId   `protobuf:"bytes,2,rep,name=bearer_id,json=bearerID,proto3" json:"bearer_id,omitempty"`
	DownLinkSliceId *SliceIdassoc `protobuf:"bytes,3,opt,name=down_link_slice_id,json=downLinkSliceID,proto3" json:"down_link_slice_id,omitempty"`
	// @inject_tag: aper:"optional"
	UplinkSliceId *SliceIdassoc `protobuf:"bytes,4,opt,name=uplink_slice_id,json=uplinkSliceID,proto3,oneof" json:"uplink_slice_id,omitempty"`
}

func (x *SliceAssociate) Reset() {
	*x = SliceAssociate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SliceAssociate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SliceAssociate) ProtoMessage() {}

func (x *SliceAssociate) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SliceAssociate.ProtoReflect.Descriptor instead.
func (*SliceAssociate) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{25}
}

func (x *SliceAssociate) GetUeId() *UeIdentity {
	if x != nil {
		return x.UeId
	}
	return nil
}

func (x *SliceAssociate) GetBearerId() []*BearerId {
	if x != nil {
		return x.BearerId
	}
	return nil
}

func (x *SliceAssociate) GetDownLinkSliceId() *SliceIdassoc {
	if x != nil {
		return x.DownLinkSliceId
	}
	return nil
}

func (x *SliceAssociate) GetUplinkSliceId() *SliceIdassoc {
	if x != nil {
		return x.UplinkSliceId
	}
	return nil
}

// sequence from e2sm-rsm-v1.asn:226
// {Bearer-ID}
type BearerId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-rsm-v1.asn:226
	//
	// Types that are assignable to BearerId:
	//	*BearerId_DrbId
	BearerId isBearerId_BearerId `protobuf_oneof:"bearer_id"`
}

func (x *BearerId) Reset() {
	*x = BearerId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BearerId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BearerId) ProtoMessage() {}

func (x *BearerId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BearerId.ProtoReflect.Descriptor instead.
func (*BearerId) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{26}
}

func (m *BearerId) GetBearerId() isBearerId_BearerId {
	if m != nil {
		return m.BearerId
	}
	return nil
}

func (x *BearerId) GetDrbId() *DrbId {
	if x, ok := x.GetBearerId().(*BearerId_DrbId); ok {
		return x.DrbId
	}
	return nil
}

type isBearerId_BearerId interface {
	isBearerId_BearerId()
}

type BearerId_DrbId struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt"
	DrbId *DrbId `protobuf:"bytes,1,opt,name=drb_id,json=drbID,proto3,oneof"`
}

func (*BearerId_DrbId) isBearerId_BearerId() {}

// sequence from e2sm-rsm-v1.asn:231
// {Drb-ID}
type DrbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-rsm-v1.asn:231
	//
	// Types that are assignable to DrbId:
	//	*DrbId_FourGdrbId
	//	*DrbId_FiveGdrbId
	DrbId isDrbId_DrbId `protobuf_oneof:"drb_id"`
}

func (x *DrbId) Reset() {
	*x = DrbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrbId) ProtoMessage() {}

func (x *DrbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrbId.ProtoReflect.Descriptor instead.
func (*DrbId) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{27}
}

func (m *DrbId) GetDrbId() isDrbId_DrbId {
	if m != nil {
		return m.DrbId
	}
	return nil
}

func (x *DrbId) GetFourGdrbId() *FourGDrbId {
	if x, ok := x.GetDrbId().(*DrbId_FourGdrbId); ok {
		return x.FourGdrbId
	}
	return nil
}

func (x *DrbId) GetFiveGdrbId() *FiveGDrbId {
	if x, ok := x.GetDrbId().(*DrbId_FiveGdrbId); ok {
		return x.FiveGdrbId
	}
	return nil
}

type isDrbId_DrbId interface {
	isDrbId_DrbId()
}

type DrbId_FourGdrbId struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt"
	FourGdrbId *FourGDrbId `protobuf:"bytes,1,opt,name=four_gdrb_id,json=fourGDrbID,proto3,oneof"`
}

type DrbId_FiveGdrbId struct {
	// @inject_tag: aper:"choiceIdx:2,valueExt"
	FiveGdrbId *FiveGDrbId `protobuf:"bytes,2,opt,name=five_gdrb_id,json=fiveGDrbID,proto3,oneof"`
}

func (*DrbId_FourGdrbId) isDrbId_DrbId() {}

func (*DrbId_FiveGdrbId) isDrbId_DrbId() {}

// sequence from e2sm-rsm-v1.asn:237
// {FiveG-Drb-ID}
type FiveGDrbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1,valueUB:32"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Qfi   *Qfi  `protobuf:"bytes,2,opt,name=qfi,proto3" json:"qfi,omitempty"`
	// @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:64"
	FlowsMapToDrb []*QoSflowLevelParameters `protobuf:"bytes,3,rep,name=flows_map_to_drb,json=flowsMapToDrb,proto3" json:"flows_map_to_drb,omitempty"`
}

func (x *FiveGDrbId) Reset() {
	*x = FiveGDrbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FiveGDrbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FiveGDrbId) ProtoMessage() {}

func (x *FiveGDrbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FiveGDrbId.ProtoReflect.Descriptor instead.
func (*FiveGDrbId) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{28}
}

func (x *FiveGDrbId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *FiveGDrbId) GetQfi() *Qfi {
	if x != nil {
		return x.Qfi
	}
	return nil
}

func (x *FiveGDrbId) GetFlowsMapToDrb() []*QoSflowLevelParameters {
	if x != nil {
		return x.FlowsMapToDrb
	}
	return nil
}

// sequence from e2sm-rsm-v1.asn:244
// {QoSflowLevelParameters}
type QoSflowLevelParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-rsm-v1.asn:244
	//
	// Types that are assignable to QoSflowLevelParameters:
	//	*QoSflowLevelParameters_DynamicFiveQi
	//	*QoSflowLevelParameters_NonDynamicFiveQi
	QoSflowLevelParameters isQoSflowLevelParameters_QoSflowLevelParameters `protobuf_oneof:"qo_sflow_level_parameters"`
}

func (x *QoSflowLevelParameters) Reset() {
	*x = QoSflowLevelParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QoSflowLevelParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QoSflowLevelParameters) ProtoMessage() {}

func (x *QoSflowLevelParameters) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QoSflowLevelParameters.ProtoReflect.Descriptor instead.
func (*QoSflowLevelParameters) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{29}
}

func (m *QoSflowLevelParameters) GetQoSflowLevelParameters() isQoSflowLevelParameters_QoSflowLevelParameters {
	if m != nil {
		return m.QoSflowLevelParameters
	}
	return nil
}

func (x *QoSflowLevelParameters) GetDynamicFiveQi() *DynamicFiveQi {
	if x, ok := x.GetQoSflowLevelParameters().(*QoSflowLevelParameters_DynamicFiveQi); ok {
		return x.DynamicFiveQi
	}
	return nil
}

func (x *QoSflowLevelParameters) GetNonDynamicFiveQi() *NonDynamicFiveQi {
	if x, ok := x.GetQoSflowLevelParameters().(*QoSflowLevelParameters_NonDynamicFiveQi); ok {
		return x.NonDynamicFiveQi
	}
	return nil
}

type isQoSflowLevelParameters_QoSflowLevelParameters interface {
	isQoSflowLevelParameters_QoSflowLevelParameters()
}

type QoSflowLevelParameters_DynamicFiveQi struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt"
	DynamicFiveQi *DynamicFiveQi `protobuf:"bytes,1,opt,name=dynamic_five_qi,json=dynamicFiveQi,proto3,oneof"`
}

type QoSflowLevelParameters_NonDynamicFiveQi struct {
	// @inject_tag: aper:"choiceIdx:2,valueExt"
	NonDynamicFiveQi *NonDynamicFiveQi `protobuf:"bytes,2,opt,name=non_dynamic_five_qi,json=nonDynamicFiveQi,proto3,oneof"`
}

func (*QoSflowLevelParameters_DynamicFiveQi) isQoSflowLevelParameters_QoSflowLevelParameters() {}

func (*QoSflowLevelParameters_NonDynamicFiveQi) isQoSflowLevelParameters_QoSflowLevelParameters() {}

// sequence from e2sm-rsm-v1.asn:250
// {DynamicFiveQI}
type DynamicFiveQi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:127,valueExt"
	PriorityLevel int32 `protobuf:"varint,1,opt,name=priority_level,json=priorityLevel,proto3" json:"priority_level,omitempty"`
	// @inject_tag: aper:"valueLB:0,valueUB:63,valueExt"
	PacketDelayBudget int32 `protobuf:"varint,2,opt,name=packet_delay_budget,json=packetDelayBudget,proto3" json:"packet_delay_budget,omitempty"`
	// @inject_tag: aper:"valueLB:0,valueUB:63,valueExt"
	PacketErrorRate int32 `protobuf:"varint,3,opt,name=packet_error_rate,json=packetErrorRate,proto3" json:"packet_error_rate,omitempty"`
}

func (x *DynamicFiveQi) Reset() {
	*x = DynamicFiveQi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicFiveQi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicFiveQi) ProtoMessage() {}

func (x *DynamicFiveQi) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicFiveQi.ProtoReflect.Descriptor instead.
func (*DynamicFiveQi) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{30}
}

func (x *DynamicFiveQi) GetPriorityLevel() int32 {
	if x != nil {
		return x.PriorityLevel
	}
	return 0
}

func (x *DynamicFiveQi) GetPacketDelayBudget() int32 {
	if x != nil {
		return x.PacketDelayBudget
	}
	return 0
}

func (x *DynamicFiveQi) GetPacketErrorRate() int32 {
	if x != nil {
		return x.PacketErrorRate
	}
	return 0
}

// sequence from e2sm-rsm-v1.asn:257
// {NonDynamicFiveQI}
type NonDynamicFiveQi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FiveQi *e2sm_v2_ies.FiveQi `protobuf:"bytes,1,opt,name=five_qi,json=fiveQi,proto3" json:"five_qi,omitempty"`
}

func (x *NonDynamicFiveQi) Reset() {
	*x = NonDynamicFiveQi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NonDynamicFiveQi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NonDynamicFiveQi) ProtoMessage() {}

func (x *NonDynamicFiveQi) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NonDynamicFiveQi.ProtoReflect.Descriptor instead.
func (*NonDynamicFiveQi) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{31}
}

func (x *NonDynamicFiveQi) GetFiveQi() *e2sm_v2_ies.FiveQi {
	if x != nil {
		return x.FiveQi
	}
	return nil
}

// sequence from e2sm-rsm-v1.asn:262
// {FourG-Drb-ID}
type FourGDrbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:1,valueUB:32"
	Value int32            `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Qci   *e2sm_v2_ies.Qci `protobuf:"bytes,2,opt,name=qci,proto3" json:"qci,omitempty"`
}

func (x *FourGDrbId) Reset() {
	*x = FourGDrbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FourGDrbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FourGDrbId) ProtoMessage() {}

func (x *FourGDrbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FourGDrbId.ProtoReflect.Descriptor instead.
func (*FourGDrbId) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{32}
}

func (x *FourGDrbId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *FourGDrbId) GetQci() *e2sm_v2_ies.Qci {
	if x != nil {
		return x.Qci
	}
	return nil
}

// sequence from e2sm-rsm-v1.asn:273
// {E2SM-RSM-RANfunction-Description}
type E2SmRsmRanfunctionDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	RanFunctionName *e2sm_v2_ies.RanfunctionName `protobuf:"bytes,1,opt,name=ran_function_name,json=ranFunction-Name,proto3" json:"ran_function_name,omitempty"`
	// @inject_tag: aper:"sizeLB:1,sizeUB:4294967295,valueExt"
	RicSlicingNodeCapabilityList []*NodeSlicingCapabilityItem `protobuf:"bytes,3,rep,name=ric_slicing_node_capability_list,json=ric-Slicing-Node-Capability-List,proto3" json:"ric_slicing_node_capability_list,omitempty"`
}

func (x *E2SmRsmRanfunctionDescription) Reset() {
	*x = E2SmRsmRanfunctionDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmRsmRanfunctionDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmRsmRanfunctionDescription) ProtoMessage() {}

func (x *E2SmRsmRanfunctionDescription) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmRsmRanfunctionDescription.ProtoReflect.Descriptor instead.
func (*E2SmRsmRanfunctionDescription) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{33}
}

func (x *E2SmRsmRanfunctionDescription) GetRanFunctionName() *e2sm_v2_ies.RanfunctionName {
	if x != nil {
		return x.RanFunctionName
	}
	return nil
}

func (x *E2SmRsmRanfunctionDescription) GetRicSlicingNodeCapabilityList() []*NodeSlicingCapabilityItem {
	if x != nil {
		return x.RicSlicingNodeCapabilityList
	}
	return nil
}

// sequence from e2sm-rsm-v1.asn:281
// {E2SM-RSM-ControlHeader}
type E2SmRsmControlHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:4"
	RsmCommand E2SmRsmCommand `protobuf:"varint,1,opt,name=rsm_command,json=rsm-command,proto3,enum=e2sm_rsm.v1.E2SmRsmCommand" json:"rsm_command,omitempty"`
}

func (x *E2SmRsmControlHeader) Reset() {
	*x = E2SmRsmControlHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmRsmControlHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmRsmControlHeader) ProtoMessage() {}

func (x *E2SmRsmControlHeader) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmRsmControlHeader.ProtoReflect.Descriptor instead.
func (*E2SmRsmControlHeader) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{34}
}

func (x *E2SmRsmControlHeader) GetRsmCommand() E2SmRsmCommand {
	if x != nil {
		return x.RsmCommand
	}
	return E2SmRsmCommand_E2_SM_RSM_COMMAND_SLICE_CREATE
}

// sequence from e2sm-rsm-v1.asn:287
// {E2SM-RSM-ControlMessage}
type E2SmRsmControlMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-rsm-v1.asn:287
	// @inject_tag: aper:"valueExt"
	//
	// Types that are assignable to E2SmRsmControlMessage:
	//	*E2SmRsmControlMessage_SliceCreate
	//	*E2SmRsmControlMessage_SliceUpdate
	//	*E2SmRsmControlMessage_SliceDelete
	//	*E2SmRsmControlMessage_SliceAssociate
	E2SmRsmControlMessage isE2SmRsmControlMessage_E2SmRsmControlMessage `protobuf_oneof:"e2_sm_rsm_control_message"`
}

func (x *E2SmRsmControlMessage) Reset() {
	*x = E2SmRsmControlMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmRsmControlMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmRsmControlMessage) ProtoMessage() {}

func (x *E2SmRsmControlMessage) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmRsmControlMessage.ProtoReflect.Descriptor instead.
func (*E2SmRsmControlMessage) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{35}
}

func (m *E2SmRsmControlMessage) GetE2SmRsmControlMessage() isE2SmRsmControlMessage_E2SmRsmControlMessage {
	if m != nil {
		return m.E2SmRsmControlMessage
	}
	return nil
}

func (x *E2SmRsmControlMessage) GetSliceCreate() *SliceConfig {
	if x, ok := x.GetE2SmRsmControlMessage().(*E2SmRsmControlMessage_SliceCreate); ok {
		return x.SliceCreate
	}
	return nil
}

func (x *E2SmRsmControlMessage) GetSliceUpdate() *SliceConfig {
	if x, ok := x.GetE2SmRsmControlMessage().(*E2SmRsmControlMessage_SliceUpdate); ok {
		return x.SliceUpdate
	}
	return nil
}

func (x *E2SmRsmControlMessage) GetSliceDelete() *SliceDelete {
	if x, ok := x.GetE2SmRsmControlMessage().(*E2SmRsmControlMessage_SliceDelete); ok {
		return x.SliceDelete
	}
	return nil
}

func (x *E2SmRsmControlMessage) GetSliceAssociate() *SliceAssociate {
	if x, ok := x.GetE2SmRsmControlMessage().(*E2SmRsmControlMessage_SliceAssociate); ok {
		return x.SliceAssociate
	}
	return nil
}

type isE2SmRsmControlMessage_E2SmRsmControlMessage interface {
	isE2SmRsmControlMessage_E2SmRsmControlMessage()
}

type E2SmRsmControlMessage_SliceCreate struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt"
	SliceCreate *SliceConfig `protobuf:"bytes,1,opt,name=slice_create,json=sliceCreate,proto3,oneof"`
}

type E2SmRsmControlMessage_SliceUpdate struct {
	// @inject_tag: aper:"choiceIdx:2,valueExt"
	SliceUpdate *SliceConfig `protobuf:"bytes,2,opt,name=slice_update,json=sliceUpdate,proto3,oneof"`
}

type E2SmRsmControlMessage_SliceDelete struct {
	// @inject_tag: aper:"choiceIdx:3,valueExt"
	SliceDelete *SliceDelete `protobuf:"bytes,3,opt,name=slice_delete,json=sliceDelete,proto3,oneof"`
}

type E2SmRsmControlMessage_SliceAssociate struct {
	// @inject_tag: aper:"choiceIdx:4,valueExt"
	SliceAssociate *SliceAssociate `protobuf:"bytes,4,opt,name=slice_associate,json=sliceAssociate,proto3,oneof"`
}

func (*E2SmRsmControlMessage_SliceCreate) isE2SmRsmControlMessage_E2SmRsmControlMessage() {}

func (*E2SmRsmControlMessage_SliceUpdate) isE2SmRsmControlMessage_E2SmRsmControlMessage() {}

func (*E2SmRsmControlMessage_SliceDelete) isE2SmRsmControlMessage_E2SmRsmControlMessage() {}

func (*E2SmRsmControlMessage_SliceAssociate) isE2SmRsmControlMessage_E2SmRsmControlMessage() {}

// sequence from e2sm-rsm-v1.asn:300
// {ScheduleConfig}
type ScheduleConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,valueExt"
	LinkAdaptation *LinkAdaptation `protobuf:"bytes,1,opt,name=link_adaptation,json=linkAdaptation,proto3,oneof" json:"link_adaptation,omitempty"`
	// @inject_tag: aper:"optional,valueExt"
	Features *FeatureConfig `protobuf:"bytes,2,opt,name=features,proto3,oneof" json:"features,omitempty"`
	// @inject_tag: aper:"optional,valueExt,valueLB:0,valueUB:3"
	CarrierAggregationCap *CarrierAggregationLevelCap `protobuf:"varint,3,opt,name=carrier_aggregation_cap,json=carrierAggregationCap,proto3,enum=e2sm_rsm.v1.CarrierAggregationLevelCap,oneof" json:"carrier_aggregation_cap,omitempty"`
	// @inject_tag: aper:"optional,valueExt"
	UlPowerControl *UlpowerControl `protobuf:"bytes,4,opt,name=ul_power_control,json=ulPowerControl,proto3,oneof" json:"ul_power_control,omitempty"`
}

func (x *ScheduleConfig) Reset() {
	*x = ScheduleConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleConfig) ProtoMessage() {}

func (x *ScheduleConfig) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleConfig.ProtoReflect.Descriptor instead.
func (*ScheduleConfig) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{36}
}

func (x *ScheduleConfig) GetLinkAdaptation() *LinkAdaptation {
	if x != nil {
		return x.LinkAdaptation
	}
	return nil
}

func (x *ScheduleConfig) GetFeatures() *FeatureConfig {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *ScheduleConfig) GetCarrierAggregationCap() CarrierAggregationLevelCap {
	if x != nil && x.CarrierAggregationCap != nil {
		return *x.CarrierAggregationCap
	}
	return CarrierAggregationLevelCap_CARRIER_AGGREGATION_LEVEL_CAP_ONE
}

func (x *ScheduleConfig) GetUlPowerControl() *UlpowerControl {
	if x != nil {
		return x.UlPowerControl
	}
	return nil
}

// sequence from e2sm-rsm-v1.asn:308
// {LinkAdaptation}
type LinkAdaptation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,valueLB:0,valueUB:15"
	CqiCap *int32 `protobuf:"varint,1,opt,name=cqi_cap,json=cqiCap,proto3,oneof" json:"cqi_cap,omitempty"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:1,valueExt"
	RiCap *int32 `protobuf:"varint,2,opt,name=ri_cap,json=riCap,proto3,oneof" json:"ri_cap,omitempty"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:4"
	AggregationLevelCap *AggregationLevelCap `protobuf:"varint,3,opt,name=aggregation_level_cap,json=aggregationLevelCap,proto3,enum=e2sm_rsm.v1.AggregationLevelCap,oneof" json:"aggregation_level_cap,omitempty"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:100"
	TargetBlerDl *int32 `protobuf:"varint,4,opt,name=target_bler_dl,json=targetBlerDL,proto3,oneof" json:"target_bler_dl,omitempty"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:100"
	TargetBlerUl *int32 `protobuf:"varint,5,opt,name=target_bler_ul,json=targetBlerUL,proto3,oneof" json:"target_bler_ul,omitempty"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:28"
	MaxMcs *int32 `protobuf:"varint,6,opt,name=max_mcs,json=maxMCS,proto3,oneof" json:"max_mcs,omitempty"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:28"
	MinMcs *int32 `protobuf:"varint,7,opt,name=min_mcs,json=minMCS,proto3,oneof" json:"min_mcs,omitempty"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:2,valueExt"
	TransmissionMode *int32 `protobuf:"varint,8,opt,name=transmission_mode,json=transmissionMode,proto3,oneof" json:"transmission_mode,omitempty"`
	// @inject_tag: aper:"optional"
	HarqRetxCap *HarqrextCap `protobuf:"bytes,9,opt,name=harq_retx_cap,json=harqRetxCap,proto3,oneof" json:"harq_retx_cap,omitempty"`
}

func (x *LinkAdaptation) Reset() {
	*x = LinkAdaptation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkAdaptation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkAdaptation) ProtoMessage() {}

func (x *LinkAdaptation) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkAdaptation.ProtoReflect.Descriptor instead.
func (*LinkAdaptation) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{37}
}

func (x *LinkAdaptation) GetCqiCap() int32 {
	if x != nil && x.CqiCap != nil {
		return *x.CqiCap
	}
	return 0
}

func (x *LinkAdaptation) GetRiCap() int32 {
	if x != nil && x.RiCap != nil {
		return *x.RiCap
	}
	return 0
}

func (x *LinkAdaptation) GetAggregationLevelCap() AggregationLevelCap {
	if x != nil && x.AggregationLevelCap != nil {
		return *x.AggregationLevelCap
	}
	return AggregationLevelCap_AGGREGATION_LEVEL_CAP_ONE
}

func (x *LinkAdaptation) GetTargetBlerDl() int32 {
	if x != nil && x.TargetBlerDl != nil {
		return *x.TargetBlerDl
	}
	return 0
}

func (x *LinkAdaptation) GetTargetBlerUl() int32 {
	if x != nil && x.TargetBlerUl != nil {
		return *x.TargetBlerUl
	}
	return 0
}

func (x *LinkAdaptation) GetMaxMcs() int32 {
	if x != nil && x.MaxMcs != nil {
		return *x.MaxMcs
	}
	return 0
}

func (x *LinkAdaptation) GetMinMcs() int32 {
	if x != nil && x.MinMcs != nil {
		return *x.MinMcs
	}
	return 0
}

func (x *LinkAdaptation) GetTransmissionMode() int32 {
	if x != nil && x.TransmissionMode != nil {
		return *x.TransmissionMode
	}
	return 0
}

func (x *LinkAdaptation) GetHarqRetxCap() *HarqrextCap {
	if x != nil {
		return x.HarqRetxCap
	}
	return nil
}

// sequence from e2sm-rsm-v1.asn:329
// {HARQrextCap}
type HarqrextCap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,valueLB:1"
	Dl *int64 `protobuf:"varint,1,opt,name=dl,proto3,oneof" json:"dl,omitempty"`
	// @inject_tag: aper:"optional,valueLB:1"
	Ul *int64 `protobuf:"varint,2,opt,name=ul,proto3,oneof" json:"ul,omitempty"`
}

func (x *HarqrextCap) Reset() {
	*x = HarqrextCap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HarqrextCap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HarqrextCap) ProtoMessage() {}

func (x *HarqrextCap) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HarqrextCap.ProtoReflect.Descriptor instead.
func (*HarqrextCap) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{38}
}

func (x *HarqrextCap) GetDl() int64 {
	if x != nil && x.Dl != nil {
		return *x.Dl
	}
	return 0
}

func (x *HarqrextCap) GetUl() int64 {
	if x != nil && x.Ul != nil {
		return *x.Ul
	}
	return 0
}

// sequence from e2sm-rsm-v1.asn:334
// {FeatureConfig}
type FeatureConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:1"
	TtiBundling *FeatureStatus `protobuf:"varint,1,opt,name=tti_bundling,json=ttiBundling,proto3,enum=e2sm_rsm.v1.FeatureStatus,oneof" json:"tti_bundling,omitempty"`
}

func (x *FeatureConfig) Reset() {
	*x = FeatureConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeatureConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureConfig) ProtoMessage() {}

func (x *FeatureConfig) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureConfig.ProtoReflect.Descriptor instead.
func (*FeatureConfig) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{39}
}

func (x *FeatureConfig) GetTtiBundling() FeatureStatus {
	if x != nil && x.TtiBundling != nil {
		return *x.TtiBundling
	}
	return FeatureStatus_FEATURE_STATUS_ENABLE
}

// sequence from e2sm-rsm-v1.asn:352
// {ULpowerControl}
type UlpowerControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional"
	PuschTargetSnr *int64 `protobuf:"varint,1,opt,name=pusch_target_snr,json=puschTargetSNR,proto3,oneof" json:"pusch_target_snr,omitempty"`
	// @inject_tag: aper:"optional"
	PucchTargetSnr *int64 `protobuf:"varint,2,opt,name=pucch_target_snr,json=pucchTargetSNR,proto3,oneof" json:"pucch_target_snr,omitempty"`
}

func (x *UlpowerControl) Reset() {
	*x = UlpowerControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UlpowerControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UlpowerControl) ProtoMessage() {}

func (x *UlpowerControl) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UlpowerControl.ProtoReflect.Descriptor instead.
func (*UlpowerControl) Descriptor() ([]byte, []int) {
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP(), []int{40}
}

func (x *UlpowerControl) GetPuschTargetSnr() int64 {
	if x != nil && x.PuschTargetSnr != nil {
		return *x.PuschTargetSnr
	}
	return 0
}

func (x *UlpowerControl) GetPucchTargetSnr() int64 {
	if x != nil && x.PucchTargetSnr != nil {
		return *x.PucchTargetSnr
	}
	return 0
}

var File_e2sm_rsm_v1_e2sm_rsm_v1_proto protoreflect.FileDescriptor

var file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x5f, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0b, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x76,
	0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x61, 0x73, 0x6e, 0x31, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x6e,
	0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2f, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x6e, 0x6f,
	0x6f, 0x66, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x34, 0x0a, 0x0a, 0x4d, 0x61, 0x78, 0x6e,
	0x6f, 0x6f, 0x66, 0x55, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x10, 0xfa, 0x42, 0x0d, 0x1a, 0x0b, 0x08, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37,
	0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x12,
	0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x10,
	0xfa, 0x42, 0x0d, 0x1a, 0x0b, 0x08, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x07, 0x53, 0x6c, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x22, 0x08, 0x18, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x28, 0x01,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x0c, 0x53, 0x6c, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x22, 0x08, 0x18, 0xff, 0xff,
	0xff, 0xff, 0x0f, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xdd, 0x02, 0x0a,
	0x0a, 0x55, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x3d, 0x0a, 0x0e, 0x63,
	0x75, 0x5f, 0x75, 0x65, 0x5f, 0x66, 0x31, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x75, 0x55, 0x65, 0x46, 0x31, 0x41, 0x70, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0a,
	0x63, 0x75, 0x55, 0x65, 0x46, 0x31, 0x41, 0x70, 0x49, 0x44, 0x12, 0x3d, 0x0a, 0x0e, 0x64, 0x75,
	0x5f, 0x75, 0x65, 0x5f, 0x66, 0x31, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x75, 0x55, 0x65, 0x46, 0x31, 0x41, 0x70, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x64,
	0x75, 0x55, 0x65, 0x46, 0x31, 0x41, 0x70, 0x49, 0x44, 0x12, 0x3f, 0x0a, 0x0e, 0x72, 0x61, 0x6e,
	0x5f, 0x75, 0x65, 0x5f, 0x6e, 0x67, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x61, 0x6e, 0x55, 0x65, 0x4e, 0x67, 0x61, 0x70, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x72,
	0x61, 0x6e, 0x55, 0x65, 0x4e, 0x67, 0x61, 0x70, 0x49, 0x44, 0x12, 0x3f, 0x0a, 0x0e, 0x61, 0x6d,
	0x66, 0x5f, 0x75, 0x65, 0x5f, 0x6e, 0x67, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x6d, 0x66, 0x55, 0x65, 0x4e, 0x67, 0x61, 0x70, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0b,
	0x61, 0x6d, 0x66, 0x55, 0x65, 0x4e, 0x67, 0x61, 0x70, 0x49, 0x44, 0x12, 0x40, 0x0a, 0x0f, 0x65,
	0x6e, 0x62, 0x5f, 0x75, 0x65, 0x5f, 0x73, 0x31, 0x5f, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x6e, 0x62, 0x55, 0x65, 0x53, 0x31, 0x41, 0x70, 0x49, 0x64, 0x48, 0x00,
	0x52, 0x0b, 0x65, 0x6e, 0x62, 0x55, 0x65, 0x53, 0x31, 0x41, 0x70, 0x49, 0x44, 0x42, 0x0d, 0x0a,
	0x0b, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x31, 0x0a, 0x0a,
	0x43, 0x75, 0x55, 0x65, 0x46, 0x31, 0x41, 0x70, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x22, 0x08,
	0x18, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x31, 0x0a, 0x0a, 0x44, 0x75, 0x55, 0x65, 0x46, 0x31, 0x41, 0x70, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0d, 0xfa, 0x42,
	0x0a, 0x22, 0x08, 0x18, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x33, 0x0a, 0x0b, 0x52, 0x61, 0x6e, 0x55, 0x65, 0x4e, 0x67, 0x61, 0x70, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x22, 0x09, 0x18, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x28, 0x00,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x0b, 0x45, 0x6e, 0x62, 0x55, 0x65,
	0x53, 0x31, 0x41, 0x70, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x1a, 0x07, 0x18, 0xff, 0xff, 0xff,
	0x07, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x26, 0x0a, 0x03, 0x51, 0x66,
	0x69, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x3f, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x3d, 0x0a, 0x13, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66, 0x53, 0x6c, 0x69,
	0x63, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x10, 0xfa, 0x42, 0x0d, 0x1a, 0x0b, 0x08,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0xe1, 0x02, 0x0a, 0x19, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x6c, 0x69, 0x63, 0x69, 0x6e,
	0x67, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x34, 0x0a, 0x17, 0x6d, 0x61, 0x78, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66,
	0x5f, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x5f, 0x64, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x13, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x53, 0x6c, 0x69,
	0x63, 0x65, 0x73, 0x44, 0x4c, 0x12, 0x34, 0x0a, 0x17, 0x6d, 0x61, 0x78, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x5f, 0x75, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x4f, 0x66, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x55, 0x4c, 0x12, 0x3b, 0x0a, 0x0c, 0x73,
	0x6c, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x6c, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x6c, 0x69,
	0x63, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x1b, 0x6d, 0x61, 0x78, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x75, 0x65, 0x73, 0x5f, 0x70, 0x65,
	0x72, 0x5f, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x6d,
	0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x55, 0x45, 0x73, 0x50, 0x65, 0x72,
	0x53, 0x6c, 0x69, 0x63, 0x65, 0x12, 0x5e, 0x0a, 0x10, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x6c, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04,
	0x08, 0x01, 0x10, 0x05, 0x52, 0x0f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x69, 0x0a, 0x1a, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x53, 0x6c, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x4b, 0x0a, 0x13, 0x73, 0x6c, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x32, 0x53, 0x6d, 0x52, 0x73, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x11, 0x73,
	0x6c, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x22, 0xac, 0x01, 0x0a, 0x0c, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x62, 0x5f, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x72, 0x62, 0x55,
	0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x15, 0x6e, 0x75,
	0x6d, 0x5f, 0x75, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x6c,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6e, 0x75, 0x6d, 0x55, 0x65,
	0x41, 0x73, 0x73, 0x6f, 0x63, 0x54, 0x6f, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x73, 0x6c, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x62, 0x6c, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x42, 0x4c, 0x45, 0x52, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x76, 0x67, 0x5f, 0x63, 0x71,
	0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x76, 0x67, 0x43, 0x51, 0x49, 0x22,
	0x7f, 0x0a, 0x1d, 0x45, 0x32, 0x53, 0x6d, 0x52, 0x73, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x5e, 0x0a, 0x18, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x17, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73,
	0x22, 0xa7, 0x01, 0x0a, 0x16, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x12, 0x6e, 0x0a, 0x18, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32, 0x53, 0x6d,
	0x52, 0x73, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31,
	0x48, 0x00, 0x52, 0x17, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x2d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x42, 0x1d, 0x0a, 0x1b, 0x65,
	0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0xaf, 0x02, 0x0a, 0x24, 0x45,
	0x32, 0x53, 0x6d, 0x52, 0x73, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x31, 0x12, 0x3e, 0x0a, 0x0c, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x73, 0x6d, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42,
	0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x04, 0x52, 0x08, 0x75, 0x65, 0x49,
	0x44, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x13, 0x70, 0x72, 0x65, 0x66, 0x66, 0x65, 0x72,
	0x65, 0x64, 0x5f, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x65, 0x49, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x11, 0x70, 0x72, 0x65, 0x66, 0x66,
	0x65, 0x72, 0x65, 0x64, 0x55, 0x65, 0x49, 0x44, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x09,
	0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65,
	0x61, 0x72, 0x65, 0x72, 0x49, 0x64, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01,
	0x10, 0x20, 0x52, 0x08, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x49, 0x44, 0x22, 0xa4, 0x01, 0x0a,
	0x17, 0x45, 0x32, 0x53, 0x6d, 0x52, 0x73, 0x6d, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x6a, 0x0a, 0x19, 0x69, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32, 0x53, 0x6d, 0x52, 0x73,
	0x6d, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x48, 0x00, 0x52, 0x18, 0x69, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2d, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x31, 0x42, 0x1d, 0x0a, 0x1b, 0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x72, 0x73,
	0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x22, 0x44, 0x0a, 0x1e, 0x45, 0x32, 0x53, 0x6d, 0x52, 0x73, 0x6d, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x31, 0x12, 0x22, 0x0a, 0x03, 0x63, 0x67, 0x69, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x67, 0x69, 0x52, 0x03, 0x63, 0x67, 0x69, 0x22, 0xa9, 0x01, 0x0a, 0x18, 0x45, 0x32,
	0x53, 0x6d, 0x52, 0x73, 0x6d, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x6d, 0x0a, 0x1a, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32, 0x53, 0x6d, 0x52, 0x73, 0x6d,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x48, 0x00, 0x52, 0x19, 0x69, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2d, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x31, 0x42, 0x1e, 0x0a, 0x1c, 0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x72,
	0x73, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xaa, 0x03, 0x0a, 0x1f, 0x45, 0x32, 0x53, 0x6d, 0x52, 0x73,
	0x6d, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x12, 0x2c, 0x0a, 0x05, 0x75, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x04, 0x75, 0x65, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0d, 0x63, 0x75, 0x5f, 0x75, 0x65,
	0x5f, 0x66, 0x31, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x55,
	0x65, 0x46, 0x31, 0x41, 0x70, 0x49, 0x64, 0x52, 0x0a, 0x63, 0x75, 0x55, 0x65, 0x46, 0x31, 0x61,
	0x70, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0d, 0x64, 0x75, 0x5f, 0x75, 0x65, 0x5f, 0x66, 0x31, 0x61,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x75, 0x55, 0x65, 0x46, 0x31, 0x41,
	0x70, 0x49, 0x64, 0x52, 0x0a, 0x64, 0x75, 0x55, 0x65, 0x46, 0x31, 0x61, 0x70, 0x49, 0x64, 0x12,
	0x2f, 0x0a, 0x08, 0x65, 0x6d, 0x6d, 0x5f, 0x63, 0x61, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x6d, 0x6d, 0x63, 0x61, 0x73, 0x65, 0x52, 0x07, 0x65, 0x6d, 0x6d, 0x43, 0x61, 0x73, 0x65,
	0x12, 0x57, 0x0a, 0x12, 0x75, 0x6c, 0x5f, 0x73, 0x6c, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x69, 0x63, 0x65,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x92, 0x01, 0x08, 0x08,
	0x01, 0x10, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x52, 0x10, 0x75, 0x6c, 0x53, 0x6c, 0x69, 0x63, 0x69,
	0x6e, 0x67, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x57, 0x0a, 0x12, 0x64, 0x6c, 0x5f,
	0x73, 0x6c, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x92, 0x01, 0x08, 0x08, 0x01, 0x10, 0xff, 0xff, 0xff, 0xff, 0x0f,
	0x52, 0x10, 0x64, 0x6c, 0x53, 0x6c, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x22, 0x85, 0x02, 0x0a, 0x0f, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x41, 0x0a, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x71, 0x6f, 0x73, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x08, 0x71, 0x6f, 0x73,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x0d, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x02, 0x52, 0x0c,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x71,
	0x6f, 0x73, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xe8, 0x01, 0x0a, 0x0b, 0x53,
	0x6c, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2f, 0x0a, 0x08, 0x73, 0x6c,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x52, 0x07, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x3c, 0x0a, 0x11, 0x73,
	0x6c, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18,
	0xa0, 0x01, 0x48, 0x00, 0x52, 0x10, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x54, 0x0a, 0x17, 0x73, 0x6c, 0x69,
	0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x15, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x42,
	0x14, 0x0a, 0x12, 0x5f, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3e, 0x0a, 0x0b, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x49, 0x64, 0x52, 0x07, 0x73, 0x6c,
	0x69, 0x63, 0x65, 0x49, 0x44, 0x22, 0xa2, 0x02, 0x0a, 0x0e, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x41,
	0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x75, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72,
	0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x04, 0x75, 0x65, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x09, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x49, 0x64,
	0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x20, 0x52, 0x08, 0x62, 0x65,
	0x61, 0x72, 0x65, 0x72, 0x49, 0x44, 0x12, 0x46, 0x0a, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x6c,
	0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x49, 0x64, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x52, 0x0f, 0x64,
	0x6f, 0x77, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x46,
	0x0a, 0x0f, 0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72,
	0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x49, 0x64, 0x61, 0x73, 0x73,
	0x6f, 0x63, 0x48, 0x00, 0x52, 0x0d, 0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x53, 0x6c, 0x69, 0x63,
	0x65, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x75, 0x70, 0x6c, 0x69, 0x6e,
	0x6b, 0x5f, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x44, 0x0a, 0x08, 0x42, 0x65,
	0x61, 0x72, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x64, 0x72, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72, 0x62, 0x49, 0x64, 0x48, 0x00, 0x52, 0x05, 0x64, 0x72,
	0x62, 0x49, 0x44, 0x42, 0x0b, 0x0a, 0x09, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x22, 0x8b, 0x01, 0x0a, 0x05, 0x44, 0x72, 0x62, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0c, 0x66, 0x6f,
	0x75, 0x72, 0x5f, 0x67, 0x64, 0x72, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x6f, 0x75, 0x72, 0x47, 0x44, 0x72, 0x62, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x6f, 0x75,
	0x72, 0x47, 0x44, 0x72, 0x62, 0x49, 0x44, 0x12, 0x3b, 0x0a, 0x0c, 0x66, 0x69, 0x76, 0x65, 0x5f,
	0x67, 0x64, 0x72, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x76, 0x65,
	0x47, 0x44, 0x72, 0x62, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x69, 0x76, 0x65, 0x47, 0x44,
	0x72, 0x62, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x64, 0x72, 0x62, 0x5f, 0x69, 0x64, 0x22, 0xa0,
	0x01, 0x0a, 0x0a, 0x46, 0x69, 0x76, 0x65, 0x47, 0x44, 0x72, 0x62, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x03, 0x71, 0x66, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x51,
	0x66, 0x69, 0x52, 0x03, 0x71, 0x66, 0x69, 0x12, 0x58, 0x0a, 0x10, 0x66, 0x6c, 0x6f, 0x77, 0x73,
	0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x74, 0x6f, 0x5f, 0x64, 0x72, 0x62, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x51, 0x6f, 0x53, 0x66, 0x6c, 0x6f, 0x77, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01,
	0x10, 0x40, 0x52, 0x0d, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x4d, 0x61, 0x70, 0x54, 0x6f, 0x44, 0x72,
	0x62, 0x22, 0xcb, 0x01, 0x0a, 0x16, 0x51, 0x6f, 0x53, 0x66, 0x6c, 0x6f, 0x77, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x44, 0x0a, 0x0f,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x66, 0x69, 0x76, 0x65, 0x5f, 0x71, 0x69, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x46, 0x69, 0x76, 0x65, 0x51,
	0x69, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x46, 0x69, 0x76, 0x65,
	0x51, 0x69, 0x12, 0x4e, 0x0a, 0x13, 0x6e, 0x6f, 0x6e, 0x5f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x5f, 0x66, 0x69, 0x76, 0x65, 0x5f, 0x71, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f,
	0x6e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x46, 0x69, 0x76, 0x65, 0x51, 0x69, 0x48, 0x00,
	0x52, 0x10, 0x6e, 0x6f, 0x6e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x46, 0x69, 0x76, 0x65,
	0x51, 0x69, 0x42, 0x1b, 0x0a, 0x19, 0x71, 0x6f, 0x5f, 0x73, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22,
	0x92, 0x01, 0x0a, 0x0d, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x46, 0x69, 0x76, 0x65, 0x51,
	0x69, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x6c,
	0x61, 0x79, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x61, 0x74, 0x65, 0x22, 0x40, 0x0a, 0x10, 0x4e, 0x6f, 0x6e, 0x44, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x46, 0x69, 0x76, 0x65, 0x51, 0x69, 0x12, 0x2c, 0x0a, 0x07, 0x66, 0x69, 0x76, 0x65,
	0x5f, 0x71, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x76, 0x65, 0x51, 0x69, 0x52, 0x06,
	0x66, 0x69, 0x76, 0x65, 0x51, 0x69, 0x22, 0x46, 0x0a, 0x0a, 0x46, 0x6f, 0x75, 0x72, 0x47, 0x44,
	0x72, 0x62, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x03, 0x71, 0x63,
	0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72,
	0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x63, 0x69, 0x52, 0x03, 0x71, 0x63, 0x69, 0x22, 0xef,
	0x01, 0x0a, 0x1d, 0x45, 0x32, 0x53, 0x6d, 0x52, 0x73, 0x6d, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x49, 0x0a, 0x11, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x10, 0x72, 0x61, 0x6e, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x20,
	0x72, 0x69, 0x63, 0x5f, 0x73, 0x6c, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x6c, 0x69, 0x63, 0x69, 0x6e, 0x67,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0e,
	0xfa, 0x42, 0x0b, 0x92, 0x01, 0x08, 0x08, 0x01, 0x10, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x52, 0x20,
	0x72, 0x69, 0x63, 0x2d, 0x53, 0x6c, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x2d, 0x4e, 0x6f, 0x64, 0x65,
	0x2d, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2d, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x55, 0x0a, 0x14, 0x45, 0x32, 0x53, 0x6d, 0x52, 0x73, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0b, 0x72, 0x73, 0x6d, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32, 0x53, 0x6d,
	0x52, 0x73, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x0b, 0x72, 0x73, 0x6d, 0x2d,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0xb9, 0x02, 0x0a, 0x15, 0x45, 0x32, 0x53, 0x6d,
	0x52, 0x73, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72,
	0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x3d, 0x0a, 0x0c, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x48, 0x00, 0x52, 0x0b, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x3d, 0x0a, 0x0c, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48,
	0x00, 0x52, 0x0b, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x46,
	0x0a, 0x0f, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72,
	0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x41, 0x73, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x41, 0x73, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x42, 0x1b, 0x0a, 0x19, 0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f,
	0x72, 0x73, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x9c, 0x03, 0x0a, 0x0e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x49, 0x0a, 0x0f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x61,
	0x64, 0x61, 0x70, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x6e, 0x6b, 0x41, 0x64, 0x61, 0x70, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0e,
	0x6c, 0x69, 0x6e, 0x6b, 0x41, 0x64, 0x61, 0x70, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x3b, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48,
	0x01, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x64,
	0x0a, 0x17, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x27, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61,
	0x72, 0x72, 0x69, 0x65, 0x72, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x61, 0x70, 0x48, 0x02, 0x52, 0x15, 0x63, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61,
	0x70, 0x88, 0x01, 0x01, 0x12, 0x4a, 0x0a, 0x10, 0x75, 0x6c, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6c, 0x70,
	0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x48, 0x03, 0x52, 0x0e, 0x75,
	0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x88, 0x01, 0x01,
	0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x70, 0x42, 0x13, 0x0a,
	0x11, 0x5f, 0x75, 0x6c, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x22, 0xc3, 0x04, 0x0a, 0x0e, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x64, 0x61, 0x70, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x07, 0x63, 0x71, 0x69, 0x5f, 0x63, 0x61, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x63, 0x71, 0x69, 0x43, 0x61, 0x70,
	0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x72, 0x69, 0x5f, 0x63, 0x61, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x05, 0x72, 0x69, 0x43, 0x61, 0x70, 0x88, 0x01, 0x01, 0x12,
	0x59, 0x0a, 0x15, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x5f, 0x63, 0x61, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x61, 0x70,
	0x48, 0x02, 0x52, 0x13, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x43, 0x61, 0x70, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x6c, 0x65, 0x72, 0x5f, 0x64, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x03, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x42, 0x6c, 0x65, 0x72,
	0x44, 0x4c, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x62, 0x6c, 0x65, 0x72, 0x5f, 0x75, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04, 0x52,
	0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x42, 0x6c, 0x65, 0x72, 0x55, 0x4c, 0x88, 0x01, 0x01,
	0x12, 0x1c, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x6d, 0x63, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x4d, 0x43, 0x53, 0x88, 0x01, 0x01, 0x12, 0x1c,
	0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x5f, 0x6d, 0x63, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x06, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x4d, 0x43, 0x53, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x48, 0x07, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x41,
	0x0a, 0x0d, 0x68, 0x61, 0x72, 0x71, 0x5f, 0x72, 0x65, 0x74, 0x78, 0x5f, 0x63, 0x61, 0x70, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x72, 0x71, 0x72, 0x65, 0x78, 0x74, 0x43, 0x61, 0x70, 0x48,
	0x08, 0x52, 0x0b, 0x68, 0x61, 0x72, 0x71, 0x52, 0x65, 0x74, 0x78, 0x43, 0x61, 0x70, 0x88, 0x01,
	0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x71, 0x69, 0x5f, 0x63, 0x61, 0x70, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x72, 0x69, 0x5f, 0x63, 0x61, 0x70, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x63,
	0x61, 0x70, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x6c,
	0x65, 0x72, 0x5f, 0x64, 0x6c, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x62, 0x6c, 0x65, 0x72, 0x5f, 0x75, 0x6c, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x61, 0x78,
	0x5f, 0x6d, 0x63, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x6d, 0x63, 0x73,
	0x42, 0x14, 0x0a, 0x12, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x68, 0x61, 0x72, 0x71, 0x5f,
	0x72, 0x65, 0x74, 0x78, 0x5f, 0x63, 0x61, 0x70, 0x22, 0x45, 0x0a, 0x0b, 0x48, 0x61, 0x72, 0x71,
	0x72, 0x65, 0x78, 0x74, 0x43, 0x61, 0x70, 0x12, 0x13, 0x0a, 0x02, 0x64, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x02, 0x64, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02,
	0x75, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x02, 0x75, 0x6c, 0x88, 0x01,
	0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x64, 0x6c, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x75, 0x6c, 0x22,
	0x64, 0x0a, 0x0d, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x42, 0x0a, 0x0c, 0x74, 0x74, 0x69, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72, 0x73,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x74, 0x74, 0x69, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x69, 0x6e,
	0x67, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x74, 0x74, 0x69, 0x5f, 0x62, 0x75, 0x6e,
	0x64, 0x6c, 0x69, 0x6e, 0x67, 0x22, 0x98, 0x01, 0x0a, 0x0e, 0x55, 0x6c, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x2d, 0x0a, 0x10, 0x70, 0x75, 0x73, 0x63,
	0x68, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x6e, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x00, 0x52, 0x0e, 0x70, 0x75, 0x73, 0x63, 0x68, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x53, 0x4e, 0x52, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x70, 0x75, 0x63, 0x63, 0x68,
	0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x6e, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x01, 0x52, 0x0e, 0x70, 0x75, 0x63, 0x63, 0x68, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x53, 0x4e, 0x52, 0x88, 0x01, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x70, 0x75, 0x73, 0x63, 0x68,
	0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x6e, 0x72, 0x42, 0x13, 0x0a, 0x11, 0x5f,
	0x70, 0x75, 0x63, 0x63, 0x68, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x6e, 0x72,
	0x2a, 0xa6, 0x01, 0x0a, 0x08, 0x55, 0x65, 0x49, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x19, 0x55, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x55, 0x5f, 0x55,
	0x45, 0x5f, 0x46, 0x31, 0x5f, 0x41, 0x50, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19,
	0x55, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x55, 0x5f, 0x55, 0x45,
	0x5f, 0x46, 0x31, 0x5f, 0x41, 0x50, 0x5f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x55,
	0x45, 0x5f, 0x49, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x41, 0x4e, 0x5f, 0x55, 0x45,
	0x5f, 0x4e, 0x47, 0x41, 0x50, 0x5f, 0x49, 0x44, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x45,
	0x5f, 0x49, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x4d, 0x46, 0x5f, 0x55, 0x45, 0x5f,
	0x4e, 0x47, 0x41, 0x50, 0x5f, 0x49, 0x44, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x55, 0x45, 0x5f,
	0x49, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x42, 0x5f, 0x55, 0x45, 0x5f, 0x53,
	0x31, 0x5f, 0x41, 0x50, 0x5f, 0x49, 0x44, 0x10, 0x04, 0x2a, 0x40, 0x0a, 0x0b, 0x53, 0x6c, 0x69,
	0x63, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x4c, 0x49, 0x43,
	0x49, 0x4e, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x49, 0x43, 0x10,
	0x00, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x4c, 0x49, 0x43, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x44, 0x59, 0x4e, 0x41, 0x4d, 0x49, 0x43, 0x10, 0x01, 0x2a, 0xa1, 0x01, 0x0a, 0x0e,
	0x52, 0x73, 0x6d, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e,
	0x0a, 0x1a, 0x52, 0x53, 0x4d, 0x5f, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x10, 0x00, 0x12, 0x1e,
	0x0a, 0x1a, 0x52, 0x53, 0x4d, 0x5f, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x45, 0x5f, 0x44, 0x45, 0x54, 0x41, 0x43, 0x48, 0x10, 0x01, 0x12, 0x26,
	0x0a, 0x22, 0x52, 0x53, 0x4d, 0x5f, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x48, 0x41, 0x4e, 0x44, 0x5f, 0x49, 0x4e, 0x5f, 0x55, 0x45, 0x5f, 0x41, 0x54,
	0x54, 0x41, 0x43, 0x48, 0x10, 0x02, 0x12, 0x27, 0x0a, 0x23, 0x52, 0x53, 0x4d, 0x5f, 0x54, 0x52,
	0x49, 0x47, 0x47, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x41, 0x4e, 0x44, 0x5f,
	0x4f, 0x55, 0x54, 0x5f, 0x55, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x10, 0x03, 0x2a,
	0x35, 0x0a, 0x07, 0x45, 0x6d, 0x6d, 0x63, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4d,
	0x4d, 0x43, 0x41, 0x53, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x45, 0x4d, 0x4d, 0x43, 0x41, 0x53, 0x45, 0x5f, 0x44, 0x45, 0x54, 0x41,
	0x43, 0x48, 0x45, 0x44, 0x10, 0x01, 0x2a, 0xc6, 0x01, 0x0a, 0x0e, 0x45, 0x32, 0x53, 0x6d, 0x52,
	0x73, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x22, 0x0a, 0x1e, 0x45, 0x32, 0x5f,
	0x53, 0x4d, 0x5f, 0x52, 0x53, 0x4d, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x53,
	0x4c, 0x49, 0x43, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x22, 0x0a,
	0x1e, 0x45, 0x32, 0x5f, 0x53, 0x4d, 0x5f, 0x52, 0x53, 0x4d, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41,
	0x4e, 0x44, 0x5f, 0x53, 0x4c, 0x49, 0x43, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10,
	0x01, 0x12, 0x22, 0x0a, 0x1e, 0x45, 0x32, 0x5f, 0x53, 0x4d, 0x5f, 0x52, 0x53, 0x4d, 0x5f, 0x43,
	0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x53, 0x4c, 0x49, 0x43, 0x45, 0x5f, 0x44, 0x45, 0x4c,
	0x45, 0x54, 0x45, 0x10, 0x02, 0x12, 0x22, 0x0a, 0x1e, 0x45, 0x32, 0x5f, 0x53, 0x4d, 0x5f, 0x52,
	0x53, 0x4d, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x55, 0x45, 0x5f, 0x41, 0x53,
	0x53, 0x4f, 0x43, 0x49, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x24, 0x0a, 0x20, 0x45, 0x32, 0x5f,
	0x53, 0x4d, 0x5f, 0x52, 0x53, 0x4d, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x53, 0x10, 0x04, 0x2a,
	0x75, 0x0a, 0x0d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x52, 0x4f, 0x42, 0x49, 0x4e, 0x10, 0x00,
	0x12, 0x26, 0x0a, 0x22, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x52, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x4c,
	0x59, 0x5f, 0x46, 0x41, 0x49, 0x52, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x43, 0x48, 0x45,
	0x44, 0x55, 0x4c, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x51, 0x4f, 0x53, 0x5f, 0x42,
	0x41, 0x53, 0x45, 0x44, 0x10, 0x02, 0x2a, 0xb7, 0x01, 0x0a, 0x13, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x61, 0x70, 0x12, 0x1d,
	0x0a, 0x19, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45,
	0x56, 0x45, 0x4c, 0x5f, 0x43, 0x41, 0x50, 0x5f, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1d, 0x0a,
	0x19, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x56,
	0x45, 0x4c, 0x5f, 0x43, 0x41, 0x50, 0x5f, 0x54, 0x57, 0x4f, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a,
	0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x56, 0x45,
	0x4c, 0x5f, 0x43, 0x41, 0x50, 0x5f, 0x46, 0x4f, 0x55, 0x52, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b,
	0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x56, 0x45,
	0x4c, 0x5f, 0x43, 0x41, 0x50, 0x5f, 0x45, 0x49, 0x47, 0x48, 0x54, 0x10, 0x03, 0x12, 0x21, 0x0a,
	0x1d, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x56,
	0x45, 0x4c, 0x5f, 0x43, 0x41, 0x50, 0x5f, 0x53, 0x49, 0x58, 0x54, 0x45, 0x45, 0x4e, 0x10, 0x04,
	0x2a, 0x46, 0x0a, 0x0d, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x19, 0x0a, 0x15, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16,
	0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44,
	0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x2a, 0xbb, 0x01, 0x0a, 0x1a, 0x43, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x43, 0x61, 0x70, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x41, 0x52, 0x52, 0x49,
	0x45, 0x52, 0x5f, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c,
	0x45, 0x56, 0x45, 0x4c, 0x5f, 0x43, 0x41, 0x50, 0x5f, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x25,
	0x0a, 0x21, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x43, 0x41, 0x50, 0x5f,
	0x54, 0x57, 0x4f, 0x10, 0x01, 0x12, 0x27, 0x0a, 0x23, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52,
	0x5f, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x56,
	0x45, 0x4c, 0x5f, 0x43, 0x41, 0x50, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x45, 0x10, 0x02, 0x12, 0x26,
	0x0a, 0x22, 0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x43, 0x41, 0x50, 0x5f,
	0x46, 0x4f, 0x55, 0x52, 0x10, 0x03, 0x42, 0x4a, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6e, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2f, 0x6f, 0x6e, 0x6f, 0x73, 0x2d, 0x65, 0x32, 0x2d, 0x73, 0x6d, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x72,
	0x73, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x32, 0x73, 0x6d, 0x2d, 0x72, 0x73, 0x6d, 0x2d, 0x69,
	0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescOnce sync.Once
	file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescData = file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDesc
)

func file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescGZIP() []byte {
	file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescOnce.Do(func() {
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescData)
	})
	return file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDescData
}

var file_e2sm_rsm_v1_e2sm_rsm_v1_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_e2sm_rsm_v1_e2sm_rsm_v1_proto_goTypes = []interface{}{
	(UeIdType)(0),                                // 0: e2sm_rsm.v1.UeIdType
	(SlicingType)(0),                             // 1: e2sm_rsm.v1.SlicingType
	(RsmTriggerType)(0),                          // 2: e2sm_rsm.v1.RsmTriggerType
	(Emmcase)(0),                                 // 3: e2sm_rsm.v1.Emmcase
	(E2SmRsmCommand)(0),                          // 4: e2sm_rsm.v1.E2SmRsmCommand
	(SchedulerType)(0),                           // 5: e2sm_rsm.v1.SchedulerType
	(AggregationLevelCap)(0),                     // 6: e2sm_rsm.v1.AggregationLevelCap
	(FeatureStatus)(0),                           // 7: e2sm_rsm.v1.FeatureStatus
	(CarrierAggregationLevelCap)(0),              // 8: e2sm_rsm.v1.CarrierAggregationLevelCap
	(*MaxnoofBearers)(nil),                       // 9: e2sm_rsm.v1.MaxnoofBearers
	(*MaxnoofUes)(nil),                           // 10: e2sm_rsm.v1.MaxnoofUes
	(*MaxnoofSlices)(nil),                        // 11: e2sm_rsm.v1.MaxnoofSlices
	(*SliceId)(nil),                              // 12: e2sm_rsm.v1.SliceId
	(*SliceIdassoc)(nil),                         // 13: e2sm_rsm.v1.SliceIdassoc
	(*UeIdentity)(nil),                           // 14: e2sm_rsm.v1.UeIdentity
	(*CuUeF1ApId)(nil),                           // 15: e2sm_rsm.v1.CuUeF1ApId
	(*DuUeF1ApId)(nil),                           // 16: e2sm_rsm.v1.DuUeF1ApId
	(*RanUeNgapId)(nil),                          // 17: e2sm_rsm.v1.RanUeNgapId
	(*EnbUeS1ApId)(nil),                          // 18: e2sm_rsm.v1.EnbUeS1ApId
	(*Qfi)(nil),                                  // 19: e2sm_rsm.v1.Qfi
	(*MaxnoofSlicingNodes)(nil),                  // 20: e2sm_rsm.v1.MaxnoofSlicingNodes
	(*NodeSlicingCapabilityItem)(nil),            // 21: e2sm_rsm.v1.NodeSlicingCapabilityItem
	(*SupportedSlicingConfigItem)(nil),           // 22: e2sm_rsm.v1.SupportedSlicingConfigItem
	(*SliceMetrics)(nil),                         // 23: e2sm_rsm.v1.SliceMetrics
	(*E2SmRsmEventTriggerDefinition)(nil),        // 24: e2sm_rsm.v1.E2SmRsmEventTriggerDefinition
	(*EventDefinitionFormats)(nil),               // 25: e2sm_rsm.v1.EventDefinitionFormats
	(*E2SmRsmEventTriggerDefinitionFormat1)(nil), // 26: e2sm_rsm.v1.E2SmRsmEventTriggerDefinitionFormat1
	(*E2SmRsmIndicationHeader)(nil),              // 27: e2sm_rsm.v1.E2SmRsmIndicationHeader
	(*E2SmRsmIndicationHeaderFormat1)(nil),       // 28: e2sm_rsm.v1.E2SmRsmIndicationHeaderFormat1
	(*E2SmRsmIndicationMessage)(nil),             // 29: e2sm_rsm.v1.E2SmRsmIndicationMessage
	(*E2SmRsmIndicationMessageFormat1)(nil),      // 30: e2sm_rsm.v1.E2SmRsmIndicationMessageFormat1
	(*SliceParameters)(nil),                      // 31: e2sm_rsm.v1.SliceParameters
	(*SliceConfig)(nil),                          // 32: e2sm_rsm.v1.SliceConfig
	(*SliceDelete)(nil),                          // 33: e2sm_rsm.v1.SliceDelete
	(*SliceAssociate)(nil),                       // 34: e2sm_rsm.v1.SliceAssociate
	(*BearerId)(nil),                             // 35: e2sm_rsm.v1.BearerId
	(*DrbId)(nil),                                // 36: e2sm_rsm.v1.DrbId
	(*FiveGDrbId)(nil),                           // 37: e2sm_rsm.v1.FiveGDrbId
	(*QoSflowLevelParameters)(nil),               // 38: e2sm_rsm.v1.QoSflowLevelParameters
	(*DynamicFiveQi)(nil),                        // 39: e2sm_rsm.v1.DynamicFiveQi
	(*NonDynamicFiveQi)(nil),                     // 40: e2sm_rsm.v1.NonDynamicFiveQi
	(*FourGDrbId)(nil),                           // 41: e2sm_rsm.v1.FourGDrbId
	(*E2SmRsmRanfunctionDescription)(nil),        // 42: e2sm_rsm.v1.E2SmRsmRanfunctionDescription
	(*E2SmRsmControlHeader)(nil),                 // 43: e2sm_rsm.v1.E2SmRsmControlHeader
	(*E2SmRsmControlMessage)(nil),                // 44: e2sm_rsm.v1.E2SmRsmControlMessage
	(*ScheduleConfig)(nil),                       // 45: e2sm_rsm.v1.ScheduleConfig
	(*LinkAdaptation)(nil),                       // 46: e2sm_rsm.v1.LinkAdaptation
	(*HarqrextCap)(nil),                          // 47: e2sm_rsm.v1.HarqrextCap
	(*FeatureConfig)(nil),                        // 48: e2sm_rsm.v1.FeatureConfig
	(*UlpowerControl)(nil),                       // 49: e2sm_rsm.v1.UlpowerControl
	(*e2sm_v2_ies.AmfUeNgapId)(nil),              // 50: e2sm_rsm.v1.AmfUeNgapId
	(*e2sm_v2_ies.Cgi)(nil),                      // 51: e2sm_rsm.v1.Cgi
	(*e2sm_v2_ies.FiveQi)(nil),                   // 52: e2sm_rsm.v1.FiveQi
	(*e2sm_v2_ies.Qci)(nil),                      // 53: e2sm_rsm.v1.Qci
	(*e2sm_v2_ies.RanfunctionName)(nil),          // 54: e2sm_rsm.v1.RanfunctionName
}
var file_e2sm_rsm_v1_e2sm_rsm_v1_proto_depIdxs = []int32{
	15, // 0: e2sm_rsm.v1.UeIdentity.cu_ue_f1_ap_id:type_name -> e2sm_rsm.v1.CuUeF1ApId
	16, // 1: e2sm_rsm.v1.UeIdentity.du_ue_f1_ap_id:type_name -> e2sm_rsm.v1.DuUeF1ApId
	17, // 2: e2sm_rsm.v1.UeIdentity.ran_ue_ngap_id:type_name -> e2sm_rsm.v1.RanUeNgapId
	50, // 3: e2sm_rsm.v1.UeIdentity.amf_ue_ngap_id:type_name -> e2sm_rsm.v1.AmfUeNgapId
	18, // 4: e2sm_rsm.v1.UeIdentity.enb_ue_s1_ap_id:type_name -> e2sm_rsm.v1.EnbUeS1ApId
	1,  // 5: e2sm_rsm.v1.NodeSlicingCapabilityItem.slicing_type:type_name -> e2sm_rsm.v1.SlicingType
	22, // 6: e2sm_rsm.v1.NodeSlicingCapabilityItem.supported_config:type_name -> e2sm_rsm.v1.SupportedSlicingConfigItem
	4,  // 7: e2sm_rsm.v1.SupportedSlicingConfigItem.slicing_config_type:type_name -> e2sm_rsm.v1.E2SmRsmCommand
	25, // 8: e2sm_rsm.v1.E2SmRsmEventTriggerDefinition.event_definition_formats:type_name -> e2sm_rsm.v1.EventDefinitionFormats
	26, // 9: e2sm_rsm.v1.EventDefinitionFormats.event_definition_format1:type_name -> e2sm_rsm.v1.E2SmRsmEventTriggerDefinitionFormat1
	2,  // 10: e2sm_rsm.v1.E2SmRsmEventTriggerDefinitionFormat1.trigger_type:type_name -> e2sm_rsm.v1.RsmTriggerType
	14, // 11: e2sm_rsm.v1.E2SmRsmEventTriggerDefinitionFormat1.ue_idlist:type_name -> e2sm_rsm.v1.UeIdentity
	0,  // 12: e2sm_rsm.v1.E2SmRsmEventTriggerDefinitionFormat1.preffered_ue_idtype:type_name -> e2sm_rsm.v1.UeIdType
	35, // 13: e2sm_rsm.v1.E2SmRsmEventTriggerDefinitionFormat1.bearer_id:type_name -> e2sm_rsm.v1.BearerId
	28, // 14: e2sm_rsm.v1.E2SmRsmIndicationHeader.indication_header_format1:type_name -> e2sm_rsm.v1.E2SmRsmIndicationHeaderFormat1
	51, // 15: e2sm_rsm.v1.E2SmRsmIndicationHeaderFormat1.cgi:type_name -> e2sm_rsm.v1.Cgi
	30, // 16: e2sm_rsm.v1.E2SmRsmIndicationMessage.indication_message_format1:type_name -> e2sm_rsm.v1.E2SmRsmIndicationMessageFormat1
	14, // 17: e2sm_rsm.v1.E2SmRsmIndicationMessageFormat1.ue_id:type_name -> e2sm_rsm.v1.UeIdentity
	15, // 18: e2sm_rsm.v1.E2SmRsmIndicationMessageFormat1.cu_ue_f1ap_id:type_name -> e2sm_rsm.v1.CuUeF1ApId
	16, // 19: e2sm_rsm.v1.E2SmRsmIndicationMessageFormat1.du_ue_f1ap_id:type_name -> e2sm_rsm.v1.DuUeF1ApId
	3,  // 20: e2sm_rsm.v1.E2SmRsmIndicationMessageFormat1.emm_case:type_name -> e2sm_rsm.v1.Emmcase
	23, // 21: e2sm_rsm.v1.E2SmRsmIndicationMessageFormat1.ul_slicing_metrics:type_name -> e2sm_rsm.v1.SliceMetrics
	23, // 22: e2sm_rsm.v1.E2SmRsmIndicationMessageFormat1.dl_slicing_metrics:type_name -> e2sm_rsm.v1.SliceMetrics
	5,  // 23: e2sm_rsm.v1.SliceParameters.scheduler_type:type_name -> e2sm_rsm.v1.SchedulerType
	45, // 24: e2sm_rsm.v1.SliceParameters.schedule_info:type_name -> e2sm_rsm.v1.ScheduleConfig
	12, // 25: e2sm_rsm.v1.SliceConfig.slice_id:type_name -> e2sm_rsm.v1.SliceId
	31, // 26: e2sm_rsm.v1.SliceConfig.slice_config_parameters:type_name -> e2sm_rsm.v1.SliceParameters
	12, // 27: e2sm_rsm.v1.SliceDelete.slice_id:type_name -> e2sm_rsm.v1.SliceId
	14, // 28: e2sm_rsm.v1.SliceAssociate.ue_id:type_name -> e2sm_rsm.v1.UeIdentity
	35, // 29: e2sm_rsm.v1.SliceAssociate.bearer_id:type_name -> e2sm_rsm.v1.BearerId
	13, // 30: e2sm_rsm.v1.SliceAssociate.down_link_slice_id:type_name -> e2sm_rsm.v1.SliceIdassoc
	13, // 31: e2sm_rsm.v1.SliceAssociate.uplink_slice_id:type_name -> e2sm_rsm.v1.SliceIdassoc
	36, // 32: e2sm_rsm.v1.BearerId.drb_id:type_name -> e2sm_rsm.v1.DrbId
	41, // 33: e2sm_rsm.v1.DrbId.four_gdrb_id:type_name -> e2sm_rsm.v1.FourGDrbId
	37, // 34: e2sm_rsm.v1.DrbId.five_gdrb_id:type_name -> e2sm_rsm.v1.FiveGDrbId
	19, // 35: e2sm_rsm.v1.FiveGDrbId.qfi:type_name -> e2sm_rsm.v1.Qfi
	38, // 36: e2sm_rsm.v1.FiveGDrbId.flows_map_to_drb:type_name -> e2sm_rsm.v1.QoSflowLevelParameters
	39, // 37: e2sm_rsm.v1.QoSflowLevelParameters.dynamic_five_qi:type_name -> e2sm_rsm.v1.DynamicFiveQi
	40, // 38: e2sm_rsm.v1.QoSflowLevelParameters.non_dynamic_five_qi:type_name -> e2sm_rsm.v1.NonDynamicFiveQi
	52, // 39: e2sm_rsm.v1.NonDynamicFiveQi.five_qi:type_name -> e2sm_rsm.v1.FiveQi
	53, // 40: e2sm_rsm.v1.FourGDrbId.qci:type_name -> e2sm_rsm.v1.Qci
	54, // 41: e2sm_rsm.v1.E2SmRsmRanfunctionDescription.ran_function_name:type_name -> e2sm_rsm.v1.RanfunctionName
	21, // 42: e2sm_rsm.v1.E2SmRsmRanfunctionDescription.ric_slicing_node_capability_list:type_name -> e2sm_rsm.v1.NodeSlicingCapabilityItem
	4,  // 43: e2sm_rsm.v1.E2SmRsmControlHeader.rsm_command:type_name -> e2sm_rsm.v1.E2SmRsmCommand
	32, // 44: e2sm_rsm.v1.E2SmRsmControlMessage.slice_create:type_name -> e2sm_rsm.v1.SliceConfig
	32, // 45: e2sm_rsm.v1.E2SmRsmControlMessage.slice_update:type_name -> e2sm_rsm.v1.SliceConfig
	33, // 46: e2sm_rsm.v1.E2SmRsmControlMessage.slice_delete:type_name -> e2sm_rsm.v1.SliceDelete
	34, // 47: e2sm_rsm.v1.E2SmRsmControlMessage.slice_associate:type_name -> e2sm_rsm.v1.SliceAssociate
	46, // 48: e2sm_rsm.v1.ScheduleConfig.link_adaptation:type_name -> e2sm_rsm.v1.LinkAdaptation
	48, // 49: e2sm_rsm.v1.ScheduleConfig.features:type_name -> e2sm_rsm.v1.FeatureConfig
	8,  // 50: e2sm_rsm.v1.ScheduleConfig.carrier_aggregation_cap:type_name -> e2sm_rsm.v1.CarrierAggregationLevelCap
	49, // 51: e2sm_rsm.v1.ScheduleConfig.ul_power_control:type_name -> e2sm_rsm.v1.UlpowerControl
	6,  // 52: e2sm_rsm.v1.LinkAdaptation.aggregation_level_cap:type_name -> e2sm_rsm.v1.AggregationLevelCap
	47, // 53: e2sm_rsm.v1.LinkAdaptation.harq_retx_cap:type_name -> e2sm_rsm.v1.HarqrextCap
	7,  // 54: e2sm_rsm.v1.FeatureConfig.tti_bundling:type_name -> e2sm_rsm.v1.FeatureStatus
	55, // [55:55] is the sub-list for method output_type
	55, // [55:55] is the sub-list for method input_type
	55, // [55:55] is the sub-list for extension type_name
	55, // [55:55] is the sub-list for extension extendee
	0,  // [0:55] is the sub-list for field type_name
}

func init() { file_e2sm_rsm_v1_e2sm_rsm_v1_proto_init() }
func file_e2sm_rsm_v1_e2sm_rsm_v1_proto_init() {
	if File_e2sm_rsm_v1_e2sm_rsm_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofBearers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofUes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofSlices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SliceId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SliceIdassoc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UeIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CuUeF1ApId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DuUeF1ApId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanUeNgapId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnbUeS1ApId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qfi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofSlicingNodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeSlicingCapabilityItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportedSlicingConfigItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SliceMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmRsmEventTriggerDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventDefinitionFormats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmRsmEventTriggerDefinitionFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmRsmIndicationHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmRsmIndicationHeaderFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmRsmIndicationMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmRsmIndicationMessageFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SliceParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SliceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SliceDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SliceAssociate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BearerId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FiveGDrbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QoSflowLevelParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicFiveQi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NonDynamicFiveQi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FourGDrbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmRsmRanfunctionDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmRsmControlHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmRsmControlMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkAdaptation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HarqrextCap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeatureConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UlpowerControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*UeIdentity_CuUeF1ApId)(nil),
		(*UeIdentity_DuUeF1ApId)(nil),
		(*UeIdentity_RanUeNgapId)(nil),
		(*UeIdentity_AmfUeNgapId)(nil),
		(*UeIdentity_EnbUeS1ApId)(nil),
	}
	file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*EventDefinitionFormats_EventDefinitionFormat1)(nil),
	}
	file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*E2SmRsmIndicationHeader_IndicationHeaderFormat1)(nil),
	}
	file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*E2SmRsmIndicationMessage_IndicationMessageFormat1)(nil),
	}
	file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[22].OneofWrappers = []interface{}{}
	file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[23].OneofWrappers = []interface{}{}
	file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[25].OneofWrappers = []interface{}{}
	file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[26].OneofWrappers = []interface{}{
		(*BearerId_DrbId)(nil),
	}
	file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[27].OneofWrappers = []interface{}{
		(*DrbId_FourGdrbId)(nil),
		(*DrbId_FiveGdrbId)(nil),
	}
	file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[29].OneofWrappers = []interface{}{
		(*QoSflowLevelParameters_DynamicFiveQi)(nil),
		(*QoSflowLevelParameters_NonDynamicFiveQi)(nil),
	}
	file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[35].OneofWrappers = []interface{}{
		(*E2SmRsmControlMessage_SliceCreate)(nil),
		(*E2SmRsmControlMessage_SliceUpdate)(nil),
		(*E2SmRsmControlMessage_SliceDelete)(nil),
		(*E2SmRsmControlMessage_SliceAssociate)(nil),
	}
	file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[36].OneofWrappers = []interface{}{}
	file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[37].OneofWrappers = []interface{}{}
	file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[38].OneofWrappers = []interface{}{}
	file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[39].OneofWrappers = []interface{}{}
	file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes[40].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_e2sm_rsm_v1_e2sm_rsm_v1_proto_goTypes,
		DependencyIndexes: file_e2sm_rsm_v1_e2sm_rsm_v1_proto_depIdxs,
		EnumInfos:         file_e2sm_rsm_v1_e2sm_rsm_v1_proto_enumTypes,
		MessageInfos:      file_e2sm_rsm_v1_e2sm_rsm_v1_proto_msgTypes,
	}.Build()
	File_e2sm_rsm_v1_e2sm_rsm_v1_proto = out.File
	file_e2sm_rsm_v1_e2sm_rsm_v1_proto_rawDesc = nil
	file_e2sm_rsm_v1_e2sm_rsm_v1_proto_goTypes = nil
	file_e2sm_rsm_v1_e2sm_rsm_v1_proto_depIdxs = nil
}
